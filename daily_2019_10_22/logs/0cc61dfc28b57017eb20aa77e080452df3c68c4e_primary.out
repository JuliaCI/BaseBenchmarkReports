cset: moving following pidspec: 20021
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.340276274 seconds)
loading group "string"... done (took 0.545152715 seconds)
loading group "linalg"... done (took 7.001391197 seconds)
loading group "parallel"... done (took 0.162019593 seconds)
loading group "find"... done (took 1.089386971 seconds)
loading group "tuple"... done (took 1.811632906 seconds)
loading group "dates"... done (took 1.183327299 seconds)
loading group "micro"... done (took 0.212088675 seconds)
loading group "io"... done (took 0.906407879 seconds)
loading group "scalar"... done (took 35.976198285 seconds)
loading group "sparse"... done (took 11.106774233 seconds)
loading group "broadcast"... done (took 0.896681783 seconds)
loading group "union"... done (took 11.740950839 seconds)
loading group "simd"... done (took 4.102211 seconds)
loading group "random"... done (took 8.43430265 seconds)
loading group "problem"... done (took 1.845418504 seconds)
loading group "array"... done (took 19.65092767 seconds)
loading group "misc"... done (took 1.618556037 seconds)
loading group "sort"... done (took 3.051916749 seconds)
loading group "collection"... done (took 16.16022658 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.480435844 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121611984 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.112955936 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117386923 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.144055337 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11360781 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121851504 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083034455 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.837841714 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.149958651 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118555453 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.410788352 seconds)
done (took 5.121203614 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174461849 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082496476 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081254847 seconds)
  done (took 1.307403203 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064972729 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121706642 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065937891 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066386729 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06623467 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065556071 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065395933 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065795392 seconds)
  done (took 1.666322249 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074162482 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068377595 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067890904 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067267923 seconds)
  done (took 1.427885914 seconds)
done (took 5.800983484 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.764390069 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201026983 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182253933 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.396201423 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.128679867 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.153698043 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.641834051 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.313461911 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.182360597 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081414654 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10461683 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.31681536 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106929539 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.628049052 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076162594 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090156756 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.135962928 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.438087209 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067248992 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081748028 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088374675 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129076847 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084911322 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074131008 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143446833 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067413099 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.133444479 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083236334 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066034405 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.206916751 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17194456 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660937738 seconds)
  done (took 10.190480936 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096525878 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097499592 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068578624 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136524066 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09551707 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069237083 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070655183 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067159877 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086930107 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127593978 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088565618 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101577829 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064995994 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068859716 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084190508 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203987663 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081325554 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080580395 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070009925 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074698507 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.11856033 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077826427 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077507895 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077285775 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129001029 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.17975131 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097097355 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096980209 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066807065 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080296272 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115213462 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125719009 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065087912 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066169175 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123990015 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093803254 seconds)
  done (took 4.612012593 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.289709362 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140085098 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09017326 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.132289124 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06479941 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106609136 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065041395 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080377317 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.199370071 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.315340369 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.574116488 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110740767 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102956502 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06731911 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068062185 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066961261 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.348222846 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108199725 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104973732 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081221936 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070189277 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068714116 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.342113574 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067994502 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06388415 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067870019 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057796686 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124275862 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068209575 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.92093561 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123939806 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066048883 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100019244 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161459663 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081772906 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085925199 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.270969389 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068140454 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063633763 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.14960297 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070069404 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066167355 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083898703 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102788607 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113200614 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065377814 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06689117 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161292823 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064508322 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078832677 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.976326905 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152300312 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076358588 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065033918 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.244357406 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085442186 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068849222 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064307233 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.176776075 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136782228 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067635263 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066345511 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067774055 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068910456 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.364311304 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066325119 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.763599308 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069081141 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076190261 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068990334 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069414285 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072541352 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072101114 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087689655 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065766572 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075238361 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065728066 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065722976 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066604373 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083946906 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.355804939 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066346798 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067955005 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064442236 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086000397 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09627202 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066078245 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064737031 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100110991 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064046966 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067546043 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.167422463 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105240666 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066987712 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084776472 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069083629 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112672872 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066469791 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.090505995 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.083469612 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067668257 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.101537529 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069950177 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09937202 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.08114943 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068641169 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.396081547 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065306212 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.0645142 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067884134 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064847768 seconds)
    (111/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063996383 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065414805 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067412702 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079329716 seconds)
  done (took 20.86818473 seconds)
done (took 38.109208125 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.232886479 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074741945 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075060479 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074936611 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075147465 seconds)
  done (took 1.779394492 seconds)
done (took 3.007801603 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.11892039 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097587429 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063935466 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094669804 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064141772 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099029964 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098207534 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080788883 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098336436 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063833267 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095094472 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063785921 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063885805 seconds)
  done (took 2.337890126 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08255389 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083431852 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069344635 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08208531 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063109307 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081493779 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080434039 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088364138 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080167232 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071692883 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063324108 seconds)
  done (took 2.061918729 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082680977 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083100551 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068940371 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081026632 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066312525 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081074753 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080449129 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084605934 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080542412 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072914312 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063543396 seconds)
  done (took 2.062264764 seconds)
done (took 7.669435548 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077415803 seconds)
  done (took 1.285495017 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.588705421 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.196946572 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081061393 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111849865 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183182498 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119309506 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.279980597 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086569514 seconds)
  done (took 9.040588601 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.100440664 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069474796 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071067289 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.06856764 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07145372 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071847012 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069572307 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069637713 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067970413 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070650451 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071369191 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069613415 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071387111 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071662814 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068718682 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067980339 seconds)
  done (took 2.432384601 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091570796 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091214624 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073659359 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075044391 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072286475 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072061265 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073968622 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07286219 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070839583 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071949394 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074435276 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073659199 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071436857 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06471022 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074185686 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075726882 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070934571 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074319332 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074650698 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074544341 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074576066 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06462289 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071379552 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073581748 seconds)
  done (took 3.097583653 seconds)
done (took 17.074536434 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114941498 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071006609 seconds)
  done (took 1.400137725 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082701384 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083251447 seconds)
  done (took 1.385969335 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085183073 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065732104 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092833612 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.07873747 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066071258 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065506731 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089842805 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065946221 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065791833 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066074648 seconds)
  done (took 1.961790497 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069567681 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078894359 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070674238 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081260368 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074189177 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.0642271 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07279926 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067889365 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078326939 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062869914 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.0712674 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082790057 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071434638 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084262981 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072467496 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069226958 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071229256 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06761472 seconds)
  done (took 2.539417039 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065750136 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067110252 seconds)
  done (took 1.356013864 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067629406 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06408122 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067366766 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067191172 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063820419 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062657391 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063472191 seconds)
  done (took 1.672370179 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.380805564 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110721129 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.297219872 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069909175 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081055946 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247321511 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064905383 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070126428 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070508844 seconds)
  done (took 2.653308344 seconds)
done (took 14.200106823 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079197981 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084760923 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.09499144 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.360340547 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091807342 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065722052 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113747541 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189009261 seconds)
done (took 2.312202919 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.214684686 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.611751627 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.385896258 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.197024344 seconds)
  done (took 2.426101517 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.328899277 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086634312 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058971282 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066219459 seconds)
  done (took 1.780601959 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065959537 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068729749 seconds)
  done (took 1.372201442 seconds)
done (took 7.030847615 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067000757 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082915807 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06507355 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066388332 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.063513462 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065828657 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063395231 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063138491 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065566946 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064707014 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068409774 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065932649 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.065503679 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.065601474 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065749626 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063768167 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06331791 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066679169 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063651989 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063106473 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063769038 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065719461 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063159481 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063384023 seconds)
  done (took 2.845249596 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083633746 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066322017 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071551795 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.07136052 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069968588 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071005127 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07410719 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066084177 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071535996 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068080769 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069786335 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070046569 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068036461 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069857812 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067980043 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070187029 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071219104 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066337563 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067889157 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069769927 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070745584 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066294988 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070030681 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071164312 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.06920258 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070726728 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068123698 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066162717 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071081012 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069814827 seconds)
  done (took 3.346328546 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069985045 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062783794 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063953263 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070629023 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063936606 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.0645035 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063355665 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063524646 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063843319 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063578192 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064709903 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063487687 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063713382 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06437664 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064539658 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067350372 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078263787 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063838652 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063661925 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064014937 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066738734 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063371636 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06359286 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063053157 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063109146 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06305376 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063784078 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063202224 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063694383 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063237048 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.177660867 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067208133 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063145106 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069520595 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066495723 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063048761 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067187646 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063136325 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063838274 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062526293 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063277856 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062873934 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063037939 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069535588 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063315852 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06456641 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063524053 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064198728 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063640686 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066015227 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.06244344 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063176058 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064801066 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064021448 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06696498 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062628855 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064260617 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06257849 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063951421 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062759362 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062635286 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063011647 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065140147 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063588264 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077023917 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070222607 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063101042 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065068914 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063635498 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065522688 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064658764 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075828874 seconds)
  done (took 6.034236264 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090990968 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087238601 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064901136 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064854094 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061839483 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064416879 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067261002 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063931688 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065483878 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.0694627 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064158437 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065173336 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06525457 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076294001 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064204441 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065221881 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069436088 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061703326 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063937826 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067745983 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063717516 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06739952 seconds)
  done (took 2.754443649 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154090231 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070182722 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105249955 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073004777 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067835919 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072634866 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069579249 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069705134 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069933492 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068312721 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067880031 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069818258 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067668286 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067728247 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068514694 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068123866 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069773617 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067722781 seconds)
  done (took 2.619302448 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077739051 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066476455 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085828794 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066153639 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065816614 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068313672 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070592725 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074787155 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068340508 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066091266 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074137289 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068071363 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068407371 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065717507 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067857917 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065787549 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067985778 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065850913 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074109563 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070352127 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070241021 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073635964 seconds)
  done (took 2.796080992 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080230662 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067792479 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081971399 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068636811 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061634457 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.0646783 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069896733 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065911205 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069791513 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068231674 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06560439 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064046851 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069128899 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065826076 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069159521 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06559553 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067550409 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065643996 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067650219 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061974264 seconds)
  done (took 2.613376643 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086893989 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067044171 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067728711 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076419827 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067140335 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067055889 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074589155 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066880848 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067244516 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086776609 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067407113 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067032366 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074656029 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071547383 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067593515 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074661939 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074733354 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07472779 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066982119 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066931195 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086982373 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067191323 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074731796 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067013366 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066783558 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067003548 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066666299 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071528765 seconds)
  done (took 3.257375372 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067233196 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066020627 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06353842 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063316614 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063042475 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063660581 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063183058 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063556294 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065458615 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063519444 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065354122 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065235574 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065375952 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066038135 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065155578 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065531754 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065800005 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063289557 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063335934 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062842523 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065563355 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065476957 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065764005 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063242353 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063011433 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065443409 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063255107 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062721831 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065268902 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063187897 seconds)
  done (took 3.192515734 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076007865 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072350595 seconds)
  done (took 1.4080424 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063535511 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080042713 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063148483 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069457307 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069701432 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066435534 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072901375 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069604305 seconds)
  done (took 1.809500315 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081641954 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077615208 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067308825 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079720528 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076138345 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082358016 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132720233 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.0668053 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072766968 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064046015 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079742965 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065299775 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072059587 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065979166 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071830289 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071839779 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064503359 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072249642 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068300655 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064344807 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067161413 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074561098 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068623492 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061265293 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067434885 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.08786562 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077220427 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066135817 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069288315 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073514657 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07146075 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060063081 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06591707 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066249443 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063691372 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075546986 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080647416 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068748028 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07446942 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066948899 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076402984 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061174306 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07009414 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07227876 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075750658 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066120355 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066569777 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060883212 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063400563 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.06775692 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061131396 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06588695 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060623061 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075114161 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069046121 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076292845 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064444006 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067059935 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068627237 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068873366 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072875324 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067823196 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068873581 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065489345 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075745739 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070589681 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074570482 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06096113 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059918616 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063831006 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07521338 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087903219 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072014859 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066650506 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066470094 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063646048 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068981008 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067008599 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071514671 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072306029 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065763058 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071053068 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072927259 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065925641 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068445261 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074302591 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064538187 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068679844 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063614738 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081906545 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064732667 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064185202 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063881001 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076270044 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069264622 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065579954 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063529699 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072794071 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059967391 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.06638442 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066329277 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066418606 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076113906 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070322162 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070301851 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074335464 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072939978 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065460616 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.06757697 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061737501 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06569218 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06420631 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071686155 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059181977 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067413396 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066581224 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064879956 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.198068109 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065204871 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067713345 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074203287 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071451899 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06435969 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062770914 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069132277 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066357398 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069689957 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074040486 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065446603 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062230476 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061887702 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069464047 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066217844 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070144431 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071391563 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069406426 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061319449 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064904363 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071349197 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074516317 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066654184 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067180048 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072562992 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067760291 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065849727 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073338179 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069041799 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065758829 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07312488 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067920305 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062508077 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069163533 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069962439 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065231298 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069924934 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069796098 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069142857 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06667054 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065220243 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074002436 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066979481 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065511141 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066616436 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064480766 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076764619 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067957979 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061396615 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063665707 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075350024 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064109686 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066754777 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06549767 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068430487 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067050036 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064402915 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065852992 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.06771408 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076225987 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070917598 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067438084 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071718461 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076999928 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065748243 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068567772 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066175521 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066686447 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066690704 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074692939 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070977274 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070316507 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068161676 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062947773 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071282602 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073364038 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065208394 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063620815 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065317954 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069992798 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071727848 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070348124 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066827148 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064282222 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066776625 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069171473 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.0687896 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065681043 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064950694 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07256988 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063996337 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073383859 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066669526 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075705139 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069105375 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06115073 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068902276 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063980009 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071970253 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061263541 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063843684 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065035624 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066588648 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064637001 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.06823995 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059888162 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072440373 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072934082 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066200393 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064796814 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06498984 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071998388 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066512582 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068564198 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068189452 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070384249 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07506914 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064047781 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068173936 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.202311718 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067100136 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061146212 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071959922 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065465048 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065203998 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064999389 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064346324 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069722113 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076196418 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073061016 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060350355 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.06998214 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065505997 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065632723 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061609609 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070728046 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.06966799 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067732509 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073168456 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06723523 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067888723 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070526183 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066896525 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066698513 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067110723 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069294889 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067757402 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067833474 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065948868 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069514266 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065799484 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064162091 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068393736 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066252815 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066636887 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072169369 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065938894 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066657596 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068836114 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067050507 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067753141 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066729853 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065895716 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070391714 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067754161 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066870889 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068907752 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061377988 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073426569 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065915474 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073953396 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066725969 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063052428 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07392186 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068672817 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071463863 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067428955 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066827895 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067613355 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066187651 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068998321 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073578172 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064887871 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077336054 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074320906 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066414823 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069463289 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066110291 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067518402 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065620568 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066902103 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066849102 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066778739 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065702421 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070600166 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068301096 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066121066 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067447679 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066778526 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066045634 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066843232 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060564245 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065284921 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06569112 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065705271 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075630227 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066381843 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066367125 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064668366 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066966907 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065449954 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062894899 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074334091 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075461519 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066712694 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073425971 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065521374 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067629038 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077055464 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060779776 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06461725 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06371461 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064143327 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073545382 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066607009 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074863394 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065998132 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064932451 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062585274 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066022207 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06455146 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060006519 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063723748 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069242097 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064846667 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063808578 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064959576 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067551379 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065813454 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074530961 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064248517 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066120695 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065646849 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.193425333 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065804709 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06555798 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069316928 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06709357 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064447142 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064641799 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066163618 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067729625 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067677102 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065994417 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067847467 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076590793 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066559124 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069371641 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070155641 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061527315 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.06981671 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067039069 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066835543 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065923193 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070141908 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070095198 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067241846 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075432578 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066554904 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067818112 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067700381 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063960248 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066865655 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066359986 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066887491 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065474421 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067588182 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074557453 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063891937 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070071097 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06649853 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067788015 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072957887 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067632023 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069927386 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073810023 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066407561 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068230581 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074376634 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070346885 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070138875 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06811032 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068166138 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072105197 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066360866 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.07300776 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067107096 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067451556 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068220813 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064612605 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06593629 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066202549 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065810454 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072597748 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067283961 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06546094 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065945624 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064903664 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067393573 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069455123 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074416697 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06857271 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069479088 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061756437 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063567733 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067108936 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064298116 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067920468 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068053738 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071909644 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.0687298 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066561502 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064820117 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075033185 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071773575 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069893237 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064449381 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069676126 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066621471 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068095082 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066839964 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06653267 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067134182 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070053663 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067725484 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065890099 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07341944 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069305043 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067145732 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067833006 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067532247 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066799963 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061860644 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067020853 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068638016 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071718719 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068740757 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066372321 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076694665 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064312363 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066838346 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069157093 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065261024 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07074105 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061203807 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067742228 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067064768 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066633876 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06115262 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065009662 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063891642 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067575273 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064570722 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06074283 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075459117 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073940717 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068034681 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.194426247 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06640335 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061880949 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06261712 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065908211 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067982286 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068475407 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077276619 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066508286 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065793052 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061798013 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06676885 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070086863 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.06970257 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064054732 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062273365 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065746228 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070389996 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072645283 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065896044 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066007255 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070231504 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068978924 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064401479 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070438984 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063442705 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070526176 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079143364 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067368695 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067466702 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073123954 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074457998 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067569151 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062258247 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067353236 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069742828 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067412391 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067926985 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067293917 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081688639 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069482957 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065527038 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065722933 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068794953 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066210245 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074618228 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067904895 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067200364 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071589791 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068473148 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075749442 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069579348 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074277312 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069713131 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07002476 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065532123 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066492134 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064319513 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066443203 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067243151 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067459171 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071321184 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074884818 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066054676 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076878939 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075092421 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067961087 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062872727 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066030232 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065885413 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061837529 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066897105 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065059977 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064194492 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064109713 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065207636 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067271496 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071593105 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067047038 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066745216 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066249852 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060387199 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068714293 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068338317 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067257674 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062501356 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065916071 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066622482 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07010273 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069364638 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063711892 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067587194 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.06778179 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066868793 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061450555 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072501477 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065236181 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067884682 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065571323 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066313028 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067054144 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069799768 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070929324 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067589856 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068273372 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069714922 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068465639 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06323339 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063047074 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071049529 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06361263 seconds)
  done (took 42.451252323 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100590251 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0629476 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061924579 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062378941 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073483477 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062836331 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061624549 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063333413 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062770726 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06501268 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061588701 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061872789 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070503276 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077679899 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073494596 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066722393 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061964201 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063248205 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061611357 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062869659 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071172486 seconds)
  done (took 2.763378329 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074193977 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069647586 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07260786 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07565341 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067256167 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070406411 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072427689 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070295326 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075949711 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067022771 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075944225 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070410491 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067251367 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067003524 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066839355 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070713581 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076302139 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067177134 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070376919 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072456115 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070698194 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072107238 seconds)
  done (took 2.891578423 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066814298 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065562815 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068240996 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061328205 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066452793 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.069982622 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069420185 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064254431 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068834318 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06471385 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065036308 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064663928 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067578221 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061261005 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065381107 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063625104 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107844237 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.06929601 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065284935 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066414929 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060946145 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067943855 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061533794 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061508133 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064946492 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069490708 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066438244 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064183778 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065239288 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064822789 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065454943 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063386836 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.06702862 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06641901 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065028109 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064778434 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065331791 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065024432 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061413411 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063882716 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066405607 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061710528 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066064989 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066894731 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063629051 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063387726 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067083807 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065427549 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060731548 seconds)
  done (took 4.56992135 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080170286 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108718066 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067376202 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087907652 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079971001 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075455083 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069087406 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088554458 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063167661 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064492342 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081098378 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079549397 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065547655 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070066777 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.0718841 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065480653 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066750603 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064514848 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069856707 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065172985 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069706761 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071832662 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079820306 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078348962 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069213826 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064760805 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065213165 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070295487 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078052625 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070148355 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070029153 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071562402 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080533586 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067645044 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064887586 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067494767 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08160774 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066134749 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067752617 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063128047 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067812635 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069497401 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07160786 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081394376 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065394681 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070898862 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065287239 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062674503 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078622851 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067755014 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.0733125 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079823301 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069524991 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065985147 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069834846 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080189079 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065589283 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063833907 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068663118 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077988623 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063135703 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069349476 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079217952 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067312735 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072366088 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080045146 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070602648 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069982685 seconds)
  done (took 6.361206782 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076354281 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072030517 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080555126 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080454762 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072142413 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07238687 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072566541 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07230686 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072475666 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076951053 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072650736 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092633772 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06754525 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075241044 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072374477 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072338801 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072339243 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072548455 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072222867 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072298728 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072383523 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079832178 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072427392 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080226691 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09773093 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068265782 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071914873 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072656323 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080265756 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072153739 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079201594 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072127796 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072163278 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080137764 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079211427 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071687213 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064867736 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071662443 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071982138 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071833269 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067218624 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07960477 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071443594 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.06698076 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072003684 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071964414 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079490154 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078892788 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074414139 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076581671 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071695101 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07972813 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07169191 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072096176 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079831682 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104278035 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079442581 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079944996 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071839757 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079372795 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079537856 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086426008 seconds)
  done (took 6.04089851 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084235081 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074160588 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076232116 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061246543 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063893755 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069826354 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064347761 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063963425 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074542439 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074491185 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076902859 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069999725 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072973484 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077143509 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069525941 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072753946 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069733445 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069629804 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074195468 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069490064 seconds)
  done (took 2.786371518 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074239383 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083278981 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06701173 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072045604 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068499222 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071635808 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068178905 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068801666 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066751386 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06884489 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07603386 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075950896 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066624453 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071773099 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075482553 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071402771 seconds)
  done (took 2.494762621 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075587271 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072730035 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079363623 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066394775 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064255145 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062418003 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065520497 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061581372 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062607267 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077349686 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066035463 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068302414 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065663954 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064541709 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063078953 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068512699 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062349549 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063371628 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065671369 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077802697 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076442282 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064440515 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067026603 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065541223 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065947842 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070735068 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065442893 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063704076 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063095549 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06619017 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066125705 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069349707 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062832448 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063865192 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063900791 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063040654 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065272639 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065845038 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067979004 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065329357 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063351371 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065119305 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065158331 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066317975 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.0617828 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065690927 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061979879 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067724033 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063346668 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065721857 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065293099 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067642273 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065850878 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072211622 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068357988 seconds)
  done (took 5.01073499 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07873364 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069287144 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06137093 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064368438 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069044555 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067189565 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069091619 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067066896 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067507053 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063815835 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06779953 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068592981 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067754824 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069229493 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067613489 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069328328 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061502479 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067699669 seconds)
  done (took 2.580420527 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070938517 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066083563 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072826855 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066142879 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066074627 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067583343 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062170005 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064317732 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064193112 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065303672 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065876198 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067635906 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064116519 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068359559 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065432419 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065618719 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067694614 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064339773 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065619415 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06169758 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067870111 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064484363 seconds)
  done (took 2.810827873 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.09282183 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081213198 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.138189625 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078828801 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082842024 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071715149 seconds)
  done (took 1.902038392 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090338935 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079154416 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066752248 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088160524 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073183432 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067502691 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066958939 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067098527 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076233972 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075916329 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067202237 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075924476 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075933497 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075306279 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073019109 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072751183 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067306574 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067523094 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065889372 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084034944 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067276179 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07529423 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067197711 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066910552 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067247383 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074855149 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075951411 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075874024 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0665933 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07561414 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072747967 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067080007 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07590912 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075961482 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06868879 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075721433 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067635813 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08411298 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072894837 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075105832 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068940623 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073251093 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075616695 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072132738 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075524964 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067499108 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072100791 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067214968 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067282457 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085368441 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072984724 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074857011 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072939827 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076251096 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075619622 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085786698 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076129487 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074785791 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073176588 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07836443 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074921868 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072858679 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074889243 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07612259 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073040005 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075231092 seconds)
  done (took 6.216139214 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082265303 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085230392 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068223587 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076314684 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075285224 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067105618 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067404007 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067418145 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06744339 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067162965 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107239855 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067601165 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075850794 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075571112 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067613687 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067451058 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067169466 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075515263 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067284752 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085850639 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067256726 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075427527 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075460197 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075274164 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076350605 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073114349 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067198768 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067221408 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067406576 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067394871 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072289411 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067883862 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075067089 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066883374 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075277092 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0675793 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06736548 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07219404 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06757174 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07323805 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075234479 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083874345 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06740883 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067453326 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07573632 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067236598 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067375248 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066990245 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067507209 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066862317 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076229177 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076101747 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075789122 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075134507 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067542035 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067451987 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067512195 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06738707 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067542195 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07270088 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07488152 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06704486 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08542132 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067143602 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067352898 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075259072 seconds)
  done (took 6.130278619 seconds)
done (took 128.919496832 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.182965192 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165392223 seconds)
  done (took 1.696753914 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069015054 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097883192 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076401486 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128225734 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066696076 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100467558 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099631879 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077712742 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065615178 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065995276 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066012234 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068794353 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131581365 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066180806 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065963273 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068815096 seconds)
  done (took 2.680886084 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097502368 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.15665283 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098295832 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064556686 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096744537 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07252284 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06497534 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.07490606 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07100826 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064796561 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072922965 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070522378 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065023485 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.0707747 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071022271 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072841905 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064736292 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072948265 seconds)
  done (took 2.790046968 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101010206 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091627343 seconds)
  done (took 1.564911645 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.161289633 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104727046 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.149790407 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.345603851 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167602142 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229169059 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126945691 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127241433 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.118899218 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123098844 seconds)
  done (took 3.021022304 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099005737 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.151483235 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.256262504 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114799042 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072241041 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094876769 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116452539 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077418934 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080584249 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080925736 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080571025 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076467383 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098441921 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073264434 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073048795 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075996917 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102231811 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07241984 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.0740271 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076408989 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098831604 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065510624 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073940019 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072450208 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07732678 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077314459 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065517679 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06530696 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076887574 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074178041 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077151878 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094464991 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07808612 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107358689 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069800639 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107937606 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076325053 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074174746 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073881557 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073785125 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079223298 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078699108 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072150999 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076295478 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065623393 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076798189 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065810736 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065608238 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078078901 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067105781 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078171051 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076896323 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107176241 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066798124 seconds)
  done (took 5.979390792 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102375371 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104440405 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071526594 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111213946 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099982526 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072252314 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101347505 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093490177 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102948845 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070000473 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068515435 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070119849 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082665666 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08315141 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.113454739 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.10489551 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07417361 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070997344 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104459301 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102549914 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068357583 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094976809 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089887254 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101732518 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06709033 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070449293 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067889627 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070500371 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077320573 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078886426 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069999064 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081069764 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08495567 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078768201 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067098763 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068269208 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067888683 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079746074 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079933341 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079311091 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078012982 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067696494 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069595271 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069342393 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069699611 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067427213 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078720286 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080900166 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078840763 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069203374 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070366517 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067829193 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069406268 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080470945 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077946125 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08088948 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079829007 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068474093 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068215471 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072477964 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081320114 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079253344 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079587893 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069315295 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078725534 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068257213 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080332684 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084022394 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06861817 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069798036 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06816467 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069630316 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069508281 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078151227 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078110679 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069711424 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069653769 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068357295 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080218304 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078654516 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067802744 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077086855 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067559218 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068288666 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069579925 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06968369 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078029725 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080793041 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070426907 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068756004 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069156614 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068417393 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067221217 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076701158 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080251645 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077818344 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077313255 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068694117 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077723286 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077920263 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069043986 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078177967 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067596935 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.19684684 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070195335 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080065855 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079162097 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079731613 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069616239 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068868571 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078466709 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082256942 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068576104 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078705584 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081453219 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079924959 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068108846 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081827353 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068778371 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080554935 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070288087 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08058205 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069040869 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081121974 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068837918 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068223023 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068261121 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080377225 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070311485 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068743343 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070234137 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069471557 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079776188 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082921466 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070639022 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082356157 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079708219 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07084924 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079703904 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068371381 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079337921 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07102422 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070133568 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06777784 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081802141 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068687237 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068130773 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069472787 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081439542 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068991012 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081127393 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078603909 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068149348 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081429512 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081038792 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077810206 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079817545 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070186093 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068846954 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068271096 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069440062 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078936036 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08018199 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070212988 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069230924 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078963939 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079405767 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067265839 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079124774 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078528497 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078754178 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06825046 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069384953 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080567848 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081076749 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078672274 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078436642 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078863462 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068535071 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077961811 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078701736 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068447147 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085212188 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068418694 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082988209 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079338417 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077181415 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079459226 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.08016985 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080174897 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080086118 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083578784 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068305908 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068042744 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080258324 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068510901 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068950912 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077852993 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069497573 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068899403 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082160706 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06760339 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078387363 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066559447 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077560335 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065850021 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068698726 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081983291 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.197027813 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07036892 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080645684 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069822068 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.07810651 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081466369 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078497136 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068316359 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070713035 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080242341 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079209198 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069105519 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068282111 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071136764 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079308263 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077859716 seconds)
  done (took 18.682056357 seconds)
done (took 37.79032852 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.207355949 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150177529 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.198868089 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.120106039 seconds)
  done (took 2.149094289 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122848142 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100689803 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.0947033 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06518516 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102018953 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064918309 seconds)
  done (took 1.96238658 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311895415 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210904194 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.183211262 seconds)
  done (took 2.109330956 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.198773391 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187545262 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.393467801 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.253120318 seconds)
  done (took 2.549111602 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143286951 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08982399 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067061747 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082883285 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134935924 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160647587 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101015232 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.12617782 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078181525 seconds)
  done (took 2.451648988 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.1476128 seconds)
done (took 12.777519366 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.199512898 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.121426208 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.124702632 seconds)
    (4/309) benchmarking ("sort", BigInt, false)...
    done (took 0.208797138 seconds)
    (5/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.228781479 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081439396 seconds)
    (7/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.100767295 seconds)
    (8/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079241731 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077297336 seconds)
    (10/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.194744823 seconds)
    (11/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.097161253 seconds)
    (12/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076489065 seconds)
    (13/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.178572142 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073457559 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.165748428 seconds)
    (16/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.106674936 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.100339324 seconds)
    (18/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072996308 seconds)
    (19/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.082287714 seconds)
    (20/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074021354 seconds)
    (21/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.184988394 seconds)
    (22/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.165944578 seconds)
    (23/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.204359121 seconds)
    (24/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.205676916 seconds)
    (25/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.139936857 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088260351 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.091777651 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.08934282 seconds)
    (29/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.092417194 seconds)
    (30/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.149027144 seconds)
    (31/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.086944874 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071770501 seconds)
    (33/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066230652 seconds)
    (34/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066426512 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.08997812 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089618975 seconds)
    (37/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073955541 seconds)
    (38/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073592848 seconds)
    (39/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075243919 seconds)
    (40/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.168746226 seconds)
    (41/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072473964 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.099843409 seconds)
    (43/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.140135274 seconds)
    (44/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.189963315 seconds)
    (45/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071371754 seconds)
    (46/309) benchmarking ("sort", Float64, false)...
    done (took 0.125792356 seconds)
    (47/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.193635607 seconds)
    (48/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052216546 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072612499 seconds)
    (50/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.152484751 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085655851 seconds)
    (52/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070656852 seconds)
    (53/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073191832 seconds)
    (54/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051052126 seconds)
    (55/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.168188173 seconds)
    (56/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.065271228 seconds)
    (57/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.086899036 seconds)
    (58/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.159549466 seconds)
    (59/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064759449 seconds)
    (60/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068565993 seconds)
    (61/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.152941303 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066939881 seconds)
    (63/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072267337 seconds)
    (64/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.157744961 seconds)
    (65/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.110706141 seconds)
    (66/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.17845566 seconds)
    (67/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074230341 seconds)
    (68/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.157765581 seconds)
    (69/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.074631581 seconds)
    (70/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065474465 seconds)
    (71/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076052638 seconds)
    (72/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.0739132 seconds)
    (73/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.168179154 seconds)
    (74/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074401483 seconds)
    (75/309) benchmarking ("sort", Int8, false)...
    done (took 0.138671496 seconds)
    (76/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076236574 seconds)
    (77/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053731001 seconds)
    (78/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.157428303 seconds)
    (79/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.070977542 seconds)
    (80/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061214362 seconds)
    (81/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085101208 seconds)
    (82/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.104052995 seconds)
    (83/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.05050231 seconds)
    (84/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.257115809 seconds)
    (85/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.177207774 seconds)
    (86/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081199734 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 0.067047794 seconds)
    (88/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066885665 seconds)
    (89/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067437611 seconds)
    (90/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.187612082 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.332604812 seconds)
    (92/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.09626337 seconds)
    (93/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.098690512 seconds)
    (94/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064335198 seconds)
    (95/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.0785657 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092064015 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.108113267 seconds)
    (98/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.177519146 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065874191 seconds)
    (100/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.075017789 seconds)
    (101/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.186182544 seconds)
    (102/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051805825 seconds)
    (103/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074397404 seconds)
    (104/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080672955 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.139883201 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.090799577 seconds)
    (107/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.185889086 seconds)
    (108/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.17491139 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072499732 seconds)
    (110/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.150192295 seconds)
    (111/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.159389301 seconds)
    (112/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.173822778 seconds)
    (113/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.171956558 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135096197 seconds)
    (115/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.150716214 seconds)
    (116/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077921123 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.138853493 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.137760125 seconds)
    (119/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069557497 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.076189099 seconds)
    (121/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071626767 seconds)
    (122/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051803121 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 0.13409317 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073613051 seconds)
    (125/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053075128 seconds)
    (126/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.11720377 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072458327 seconds)
    (128/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.064997007 seconds)
    (129/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067871528 seconds)
    (130/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.050936472 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065100947 seconds)
    (132/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050901903 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070178654 seconds)
    (134/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065507676 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071508558 seconds)
    (136/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.150153786 seconds)
    (137/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053287206 seconds)
    (138/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051459275 seconds)
    (139/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072568639 seconds)
    (140/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.164506183 seconds)
    (141/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.091787187 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071495055 seconds)
    (143/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072659798 seconds)
    (144/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071421633 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.091454011 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064592437 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091088976 seconds)
    (148/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071579994 seconds)
    (149/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075110887 seconds)
    (150/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089643147 seconds)
    (151/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052461979 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064778965 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064517132 seconds)
    (154/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052409652 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07275699 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.137277207 seconds)
    (157/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.06213186 seconds)
    (158/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068478467 seconds)
    (159/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.139961621 seconds)
    (160/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080459001 seconds)
    (161/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067929787 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088126992 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073214687 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.146843364 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.0915642 seconds)
    (166/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052821033 seconds)
    (167/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052197739 seconds)
    (168/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069401692 seconds)
    (169/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.173096694 seconds)
    (170/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068588959 seconds)
    (171/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.110026483 seconds)
    (172/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051044034 seconds)
    (173/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050970012 seconds)
    (174/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.062928322 seconds)
    (175/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.150085551 seconds)
    (176/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.097100631 seconds)
    (177/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069186006 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066963573 seconds)
    (179/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074234164 seconds)
    (180/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050780609 seconds)
    (181/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.108314113 seconds)
    (182/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066184171 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.16373487 seconds)
    (184/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050581351 seconds)
    (185/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.182867998 seconds)
    (186/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052195357 seconds)
    (187/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.06348651 seconds)
    (188/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065552561 seconds)
    (189/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.130617658 seconds)
    (190/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.321347661 seconds)
    (191/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068276665 seconds)
    (192/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.052049459 seconds)
    (193/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.147404108 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072151469 seconds)
    (195/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065680361 seconds)
    (196/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051847696 seconds)
    (197/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061127518 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074154417 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065752834 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136010876 seconds)
    (201/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071690308 seconds)
    (202/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051229957 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091993513 seconds)
    (204/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051169671 seconds)
    (205/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.052153186 seconds)
    (206/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071423176 seconds)
    (207/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053670072 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064217346 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065588909 seconds)
    (210/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061409781 seconds)
    (211/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066936025 seconds)
    (212/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051808688 seconds)
    (213/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071419521 seconds)
    (214/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053810607 seconds)
    (215/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051889292 seconds)
    (216/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.06548868 seconds)
    (217/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.052575116 seconds)
    (218/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051599516 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074433124 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07259563 seconds)
    (221/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073386816 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.107517317 seconds)
    (223/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070877968 seconds)
    (224/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065638805 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.118904843 seconds)
    (226/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.06111136 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070883298 seconds)
    (228/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052838599 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.135915283 seconds)
    (230/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051585173 seconds)
    (231/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.11041122 seconds)
    (232/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076370888 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064423636 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065185808 seconds)
    (235/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.079650468 seconds)
    (236/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064603334 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090217665 seconds)
    (238/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068072689 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.092374241 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092597218 seconds)
    (241/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.166702677 seconds)
    (242/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072188752 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065668583 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.130711923 seconds)
    (245/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.05146641 seconds)
    (246/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067320796 seconds)
    (247/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052763335 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065199321 seconds)
    (249/309) benchmarking ("sort", Float32, false)...
    done (took 0.126626848 seconds)
    (250/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079221681 seconds)
    (251/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051819294 seconds)
    (252/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051285599 seconds)
    (253/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072659839 seconds)
    (254/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051394205 seconds)
    (255/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.148996726 seconds)
    (256/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.077869611 seconds)
    (257/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051189162 seconds)
    (258/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067251677 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064263251 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064898939 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.100133315 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071222365 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.112980627 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088575306 seconds)
    (265/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064629489 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072793167 seconds)
    (267/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069223646 seconds)
    (268/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051638467 seconds)
    (269/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052184347 seconds)
    (270/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064466959 seconds)
    (271/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051724433 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.094891169 seconds)
    (273/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067250693 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064961219 seconds)
    (275/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.0668767 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.117093633 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.099805648 seconds)
    (278/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087305138 seconds)
    (279/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.05107777 seconds)
    (280/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071300255 seconds)
    (281/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080383401 seconds)
    (282/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.086565578 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.07296551 seconds)
    (284/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052346236 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063987791 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086382473 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064715271 seconds)
    (288/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070428432 seconds)
    (289/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07349732 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072258912 seconds)
    (291/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.069075153 seconds)
    (292/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064764028 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06491136 seconds)
    (294/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052045654 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070117301 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.091317314 seconds)
    (297/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052230329 seconds)
    (298/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051062186 seconds)
    (299/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052393979 seconds)
    (300/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051245272 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088601215 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085296362 seconds)
    (303/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052035705 seconds)
    (304/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.064825719 seconds)
    (305/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.18486959 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070618529 seconds)
    (307/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051211306 seconds)
    (308/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051117616 seconds)
    (309/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051405037 seconds)
  done (took 30.391145659 seconds)
done (took 31.8063325 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085787897 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093099451 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074362429 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091971761 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080686227 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076294763 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07200126 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077784688 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079257606 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080729725 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077822426 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05471325 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073808823 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073514864 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073734262 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090682502 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077531794 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072151904 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072807365 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064514463 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072512823 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065536398 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066893322 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054991658 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076908166 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071101652 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072163948 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073455339 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065103454 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065407986 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068641405 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072793119 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066102878 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077578052 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072015443 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072787144 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073984748 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076375576 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067414925 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065613406 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073958345 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06590169 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072314427 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073006984 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071181812 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070984463 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072736183 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077285688 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090863184 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067581802 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07336459 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075320085 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075829677 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07155962 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068890107 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072673521 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070006004 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090652854 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073011869 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067570803 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073672562 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073097761 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070214098 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072587531 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072244306 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074526334 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074760905 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070698483 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074261037 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070707877 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064973887 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07220028 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068294369 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065303504 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075015253 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076314362 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064072039 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070575384 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072294444 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070824219 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064277353 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067378699 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066651655 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071281145 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067109414 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054524501 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068909418 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071141486 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064084699 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072418717 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070665498 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071221717 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066553944 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074709332 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06442057 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.06999956 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065273421 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064767197 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066337549 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068490894 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064560024 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066774702 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073369161 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066760536 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07088823 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078475618 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064969115 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071273828 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064678164 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064213228 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078813968 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074140232 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06504447 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067139557 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064078469 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071798613 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064138416 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065210972 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065458979 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065188407 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070491466 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064949195 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066663814 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071758543 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076349684 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064349294 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067810497 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066501414 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064188513 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069127403 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064226102 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.198184593 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067989337 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062603974 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068205378 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065570308 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07341703 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067799988 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072790142 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06702181 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073105085 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070042577 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.07113335 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070934792 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064012412 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058718115 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068174473 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067843416 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068190427 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065922199 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067064104 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06570895 seconds)
done (took 12.400515341 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067914732 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142953121 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098231465 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095091618 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085805252 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06633668 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075795087 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101293995 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067405357 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.1020102 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08682029 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084711822 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112302769 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06492245 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065493732 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069177445 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067139538 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081057446 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100965877 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086222267 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115810304 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065083543 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094169489 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089654178 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.08752049 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.091783775 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066458295 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069849442 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069199126 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.099830325 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086293412 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069735922 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066616216 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.10050869 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092375125 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082843047 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066167897 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082241094 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066106593 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065616096 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067296767 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097788889 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.07925839 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079704055 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069586339 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068895447 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066861628 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083075747 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088892529 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078559707 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086542473 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102467788 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068251445 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065308496 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064248683 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08520515 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064868983 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068168579 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065889175 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067937622 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065804289 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068778236 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080809 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081482735 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069559719 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.07997405 seconds)
  done (took 6.7892804 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08413041 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090419057 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082056335 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082735897 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065603574 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066719301 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065963849 seconds)
  done (took 2.049075429 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067537622 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087297288 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089301588 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089294315 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08380142 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086858799 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07502787 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066386038 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080173349 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067572926 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086537448 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101871562 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066644523 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072789409 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090071372 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066394994 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090028501 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066321402 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068940752 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090027698 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068200791 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082098297 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069467671 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067111997 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080621568 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066542389 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112900439 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070745478 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067958408 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069052358 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06465077 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107010667 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080242115 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075513869 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066072601 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080309917 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080204521 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064775703 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08200193 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071189856 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079444614 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066701904 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066562091 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064525651 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070269588 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076508483 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067194472 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066982779 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069039187 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086053234 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067065877 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080227009 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069349484 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068524556 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067632535 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069731682 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075973224 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06727494 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085360937 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067600316 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082811802 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082222718 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079712435 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082291428 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068522694 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079889284 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079705892 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068220019 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067808803 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069396909 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082070474 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064485821 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067358939 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076461344 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068196657 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088881979 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088529861 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067326494 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075650997 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06688527 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066783042 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06662075 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089521313 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068662763 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066408316 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070662386 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069193938 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064759079 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065471446 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069778374 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064261118 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067936207 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068632904 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069441234 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068838602 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082334643 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068483561 seconds)
  done (took 8.746347046 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069821214 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067630412 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068706122 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067620712 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067688607 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067637613 seconds)
  done (took 1.941438065 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09532578 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069304459 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080331306 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071760537 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104448809 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086316237 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086789877 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07835168 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083427319 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078400108 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086695486 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088110411 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092641076 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072827763 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086127766 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07206038 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087503557 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075407506 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078726944 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073061546 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086730104 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072541363 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072742745 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081822793 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075564747 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071895503 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066925898 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.07865073 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078110261 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078409839 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072701878 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075655928 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07070701 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078481015 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086339454 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070576537 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071257408 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076726179 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072221889 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075075287 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087258817 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072609363 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07417973 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076726917 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077941138 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070819943 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07684985 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076118844 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085817688 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076828544 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077600506 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071565136 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074994025 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076611117 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070354675 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078487527 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076554769 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086630541 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072331118 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070713252 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069046161 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075691453 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078642332 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075167523 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.07868961 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076754462 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070496351 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072425411 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072234825 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071501239 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076964748 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069088614 seconds)
  done (took 7.090983796 seconds)
done (took 28.114986971 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.544839418 seconds)
  done (took 2.042389359 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.601009141 seconds)
  done (took 2.12123499 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.521227654 seconds)
  done (took 8.042260733 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.393070022 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.472159371 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.688412619 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130436897 seconds)
  done (took 3.246424121 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.681442659 seconds)
  done (took 2.21208914 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.21154928 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.195393483 seconds)
  done (took 1.947950638 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.376826586 seconds)
  done (took 1.899349313 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.106111063 seconds)
  done (took 2.626542574 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.264896168 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162800252 seconds)
  done (took 1.957919754 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.459028699 seconds)
  done (took 1.985756722 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.802605599 seconds)
  done (took 6.329999602 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.20774301 seconds)
  done (took 1.777222008 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238384013 seconds)
  done (took 1.762230657 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.684233552 seconds)
  done (took 3.208680006 seconds)
done (took 42.689670529 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082106531 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08110308 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080924479 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078360759 seconds)
  done (took 1.835146997 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078408988 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072433608 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076587569 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072603722 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076625042 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072925029 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074312567 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077010204 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072610501 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072685582 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072874091 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072657726 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075082381 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074276946 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071044519 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074918417 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076318736 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072428378 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076106201 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072702654 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071030535 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074966403 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075023222 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072036271 seconds)
  done (took 3.307238617 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079246542 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072962199 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074868914 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072532249 seconds)
  done (took 1.836688115 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079211173 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091647744 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089309795 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077531641 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092622524 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086310911 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069196909 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068942681 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.07338247 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076895592 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068308357 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096336458 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088386263 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077222266 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079251544 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066161258 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068640798 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087103689 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077588293 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077640217 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069941938 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077162023 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067823687 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.08812522 seconds)
  done (took 3.42638026 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079191912 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103516158 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078237833 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087865406 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090211232 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065531283 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.07499747 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089378664 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123231578 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065469513 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070307312 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065523969 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072555808 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065535119 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076474246 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.105209503 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108190464 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068474514 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096474119 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065435409 seconds)
  done (took 3.195325571 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074344163 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07008263 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065920945 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068780883 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078198209 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072423125 seconds)
  done (took 1.973296609 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069601545 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067637157 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067886972 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066799797 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072025542 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067407311 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065653439 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067713013 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067709877 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066750622 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066700681 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066152427 seconds)
  done (took 2.349611462 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.174031303 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069640338 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070743189 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066800631 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071363883 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066575189 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080262018 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06818682 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091034072 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066627452 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06678054 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068734034 seconds)
  done (took 2.502287261 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20875068 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07614683 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237682184 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137030265 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111429819 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115913353 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104363384 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114106485 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.144629134 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10226578 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168401656 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166145084 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107701799 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13848702 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089368931 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098014387 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156245748 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16321171 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103721353 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165953478 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144285665 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125094707 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147469951 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101392962 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1065683 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12257359 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071969308 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080378934 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171363248 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132445534 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147256388 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111677448 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093995373 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177233624 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17164743 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142047462 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134975676 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083705913 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102474343 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132781718 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201023797 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088534384 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162688809 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245759681 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082012911 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135371096 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120896399 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121569269 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108123535 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09007358 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146745267 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1842566 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139376477 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088071681 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113694862 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11602166 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115939111 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103835553 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183594277 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163082273 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128801567 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071289023 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100110309 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153827437 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133793468 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110555003 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127288619 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094306007 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133520303 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155384291 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119085524 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144301467 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.129228339 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089291319 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119514364 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14045129 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129219783 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17093939 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125666024 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073258148 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125296644 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103669415 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081983132 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143005006 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075483972 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175106946 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098494126 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.1062654 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113597614 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109247478 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109273479 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161236709 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284602937 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104569398 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066012461 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104706919 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120322995 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148386605 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088246143 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108874211 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117002924 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078437103 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139715114 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07488716 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123811696 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076139469 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125729053 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132895498 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076037064 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121673314 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101017497 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100904758 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134355886 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161115103 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088910179 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082398081 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168972959 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124327163 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104592244 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144728298 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157125665 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099836863 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103155155 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150214394 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180262302 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089971117 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16387832 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107846851 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084046353 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.08782051 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124580944 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11284726 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122839634 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082474199 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119071812 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169301823 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075111681 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095393543 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133574163 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078958605 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080536565 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103272462 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100205726 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095062629 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100354446 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104723683 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137777097 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123768905 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.247918429 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12684448 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099562792 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171291711 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089881199 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101144399 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104225816 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070083092 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.13735141 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158037203 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08008993 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166391885 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.12528402 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10528589 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119212837 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083414752 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141708938 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079326209 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070401878 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145283239 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111213819 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109770183 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151466111 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105327643 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.12783293 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120386068 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134886613 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132628699 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.128803711 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105659686 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088286191 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111764903 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125785364 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073464605 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092082306 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080593067 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104518851 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095981824 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083862257 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143317973 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125671035 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100656672 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112161979 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097065667 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147067507 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076962514 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129527928 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118899649 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09395775 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152116717 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152030845 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131704001 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099229375 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144533983 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070252982 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216716753 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.09103309 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125185998 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084359466 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084584885 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116958316 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148075176 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130614874 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137596969 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11197345 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123230968 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155594836 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069778284 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116127167 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148251749 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12282445 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105254846 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091002585 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099291847 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1434995 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108559917 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183425949 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114841384 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126602785 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153787276 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100333566 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080376701 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103972273 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136354005 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104949219 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144812936 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100126014 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088210325 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110784036 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074486822 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100837455 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128087118 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121005145 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136262811 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.120415813 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134298054 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077487182 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118003331 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121517019 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122713797 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06432502 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120011662 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161203016 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093702391 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119167053 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153372998 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07947738 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.124245526 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.320974282 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147776187 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085817208 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110131429 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118869009 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128688849 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121758246 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140115558 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108297567 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136289325 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110231863 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086454818 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087837802 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097693152 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106097264 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095517085 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108400313 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115189755 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095786948 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132126633 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104037689 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110525216 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119386354 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097068276 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090443294 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09735951 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175402116 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119956544 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172586731 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099570219 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145658449 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164541861 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075309239 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079378279 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078576818 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140479943 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084115927 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131800328 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098466588 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106551836 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124882572 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143153449 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095714981 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.06871505 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109087691 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134916409 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112423225 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097884289 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103936116 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162570517 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100781951 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079714639 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113635249 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104679022 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101922904 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168899134 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.06108708 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096702671 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075131858 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079331509 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125169999 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147696607 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.078879756 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102013474 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116532668 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107820093 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125221568 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09889648 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097601513 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112144546 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145404758 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125470465 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088016341 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109676261 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1261424 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152182533 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105694057 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.093619503 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166434637 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148405785 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.154105816 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.084215371 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109748941 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109300196 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104041663 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131016414 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081585888 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154361024 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0787341 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128746701 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099082716 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085837491 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122906853 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.112294892 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0839967 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138808417 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111103881 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080170796 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073919564 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111330038 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113964582 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101004612 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.072944783 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131349404 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071579196 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124945724 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160242649 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.335192124 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108099228 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099705666 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083596519 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111447392 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106020105 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092657724 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099996772 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177438529 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.091683867 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153843087 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144581758 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116492974 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14013374 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102467277 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639864305 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080167837 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154890466 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119227724 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176959234 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099103223 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120913765 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110715174 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125232938 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145774316 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106414834 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178428202 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132869368 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11783842 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080340154 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104153318 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104000098 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.090149828 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105950353 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114510137 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117426621 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.0947854 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117220845 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124687802 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082805164 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096181941 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157703773 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11789185 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14546822 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141484797 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084900963 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117778509 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139272871 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079956201 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122447538 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152416981 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.254724452 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098892796 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081623119 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103809023 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172303778 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07445739 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162929012 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12122042 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110988517 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113962044 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115097073 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132231439 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108557856 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122369343 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094303505 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111563252 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113716105 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082489407 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07743345 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104856144 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113164468 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097933185 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099066452 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097453563 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152247117 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071999827 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09653477 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103825568 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145496851 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175429968 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088401405 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083447499 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119352366 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113449986 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114220958 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121356257 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079872323 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082729607 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082496626 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.07764563 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108980847 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113172212 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105033781 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112506266 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165282756 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083036168 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224854343 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095668935 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105233136 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070137364 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07901599 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096667025 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097653204 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108534777 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100567224 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169745047 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094976638 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090264905 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093053469 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.221099994 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084304439 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129984806 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11165723 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120609455 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098793712 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063535828 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109705107 seconds)
  done (took 58.958850984 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.111834855 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082431471 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.098510003 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150448516 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.12372166 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.21308678 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.15797047 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200240115 seconds)
  done (took 2.810143833 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070538936 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095346097 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100275811 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084110711 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066981166 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070977624 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.226972885 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082376621 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066740666 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089695724 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081347744 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070321028 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.421572647 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066646973 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069104722 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063768702 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067863669 seconds)
  done (took 3.459000842 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.373093435 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.601915286 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.375670438 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07382099 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.91146667 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089814365 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.077595563 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.127529636 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074321835 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.539331957 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.713388107 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.128026573 seconds)
  done (took 18.758040759 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079114942 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070547806 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084726791 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08487802 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073690961 seconds)
  done (took 2.060297645 seconds)
done (took 108.056511962 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083348321 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.395774629 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054255288 seconds)
  done (took 2.149476374 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085751735 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084905826 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085193664 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083773686 seconds)
  done (took 2.022376733 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077319651 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076722242 seconds)
  done (took 1.827781331 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.226462803 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.159598751 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087474635 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085483985 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078420104 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079290764 seconds)
  done (took 1.923015709 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075092017 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075717131 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072409759 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076751712 seconds)
  done (took 1.973810786 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078760363 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053138497 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055095126 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056985143 seconds)
  done (took 1.919506468 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089509697 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080028483 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.07879885 seconds)
  done (took 1.926699073 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104219941 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085543556 seconds)
  done (took 1.869203715 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084819377 seconds)
  done (took 1.76433032 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.101804047 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.11386191 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131805573 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111207426 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139381515 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109918466 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086428547 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087134706 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077545581 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088201145 seconds)
  done (took 2.724722724 seconds)
done (took 22.323575639 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081135602 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.363209397 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360659959 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089563751 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668659958 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357044213 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.984975851 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09283865 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115167491 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068350173 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084588093 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648936924 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.976457139 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324729726 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.959613715 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319756765 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650881908 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068894557 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068073041 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068277276 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.970067232 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068091571 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068330043 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069162801 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651077127 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371530279 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068618499 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324697883 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068197746 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070536542 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355461995 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069016991 seconds)
  done (took 16.171943492 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073748246 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118751965 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074091385 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08433447 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071013616 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070246862 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071850066 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069667894 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120456087 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068465345 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085193548 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068259107 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072351596 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069163655 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08761917 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068784637 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069447534 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069112457 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06901172 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069037704 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087469861 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068620462 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068976648 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069436388 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068782531 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079691056 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068696502 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068424755 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069000582 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071099017 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071893208 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069079311 seconds)
  done (took 4.105748022 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119693301 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125113582 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074764643 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104028746 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113037672 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070733392 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14478776 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093762254 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128391367 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068667095 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085223132 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068734757 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101380341 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069296536 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088049374 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06917093 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070057286 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069325853 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068773792 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069184859 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088056892 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06905644 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069715225 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069379895 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069457905 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082138378 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069531318 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069621271 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069679986 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070866899 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072308756 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069569648 seconds)
  done (took 4.36714272 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075077285 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075119324 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082812898 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084501597 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069907745 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072079453 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073405385 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070549122 seconds)
  done (took 2.303216016 seconds)
done (took 28.63352123 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.08124961 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06933509 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072773316 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081779441 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07368667 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079537495 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067662378 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075065952 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072540347 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073693892 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075332754 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068085713 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071448129 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067810984 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073653755 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068687017 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079996097 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072476304 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079945813 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080155947 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070105639 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073730826 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07475263 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079449661 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079617453 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079634789 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077861396 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073278363 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069769585 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071450763 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077175848 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084931759 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069212902 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.07983875 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068476443 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068686419 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072121824 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068210531 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080027996 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077317862 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070309273 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076546444 seconds)
  done (took 4.802846877 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090545723 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091549047 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08502903 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062057117 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.06747048 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065626052 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089174628 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060374931 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060257072 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088529096 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.0568732 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059809924 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062535187 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054948972 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059573498 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057365821 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062124261 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056439838 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059415373 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059604194 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.059035995 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055073146 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060501226 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063557859 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059415203 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062728845 seconds)
  done (took 3.415588155 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076441 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084104988 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088709551 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126784094 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105143973 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077495672 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078433849 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092816203 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085813284 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067198821 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071116032 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093932574 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08816098 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07418122 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068068795 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084582365 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082909449 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069610538 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074019989 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092005225 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085166158 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084001741 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09340681 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081240695 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067527602 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07003588 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071586975 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082073049 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072633144 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076649089 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072023634 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071473696 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069658984 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079120644 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071883914 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069355372 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09107393 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077030105 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078313484 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068581735 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071561649 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068819055 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.101371976 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123118313 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067613452 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074362124 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075665644 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076962012 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068126379 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086465435 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079019545 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068015473 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071474513 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067155536 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068145817 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080992352 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069876279 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070317201 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07748868 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071176657 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086455028 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071844077 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083400894 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067645228 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075782538 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067244043 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069117274 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066914733 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093493167 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069613053 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108955935 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069055235 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068772953 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076670605 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075631638 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07420495 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06830891 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083203192 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078384001 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071384195 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076288598 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071524038 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071127919 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088793356 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070195912 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069277456 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.0688181 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073859498 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070885198 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069356418 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080870477 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068506026 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070752173 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084318042 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067495274 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.06918533 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074210735 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072948464 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067412443 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078793619 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.0730438 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068438535 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07733011 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067708445 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070859247 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077943433 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074005275 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067104311 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072801619 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073931938 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068656294 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069213673 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070399878 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.06921177 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076022128 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074179175 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072118241 seconds)
  done (took 10.674339181 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.163999803 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154107337 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070911482 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.147401408 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077204729 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079953605 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.149070878 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095444294 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068822394 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069377423 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069720739 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110912398 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.10655605 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116312469 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079130432 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068446522 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083969469 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114352195 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.150565865 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143809691 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084476164 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077676038 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070610495 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069759443 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071324449 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07951112 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085658549 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077478372 seconds)
  done (took 4.473930744 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084524578 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.097472939 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074755075 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090138827 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092181573 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068497006 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07078224 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070412665 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081084621 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079318383 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068528758 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074014888 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075302692 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071843409 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069372209 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075352198 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075764074 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070098222 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071413208 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073464498 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078055291 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081453975 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071959286 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067588912 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07460863 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067814544 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064836914 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085491689 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068567551 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090681314 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066515232 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075394654 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081939016 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068833548 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068186729 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068173126 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067796692 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06819494 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069971176 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066946645 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066597942 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057992719 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067249629 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080060503 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074444169 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057180301 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073194658 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073333332 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073329468 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065625534 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071018575 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070897966 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.0712936 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075193902 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072755731 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072937383 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069468866 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074326218 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075470368 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068014181 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064876561 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066659891 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072773237 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066533915 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.0755967 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072481644 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066550092 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067553627 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069664942 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074112783 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067850252 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07082988 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065663968 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069991999 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072396648 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069447912 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068710571 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066437733 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067727197 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068420805 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055867122 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067805911 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05386226 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071287939 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066050566 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066406926 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067825119 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072536738 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080449861 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069259405 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073949832 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068864222 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.0671443 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07102841 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060922433 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071559935 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083030138 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083249569 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068310671 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065989199 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08197626 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072512873 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067060535 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056596139 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075137566 seconds)
  done (took 9.250912985 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091816206 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070465802 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083078429 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091616235 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087830576 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07575991 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077643191 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070075155 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082755419 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074763286 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077198314 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068798445 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077796008 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077521709 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.07041184 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077886065 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072809829 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083974912 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083254003 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068948151 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076756871 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080906393 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089517784 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080669735 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.079171004 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080398767 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090006371 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072720081 seconds)
  done (took 3.957262035 seconds)
done (took 38.267109353 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.777498237 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.947551903 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.775033532 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.11473046 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.061498075 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.791306375 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.931670346 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.769828318 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.110997062 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.812825269 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.042978502 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.884800724 seconds)
done (took 65.731011583 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.795032339 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.914844847 seconds)
    (2/2) benchmarking "String"...
    done (took 2.042995068 seconds)
  done (took 5.668317824 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.073041376 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.311874491 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.021307295 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.771564555 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.777138572 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.066667861 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.571548943 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.301559858 seconds)
  done (took 30.531901764 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.884976344 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.0026617 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.469334173 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.472207304 seconds)
  done (took 15.5855789 seconds)
done (took 63.442771649 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.775892686 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.816321264 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.779595581 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.753432406 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.83135485 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.793820991 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.878092642 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.974298066 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.771734797 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.762382602 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.773676336 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.208411885 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.777908298 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.256200575 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.772228529 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.779845838 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.801894492 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.192811134 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.946653686 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.784063567 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.786902616 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.840086819 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.774904398 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.783640579 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.794673012 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.774645351 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.220571545 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.775659563 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.396213112 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.777785375 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.802335435 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.209105262 seconds)
  done (took 205.078424659 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.773367371 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.777272595 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.849473892 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.775984272 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.316700364 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.953924524 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.869278352 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.359846149 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.777695528 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.783622927 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.015611788 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.776211276 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.043552794 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.718294972 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.81731895 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.86576843 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.030486716 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.080315016 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.820169711 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.919146294 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.78757382 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.890095224 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.821763545 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.026274082 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.818862086 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.880812892 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.941433884 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.780649006 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.9638019 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.996310379 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.813060552 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.78666438 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.995028716 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.643984165 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.780489583 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.786308596 seconds)
  done (took 170.750920206 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.937625431 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.777640059 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.776740226 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.776705445 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.788304088 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.77557311 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.898160203 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.898719083 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.23911721 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.095057716 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.82699311 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.594115221 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.776486189 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.844878825 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.789412527 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.777703749 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.792225325 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.80443121 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.775688182 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.777300559 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.901980026 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.788978938 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.938252242 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.783938979 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.779097706 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.784519662 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.146513362 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.776701768 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.783699033 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.04019565 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.777768591 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.777556282 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.663482376 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.511251528 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.7844724 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.86137845 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.779524599 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.783127725 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.778145254 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.998712612 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.777535791 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.777986654 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.780690354 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.956131095 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.778326273 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.902557033 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.776822969 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.27540594 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.777794605 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.779010538 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.410876259 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.449368091 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.779348311 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.778458566 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.78200757 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.779938872 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.778355023 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.78522477 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.408472546 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.852050612 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.78203358 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.782432188 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.785285387 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.778920619 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.958780072 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.779420678 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.222449936 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.831653712 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.899845765 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.900720935 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.781351477 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.84829577 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.872997522 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.778266418 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.779293721 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.780912566 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.78148208 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.862892438 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.780038544 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.901322061 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.787257263 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.781974944 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.830237481 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.849872719 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.77986933 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.66736561 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.779540406 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.77934347 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.094757121 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.779904531 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.848123169 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.778588221 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.779941243 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.780850809 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.902219093 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.902748074 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.552221403 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.781520242 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.780867853 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.567825312 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.78502473 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.925550432 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.780531725 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.954324406 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.780033908 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.8649707 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.784153926 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.783186582 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.781006986 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.813532361 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.782964821 seconds)
    (111/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.781226401 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.781661543 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.843665385 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.153138334 seconds)
  done (took 402.626870078 seconds)
done (took 782.1596445 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.457441558 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.418348034 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.524962715 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.440098014 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.411836778 seconds)
  done (took 13.971106581 seconds)
done (took 15.689649116 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.868664584 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.872464202 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.807471361 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.870852377 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.802900033 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.87084832 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.853228314 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.808937786 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.838125528 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.807544385 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.839828703 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.806657764 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.794406608 seconds)
  done (took 25.560913944 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.014563905 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.017324523 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.849570185 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.010962795 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.826424495 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.006551595 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.938817961 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.929991775 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.927951773 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.795044198 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.794042869 seconds)
  done (took 22.833100543 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.017375924 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.018594481 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.853424483 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.015889453 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.828113737 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.016224771 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.93988552 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.930781105 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.931927089 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.796999044 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.794057344 seconds)
  done (took 22.864176756 seconds)
done (took 72.976791209 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.788009672 seconds)
  done (took 3.50821639 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.813560726 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.948954104 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.795446037 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.796092764 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.790946168 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.789772667 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.794834002 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.789911928 seconds)
  done (took 16.242374876 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.789764723 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.787305719 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.789289982 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.785262168 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.789157056 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.789143246 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.786980341 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.786609833 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.786041819 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.789042556 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.789771445 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.788334003 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.789816334 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.790145956 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.786167361 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.78701244 seconds)
  done (took 30.333515795 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.788474266 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.786358559 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.788205296 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.787455173 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.786805295 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.787864576 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.789280826 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.787058468 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.787664399 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.787676564 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.788320598 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.787514536 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.789398102 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.787236743 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.788016034 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.788309336 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.788087406 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.787677365 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.791919848 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.788174244 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.788597988 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.789698458 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.788681651 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.789040649 seconds)
  done (took 44.643518818 seconds)
done (took 96.447329387 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.653678849 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.167417714 seconds)
  done (took 8.54372783 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.792318936 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.792774657 seconds)
  done (took 5.341759323 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.791882969 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.792377694 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.792104852 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.792253864 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.791438085 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.793574947 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.790803713 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.792769691 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.791975771 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.793096327 seconds)
  done (took 19.646469869 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.792355585 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.79165972 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.788100808 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.792153287 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.792338749 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.78941437 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.791430017 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.790884434 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.792164141 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.789649975 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.79280159 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.789631383 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.79265158 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.789756851 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.792240432 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.790020822 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.789500701 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.78917446 seconds)
  done (took 33.959738144 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.792136474 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.793225231 seconds)
  done (took 5.311922171 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.78959908 seconds)
    (2/7) benchmarking "second"...
    done (took 1.790723525 seconds)
    (3/7) benchmarking "month"...
    done (took 1.790165831 seconds)
    (4/7) benchmarking "year"...
    done (took 1.790656784 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.790257286 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.791333799 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.789910262 seconds)
  done (took 14.258522896 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.79445953 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.965523911 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.029549913 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.481689383 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.795498091 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.796882974 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.7221937 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.7976112 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.798249292 seconds)
  done (took 19.907730334 seconds)
done (took 108.691828753 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.596053271 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.792083282 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.173092715 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.868504998 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.809143716 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.132996469 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.830424683 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.011568073 seconds)
done (took 42.940521676 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.87134048 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.334117062 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.376951412 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.127183585 seconds)
  done (took 12.5639999 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.789276388 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.321075474 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.820479997 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.379749275 seconds)
  done (took 20.058199978 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.157818727 seconds)
    (2/2) benchmarking "read"...
    done (took 2.142831233 seconds)
  done (took 6.033306797 seconds)
done (took 47.255242711 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.795289494 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.792053082 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.79506861 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.795915152 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.794222825 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.794858569 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.793803598 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.793564658 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.795906155 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.793989486 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.795588382 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.796724619 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.796171921 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.796987127 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.79490879 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.793598264 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.792890457 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.794748882 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.794333139 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793466227 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.794242856 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.795271509 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.794234491 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.794087518 seconds)
  done (took 44.79821973 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.796155532 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.795913156 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.79739436 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.797095592 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.794431355 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.795267231 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.796500119 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.794380599 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.797162621 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.796238654 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.794205373 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.79442665 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.797483475 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.79511271 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797238809 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.794176879 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.797601128 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.794869496 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.79787621 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.794638841 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.796833108 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.795123269 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.796078197 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.797045553 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.794865904 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.794755893 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.798170505 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.795873378 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.797825688 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.794840256 seconds)
  done (took 55.609759458 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.802861834 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.806259196 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.79738702 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.799610719 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.798536443 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.797987247 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.800221972 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.79855187 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.799160126 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.798183677 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.79995052 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.799634827 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.799498235 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.799158453 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.799348693 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.799658923 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.798909591 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.799453669 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.799437771 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.800880679 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.798963208 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.799727622 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.800164972 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.798330617 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.798771423 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.799248399 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.799034843 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.800762598 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.798415046 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.799373047 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.799164594 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.799192892 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.799924937 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.800365232 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.799977796 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.79974182 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.804228364 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.809548783 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.800266958 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.800386094 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.800435191 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.801208258 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.801484974 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.800522981 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.800086698 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.799972525 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.800726686 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.800204544 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.800339715 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.800716017 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.800217067 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.800915016 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.80144908 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.800991177 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.801402606 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.800547876 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.800901833 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.80090607 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.801076721 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.801702891 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.801354929 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.801292783 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.802393559 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.802063634 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.801840289 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.802237799 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.803077111 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.800604268 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.802979922 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.80193765 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.802954254 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.802844575 seconds)
  done (took 131.375474568 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.80217009 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.799317218 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.800377332 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.799576312 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.800060669 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.803892646 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.799189299 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802532792 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.800264259 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.801963091 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.802435004 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.799796532 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.799527324 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.802281302 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.802682103 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.800149828 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.802808952 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.800076307 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.803475977 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.802462843 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.802926358 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.798743422 seconds)
  done (took 41.363764186 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.802684449 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.801973577 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.800060959 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.801609781 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.801120823 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.804832487 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.803321283 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.804086063 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.803762944 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.801419265 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802029481 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.803476524 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.80134506 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801098642 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.800506805 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.801793727 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.80441245 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.802000768 seconds)
  done (took 34.178173949 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.800621997 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.802536735 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.803889292 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.80206609 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.802075832 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.805501587 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.801555151 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.80455018 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.804143045 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.802582089 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.804539584 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.804990536 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.805612451 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802028773 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.804363542 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.802020643 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.805130027 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.803172382 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.804382842 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.802945518 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.802343942 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.805696572 seconds)
  done (took 41.412823832 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.80416535 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.805846872 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.802948537 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.80196762 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.802800226 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.805629653 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.805381664 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.802648978 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.803934248 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.804776545 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.802881018 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.805629934 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.803102642 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.804786519 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.803942137 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.803316178 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.80528369 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.804566747 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.807057214 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.803614568 seconds)
  done (took 37.822434369 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.804692208 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.80558003 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.807794902 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.806874031 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.807520118 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.806945445 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.806382056 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.806987466 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.806955756 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.807591166 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.806879672 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.808281852 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.807401777 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.807802752 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.806906312 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.806832901 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.807273662 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.808826468 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.806732614 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.808337531 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.808994719 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.807627425 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.807746397 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.807992849 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.807651349 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.807936267 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.808107367 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.807486562 seconds)
  done (took 52.345427249 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.808068055 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.808293439 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.805871528 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.805256725 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.80448946 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.804405817 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.805061068 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.805310671 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.807282052 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.80452834 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.808195093 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.808530256 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.80843938 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.809741944 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.808235104 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.807409614 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.808401755 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.805090352 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.807029423 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.805465262 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.80813847 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.808285035 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.808435734 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.805886852 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.805581165 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.809267971 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.807186721 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.806496318 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.808627772 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.805987226 seconds)
  done (took 55.949786272 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.827762841 seconds)
    (2/2) benchmarking "in"...
    done (took 1.827264276 seconds)
  done (took 5.39567716 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.806073832 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.808819407 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.808951516 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.806179833 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.807186905 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.810272027 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.809404917 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.806289176 seconds)
  done (took 16.204404046 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.813658917 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.809978584 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.811356056 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.810213913 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.810243018 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.812706916 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.819702647 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.80964577 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.815958743 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.8143493 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.82176617 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.823358901 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.816147629 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.812371983 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.814092686 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.814991133 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.810237351 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.811294642 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.811421181 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.811639304 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.811106451 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.816952658 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.814852521 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.808428736 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.816154799 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.825363725 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.817173865 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.810821629 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.813355971 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.817671235 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.814152156 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.809001261 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.811436801 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.811926969 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.810290495 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.812400181 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.822032573 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.814311096 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.820846418 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.810242814 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.811495171 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.809576312 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.81619119 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.816164061 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.817104988 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.81176383 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.81193555 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.809643067 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.815021592 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.818116086 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.819590468 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.815230918 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.810417634 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.820018685 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.817512178 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.822376088 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.812978135 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.819448014 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.826965808 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.827431412 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.827929979 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.824687254 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.819351485 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.812873276 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.827441115 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.842541057 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.822294258 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.809737845 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.811584606 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.814860026 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.822958005 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.829622673 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.827169361 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.812721541 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.815028156 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.814433722 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.816293378 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.814062986 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.824075387 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.81899607 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.81445251 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.814081377 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.827830888 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.843035198 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.81716039 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.814912832 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.815016834 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.815038933 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.817723274 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.828295271 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.815690619 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.814595557 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.816485308 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.81774383 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.817805162 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.815281084 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.817879768 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.819150116 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.813529882 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.816244425 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.815199074 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.820141565 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.829302288 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.814038355 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.815353892 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.823066358 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.81451689 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.81799742 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.825451879 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.815391354 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.816617258 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.821263274 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.825116372 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.813389244 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.821583187 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.830463553 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.815935489 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.8203934 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.815048886 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.817659647 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.830977309 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.85049528 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.817085864 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.817671679 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.824421238 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.830034245 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.81673209 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.8230385 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.817603621 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.813313155 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.814141849 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.821299415 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.816734279 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.821350494 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.817741282 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.82076931 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.813721115 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.817711822 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.81730265 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.821775497 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.821484941 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.82030743 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.821246026 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.821893655 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.817396345 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.82238862 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.824967832 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.819832601 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.822003183 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.823109841 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.815145781 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.817796838 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.82241915 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.81745619 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.821209728 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.817403019 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.821129895 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.817937591 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.817201658 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.818324204 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.81840158 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.823161574 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.825660077 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.819837977 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.824445983 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.820736496 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.817317649 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.818414049 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.819950998 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.822424486 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.818791051 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.822206123 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.825405616 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.82953966 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.819896117 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.819157219 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.826403371 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.819065573 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.819642783 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.819882094 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.824829986 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.832797792 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.818995786 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.828870225 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.819352049 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.820003957 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.819842267 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.823414378 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.82285774 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.819536235 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.827453181 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.828893877 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.836515788 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.83389378 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.824914231 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.82510645 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.82498975 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.824720489 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.826642125 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.820359836 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.820088951 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.82016091 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.823623561 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.820269292 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.824004293 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.821430323 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.822899366 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.82045041 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.819976781 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.821345913 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.820083162 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.825633213 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.824335914 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.819066245 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.821496256 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.8208309 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.824774136 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.820846932 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.823197243 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.825391059 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.821926963 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.822108949 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.831556299 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.818115312 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.826143823 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.827886935 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.825839867 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.824520144 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.823725758 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.826648047 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.824019706 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.831298172 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.825333116 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.826168189 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.83229936 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.824711111 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.825638653 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.827499054 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.822276212 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.82073478 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.828388816 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.832789679 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.821763951 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.822480775 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.823453456 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.825297434 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.822681742 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.83347129 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.820353444 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.825577159 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.82349603 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.827771871 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.820080757 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.828527315 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.827421013 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.828094447 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.829099885 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.823885475 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.823336967 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.827870421 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.823986691 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.824006644 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.824202849 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.82946052 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.833276824 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.83084816 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.827162908 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.829896824 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.828544149 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.829178648 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.827686363 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.82544322 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.826225769 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.839922703 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.8344395 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.832855902 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.828995066 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.825415811 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.832584461 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.828715425 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.833232247 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.827637274 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.83006093 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.830473138 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.828618303 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.823822678 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.829724668 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.82478918 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.830615651 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.830167617 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.831219285 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.825608814 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.826920725 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.825022382 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.825575467 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.826886269 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.826905691 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.8257552 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.830700365 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.831304222 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.828505469 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.828583017 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.834697359 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.82974473 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.830926071 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.82900106 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.831235202 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.829597738 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.832056347 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.8276794 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.833828669 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.835693649 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.835235166 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.840903472 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.830271698 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.839975017 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.827145687 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.832838639 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.835788609 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.823577056 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.828754674 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.830113108 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.827787494 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.836021199 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.827294653 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.831780025 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.831891659 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.827438937 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.828834371 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.828550917 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.828201348 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.827371154 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.828743802 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.838798509 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.833386201 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.834933998 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.833568472 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.825288791 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.827609693 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.827414084 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.831926778 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.834749657 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.827843436 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.831709545 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.830884298 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.83165755 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.828766219 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.827427636 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.82855522 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.825877344 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.828140424 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.837985061 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.832864382 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.832960647 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.829800922 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.837776284 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.829673748 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.838694399 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.829691742 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.832643852 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.829218138 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.829598312 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.832994285 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.831811771 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.833531418 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.829783799 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.834640401 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.832922823 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.830331001 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.83479788 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.833579435 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.830774252 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.833991853 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.84407551 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.856098972 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.835065497 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.83606345 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.827843834 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.834141648 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.835355526 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.830483212 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.832458825 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.837396843 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.846829421 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.83975951 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.833559437 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.831400675 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.834735099 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.830532496 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.830554165 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.832250972 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.830181289 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.831161125 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.835419616 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.831050293 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.837971951 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.830878521 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.836309454 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.836898477 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.83569053 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.845047092 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.831511926 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.835658659 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.832146418 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.832347251 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.835660576 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.834391697 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.831123619 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.836821229 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.831758549 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.836644991 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.844250845 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.842768779 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.838729193 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.835158915 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.833206918 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.836437653 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.834728063 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.832425464 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.832334992 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.832429296 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.836442297 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.831669261 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.836868139 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.834829685 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.833514884 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.836690957 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.833124136 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.83878531 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.845052292 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.83719991 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.831093787 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.833608705 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.834275942 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.835366162 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.836663535 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.843934348 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.840179134 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.850345997 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.846745316 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.838452851 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.838726453 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.840759408 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.846532405 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.836896111 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.837858136 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.833647458 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.839580168 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.838461398 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.841221632 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.836072575 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.843656499 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.836642665 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.838539652 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.845668741 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.838426454 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.833403577 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.839451665 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.841944812 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.83774855 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.832323714 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.833796745 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.836818138 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.844545466 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.839703965 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.835388554 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.839815216 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.836417036 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.839372322 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.839579455 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.835722086 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.839237988 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.832052791 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.839524765 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.835162464 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.836427639 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.831141838 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.837907847 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.837442506 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.842788177 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.847018453 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.833441512 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.840587307 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.837945134 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.839967119 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.836241758 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.836507143 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.834634973 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.834613161 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.839195068 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.836852375 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.839840851 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.842451199 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.839490672 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.841494491 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.837019844 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.836360079 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.843610456 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.852341528 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.844899433 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.834446877 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.839463634 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.841367413 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.842892218 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.835738807 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.837941135 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.839369248 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.842920474 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.837727624 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.838058378 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.837293586 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.843842231 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.856967567 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.837040104 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.840255093 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.841727602 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.843590994 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.836863745 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.835617039 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.837142933 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.842423971 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.845325738 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.845763286 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.838739802 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.847395123 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.84096707 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.84315043 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.842282792 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.84471845 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.851292196 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.845794871 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.839073611 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.838576947 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.847461655 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.860586597 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.838094175 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.852213443 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.874353866 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.842250921 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.842801177 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.839354522 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.842241138 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.838381106 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.843736597 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.838572203 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.83939816 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.83889564 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.83920513 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.844775915 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.850834005 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.844138858 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.838289853 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.839200589 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.842247696 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.843829512 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.836635361 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.839721718 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.839696358 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.840745809 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.841484599 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.841980384 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.843818466 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.85656657 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.854287139 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.841536812 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.840734847 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.837335413 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.847207167 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.847045149 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.855831433 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.850429176 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.840109952 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.840839829 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.845782309 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.840990774 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.838219615 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.844237083 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.844817935 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.844183941 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.838144723 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.856889934 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.849637479 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.849346012 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.845158652 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.841397753 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.841617867 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.846316507 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.842428546 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.84184213 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.845859636 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.84577453 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.845175369 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.841960905 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.84330571 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.848525655 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.850565775 seconds)
  done (took 1092.202484171 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.840819138 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.839767418 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.838707591 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.840876309 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.839646092 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.840010185 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.840019026 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.839333928 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.839838054 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.840539961 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.839768411 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.839878157 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.8420684 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.840765243 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.840169912 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.840994188 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.841045045 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.840543804 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.840966564 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.840841504 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.841477303 seconds)
  done (took 40.422053263 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.841966897 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.840381493 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.841948567 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.843566992 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.840666178 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.843822792 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.840981682 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.844595715 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.843416934 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.840615963 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.842702684 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.843388573 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.841315543 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.841419877 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.841822813 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.843606698 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.844486231 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.8404308 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.842897489 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.841602788 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.844212884 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.840509072 seconds)
  done (took 42.305444969 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.845063377 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.844392676 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.847584452 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.842601024 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.844720319 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.842533901 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.845246298 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.844996809 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.845058983 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.848976043 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.845760972 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.85031337 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.856012373 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.851824848 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.850446855 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.84485521 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.9898701 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.845491722 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.845919158 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.84533783 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.84195082 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.853474479 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.843050432 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.842683048 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.848515641 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.846035106 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.845143806 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.846749378 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.846187727 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.850990583 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.852137099 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.845954367 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.84909343 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.850846424 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.849739397 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.849943911 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.851096996 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.846460723 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.843959457 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.846087511 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.859666448 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.870958455 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.848012376 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.856251448 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.846266134 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.846373708 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.852873851 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.856062782 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.84535292 seconds)
  done (took 92.485680897 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.847126483 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.846440626 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.843783795 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.847519698 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.847098595 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.84770192 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.846442171 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.847473086 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.844158536 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.843609583 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.847771859 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.844997682 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.844724541 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.847476336 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.847510832 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.844177598 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.845070028 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.845283762 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.84539217 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.844283186 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.845004924 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.847227944 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.848292945 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.845590527 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.847768144 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.84753441 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.846118966 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.848097773 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.845735202 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.846689972 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.847967172 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.850005356 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.847772028 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.846295305 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.845574436 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.848446097 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.849725975 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.846044844 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.847910846 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.846358897 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.846599845 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.84877897 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.848845784 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.849274541 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.845221337 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.846126572 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.845964668 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.845379008 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.846157535 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.848673996 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.847966805 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.847941477 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.848293483 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.847770712 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.848881698 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.85002613 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.846151097 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.846073711 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.850292261 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.84682206 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.847590865 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.850452888 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.847503363 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.84888787 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.850301796 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.847961397 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.847174194 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.850546653 seconds)
  done (took 127.384217529 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.849556275 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.849365395 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.850987909 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.851680878 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.850227007 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.850994646 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.853471253 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.851656281 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.851585518 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.850258536 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.850284293 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.851283052 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.850788651 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.851457191 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.85033365 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.84915381 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.852537931 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.851292899 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.851522827 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.851518571 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.852025295 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.852192047 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.85096527 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.85128044 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.851240089 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.851272837 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.851982873 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.851694591 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.852212677 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.851210404 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.85270486 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.852063428 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.851583597 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.852312882 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.851158329 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.853577627 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.851237192 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.851451722 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.852761802 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.852677932 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.851699051 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.852284938 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.85312852 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.852508738 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.850504143 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.852011138 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.852518773 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.852302457 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.852041342 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.851938911 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.852847689 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.852852496 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.851452936 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.852818081 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.852003481 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.852542133 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.852811073 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.852706626 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.854865072 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.853410981 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.853791892 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.854340888 seconds)
  done (took 116.599200378 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.853109642 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.852430997 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.850877338 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.851362822 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.854967666 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.852017627 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.853141956 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.852789461 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.854221035 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.854126218 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.853371495 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.851599595 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.851698032 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.853703564 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.851503154 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.850913389 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.849878969 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.851376719 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.855041228 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.851577139 seconds)
  done (took 38.835758975 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.851838682 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.853086454 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.851413709 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.851191537 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.853437849 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.851466846 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.856316643 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.856015095 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.852178647 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.854353275 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.855956628 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.855724602 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.852869065 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.852088263 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.854947119 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.851768802 seconds)
  done (took 31.440702439 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.851615963 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.853238053 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.854573932 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.855965011 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.852274976 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.852534492 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.854199776 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.853298757 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.853891593 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.856470315 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.856374689 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.855300358 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.854838905 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.857420657 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.854195923 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.856934995 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.853200219 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.85500733 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.855102798 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.857597899 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.854998818 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.853268128 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.857147327 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.856154947 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.85422946 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.854177993 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.853574199 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.853018871 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.853116599 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.857450218 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.855154455 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.854366021 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.853543374 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.855592486 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.857775326 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.85410864 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.857141047 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.855980004 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.85713914 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.856462714 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.856304506 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.854797176 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.857343608 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.857211186 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.854255827 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.856897867 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.85435131 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.855050619 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.854444756 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.854407305 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.859241457 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.856238627 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.857189245 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.858212139 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.857456404 seconds)
  done (took 103.829529714 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.859099978 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.857318965 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.856597705 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.857136145 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.85742001 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.856937013 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.857945782 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.855697529 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.857753634 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.858858815 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.857973603 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.85872028 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.855885606 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.859901626 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.858574345 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.860082061 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.8574691 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.857233857 seconds)
  done (took 35.230075664 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.856318748 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.856440343 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.860086415 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.857353133 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.857799087 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.860035875 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.857364379 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.859138238 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.859607884 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.858303976 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.856125765 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.858894534 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.85911262 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.861204535 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.85684468 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.85640781 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.860673446 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.859868352 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.857417263 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.857538049 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.86080489 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.861448492 seconds)
  done (took 42.679097357 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.86243503 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.863655176 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.879491995 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.887106306 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.884648835 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.901144192 seconds)
  done (took 13.068722488 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858127598 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861529792 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.85857879 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861799081 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861862695 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858189799 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858181793 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859121378 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860862011 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858876204 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859487014 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863511314 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86016735 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858291117 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85935878 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862072455 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859417905 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858839527 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860001826 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.861678826 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858124176 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862220333 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860783616 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859546107 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858492528 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85941673 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861091122 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859617216 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859651818 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860935677 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862251321 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860606435 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861667494 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860525153 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862723691 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.861865545 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858069466 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860364557 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863085186 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858548639 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.860798664 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860519163 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86128467 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859848731 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860129969 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859025393 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858664838 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858435017 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858288374 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861701713 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861757501 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858367035 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860996382 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861665429 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864170811 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86242106 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859744456 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859110731 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861245007 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860040897 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859180125 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861845373 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858036103 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858918726 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862085874 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862798865 seconds)
  done (took 124.574032398 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854035288 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.855491578 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855518862 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858633842 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853796288 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854587811 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854703804 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854630248 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853150714 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856560527 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855017744 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852724969 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853403108 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853032745 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856848056 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851492696 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852269227 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852886822 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852460708 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855520923 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85312448 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85109737 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851955967 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850985963 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852602719 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855661863 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852275654 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851420081 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850562753 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852208119 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852738472 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8511113 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853039111 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.851854564 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853061082 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852899091 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853264088 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853062737 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852764194 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855056111 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853039195 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855248673 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851879358 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85278565 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85184384 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853067886 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853047197 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852621019 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853132177 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85323572 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852988001 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85433477 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854489477 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852710345 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853524426 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85211031 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851769658 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853971597 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853241611 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856367051 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854084739 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853432609 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856886052 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85386131 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853701812 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854303781 seconds)
  done (took 124.119575065 seconds)
done (took 2543.35893245 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.878778576 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.911411585 seconds)
  done (took 15.576882072 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.0263945 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.975901145 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.861563358 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.88700174 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.858132256 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.875489658 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.856856343 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.857290554 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.857929052 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.858846114 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.861279269 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.045764869 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.859966848 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.857648055 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.85864988 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.951433678 seconds)
  done (took 52.142980099 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.862331398 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.863214692 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.872696529 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.8645347 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.862065292 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.872740138 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.894154933 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.867059007 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.896513259 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.873899521 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.9279896 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.871765998 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.858336886 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.902734916 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.869870391 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.872494163 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.946360567 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.933233059 seconds)
  done (took 35.699137189 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.933039805 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.867510453 seconds)
  done (took 10.590275691 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.883353874 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.873578768 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.86892019 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.872633843 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.847206828 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.887030526 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.857130468 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.856406052 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.859660604 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.884968306 seconds)
  done (took 70.476477436 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.859710364 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.855761738 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.854825541 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.854858756 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.848067489 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.851226878 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.855195335 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.852022515 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.545650658 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.888383804 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.861236728 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.86167281 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.855824012 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.857182899 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.84901212 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.878485381 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.995323 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.848540592 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.849844603 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.860468114 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.855711605 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.906462635 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.869210544 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.851559133 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.88359625 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.548357009 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.861396387 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.858953829 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.957547923 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.845032217 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.849850271 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.850317066 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.855244772 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.233755762 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.180746407 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.847976276 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.856902909 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.857121656 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.843602404 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.975111629 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.851590103 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.855161427 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.84194307 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.176362491 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.948672083 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.890754567 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.226848655 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.850816098 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.849787282 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.877140012 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.850790402 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.84960799 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.860849647 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.362289354 seconds)
  done (took 131.850079289 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.840549371 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.127870906 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.99284813 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.839023847 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.111981404 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.045822543 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.839901995 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.885992152 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.842264518 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.043394973 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.00151949 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.948648071 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.839776253 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.837800066 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.83670981 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.835845247 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.999832432 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.908524833 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.839261125 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.834441659 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.864445972 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.047317655 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.961068185 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.840488859 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.85855691 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.050894637 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.959192055 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.943452366 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.119380724 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.83816681 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.902055311 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.836008202 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.834880962 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.832795441 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.994140989 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.933217202 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.924987229 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.835154685 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.832197558 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.832884474 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.494791876 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.03138469 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.936369674 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.979838542 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.987366414 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.040866998 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.480363678 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.833888736 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.474313968 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.998677698 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.04882619 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.044189264 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.957918415 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.835714425 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.996813522 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.833520742 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.830431023 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.070798748 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.979610895 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.93731336 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.838074245 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.832635434 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.830621112 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.076853066 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.833462107 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.929663224 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.833529718 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.831458246 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.930999245 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.938237321 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.975667079 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.044856852 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.865802905 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.555445217 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.043228185 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.044346637 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.8993896 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.066266855 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.830860376 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.826544246 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.918129341 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.579575628 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.990011522 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.080203179 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.049815686 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.865720704 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.435269947 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.82779762 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.023928485 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.017049266 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.026877709 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.978441825 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.98256786 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.967967222 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.832547641 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.827908037 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.029144153 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.965222999 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.833865371 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.1934726 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.066815746 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.411167994 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.854135533 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.128588008 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.96631413 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.143674092 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.455564752 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.831953836 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.999204636 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.870801456 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.834764186 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.830270093 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.021825473 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.640593506 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.831621598 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.553379574 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.895876989 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.832691309 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.037807034 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.832320144 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.041992391 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.833127275 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.06890961 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.864774818 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.865697798 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.004477462 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.984083619 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.625162807 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.080194425 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.080302358 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.953770355 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.102662337 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.568504969 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.831604026 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.109967125 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.834822862 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.831397579 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.999265155 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.833616214 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.980387201 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.835776029 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.060818976 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.859858403 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.98814163 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.839840794 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.068183339 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.870238609 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.886555411 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.836298075 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.955854064 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.835231106 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.71123235 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.990714029 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.836061085 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.830839079 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.235138678 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.833329242 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.980034489 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.069353461 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.860307069 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.903027968 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.364918851 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.83283724 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.920907639 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.861847689 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.573705871 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.833405787 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.992065842 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.782987953 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.274100529 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.834780662 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.075125807 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.068579386 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.838709501 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.834340072 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.578403559 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.539631638 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.834169698 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.994142595 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.055225778 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.482704485 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.038932565 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.838697989 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.964620618 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.842395678 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.908351165 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.187681225 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.834395669 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.833768488 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.83635976 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.835834246 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.835303678 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.043771864 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.869960647 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.332649007 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.972832678 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.0527897 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.150404462 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.057122401 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.880098021 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.836489404 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.081163104 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.837184438 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.900555281 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.837180746 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.863515896 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.06966371 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.839251511 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.049336241 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.09094027 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.775637045 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.885784929 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.841834894 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.835347434 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.836498253 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.987603655 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.92987259 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.838679836 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.837636087 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.94746307 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.960165312 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.029089786 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.429901006 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.917243934 seconds)
  done (took 889.893625301 seconds)
done (took 1208.015174128 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.83851792 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.837031356 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.818369459 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.835679783 seconds)
  done (took 29.101304818 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.841929594 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.843264315 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.843441023 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.841591471 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.84288883 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.843327489 seconds)
  done (took 12.828631382 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.89224105 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.835187971 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.837800471 seconds)
  done (took 21.337656365 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.914292122 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.246126239 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.94657258 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.281904802 seconds)
  done (took 10.161121766 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.841737281 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.841529855 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.842992927 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.844691527 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.848170542 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.848721246 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.844795283 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.844058377 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.847161066 seconds)
  done (took 18.379629278 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.262246587 seconds)
done (took 97.841371401 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.001037188 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.229959593 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.184468522 seconds)
    (4/309) benchmarking ("sort", BigInt, false)...
    done (took 6.84881078 seconds)
    (5/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.829641703 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.997744271 seconds)
    (7/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.43220201 seconds)
    (8/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.941366573 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.883563108 seconds)
    (10/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.845256848 seconds)
    (11/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.844902182 seconds)
    (12/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.930896464 seconds)
    (13/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.97407224 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.872468198 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.945120907 seconds)
    (16/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.860106833 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.181112059 seconds)
    (18/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.311796716 seconds)
    (19/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.391280594 seconds)
    (20/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.233541177 seconds)
    (21/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.239997642 seconds)
    (22/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.339889361 seconds)
    (23/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.896890075 seconds)
    (24/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.286311845 seconds)
    (25/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.211915658 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.743979166 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.519748993 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.140893087 seconds)
    (29/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.761216503 seconds)
    (30/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.54733509 seconds)
    (31/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.030221663 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.975993866 seconds)
    (33/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.871890663 seconds)
    (34/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.682773094 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.826233843 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.102196926 seconds)
    (37/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.935342401 seconds)
    (38/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.933765641 seconds)
    (39/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.976864235 seconds)
    (40/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.853599599 seconds)
    (41/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.878163371 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.812929514 seconds)
    (43/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.989800276 seconds)
    (44/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.04062862 seconds)
    (45/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.069801645 seconds)
    (46/309) benchmarking ("sort", Float64, false)...
    done (took 5.666863477 seconds)
    (47/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.253689377 seconds)
    (48/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.832174827 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.963322668 seconds)
    (50/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.830667449 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.190872771 seconds)
    (52/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.981841838 seconds)
    (53/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.876461291 seconds)
    (54/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.049641259 seconds)
    (55/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.15627302 seconds)
    (56/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.830547776 seconds)
    (57/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 3.328578694 seconds)
    (58/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.3932157 seconds)
    (59/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.945973333 seconds)
    (60/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.915186806 seconds)
    (61/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.976489762 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.904872852 seconds)
    (63/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.872633948 seconds)
    (64/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.351918394 seconds)
    (65/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.973601249 seconds)
    (66/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.138151606 seconds)
    (67/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.952464928 seconds)
    (68/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.925028036 seconds)
    (69/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.849991544 seconds)
    (70/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.918899746 seconds)
    (71/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.922374423 seconds)
    (72/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.69191758 seconds)
    (73/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.03596089 seconds)
    (74/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.440245425 seconds)
    (75/309) benchmarking ("sort", Int8, false)...
    done (took 5.011574382 seconds)
    (76/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.858147037 seconds)
    (77/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.984681546 seconds)
    (78/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.191912115 seconds)
    (79/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.188865542 seconds)
    (80/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.0625509 seconds)
    (81/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.872101936 seconds)
    (82/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.016972086 seconds)
    (83/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.106747764 seconds)
    (84/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.123412344 seconds)
    (85/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.046728735 seconds)
    (86/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.365719927 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 5.579085798 seconds)
    (88/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.883900527 seconds)
    (89/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.959828075 seconds)
    (90/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.191213881 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.92615609 seconds)
    (92/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.807495448 seconds)
    (93/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.005162634 seconds)
    (94/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.973653911 seconds)
    (95/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.850162843 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.70451435 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.96755244 seconds)
    (98/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.111860674 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.228878144 seconds)
    (100/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.953708928 seconds)
    (101/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.834589043 seconds)
    (102/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.49502344 seconds)
    (103/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.876180566 seconds)
    (104/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.534548455 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.855692621 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.229195852 seconds)
    (107/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.151827621 seconds)
    (108/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.85512115 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.061810856 seconds)
    (110/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.831998567 seconds)
    (111/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.457035141 seconds)
    (112/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.851283448 seconds)
    (113/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.061374323 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.853517585 seconds)
    (115/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.916480713 seconds)
    (116/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.966244406 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.85572025 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.855231083 seconds)
    (119/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.917837245 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.15345986 seconds)
    (121/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.880054541 seconds)
    (122/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.989712545 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 2.296966309 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.874663801 seconds)
    (125/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.834576112 seconds)
    (126/309) benchmarking ("sort", BigFloat, false)...
    done (took 8.362702329 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.106546943 seconds)
    (128/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.851205564 seconds)
    (129/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.986752174 seconds)
    (130/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.048728106 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.182414008 seconds)
    (132/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.084616289 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.080944696 seconds)
    (134/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.335983662 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.208995749 seconds)
    (136/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.952785294 seconds)
    (137/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.834033037 seconds)
    (138/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.098676392 seconds)
    (139/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.878162695 seconds)
    (140/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.305837765 seconds)
    (141/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.852971129 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 3.778111944 seconds)
    (143/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.932987636 seconds)
    (144/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.878107257 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.896625918 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.093278456 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.658931234 seconds)
    (148/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.11362706 seconds)
    (149/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.982506095 seconds)
    (150/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.853950489 seconds)
    (151/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.55568222 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.128538335 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.080196407 seconds)
    (154/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.368460432 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.885858278 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.947662979 seconds)
    (157/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.913512863 seconds)
    (158/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.871071774 seconds)
    (159/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.198728152 seconds)
    (160/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.697752445 seconds)
    (161/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.925640639 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.839664081 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.886888907 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.873758701 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.90084369 seconds)
    (166/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.836323335 seconds)
    (167/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.139739336 seconds)
    (168/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.427164331 seconds)
    (169/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.85475218 seconds)
    (170/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.329762277 seconds)
    (171/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.186272379 seconds)
    (172/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.046783165 seconds)
    (173/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.951561457 seconds)
    (174/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.026659773 seconds)
    (175/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.956529807 seconds)
    (176/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.201569336 seconds)
    (177/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.939916266 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.854430328 seconds)
    (179/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 8.145440906 seconds)
    (180/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.52891994 seconds)
    (181/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.155539093 seconds)
    (182/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.996212795 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.856241644 seconds)
    (184/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.021032166 seconds)
    (185/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.196990547 seconds)
    (186/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.549316247 seconds)
    (187/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.952621563 seconds)
    (188/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.939017394 seconds)
    (189/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.854350744 seconds)
    (190/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.228769719 seconds)
    (191/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.856671094 seconds)
    (192/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 3.616321134 seconds)
    (193/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.92312675 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.879478599 seconds)
    (195/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.206709681 seconds)
    (196/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.854275032 seconds)
    (197/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.051360627 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.902406801 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.513055949 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.860402873 seconds)
    (201/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.047700407 seconds)
    (202/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.045772845 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.551165575 seconds)
    (204/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.150068693 seconds)
    (205/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.998334987 seconds)
    (206/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.881362998 seconds)
    (207/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.838759819 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 3.281242492 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.2521692 seconds)
    (210/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.368738409 seconds)
    (211/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.81427971 seconds)
    (212/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.159630653 seconds)
    (213/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.937578082 seconds)
    (214/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.840178845 seconds)
    (215/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.001228696 seconds)
    (216/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.084158587 seconds)
    (217/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.986555814 seconds)
    (218/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.455379252 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.647819681 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.054489459 seconds)
    (221/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.881220773 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.613730931 seconds)
    (223/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.043202932 seconds)
    (224/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.858952665 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.921057644 seconds)
    (226/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.078540868 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.884660494 seconds)
    (228/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.342145345 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.956178372 seconds)
    (230/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.237553031 seconds)
    (231/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.069071075 seconds)
    (232/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.875300703 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.897283148 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.24891995 seconds)
    (235/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.983119467 seconds)
    (236/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.795986327 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.266734562 seconds)
    (238/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.961029817 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.891532863 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.517732803 seconds)
    (241/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.834803789 seconds)
    (242/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.887680546 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.103929968 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.788913225 seconds)
    (245/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.751939767 seconds)
    (246/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.91671697 seconds)
    (247/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.841818782 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 3.723321878 seconds)
    (249/309) benchmarking ("sort", Float32, false)...
    done (took 5.628505296 seconds)
    (250/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.550484638 seconds)
    (251/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.000317109 seconds)
    (252/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.752805316 seconds)
    (253/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.869477668 seconds)
    (254/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.044274855 seconds)
    (255/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.957121444 seconds)
    (256/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.384252001 seconds)
    (257/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.248769315 seconds)
    (258/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.966760891 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.957570008 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.456695984 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.930448448 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.883282622 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.959879386 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.504546049 seconds)
    (265/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.137484612 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.246058826 seconds)
    (267/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.982339724 seconds)
    (268/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.84249508 seconds)
    (269/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.780086721 seconds)
    (270/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.094109503 seconds)
    (271/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.196577034 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.846229107 seconds)
    (273/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.322844835 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.292205843 seconds)
    (275/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.009376794 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.883445525 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.92925663 seconds)
    (278/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.885697949 seconds)
    (279/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.1643532 seconds)
    (280/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.886979343 seconds)
    (281/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.7096156 seconds)
    (282/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.975473949 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.057942648 seconds)
    (284/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.233836569 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.950585207 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.757531904 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.016459231 seconds)
    (288/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.87525066 seconds)
    (289/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.86815715 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.63900498 seconds)
    (291/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.335772796 seconds)
    (292/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.279690403 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.185205754 seconds)
    (294/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.032079802 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.904379962 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.908797663 seconds)
    (297/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.459144964 seconds)
    (298/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.007833535 seconds)
    (299/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.338486828 seconds)
    (300/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.157617619 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.033027252 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.785564294 seconds)
    (303/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.351517036 seconds)
    (304/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.867150856 seconds)
    (305/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.18956512 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.882519293 seconds)
    (307/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.159880853 seconds)
    (308/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.263260344 seconds)
    (309/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.157722402 seconds)
  done (took 1011.670619715 seconds)
done (took 1013.713660049 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.898250529 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.891200465 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.874400797 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.896309447 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.985758228 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.908147555 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.886006886 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.878688081 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.923027832 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.925297898 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.874596935 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.906429069 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.876496093 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.876771843 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.87521361 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.889036505 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.18164467 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.902828263 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.892975592 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.886112193 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.892133915 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.875178818 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.926596699 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.908669483 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.880155475 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.879261411 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.879578013 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.896929219 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.987400225 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.878586408 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.880322695 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.887493542 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.181495356 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.901650526 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.87021129 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.895787143 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.887802836 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.887196831 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.882157693 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.907470601 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.327021879 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.881128258 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.87776436 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.877064787 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.877823201 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.882687861 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.879289128 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.884986963 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.891684025 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.891560131 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.320603698 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.89720057 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.881182848 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.877626896 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.887241466 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.87905377 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.881556632 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.892560025 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.897549091 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.893233478 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.173849749 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.906763988 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.88061285 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.893317873 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.885050712 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.356518718 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.87893414 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.880508375 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.323788685 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.889189467 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.359085602 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.890581696 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.881597773 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.893114502 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.91072737 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.18290295 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.899073333 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.87858981 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.886444723 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.877214908 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.890171473 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.890652409 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.883916862 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.878945007 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.8928482 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.91402499 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.88844265 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.879341699 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.888059337 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.896868881 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.886696238 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.890666768 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.882430077 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.87498116 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.88931713 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.88316113 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.882679386 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.882640573 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.885952706 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.890492529 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.324900488 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.898754014 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.876353761 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.877425592 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.878475114 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.895373305 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.324828156 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.884683757 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.902230766 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.928768042 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.881652975 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.174337377 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.908350856 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.895368382 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.892018795 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.884547529 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.875678626 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.174943011 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.347636191 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.899760241 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.883310934 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.879505371 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.897356546 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.883349781 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.877357059 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.186659126 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.909150115 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.893723234 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.001191288 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.890967705 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.91263735 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.877764025 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.884201847 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.915101475 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.896453808 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.913104168 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.885953702 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.896492504 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.896917585 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.877894617 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.892788556 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.893893168 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.882858789 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.888094958 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.876169804 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.916255859 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.89718104 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.895183676 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.904957842 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.003376735 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.879812726 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.17683952 seconds)
done (took 295.375365071 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.950428806 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.875909175 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.979635398 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.877248468 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.962640402 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.964664355 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.873405468 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.874393295 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.874466773 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.258697245 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.874315667 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.875391014 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.876800483 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.875351371 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.961881655 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.876795443 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.873600057 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.221764207 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.876516349 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.952990094 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.876185637 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.876073558 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.878809402 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.260305565 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.876735381 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.877516038 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.953330353 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.8791189 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.225341923 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.875502679 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.873017919 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.226754032 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.969216071 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.897473275 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.887477424 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.884591851 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.967559526 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.882492738 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.961461254 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.961748955 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.982742862 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.9195496 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.877125952 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.872889652 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.881618787 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.879848556 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.876893945 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.906736703 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.877500649 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.876188047 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.224034346 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.887846878 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.877638871 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.876269406 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.878683323 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.908290907 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.876883047 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.87998022 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.97250966 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.879463942 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.948026658 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.264402133 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.26045838 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.879507946 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.879917916 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.876871212 seconds)
  done (took 184.975108846 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.947395406 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.957036914 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.949060403 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.885018435 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.932305295 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.954777756 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.884800572 seconds)
  done (took 15.315925971 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.887742986 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.880065063 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.933065025 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.933485137 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.880541801 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.034693311 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.882437775 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.895719146 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.310225249 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.935733986 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.880110189 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.88213643 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.887614843 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.881811274 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.932381406 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.895005466 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.999333986 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.885641759 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.880297646 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.036006781 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.879500461 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.888920376 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.944975692 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.895989508 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.879961027 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.890118919 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.467348118 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.880920899 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.877293914 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.882150944 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.879534483 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.929362915 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.882827227 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.878002444 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.881766051 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.000938101 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.881639086 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.878964776 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.883023509 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.887020323 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.88221724 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.883126791 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.882788623 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.8801203 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.882408325 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.909110915 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.881498507 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.883155013 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.882532987 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.88280158 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.933979121 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.884200109 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.882961711 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.881164873 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.940941704 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.889454665 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.883607035 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.883313401 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.883120112 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.88043356 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.035622891 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.933871267 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.882007221 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.93340715 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.883479278 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.882981953 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.883304213 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.884081601 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.942314605 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.88421399 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.934360217 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.879850485 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.046006303 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.911620227 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.885450793 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.887720732 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.88937467 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.884685093 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.883431761 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.891780475 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.882491551 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.889062704 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.890979719 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.882407756 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.88131051 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.998873528 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.996225555 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.881551009 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.89859339 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.893199765 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.883227974 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.941025672 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.885649856 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.882656073 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.938410834 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.003423954 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.950575795 seconds)
  done (took 207.627976666 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.893152744 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.894833411 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.887672426 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.904111664 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.887428245 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.886745902 seconds)
  done (took 13.166422427 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.890091864 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.885023325 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.885096812 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.885091311 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.883638365 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.885371936 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.886438101 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.888364354 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.889562014 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.885635883 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.884055183 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.886896914 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.884952139 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.886459226 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.885398023 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.885185694 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.884009049 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.884122386 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.886937656 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.884540073 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.033378706 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.885290841 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.886848782 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.890253954 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.888947429 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.886432327 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.89559643 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.886996252 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.887835968 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.893961467 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.888143321 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.884810902 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.88952027 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.894247287 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.891217994 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.890167373 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.890796152 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.889141453 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.882460644 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.886692883 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.887517582 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.886351875 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.886196679 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.8882762 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.891192395 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.892901311 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.893291115 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.896968416 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.88714162 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.889921535 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.890056591 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.887507829 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.886301571 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.889640116 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.890842447 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.895054634 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.892645258 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.889277236 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.888108823 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.891481184 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.893882528 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.887942868 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.891217415 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.894390923 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.895844265 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.891830861 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.891359039 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.892056123 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.888552235 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.887504165 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.890687038 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.88655022 seconds)
  done (took 138.946807397 seconds)
done (took 561.853110322 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.162498581 seconds)
  done (took 8.97756268 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.935750233 seconds)
  done (took 8.846453214 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.459325651 seconds)
  done (took 10.273473519 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.894207341 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.89455952 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.892005822 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.884936806 seconds)
  done (took 29.39187638 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.949778278 seconds)
  done (took 8.766082322 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.894362748 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.877059231 seconds)
  done (took 15.619205918 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.943753828 seconds)
  done (took 8.760140497 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.980466784 seconds)
  done (took 8.824792502 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.892758442 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.895664717 seconds)
  done (took 15.616796213 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.86514723 seconds)
  done (took 8.680260468 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.482788075 seconds)
  done (took 11.307444126 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.891787323 seconds)
  done (took 8.720019769 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.90017978 seconds)
  done (took 8.71537532 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.965813443 seconds)
  done (took 9.782550791 seconds)
done (took 164.095669254 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.886064832 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.883864018 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.884205652 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.881345131 seconds)
  done (took 29.349667686 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.921054115 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.921458788 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.924557803 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.930827216 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.923431627 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.919838049 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.914631986 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.913473162 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.932231221 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.924474248 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.924388417 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.924020107 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.921443017 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.913422968 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.922631561 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.924486821 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.932770726 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.922191946 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.915492365 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.924806111 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.889696555 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.932543888 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.925453186 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.890206706 seconds)
  done (took 47.905526173 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.089900102 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.964040254 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.045072225 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.943552271 seconds)
  done (took 9.859332418 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.940619643 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.941910104 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.953617666 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.992662578 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.01841017 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.952262961 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.911108371 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.911998487 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.897493047 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.944207336 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.019288706 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.958413849 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.029756562 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.889516057 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.073448806 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.890169017 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.889920044 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.941626903 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.993671516 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.010995215 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.889958318 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.942969645 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.94597276 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.956850745 seconds)
  done (took 48.71437685 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.889537004 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.896389246 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.894603955 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.889817178 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.890607824 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.889099239 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.896902714 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.892351823 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.911935503 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.89027635 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.888389682 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.888559276 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.88902832 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.890103814 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.890269221 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.902476276 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.903485973 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.890141168 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.892867956 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.896194106 seconds)
  done (took 39.69204065 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.887013836 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.741274931 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.241617029 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.143075699 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.888102951 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.887693664 seconds)
  done (took 31.606149323 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.906695598 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.898809512 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.894134245 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.948683086 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.031599256 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.901109744 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.894570379 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.904081263 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.9375571 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.95852767 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.912279722 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.920435723 seconds)
  done (took 24.929497635 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.890283012 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.88783043 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.901273794 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.904904351 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.904737396 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.901028909 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.901795968 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.887215759 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.906027498 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.912361009 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.901788112 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.906823564 seconds)
  done (took 44.62879636 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99110773 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.937269102 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.905246536 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.569612914 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.266164484 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.097359942 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.495067778 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.222851039 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.891273835 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.161548287 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.857959549 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003704042 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.142790607 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.405846926 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.918937071 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.349131298 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.178472141 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.094413101 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.910500656 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.545041849 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948289958 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.088465869 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.650534684 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.940810339 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.099999902 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.016941439 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.148659384 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.887433975 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020412846 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920945874 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899370433 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.888310553 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.162718958 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.261202797 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990009319 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898457776 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.512217262 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.601490714 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.880931277 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.64118616 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.575724553 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.003160567 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899089635 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88953794 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.82467349 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.07023419 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266200223 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.895557522 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.601179191 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.887872961 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90059948 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98464048 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.894194431 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.71041862 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803997534 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.890902661 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.886797868 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898813893 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.458168673 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.979289196 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.089231507 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.86451403 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.986174559 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.552438326 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.268715419 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.034608438 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.89470287 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.892771956 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824301056 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.625924457 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.942257631 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.240389742 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.911135297 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.541398013 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18881933 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.9031581 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.832422107 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15719458 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.441745856 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.864295259 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.1185403 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.890734634 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827722316 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.837514396 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.825663737 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.169057812 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924820141 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.650104673 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931503197 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.232438158 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.903338875 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912628967 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915044041 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.116233941 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.802824892 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891315036 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.644498977 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.092701343 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913026898 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.222395375 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827132932 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.89576639 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149881029 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.103743522 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.985836607 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.391770383 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045099989 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.484762034 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.945457329 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.066944987 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.940827329 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.158224935 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945443953 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.970790736 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941459656 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.892480251 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.18555666 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.507230096 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.030332679 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.963062671 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.019826927 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.205454951 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916911005 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976055212 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.89671468 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.892602318 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.648589262 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.441724394 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.893844043 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.894573834 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.991115807 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.943002379 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.893862228 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843862122 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.518302202 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.86853943 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.908443889 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.118504825 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.506413016 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.206417065 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829323174 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.225194673 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.950040831 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.117250909 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.570360469 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.96099266 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.155982151 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.985917571 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.032226166 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943478743 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913810593 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993372146 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917555222 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.059081282 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.188525863 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.898168448 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.899216526 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.657283798 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.926485584 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898017924 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.900769971 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.65268151 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.168734478 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.91589186 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.901574985 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.786192751 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.909090922 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961044394 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.902185504 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.906447157 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.438028205 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.609771885 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.90283406 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.486180245 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.120833525 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908707321 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.613557829 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.008333774 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.979279028 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.171908394 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.951736385 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.832457478 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.607607399 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.589948074 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897665788 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.832283164 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.896225436 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906612187 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907431927 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.096368359 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.167078081 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.933853798 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.564996742 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.937103259 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908637562 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.902148431 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897308118 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.412129713 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.994777881 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.107275831 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.943637757 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040639573 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.912197503 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.832342568 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.902226282 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.903451827 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.898481098 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.898421997 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930526823 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.560270033 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274854983 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.158240219 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.555135299 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.910689276 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.61027892 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.95153527 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.8985239 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.673207655 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.092183491 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.931713478 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91879272 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.909982491 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.643641268 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.604526032 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.465216826 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2003147 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.200217762 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335134334 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.136219636 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.927779943 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.237242123 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.833501232 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.457897012 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.959402494 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.245984194 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.844800223 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984541456 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.54184991 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.232787911 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913605095 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127681294 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.291945842 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.57214914 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.034762312 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.112541384 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935793574 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.160348237 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.862065171 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.422668765 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041396131 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.562461598 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.096733985 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253249842 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.538969056 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.01715727 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.90321764 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.576015717 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98244425 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.618334224 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.073915425 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.101047004 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.782008295 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370076884 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.908475093 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.127444654 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246095268 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.071630452 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.025214601 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837278121 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.913382695 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.913646475 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.90170731 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.901909183 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.777566595 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.156303661 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912981746 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.83677462 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.029466659 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.18827504 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.799256642 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.908295024 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903674532 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.210152842 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.46476179 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065144524 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.013578444 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.42747427 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.912310084 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.839269175 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837813957 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.596967924 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.911099474 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.882415756 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.10706726 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.008445956 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.818986247 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.006327535 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.150367264 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.160185678 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.917648915 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.175712605 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.174463663 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.603321562 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927533565 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.00418816 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.524877272 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.003259711 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.903820585 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.141768351 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.668670738 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.130662686 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.932802199 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.810623181 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.906478285 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.118254248 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.904897511 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.750494268 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132344732 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.624074208 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.91645654 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.210637992 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971486926 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.812020683 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.941547948 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.000651832 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919366436 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983386138 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915917065 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.915988886 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.915775773 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951444823 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.816520478 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.018412855 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.920117234 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000495216 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.992800473 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.429610115 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.910603906 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181616584 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253956344 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.221823288 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.961370557 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.907651 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907271717 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84142662 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053514262 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.13323051 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180035523 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.03504904 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.027207937 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931488223 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.527080132 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.120761928 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145971424 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182069039 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.801603792 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.440686436 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.946889343 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.906508501 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918693732 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.117876656 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.115579665 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209439461 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.051259465 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.005623266 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.265876237 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.181754885 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.908868112 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.907036978 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.498071549 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.915186188 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.681459882 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.945787108 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.752234024 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17346423 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.919107919 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.27509462 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.927000899 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.066668732 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.681100233 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.580154842 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.195004233 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.887587081 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.958826194 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.183029868 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.295448935 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.21666109 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975037751 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.919877565 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.013725871 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056537846 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.787577011 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.90869376 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.910151802 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.956357648 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.620388523 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.91965992 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.180108847 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.214744359 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.907340287 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.802815703 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934035879 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.918286729 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.135165333 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.178119398 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.159162237 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919343923 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.918093027 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.726673218 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.182539938 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.963647827 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845281314 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.913378028 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00524481 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.155403625 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.931940927 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.363272893 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.621260112 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.178447978 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.907223765 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932539944 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.099700022 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.275830152 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.222510932 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.447192416 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.115410886 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.502781129 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.515727515 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210799692 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.917207186 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.090227383 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.213512254 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.914706769 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.011428215 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949451154 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.181774067 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.217536418 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.915482551 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.680734081 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.877353668 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.254583997 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.479582194 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852527249 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.919556907 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.972222228 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.91180812 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.043185151 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923450901 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.804971283 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.099098065 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.671573657 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.186568114 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.918197087 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.90443423 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.56652268 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.216917788 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949229246 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056744854 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920005059 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.586740976 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.261626371 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.169614323 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.01479318 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.920306442 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.916563741 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.9130095 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.9019426 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.109345751 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.112861953 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185624623 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.036755897 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.951112596 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.916536637 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.130115347 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.124654322 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.803033394 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.041322279 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.011278244 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.955218389 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.818961651 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.421682263 seconds)
  done (took 1688.670201084 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.947711022 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.935174741 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.999026812 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.994659495 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.950837756 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.011172086 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.98741933 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.922889553 seconds)
  done (took 57.596883049 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.917604979 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.107894353 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.925405866 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.918041261 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.92624546 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.917047917 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.08245733 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.92720426 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.926235147 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.927777739 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.919481597 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.917259808 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.225738243 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.940673305 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.918800566 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.90450597 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.925313536 seconds)
  done (took 75.192919495 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.960152313 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.995786768 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.946356599 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.923187194 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.920932286 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.916909872 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.874768717 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.948153069 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.919790435 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.150102135 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.552463992 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.934120318 seconds)
  done (took 90.892406811 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.930385074 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.926264834 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.925713517 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.925745659 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.925315364 seconds)
  done (took 11.486993785 seconds)
done (took 2202.364541074 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.174399483 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.133238314 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.161471926 seconds)
  done (took 6.143865503 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.074767873 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.119755407 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.240817274 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.274995598 seconds)
  done (took 10.566685293 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.213975662 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.31075815 seconds)
  done (took 6.378024377 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.320235202 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.928514265 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.30169458 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.920757418 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.918285153 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.918714151 seconds)
  done (took 22.616215786 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.925098787 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.92679087 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.925244981 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.928022463 seconds)
  done (took 9.558687683 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.907132781 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.5979708 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.906483461 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.920757218 seconds)
  done (took 21.185971251 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.675245996 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.683629163 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.668774969 seconds)
  done (took 9.883025681 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.386256176 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.811200573 seconds)
  done (took 9.053386287 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.183957032 seconds)
  done (took 4.038691526 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.057094052 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.239085223 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.474093218 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.434015887 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.548384579 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.618059796 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.246503559 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.173777696 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.330142901 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.36272297 seconds)
  done (took 25.338501069 seconds)
done (took 140.335286208 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.312495793 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.924599197 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.130385292 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.268640549 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.207680385 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.130211511 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.137842118 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.253812997 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.7791855 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.773377601 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.267500246 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.172203023 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.088837056 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.174942465 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.088438288 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.167922792 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.149510345 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.332678648 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.968472458 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.164147594 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.137980356 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.90545101 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.110274608 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.921614688 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.248494807 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.08054421 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.486353693 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.1689656 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.119627882 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.496001137 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.083041296 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.317121352 seconds)
  done (took 173.425075932 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.694492914 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.928648025 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.931050558 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.928862442 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.319040179 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.934872432 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.930059437 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.929259361 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.235508049 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.215738529 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.943917011 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.344393321 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.946980833 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.929631878 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.935402548 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.928488455 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.325493948 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.789050427 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.945207122 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.946215902 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.951172994 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.230642562 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.946187285 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.269862684 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.333737285 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.947242733 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.929293067 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.947004209 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.930565722 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.940086109 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.945353307 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.929309721 seconds)
  done (took 210.243066363 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.93046093 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.929950399 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.928639535 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.930494786 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.93338184 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.932715358 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.932217524 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.930645821 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.509803719 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.49854982 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.940043764 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.938478652 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.936203635 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.928412035 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.937996057 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.927303721 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.940337847 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.939866388 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.936971202 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.938758442 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.942613521 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.643264209 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.94283602 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.643986742 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.938151892 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.938412883 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.930736135 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.939051472 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.939551283 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.939502507 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.939384746 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.932302109 seconds)
  done (took 222.367471568 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.134300752 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.936051786 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.937320308 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.891053832 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.937039176 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.937384831 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.929680771 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.134969817 seconds)
  done (took 19.714578692 seconds)
done (took 627.615237367 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.397598132 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.229240258 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.106027362 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.958459683 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.202362653 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.994336597 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.955752765 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.015723665 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.685492755 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.019840844 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.593280584 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.975159464 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.686394002 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.977309085 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.082730365 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.009448288 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.525471583 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.610319498 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.134048329 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.027471037 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.120778969 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.916892432 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.02857973 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.699715328 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.705626611 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.961737234 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.124408873 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.525495137 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.96657041 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.124402403 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.721448179 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.335491712 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.967540401 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.955815868 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.008141964 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.991134873 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.288140962 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.965282055 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.078955236 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.727895897 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.015621175 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.569680177 seconds)
  done (took 105.847906525 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.928957909 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.925961071 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.925480831 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.927538723 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.927564873 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.925741526 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.925744182 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.925154755 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.926979363 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.926517723 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.92465608 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.928716125 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.926273583 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.92684865 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.925667283 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.924791453 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.927352581 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.92874024 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.926120776 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.925730333 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.925822068 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.925714316 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.92752569 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.925409926 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.92748698 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.926055129 seconds)
  done (took 51.962059233 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.940962405 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.088203622 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.164466821 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.958640051 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.941734633 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.946000862 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.960592187 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.945265156 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.945234763 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.945048752 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.033828156 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.945551406 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.961108971 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.16426112 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.957280495 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.942474086 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.941066558 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.942614265 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.092300381 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.957720549 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.962861233 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.94638563 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.962520273 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.955567634 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.945925827 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.945163509 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.946754401 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.416304579 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.952752107 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.033660735 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.984971119 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.962678981 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.389032685 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.174267836 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.995017049 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.945470997 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.939283026 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.038418284 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.949206775 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.944415474 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.960782741 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.94915053 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.174865707 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.439961931 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.954863007 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.941110144 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.425778454 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.043991197 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.983059257 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.95389647 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.17033 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.959305113 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.942212364 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.946248023 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.982407424 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.955303867 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.9460993 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.312450828 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.955004963 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.965033176 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.945174302 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.94723771 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.102130442 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.952905302 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.09266974 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.954382714 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.95432827 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.948316328 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.168734266 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.958680222 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.442303361 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.955387062 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.943633275 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.035642672 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.091437224 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.44888647 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.956919582 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.106881865 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.398815205 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.967108466 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.952210234 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.407834069 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.970655844 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.952187345 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.94516269 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.944117955 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.942516293 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.986032568 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.962883443 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.379108168 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.44679621 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.322983426 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.971177768 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.960755306 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.947266707 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.314541211 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.949568139 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.943000046 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.163652287 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.457854437 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.960076445 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.958302481 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.433613843 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.961547569 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.967580857 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.956515155 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.1753525 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.961163282 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.987198064 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.944374852 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.956220481 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.952525104 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.968820908 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.955368591 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.944307645 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.423703461 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.053866599 seconds)
  done (took 240.848681782 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.941882025 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.940469687 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.941297522 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.942870117 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.942717709 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.947857999 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.941006964 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.942004182 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.948277509 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.943091894 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.942398742 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.942891906 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.944561898 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.942161867 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.427777661 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.950963478 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.555501223 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.944596597 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.946302894 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.944355592 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.62231697 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.952506866 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.944508559 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.951615141 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.94782579 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.947436904 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.953892536 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.980980345 seconds)
  done (took 170.14892185 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.949003903 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.133447111 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.962908275 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.98687176 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.9564548 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.946624312 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.97427914 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.970631117 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.956371586 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.946878605 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.945195143 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.012387799 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.957396723 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.079745312 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.982395656 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.980099636 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.056264074 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.954400179 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.946246774 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.946443366 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.981159025 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.944073132 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.012266599 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.07849346 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.964853939 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.067404018 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.953767784 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.949834199 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.952487175 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.070202131 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.960899851 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.009028987 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.980603029 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.970755764 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.072699683 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.070440426 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.053823331 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.977004354 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.955994303 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.947711078 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.947873647 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.936137237 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.069084951 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.96586496 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.953815038 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.055703199 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.966955747 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.95067573 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.95777026 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.947543049 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.965922646 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.970756419 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.020302129 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.083555677 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.983891176 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.974018895 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.976487809 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.234656074 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.957262574 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.052824663 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.943114239 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.067077383 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.96955868 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.937457607 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.948647118 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.954437569 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.978219241 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.981618939 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.057720234 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.960292483 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.054072318 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.983060179 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.955563712 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.949280061 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.953160505 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.070714672 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.071816859 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.984277499 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.991162863 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.984902725 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.947158403 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.95363005 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.941029362 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.971800822 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.954846873 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.066845355 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.07089877 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.959290447 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.953696249 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.953262852 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.953657761 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.980636457 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.081178468 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.989780188 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.049751046 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.02098091 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.028896978 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.963989661 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.964640811 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.954112002 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.019190595 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.965713308 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.963765517 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.285176973 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.026943308 seconds)
  done (took 211.284837553 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.411545261 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.003353502 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.011403185 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.248726566 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.389747668 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.836173473 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.001901047 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.000466653 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.029001401 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.161746577 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.070945188 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.015010296 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.99203286 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.977961824 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.007232902 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.023945527 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.004410179 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.314212834 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.125841163 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.148665872 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.984052563 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.294246803 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.32520248 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.391248527 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.04026202 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.328566703 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.686793738 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.243793616 seconds)
  done (took 63.954953031 seconds)
done (took 845.908214636 seconds)
SAVING RESULT...
DONE!
