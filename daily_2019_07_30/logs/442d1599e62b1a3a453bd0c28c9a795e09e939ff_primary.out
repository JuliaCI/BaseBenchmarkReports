cset: moving following pidspec: 15706
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.278384488 seconds)
loading group "string"... done (took 0.65613484 seconds)
loading group "linalg"... done (took 6.853035043 seconds)
loading group "parallel"... done (took 0.157470301 seconds)
loading group "find"... done (took 1.189148794 seconds)
loading group "tuple"... done (took 1.797966177 seconds)
loading group "dates"... done (took 1.21277483 seconds)
loading group "micro"... done (took 0.227275047 seconds)
loading group "io"... done (took 0.982292178 seconds)
loading group "scalar"... done (took 38.484295701 seconds)
loading group "sparse"... done (took 11.693923373 seconds)
loading group "broadcast"... done (took 0.995197817 seconds)
loading group "union"... done (took 12.89009035 seconds)
loading group "simd"... done (took 4.679463602 seconds)
loading group "random"... done (took 9.424207739 seconds)
loading group "problem"... done (took 1.904584083 seconds)
loading group "array"... done (took 21.093053064 seconds)
loading group "misc"... done (took 1.772883725 seconds)
loading group "sort"... done (took 3.441515504 seconds)
loading group "collection"... done (took 17.538362352 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.478436912 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12145561 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113164883 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117039328 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.138796455 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113550693 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121440027 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084046438 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.788246809 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.13923224 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117050709 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.40711482 seconds)
done (took 4.900302286 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.169701921 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082363684 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082312891 seconds)
  done (took 1.281892026 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066308418 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120703894 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066707237 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067786594 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06718536 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067247878 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066976543 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.070592076 seconds)
  done (took 1.647272013 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071504256 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067585886 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067638089 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067847736 seconds)
  done (took 1.397047115 seconds)
done (took 5.689630002 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.75916003 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201044044 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.180579106 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.390490622 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.12946574 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.165598211 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.63377982 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.319992811 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.182844195 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079536676 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103355952 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.32332507 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.10817125 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.633832677 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07983431 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.09045765 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139103959 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.410950266 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066910468 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082641811 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088793945 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127136468 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.08448016 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075288008 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.142151615 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.066477025 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.128088961 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079414447 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066078855 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.205379955 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172751014 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.65649698 seconds)
  done (took 10.133441855 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095630097 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.095074802 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069361071 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.124663716 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096699471 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.06847809 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070727174 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067783334 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.088041002 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128964865 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.09025535 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.102569502 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066884523 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069471938 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085507969 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.205252879 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081240292 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082101701 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071265298 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076291172 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107399695 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079835985 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079093364 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078495603 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130135768 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.181649654 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098321894 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096529771 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06811315 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081840052 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116025006 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127653456 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066622665 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067399438 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125320362 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095865209 seconds)
  done (took 4.598142649 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.902256984 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.13683198 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089453411 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159249673 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.109307168 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068200168 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.10770155 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066728985 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085735328 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.202807935 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.06766496 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.431684181 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109647713 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.083193063 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06640178 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067622152 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067858727 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.349869258 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.112047289 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.113301174 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085988549 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075904859 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070114906 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.345537706 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06847104 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067206314 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069310106 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.05870448 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114591567 seconds)
    (29/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065685306 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06965308 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.977975994 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.117238165 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066685777 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099941472 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.170410668 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088237045 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.136239124 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066374784 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066149099 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.148221971 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074577806 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066059665 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.08324596 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103399226 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.102290153 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.200013332 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066751663 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161615327 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065959139 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.086087451 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.704524509 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15319895 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077883987 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068037083 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.248549929 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086343707 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068321702 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066551448 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.173856601 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.127999986 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068506011 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068107996 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067379736 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069355379 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.353271004 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065876555 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.753202064 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069278306 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07844816 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070729531 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068061716 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074136483 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073735953 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.086560975 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067361518 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.069640389 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067346988 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067306948 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069561228 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086375535 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.188247808 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065998586 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066307626 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064280673 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.084562068 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095653306 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068474117 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.069575711 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099493036 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06687006 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066656355 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.100432344 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066657303 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064546328 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.086055329 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070941887 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114113275 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065192378 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.081849863 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065757226 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097788962 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069442876 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.06450215 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09963264 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.076297581 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.159356521 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.213952884 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064218119 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06360822 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066881397 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067324853 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066959665 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068212936 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078061228 seconds)
  done (took 19.910492665 seconds)
done (took 36.666343382 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.278927042 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077818822 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077839588 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076461544 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074226021 seconds)
  done (took 1.793965344 seconds)
done (took 2.981429401 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119185192 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097806154 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063296619 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094623927 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063542322 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098494468 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097780294 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.079778819 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09774291 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063077158 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094712 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0632476 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06440702 seconds)
  done (took 2.307592401 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081032564 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082154698 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069384339 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082191941 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065092453 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083340522 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081812386 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08979841 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081837735 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073125421 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064814602 seconds)
  done (took 2.039744019 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080571698 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083115983 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069925767 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082544807 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064371036 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082385915 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081627125 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086799522 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082006715 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073797678 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064691307 seconds)
  done (took 2.034052937 seconds)
done (took 7.561224398 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.075829458 seconds)
  done (took 1.250721748 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.58273824 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.027004846 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080014556 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110675477 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.186959896 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.121284066 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.273949103 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085208915 seconds)
  done (took 8.823804284 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.08905196 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069410722 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.0699312 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071078858 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.082680497 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070233339 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071865473 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070139647 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072807278 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069426615 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070290903 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071880421 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072866688 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073534669 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071423266 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07253108 seconds)
  done (took 2.41466767 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091742392 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091073766 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074123569 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075492381 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073256676 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073044406 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074980533 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073826037 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07187126 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072876583 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07535051 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07472857 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072308508 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06671384 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075413454 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076251606 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071636383 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075433045 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076112098 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075764162 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075350329 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065284896 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072789812 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07483917 seconds)
  done (took 3.083962827 seconds)
done (took 16.756333799 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109404103 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070482291 seconds)
  done (took 1.361547638 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079845876 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081581325 seconds)
  done (took 1.351336855 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081033067 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064670309 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.087595647 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.07636013 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065475867 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.064762639 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085430566 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065265875 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064894919 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066213887 seconds)
  done (took 1.911933471 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.066946175 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076223509 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070122706 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079629387 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072816942 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.062866267 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071467287 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066664909 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076269442 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061810283 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071130651 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082366228 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072094554 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084282143 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073525518 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069222973 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070903372 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06779449 seconds)
  done (took 2.488089731 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064847954 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066022798 seconds)
  done (took 1.325366753 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065953023 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063189243 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065271867 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066473562 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064569592 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063286564 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063950407 seconds)
  done (took 1.643387964 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.380223385 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112740208 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.298962644 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071292617 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082882962 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.252809769 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066264813 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071037274 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071134467 seconds)
  done (took 2.646524959 seconds)
done (took 13.925049877 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.076836981 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.083736524 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093355793 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.338675452 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090558851 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06503391 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113327963 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.184605788 seconds)
done (took 2.251543557 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.20403492 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.560528787 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.368773543 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.199391765 seconds)
  done (took 2.327580143 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.31308135 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092217553 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.06021847 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068423894 seconds)
  done (took 1.737932848 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065006744 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067817058 seconds)
  done (took 1.336352516 seconds)
done (took 6.808539095 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065091196 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.084146816 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06654981 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064868361 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066966176 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067095439 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.064266786 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064577783 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066733639 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067313585 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.069686309 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064217677 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.066879199 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066603154 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064034393 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06444584 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066479918 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064150359 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06437696 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066185228 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064397974 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06991514 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064090006 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064190375 seconds)
  done (took 2.834632251 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08266267 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06543263 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070082757 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.069743437 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069131428 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070296553 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070455294 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066671722 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071645615 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068706761 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07038833 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070686205 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068831628 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07064163 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069149843 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070584204 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.0717924 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0675093 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068860056 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070802422 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071518792 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06707467 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070326581 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07176517 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070196775 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070851657 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068890125 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067020754 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071843572 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.0703192 seconds)
  done (took 3.315300134 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069383668 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06251216 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063130255 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070144165 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064163334 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065504351 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064361467 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064924922 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065677718 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064273349 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065511193 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06431434 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064741597 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.065673971 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065125664 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068082413 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079518802 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064857633 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064206314 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065206986 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067858641 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064218095 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064282085 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064360936 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064217427 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064237827 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065313504 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064007016 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064704022 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064222119 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067474567 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068108699 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064521105 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070705968 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067767345 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064146458 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068598749 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064152401 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06526308 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063788891 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063924095 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064003038 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064988695 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071065296 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06446263 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066130407 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064399409 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065253461 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064593306 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066893025 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063974591 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064053084 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066024143 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065426375 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068236483 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064083149 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064624599 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063830283 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064706846 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064188886 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063854944 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064018909 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067143284 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065025952 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079003093 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070761669 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064405968 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06560034 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065317433 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066961212 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066235998 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077234648 seconds)
  done (took 5.968086219 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089018733 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.197692116 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064655425 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064067194 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060779395 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064934077 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066025064 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062971585 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064654677 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068616303 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063031073 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065504195 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066152438 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077748101 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064931654 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066206686 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070776067 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062743102 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065173945 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068267737 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064797325 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068089006 seconds)
  done (took 2.831641852 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152313193 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069288056 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104419324 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071941767 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066298927 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071992058 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070490221 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070456806 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07096644 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069150602 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069007535 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070613608 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06847033 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068613417 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069129555 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068851254 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070676218 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069020167 seconds)
  done (took 2.590444889 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07517701 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065078964 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085006598 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065593131 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066779241 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069438972 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071630821 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075078338 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068314051 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066344275 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074767135 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068999637 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069159477 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066521928 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068645573 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066615551 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06892847 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066427371 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074627365 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071047526 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071167166 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074876135 seconds)
  done (took 2.770428404 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078239771 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066955579 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081109729 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067351195 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06281769 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064931759 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.07085045 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066649082 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070614427 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068522192 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066765695 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065067896 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070209844 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066592706 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070114391 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066592662 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068588644 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066669714 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068467654 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062413172 seconds)
  done (took 2.590948847 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084825249 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067072051 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068503145 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076278904 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068199069 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068922056 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075759815 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068116961 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068823709 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087992836 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068426502 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067827911 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075670467 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073051353 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067989931 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07569378 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07543323 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075669009 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068261873 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068516004 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088198856 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06847122 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076033106 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068494646 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068102042 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068355519 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068207133 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072875079 seconds)
  done (took 3.252582922 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065648381 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065125483 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062510916 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062700183 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062442077 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063676957 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064687564 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064398544 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06770244 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064411497 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066868347 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067143594 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067322189 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06681048 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06694078 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067035706 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066848305 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065082524 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064281712 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064460233 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066618743 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06688967 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067154599 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064385865 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064005098 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066252858 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064326689 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064057269 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06688856 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064427814 seconds)
  done (took 3.187230859 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.073871389 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071846178 seconds)
  done (took 1.373034499 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062219981 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078674835 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06233681 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068710869 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068825847 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066707098 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074394162 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070418943 seconds)
  done (took 1.775366018 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.079810864 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076653156 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068381209 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081222379 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077518022 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083910058 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132111808 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067718968 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073609509 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065482924 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080450233 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066188177 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072859049 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067215475 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072870663 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07404723 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065216296 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073288258 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069375298 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065216051 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06804093 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075590455 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069449949 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062485144 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068059576 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089381572 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078060425 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066340149 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070032045 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074221983 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072559942 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06107992 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066734178 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066941984 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065141889 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076474314 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082353736 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069935682 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075780668 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068095999 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077350062 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062116833 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071391459 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073984542 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077283825 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.0677647 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067701091 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06212463 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065410917 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069536098 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062649216 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06706375 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061708138 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076886209 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070465223 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077356342 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065584239 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068375789 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069985401 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.07024255 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073741867 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068902701 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069778224 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066987946 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076423491 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071114944 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076036858 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06188635 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061233961 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064706293 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077098686 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.0898808 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073039801 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067749227 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067853733 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064891028 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070096169 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067801708 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072713364 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073369017 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066957891 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07249143 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074798734 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067743112 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070082264 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076173275 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065250791 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070277466 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064911983 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083598565 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066199439 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065165697 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064948085 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078672653 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070369798 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066873501 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064655772 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073674429 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060903304 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067651645 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067637774 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068135146 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076712864 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070014072 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07063836 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074601454 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073637674 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066132941 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068497959 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062631429 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066904303 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065189259 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073414225 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060464343 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06884433 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066930361 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06632696 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.200567726 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064326859 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066699639 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073407171 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071297793 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064042126 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06440077 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070563573 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067181104 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070430544 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075689249 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066280853 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062889314 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062650029 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070650784 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067487434 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071454047 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072117918 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070320428 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062258153 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065841926 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072740187 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07676498 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068653144 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068946815 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073472417 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068556272 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066891969 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073614709 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07094046 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067212126 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073462 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068053467 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06287469 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071119777 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.0704056 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066108272 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071435629 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071101147 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070157501 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06810833 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066457977 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074660867 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068221679 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066447137 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067096212 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066078476 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078015087 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069639772 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062892156 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064431839 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077032285 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06564406 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06664761 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066292066 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069309445 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067977402 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06473457 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066399372 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069851447 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07722555 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071070764 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067941334 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072719068 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079020891 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067655236 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069669467 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06726632 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067983064 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067602863 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07600068 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072489887 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071922733 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069737316 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063935031 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072500676 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074812299 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066451783 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064602474 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065969591 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071580051 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072769361 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071101511 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067734849 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065294538 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067760071 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07041279 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069650422 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066741192 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066203994 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073838633 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065687198 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074684873 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068391033 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077663564 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070537543 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062706583 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070364963 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065403476 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072981901 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062366445 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064813227 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066683347 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068154769 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066355819 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069667444 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061572671 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074139462 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073443774 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066335266 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065075027 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065359718 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072191613 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067373126 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06970246 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069122717 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071375151 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076447424 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065283287 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06929018 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.076498419 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.194170272 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060283807 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070813866 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064844635 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066099907 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066640668 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065557169 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070523349 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076777894 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075160942 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061619122 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070161663 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065640931 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066601646 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063287197 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072142244 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070266436 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068625919 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074146541 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067257572 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066113765 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069679696 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065028139 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066855992 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.066849407 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068508729 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066259436 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067261839 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065603801 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068221911 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064929474 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063863603 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067130306 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066403659 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066143893 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070964019 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065626358 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065933791 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.067980111 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066560554 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066774513 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066549238 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064902677 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068398115 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066007185 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065818197 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.067886001 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.0610287 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073761487 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06715222 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075040739 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067665042 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063700373 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074625223 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069729386 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073488621 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068155987 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068177917 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068634544 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066360586 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070057466 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074297921 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065756267 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078426091 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074441262 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067198519 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069324746 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067649959 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069071035 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066468862 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068577689 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067513884 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067747549 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06706368 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071602355 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069739249 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067284438 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069265982 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068103049 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067251814 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067813445 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061724521 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06608058 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066542278 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.06714354 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076927616 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067651953 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066482701 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066034655 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067756915 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066344793 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063927797 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074955576 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076470824 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067523762 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074464991 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06635168 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068817709 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078073307 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061993047 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065697015 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065093956 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065053661 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075207214 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067853251 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076713809 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067137876 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066531422 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064828851 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067841579 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065432601 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060839236 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065088454 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070070521 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065531542 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065375 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065971406 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068681259 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066737219 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075029284 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065359939 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066777317 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066207657 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063517199 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06509121 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.197865806 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068936188 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06645218 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064720897 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064875388 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066252572 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06752489 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068924198 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066884411 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069632805 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077476452 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067478646 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071129452 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071509615 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062257794 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070120489 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066850334 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066858555 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067257335 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071494239 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071478109 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068134887 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076665103 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067716567 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068592725 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06796655 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065977444 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067456049 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068065201 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.06743472 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06711436 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068812552 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075988215 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065368938 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071014809 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067107492 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068009016 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074021445 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068705759 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070898277 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074319885 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067742244 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069605657 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07588362 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07176121 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070927806 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068211038 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069456165 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073845499 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066941842 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074185367 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067855096 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06842145 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069200136 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065281464 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066882823 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067479134 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06693383 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07366469 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068743749 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066964678 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067121185 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065201898 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068384069 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070287835 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074639855 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070226045 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070411563 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062985826 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064197807 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068684946 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065010204 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069293615 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070209325 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073373132 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069129783 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067536338 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066139185 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076450943 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072915276 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070521449 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064980211 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071028028 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067793365 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069353038 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067918558 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067393589 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06825134 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.07096843 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068959328 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066278684 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074422414 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070975505 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06856022 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.06920702 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06821291 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067707557 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063109614 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067609894 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069286275 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072306439 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.06964908 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067007423 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077718538 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065074544 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067503265 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070609088 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066674133 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07200092 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062799116 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068658788 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067745845 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067866304 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062400779 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065771127 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064315725 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067697042 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065220767 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061017608 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076156736 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074536056 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067731375 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064562084 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065283377 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061971869 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061170303 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065542302 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066821089 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067681886 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.07579194 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065137852 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065502095 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061540712 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065757573 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068869846 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068462785 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063335992 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061248693 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.0653813 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068828759 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07097639 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064957161 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065658945 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06973929 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068129093 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064075905 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069053145 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063345094 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.06874107 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076653981 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064775329 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06495598 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.069993443 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071586763 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.064266171 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.059095528 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064545758 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.066834802 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.064394146 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064558937 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064789634 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078326096 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067007751 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065241865 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065163311 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068718722 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065483327 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073735267 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066583091 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066722239 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07042632 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067893826 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074218129 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069233485 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072951585 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.066272233 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.066278526 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.062161054 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063951166 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062435996 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06302 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.063488779 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.063758947 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066751375 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.069567036 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.061936662 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.072694487 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.071102601 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.064607115 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.0601435 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06207521 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.063078918 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059153829 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.064367542 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06205669 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.061310484 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.061378234 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061753767 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.064958776 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.067907911 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.064563461 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.063475413 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.063126031 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.057880705 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.06533869 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.065245888 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064033484 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06023165 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.063125025 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.063349523 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.066708391 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066508226 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.062045346 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066261387 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.064399464 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064714933 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.059780592 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.068981141 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062878189 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.065290246 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.063494757 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063971883 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.064200245 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.066293426 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06762637 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063695961 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.066071357 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.066781572 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066016447 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.061256603 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.061550528 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.06790004 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.061333067 seconds)
  done (took 42.48591315 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106465115 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065306308 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064010306 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064289356 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075456231 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065096092 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064116673 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064807053 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064592106 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066564958 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063030784 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063719633 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071461968 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078560685 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074314538 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067654198 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065196807 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066229229 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065342911 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066340651 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073966185 seconds)
  done (took 2.927368974 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074927617 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.07092069 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073273331 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076555297 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067751573 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071320572 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073190177 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071037539 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076124475 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067514025 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07593207 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070890469 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067503848 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.076473305 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067337963 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073061844 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07878207 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069044749 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.07198993 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074187037 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073267226 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075351634 seconds)
  done (took 2.928943805 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06700119 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065634001 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067824921 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061729906 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066501601 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.0622176 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071292881 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.066133361 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070228367 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065751451 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067034193 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067172786 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069418244 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06320916 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067836573 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.065960958 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111172816 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071277339 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067673627 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06914925 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063522931 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069832051 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063613716 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063741166 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067062431 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071439209 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068504018 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065945382 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06777468 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066852854 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068000982 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.066145793 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069904735 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068927999 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067393393 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066769424 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.068045648 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067597794 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06294193 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065661927 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068890021 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063458842 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067796549 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069938755 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.066047898 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065650767 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069798106 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.068305652 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063232326 seconds)
  done (took 4.661859702 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079429316 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110912651 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069274362 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089805442 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081582795 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.077506336 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071145392 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091036174 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065030631 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065943927 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083134001 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.081179574 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067405561 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07221315 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073934008 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067265447 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068585845 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066338676 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071728184 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067301471 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071474682 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.074400002 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.082110348 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080136996 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071211417 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066651663 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066944391 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071904658 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079824116 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071734452 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071936145 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073091621 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082324349 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.073113056 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067233231 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070093297 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084248243 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067910905 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070111518 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065679271 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069765173 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072574667 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.074794832 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08386864 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06784214 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073081835 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067278197 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064971 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.080019688 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069838908 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.075342371 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082130771 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071381677 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067801219 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072170107 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.082749163 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067782704 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066427813 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071143756 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079906117 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065726163 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071876432 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080839133 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.070058517 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07446749 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.081989137 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072768204 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072266523 seconds)
  done (took 6.515131709 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074490047 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072031706 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081093974 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081265693 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074219189 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07401984 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073686402 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073885597 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074184303 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078465797 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073843822 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.094980188 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069520498 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076423206 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074201729 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074220092 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073797803 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074396185 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07278665 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071416677 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072063687 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078876737 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071693121 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080016467 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.100296797 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069650713 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073818166 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074028947 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08219283 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074146353 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081070644 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074112944 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07407378 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081386238 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.081008293 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073651005 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067107941 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073785223 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073665389 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074217539 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069541202 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081628664 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073443725 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069757197 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074179444 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073631665 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081447677 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.081190842 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075898132 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077561303 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073556526 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080325794 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07113704 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07173203 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078852598 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.1044521 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07897416 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078965081 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071624377 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079980132 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081372745 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087729398 seconds)
  done (took 6.120529837 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082304165 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074272779 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075099096 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061392417 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063863034 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069671802 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064193651 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063660167 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074241238 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.07374633 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076004031 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06878459 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071669691 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075707079 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069225276 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071832164 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069562957 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068912385 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073483458 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069262766 seconds)
  done (took 2.77820646 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074267207 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082556971 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06662375 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071540896 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068792095 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071199822 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067982124 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068454738 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066546709 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068946533 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075460425 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075248697 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067046662 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071131024 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075107576 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071054859 seconds)
  done (took 2.494895446 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.073822933 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071637243 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079194904 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067059891 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064750317 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063050163 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066345779 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061121589 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062303658 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077482197 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065350113 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067744727 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066948473 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065073502 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064165552 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.07004527 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063893799 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064819756 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067391026 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.07957092 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07836152 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.0659217 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067979912 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06731449 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067277361 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072421695 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06656889 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065241253 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064920949 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067592009 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068120533 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070567215 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06493946 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065469767 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06576194 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064701294 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067051172 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066965356 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069785043 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06731745 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064776089 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066453653 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066850909 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067655872 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06358007 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06746017 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063389367 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069067526 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064938857 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067344645 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066777235 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069598122 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067227162 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073465998 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069775185 seconds)
  done (took 5.078702224 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078121511 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069243762 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061968377 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063477084 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068380835 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067148657 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069421008 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066820328 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066998907 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06334486 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067110282 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068045906 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066888576 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068416383 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06729256 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070772143 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063349739 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068907668 seconds)
  done (took 2.583913809 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070939413 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06490834 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073184438 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065808542 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065077366 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067695747 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061485205 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064637662 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064441602 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066883905 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067195919 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069313172 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066018769 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069111126 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067193523 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066984567 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069426602 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066206654 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067053718 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063075079 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06919396 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066411804 seconds)
  done (took 2.832747688 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071828321 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091303803 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.136765768 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.082615638 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.080656727 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077860529 seconds)
  done (took 1.90419633 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089647175 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077612896 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066116513 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090296023 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074921851 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068444663 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068751356 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068846003 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077238256 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077584765 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068523008 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076927545 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076782407 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076051335 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074262163 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074234848 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068208304 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068485156 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067422502 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084793238 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06829034 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076525639 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068567809 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068331556 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068563772 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076064627 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076989809 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07712475 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067980138 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076757331 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074029397 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068386924 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076712446 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077095479 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070521199 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076926478 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068318854 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085035535 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074145446 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076302154 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070419026 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074999623 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077185728 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073619748 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077384883 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069043915 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073536422 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068931942 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069077133 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086963974 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074382944 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076141184 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075024254 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077056841 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077178445 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087045126 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077610508 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076682204 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074657069 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080088481 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076510233 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074410361 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076006404 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077180221 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074518916 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076923878 seconds)
  done (took 6.302419036 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079716849 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085175172 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067272573 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074762136 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074178727 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066381275 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066711145 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066496985 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066580262 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06627174 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105593633 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066800527 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074472014 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074196507 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066928133 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066507192 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066782202 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073874429 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066724214 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084268438 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066656917 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076180643 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076344205 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076590931 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077321344 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074009498 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068878167 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068553646 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068512171 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06882048 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073857177 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068932522 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076403968 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068451923 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075986567 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068817753 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068999777 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073537978 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06873166 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074688588 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07618384 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085039744 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068994273 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068640956 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077300074 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068751891 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06863642 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068627558 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069072207 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068656054 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077423042 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077381905 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0779054 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075213586 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06808998 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068064723 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066463437 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067862379 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068924548 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073959134 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076014035 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06887593 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086931536 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068985853 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06849431 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076297744 seconds)
  done (took 6.166324913 seconds)
done (took 129.472731975 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.183965383 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.169327204 seconds)
  done (took 1.708516347 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.066679046 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094787738 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.078914041 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130417998 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066199836 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.098419404 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.097663249 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077133275 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065479522 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065297669 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065625497 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.066961124 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.129658093 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065680716 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065717357 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.067176807 seconds)
  done (took 2.670276447 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096133536 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.172403755 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.09979034 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064805392 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.0981024 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07269117 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.063951421 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.073941754 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070179416 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064527447 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072903514 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069715535 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065994357 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072135257 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072406612 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074382227 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066400513 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074293253 seconds)
  done (took 2.816270927 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099158863 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.089235763 seconds)
  done (took 1.564353209 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158547347 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105026053 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.148800616 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.332008324 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.15868309 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.230083014 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.129049487 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126918564 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.118379507 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122386203 seconds)
  done (took 3.000809712 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.0969985 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.146411461 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.254067088 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115679158 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07270994 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09198213 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117700138 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.079580837 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079345207 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079037652 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.07885793 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077933986 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098423688 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075681533 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07519645 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077878142 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101249019 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074315736 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076754036 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075524817 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099020497 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066910325 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075646161 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073913301 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076026662 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076719989 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067087513 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066802567 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075557293 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075546418 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078680129 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.091877768 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076223964 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106539993 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07149387 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107251204 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078346237 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073187628 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075593969 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07288606 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077263476 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076895286 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073150933 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077505087 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066791196 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077502764 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066952048 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066839611 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07967456 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068088854 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079958179 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079458057 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106869452 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068468545 seconds)
  done (took 5.995553199 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.662765486 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.102816339 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07054582 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.109875792 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09776515 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073948758 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.690152834 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090360313 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.174058729 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09077697 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.08795899 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070024789 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080825884 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083441026 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.109540744 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100050239 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092598129 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072451214 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.102521369 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.100184352 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069815917 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095139886 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091928544 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.377591883 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068331684 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070990295 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069066615 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071543543 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.112112996 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079247958 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071297906 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.12282115 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.088789411 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.119182594 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066646081 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067278377 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066946365 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.07808852 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.179556433 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.130776064 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.128932451 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068825779 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069207669 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070382872 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091687368 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068857015 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.112406086 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081635875 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.120833767 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071740852 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071831401 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069244882 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070537372 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081796546 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079258945 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.082950435 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.232506254 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069667827 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069235736 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072454641 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.182068728 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080928454 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081173124 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.093994497 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.131128945 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068504 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.691759469 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082057948 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067448575 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070753366 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068934697 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070665014 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069538 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.247895134 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.343293881 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071217079 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071807013 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070656185 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.163005022 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080377067 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069786945 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.114524659 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069426021 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070622247 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072291596 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071851728 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.119873623 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082064822 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072383904 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069735979 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07203902 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069775119 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06868362 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.164485476 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082593023 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.081688728 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.161783619 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071597005 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.114363471 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.08157307 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071556906 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080871524 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069392064 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07191178 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071028185 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080756806 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.097126571 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081702981 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071781495 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069274372 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.099721438 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082002289 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070228716 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079716489 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.399526593 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.082159755 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069359171 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08271094 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070607588 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.112985861 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071459977 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.181331839 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070440525 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080352623 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070203566 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068977375 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069768433 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.112624558 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072040337 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069960041 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070629497 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071589142 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.08140425 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.134943611 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07186722 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.162718362 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.13447366 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071771686 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.121363226 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069747295 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.117989067 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07172399 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070844597 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068186688 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.711879633 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067587992 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067678502 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070156981 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.139690492 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066492257 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079923966 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078325548 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067992454 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.692236718 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080761054 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077589152 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.210587003 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069427352 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068050159 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067158555 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071595644 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.111866484 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.147830116 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072174337 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070329882 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079326079 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.114177785 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068798922 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07994333 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079634375 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079903208 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070549034 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072101729 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082712012 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.118821122 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077074339 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.134273838 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.512288008 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068513021 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076237316 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.144029619 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067750957 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085815585 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069094925 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.085340588 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.114086285 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079084433 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.230711784 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.115486132 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.139450946 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080817779 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081200271 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066761431 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066993726 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078456258 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067529987 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069118357 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079508433 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071414088 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071202364 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.086363478 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06798635 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.171801996 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.073099743 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078179082 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067134187 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070739484 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084657004 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067967683 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068781785 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080696644 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071515196 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078931181 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.64842766 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076701886 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067393601 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070972989 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.137166271 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.114109384 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069308887 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069283639 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071454792 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.111408992 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.15875151 seconds)
  done (took 28.367069533 seconds)
done (took 47.504322209 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.207456337 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151076525 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.198842238 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116049103 seconds)
  done (took 2.144921408 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.118837102 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100128668 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093602675 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065101677 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100956096 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064557712 seconds)
  done (took 1.954336155 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.3036429 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.205851531 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178022634 seconds)
  done (took 2.094154743 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.195904224 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.186857847 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.393006252 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.253041477 seconds)
  done (took 2.5406306 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144596741 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090841049 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068651302 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085681017 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.13551579 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.15949974 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.10036356 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125356604 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080242153 seconds)
  done (took 2.451940875 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.145349596 seconds)
done (took 12.749152565 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.126342124 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.102245004 seconds)
    (3/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.10286271 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.167474746 seconds)
    (5/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.193776786 seconds)
    (6/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.084723999 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.073065218 seconds)
    (8/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.082178416 seconds)
    (9/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.21891202 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079103967 seconds)
    (11/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.140234507 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074731496 seconds)
    (13/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.069469791 seconds)
    (14/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.111402514 seconds)
    (15/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.158756891 seconds)
    (16/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.090480635 seconds)
    (17/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.218780404 seconds)
    (18/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.080356142 seconds)
    (19/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.05399403 seconds)
    (20/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.157424504 seconds)
    (21/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.078764556 seconds)
    (22/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.080772079 seconds)
    (23/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.111386599 seconds)
    (24/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.111669367 seconds)
    (25/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.068586078 seconds)
    (26/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.075174887 seconds)
    (27/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073390029 seconds)
    (28/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.194529128 seconds)
    (29/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.192826871 seconds)
    (30/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.176311718 seconds)
    (31/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.067333952 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.146494984 seconds)
    (33/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066416317 seconds)
    (34/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073893379 seconds)
    (35/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.16949015 seconds)
    (36/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.139304361 seconds)
    (37/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06714018 seconds)
    (38/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074139654 seconds)
    (39/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.093019443 seconds)
    (40/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073083123 seconds)
    (41/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.105674819 seconds)
    (42/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.079146248 seconds)
    (43/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.077132044 seconds)
    (44/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.054752487 seconds)
    (45/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065971429 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.095506768 seconds)
    (47/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.10110761 seconds)
    (48/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.068091368 seconds)
    (49/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.090860559 seconds)
    (50/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.053568609 seconds)
    (51/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093003549 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094663684 seconds)
    (53/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.193121625 seconds)
    (54/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.105085241 seconds)
    (55/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.099668529 seconds)
    (56/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.21187325 seconds)
    (57/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.198418067 seconds)
    (58/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.080702641 seconds)
    (59/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077628787 seconds)
    (60/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.084836713 seconds)
    (61/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.066622203 seconds)
    (62/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.163333987 seconds)
    (63/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.053043748 seconds)
    (64/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.077236323 seconds)
    (65/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.174905245 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091720778 seconds)
    (67/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.169752617 seconds)
    (68/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.174938328 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.10908014 seconds)
    (70/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072829126 seconds)
    (71/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.07371642 seconds)
    (72/309) benchmarking ("sort", Int64, false)...
    done (took 0.067647777 seconds)
    (73/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082705555 seconds)
    (74/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074357446 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.096335777 seconds)
    (76/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.137831123 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.109600918 seconds)
    (78/309) benchmarking ("sort", Float32, false)...
    done (took 0.128366895 seconds)
    (79/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.164114631 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09486747 seconds)
    (81/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.108597204 seconds)
    (82/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.100829014 seconds)
    (83/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.172159327 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.093727243 seconds)
    (85/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074518011 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.10265819 seconds)
    (87/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073552479 seconds)
    (88/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.301253179 seconds)
    (89/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066487473 seconds)
    (90/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.076011339 seconds)
    (91/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.177833407 seconds)
    (92/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.078687458 seconds)
    (93/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053488883 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.099733148 seconds)
    (95/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.070083564 seconds)
    (96/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.193820295 seconds)
    (97/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.052729633 seconds)
    (98/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.053297776 seconds)
    (99/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090472654 seconds)
    (100/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.170156779 seconds)
    (101/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.06845828 seconds)
    (102/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.187951192 seconds)
    (103/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.064778597 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074989798 seconds)
    (105/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.17507248 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.09853816 seconds)
    (107/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.176842956 seconds)
    (108/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.181466966 seconds)
    (109/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.178111685 seconds)
    (110/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.053061045 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.144268141 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095598363 seconds)
    (113/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.052986905 seconds)
    (114/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.078423325 seconds)
    (115/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.112506199 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.078075498 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.122662459 seconds)
    (118/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.173646416 seconds)
    (119/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.142576535 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.31740192 seconds)
    (121/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072650508 seconds)
    (122/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070724302 seconds)
    (123/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.174539652 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.126948182 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 0.136108855 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075235474 seconds)
    (127/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075783236 seconds)
    (128/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.142973803 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074339016 seconds)
    (130/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.149350221 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067298844 seconds)
    (132/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.055206488 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072507469 seconds)
    (134/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.052700317 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073893999 seconds)
    (136/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.111274601 seconds)
    (137/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.169969266 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.113661446 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.094630363 seconds)
    (140/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074867227 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073776498 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.124661774 seconds)
    (143/309) benchmarking ("sort", BigInt, false)...
    done (took 0.188208434 seconds)
    (144/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.099064898 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066408841 seconds)
    (146/309) benchmarking ("sort", Int8, false)...
    done (took 0.141993743 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073585614 seconds)
    (148/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070436164 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091403342 seconds)
    (150/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.0557723 seconds)
    (151/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.052462443 seconds)
    (152/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053958855 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.06698512 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.098772063 seconds)
    (155/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074912013 seconds)
    (156/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.052376266 seconds)
    (157/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080849539 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.100566531 seconds)
    (159/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081058386 seconds)
    (160/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.063580774 seconds)
    (161/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.053793059 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08822793 seconds)
    (163/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076960228 seconds)
    (164/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.065968501 seconds)
    (165/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070779158 seconds)
    (166/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.0520999 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136767711 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06696342 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.111787466 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.104202047 seconds)
    (171/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.165869117 seconds)
    (172/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.053108153 seconds)
    (173/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072509945 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.070517249 seconds)
    (175/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075275233 seconds)
    (176/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073049147 seconds)
    (177/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.05227676 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.146599391 seconds)
    (179/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.054933403 seconds)
    (180/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068008353 seconds)
    (181/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.052263899 seconds)
    (182/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.053865671 seconds)
    (183/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074770164 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066372999 seconds)
    (185/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073816608 seconds)
    (186/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.074965857 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.128187088 seconds)
    (188/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068964524 seconds)
    (189/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072718358 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140225729 seconds)
    (191/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073992894 seconds)
    (192/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.052006434 seconds)
    (193/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.052548005 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.098512942 seconds)
    (195/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.205410392 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.144364885 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.066116799 seconds)
    (198/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.073811733 seconds)
    (199/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071184585 seconds)
    (200/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.107757814 seconds)
    (201/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067384949 seconds)
    (202/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074063428 seconds)
    (203/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.066623849 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.148515364 seconds)
    (205/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076920792 seconds)
    (206/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074563377 seconds)
    (207/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.076838947 seconds)
    (208/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082097219 seconds)
    (209/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067254758 seconds)
    (210/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.074507887 seconds)
    (211/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.054212117 seconds)
    (212/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.141437342 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.115405788 seconds)
    (214/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.05307227 seconds)
    (215/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074342283 seconds)
    (216/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090065552 seconds)
    (217/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090125336 seconds)
    (218/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.06934124 seconds)
    (219/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.052601744 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072925909 seconds)
    (221/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.0806106 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090314717 seconds)
    (223/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.053279601 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067357776 seconds)
    (225/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.053036414 seconds)
    (226/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.054157046 seconds)
    (227/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066289398 seconds)
    (228/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067093447 seconds)
    (229/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.142157949 seconds)
    (230/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.173084576 seconds)
    (231/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.141435655 seconds)
    (232/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.140341301 seconds)
    (233/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.06745309 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091195462 seconds)
    (235/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.052921575 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.1408975 seconds)
    (237/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068650664 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067003303 seconds)
    (239/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.077007922 seconds)
    (240/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.068046711 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066990427 seconds)
    (242/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.073743795 seconds)
    (243/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072615817 seconds)
    (244/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.078702254 seconds)
    (245/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.064954595 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.143344018 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069425329 seconds)
    (248/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.062712615 seconds)
    (249/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082917219 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068378071 seconds)
    (251/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.053077129 seconds)
    (252/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.068475287 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066483229 seconds)
    (254/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120767718 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092494377 seconds)
    (256/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069878507 seconds)
    (257/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064649119 seconds)
    (258/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.053284598 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072754605 seconds)
    (260/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.052059913 seconds)
    (261/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067107189 seconds)
    (262/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054085615 seconds)
    (263/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.055468551 seconds)
    (264/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.068222001 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074299467 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066392503 seconds)
    (267/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.052340047 seconds)
    (268/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.0534767 seconds)
    (269/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.064873518 seconds)
    (270/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075441686 seconds)
    (271/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063514328 seconds)
    (272/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.067247176 seconds)
    (273/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.136941405 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066653509 seconds)
    (275/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.052222309 seconds)
    (276/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.157810083 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066753843 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066457972 seconds)
    (279/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.052005377 seconds)
    (280/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.052142469 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090625379 seconds)
    (282/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.054117625 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073909634 seconds)
    (284/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.053795709 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06525345 seconds)
    (286/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.052376501 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.094787591 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065167946 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073866421 seconds)
    (290/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070705824 seconds)
    (291/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.052626687 seconds)
    (292/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.062027122 seconds)
    (293/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.05383976 seconds)
    (294/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136636668 seconds)
    (295/309) benchmarking ("sort", Float64, false)...
    done (took 0.127454448 seconds)
    (296/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.067973703 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071992624 seconds)
    (298/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.054135519 seconds)
    (299/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053775687 seconds)
    (300/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.054027155 seconds)
    (301/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072138235 seconds)
    (302/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.06367638 seconds)
    (303/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068443733 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072276461 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.06669456 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087854759 seconds)
    (307/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080941733 seconds)
    (308/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.068331138 seconds)
    (309/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.053925824 seconds)
  done (took 30.917818654 seconds)
done (took 32.337309317 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082535091 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089878606 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075207387 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093704523 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081669898 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.078771243 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07340235 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079435569 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080637956 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082516746 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079295163 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056255402 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074773483 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075226406 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075363533 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092808711 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079351592 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073808078 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074209329 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06630035 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074003224 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06721557 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068882065 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05641861 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079146765 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073122453 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073892315 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075069053 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06725951 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06708554 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07041167 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074493908 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067098253 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079212583 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073515014 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074294744 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075805513 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077558133 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068516224 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067182829 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07556189 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067102521 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074087508 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074546283 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073034845 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072247815 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074288404 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078755172 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093059159 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069557103 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075253384 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077854523 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077681503 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073236019 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071024803 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074078938 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071569545 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093301255 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074866915 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069906052 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075155494 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075020354 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072597033 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073886162 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073826335 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076259064 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076741258 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072064522 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075669496 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072249849 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06683205 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073718141 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070380116 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066486497 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076615921 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078123086 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065547995 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071900704 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073520231 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072566847 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065666186 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069203064 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068475514 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072345805 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069450687 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056112593 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.07006954 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072766434 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065639354 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074427071 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072406306 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073399558 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068079781 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076756107 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065943568 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071396878 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06689239 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066564381 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.068103926 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070684627 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066509376 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069249159 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075801574 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068258095 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072442732 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079976367 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066671943 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073262243 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065779496 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065946528 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080913594 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076168466 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067228209 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070482287 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066210941 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073919681 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06578952 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066810347 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066174725 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066750751 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071917713 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066412173 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069086614 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07297559 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078700427 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066159525 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069158497 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068870401 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066313783 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071456636 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066303576 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065836967 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.202663705 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061495275 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067380974 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06494841 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072677876 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068017926 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071844998 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066778845 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07308868 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.068844029 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072831095 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072147936 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066196725 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060267955 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069940126 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069734102 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068742248 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067440414 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068575987 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067245834 seconds)
done (took 12.62625625 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066206719 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.140489702 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097069187 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093569866 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.084386034 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065707091 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074984361 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.099953971 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066777225 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100603147 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086110587 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083625362 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11059598 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.0640147 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065198458 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068676013 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066711921 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.08144503 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099331225 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085658992 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.107338725 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064328803 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092924217 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088905748 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.085834742 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.09982763 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066148564 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.07082605 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071204512 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.092645102 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088078672 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071001236 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06829701 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.10152108 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093859378 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085106632 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067689077 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083910146 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06776055 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067083689 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.082261894 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099574017 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.081212063 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081800407 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071241739 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.0703437 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068181608 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084888104 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088900417 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078063816 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085083934 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.10130483 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067853201 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064902658 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065414303 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085288784 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065652041 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069850182 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067367842 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.069221289 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067810078 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070193754 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.082641221 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.087820531 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071601859 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081731513 seconds)
  done (took 6.826004552 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.081795407 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089081933 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082153967 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08346485 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064988856 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065394484 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065997135 seconds)
  done (took 2.045508121 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066197602 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086858894 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088055199 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089318531 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086232087 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088558008 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076553255 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066996107 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080497613 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068965549 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089727265 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.104045826 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068610851 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072245692 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089339962 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06579275 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09089722 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067961173 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070795921 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.09212632 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070246261 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.083171818 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069856072 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066317994 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079226147 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067485315 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112196693 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072105252 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068264364 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070685489 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066050995 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107907094 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081757727 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077301412 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067637158 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082075444 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081996007 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066234658 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083751881 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073026353 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081994859 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068005746 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068170252 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065960294 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072234872 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077862307 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068788904 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068363848 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070202883 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087616102 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068182709 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081577773 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072601156 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070759133 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068954789 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072004842 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076689244 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067296273 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087359581 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069097305 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.085086009 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084682842 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081790036 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084256625 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069951852 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08153093 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.081272632 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070515609 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069493179 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070985011 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084535446 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066245165 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068843409 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078363166 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069399227 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091188917 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091367667 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068810657 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.07730846 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068094319 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067633307 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067783645 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091890524 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07059023 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067623913 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071922869 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070601887 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066186589 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066580108 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071271745 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065694495 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069396858 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069794028 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.07177699 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070766439 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085474654 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070619438 seconds)
  done (took 8.88265586 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068569517 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067234739 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.067980077 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066762904 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067159157 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066999908 seconds)
  done (took 1.942561147 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092113413 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.06841772 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079469245 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071485069 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.102962447 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085635563 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085776833 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077443868 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083345364 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.07775433 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085098221 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08712174 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091216895 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071775279 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085088805 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.070798714 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.088173807 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077679587 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080348713 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074888089 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086743891 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072312156 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073197971 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082084932 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076160851 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072945263 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068228344 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080772435 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.080254362 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.08049467 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073941974 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.078012194 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.072306098 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.080179206 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.088859682 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072504864 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073337355 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.078628088 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.074427058 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.077204674 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.089950365 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074683215 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.076240232 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078589046 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080428136 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072139244 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.078146371 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076918977 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.087418472 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.078445207 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07854676 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.073210817 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075660506 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077453685 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069278552 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077781431 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077115129 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08798267 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07378894 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072192403 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070867319 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.076788947 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079221583 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.076963789 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.080158382 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.078027899 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071888394 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074060106 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074347201 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073600275 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.078870915 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071402754 seconds)
  done (took 7.156446971 seconds)
done (took 28.355215458 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.540469608 seconds)
  done (took 2.04196886 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.613351591 seconds)
  done (took 2.140305667 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.425890738 seconds)
  done (took 7.949305318 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.388386879 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.501224882 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.709150832 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132075182 seconds)
  done (took 3.296318617 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.698262886 seconds)
  done (took 2.231100458 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.207266073 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.193517086 seconds)
  done (took 1.943259908 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.366272465 seconds)
  done (took 1.891183545 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.135420449 seconds)
  done (took 2.662942003 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.255536215 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160737089 seconds)
  done (took 1.948084599 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.467216523 seconds)
  done (took 1.99796444 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.826431739 seconds)
  done (took 6.359294572 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.203795748 seconds)
  done (took 1.778245899 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.236481395 seconds)
  done (took 1.767458925 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.712540281 seconds)
  done (took 3.244074724 seconds)
done (took 42.782977695 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078509729 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.079279525 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.079620524 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076293707 seconds)
  done (took 1.834504841 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075409313 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071506946 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075170484 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072777377 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077036684 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072934155 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.075064371 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076897261 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072796272 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073846761 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073688505 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073468603 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075828396 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.075119231 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07200906 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075975292 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077229528 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073343282 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076818498 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073407954 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071715818 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075602382 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075899245 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.073232706 seconds)
  done (took 3.322253084 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076333593 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.070962847 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074028255 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072956077 seconds)
  done (took 1.841200414 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.075762627 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.089663418 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088034362 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077557983 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092904113 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087422747 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070411067 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070085146 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.074582889 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078070946 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069095596 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096505417 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089418731 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077759167 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079832409 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067500358 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069284306 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088142359 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078334211 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078813711 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07075707 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078404228 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.069407314 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089589427 seconds)
  done (took 3.450771143 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076027577 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101421803 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076505524 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086191326 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089251792 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064431434 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073075621 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.087910496 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.120770239 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064414902 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069156601 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064139889 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.07101344 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064068827 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.074804761 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103002908 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.106380973 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067088678 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094603699 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064813309 seconds)
  done (took 3.171001975 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.071805429 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.067833733 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.064772292 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070648884 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078686632 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074383435 seconds)
  done (took 1.979949824 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06671727 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066433834 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066498082 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066930949 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072573914 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06831908 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066797245 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067988352 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068405858 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.0679564 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068008589 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067031813 seconds)
  done (took 2.364070229 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.332556246 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067739683 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067184629 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064683653 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069482358 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065166244 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078989449 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.0669671 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.08883875 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06513089 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065400979 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067616449 seconds)
  done (took 2.650424455 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20024788 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075320712 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230852789 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134382834 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108826259 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1129846 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102013761 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110798904 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.139899407 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099431729 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16412551 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161308915 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104598965 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1343611 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087333052 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.096515306 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156239066 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163223384 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10507529 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165028966 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140834789 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122300207 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143748653 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098979637 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103539838 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118948105 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070444075 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07935016 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16697483 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130358627 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145676138 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109207933 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09243443 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172120978 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166860204 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13944416 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132125351 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082012809 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.099687579 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131106457 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194738741 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087063122 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158482812 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243179965 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079793927 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137503095 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117612093 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118036676 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.104781001 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088482466 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143087609 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17949273 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.135153847 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086602293 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109777482 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112720901 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113340286 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100975718 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177418959 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156737374 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125123308 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069800746 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097939563 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149285205 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128737054 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.106608859 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.123776607 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091070232 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129777336 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151126718 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115907784 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142678459 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128578893 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086984333 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117320772 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13908037 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125173342 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166036272 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121734275 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071328712 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121901027 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101717495 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079836403 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141429487 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074753066 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171920491 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096912562 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.103664106 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110707093 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106070485 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106059097 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156605903 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13969316 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243247945 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065042198 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101777934 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118213583 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144527817 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086225174 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107055288 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113371006 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076651302 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135833052 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073545013 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121389973 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074480399 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122634838 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130480115 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074263788 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119745678 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099632089 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098458139 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131262608 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159849208 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089760066 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084482574 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169311098 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12225152 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105603213 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143043307 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152974282 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.096988467 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100713422 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146722212 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175458759 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087489086 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158648586 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105000203 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082169338 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.085594755 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121138046 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110077201 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.119364153 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08038761 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116614727 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164976405 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076090464 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097140903 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133225493 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078004757 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080730776 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102477256 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097792275 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093370033 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097960947 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102595899 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137933682 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123077106 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105848368 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268477022 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097177394 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1659458 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087052613 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099006164 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101731808 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068873932 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.134229698 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153935112 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078249888 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161895851 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.12066566 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102585852 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117126537 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081285332 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136800889 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077149087 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069787122 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141642634 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109008296 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112310112 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151932044 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10566808 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128433586 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120318672 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134645915 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130738488 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.126666528 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103227223 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086579125 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110017354 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125265432 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072925682 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09290009 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079529456 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105396846 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096141451 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082788537 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140093003 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121669666 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098212858 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109285368 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094213303 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143639771 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075214903 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127083748 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116966604 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092256796 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148650709 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148271308 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127990677 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097006463 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141119343 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068576168 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072074433 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087065764 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.263760774 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082187922 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082882711 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114896352 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144953227 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126912026 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135382833 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109245905 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118305417 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153720409 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068135351 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.113941119 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145294792 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118713642 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103071012 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090274728 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.10025993 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143614009 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109783162 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18272682 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114770958 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12756532 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15263421 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.096984733 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078314549 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101612872 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132864832 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107612118 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141458204 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097792372 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086581683 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10738559 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073327315 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098342976 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125435605 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116987222 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132564174 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.112339377 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130117811 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075421851 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11690952 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118250851 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120781678 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064761836 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118121508 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157041183 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092142204 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11535384 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148790509 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07741812 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.121186284 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.317123065 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143102599 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083401469 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10692983 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117018005 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126240997 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117555559 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137864273 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107710606 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132815171 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106458071 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08379679 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086237343 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095522247 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102662745 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.092487838 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.105830196 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.112575421 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093047916 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12827816 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100543362 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107661586 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116669903 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096807089 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089291239 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096890496 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172299732 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117215738 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166573078 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.09725612 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.142052404 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160331668 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073823398 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077727265 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076284428 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140846186 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085379797 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131695252 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.099683286 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107022394 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123228894 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138698259 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09357797 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067275147 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106240419 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134425445 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113800512 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099690321 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104998153 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160915978 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.097992388 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078121134 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11104134 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102959492 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099496364 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167029995 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060728614 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.240694805 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075863346 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080181639 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126420067 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149312131 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080791709 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10445824 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118061978 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109902075 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127655523 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102554028 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100898274 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11519066 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150759928 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129902365 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091601496 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11313658 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130173248 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175717042 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106612041 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096687729 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172133583 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153449175 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159846881 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.090176194 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114902806 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113830726 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111104623 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136999493 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084440018 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164099171 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083086627 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136739248 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105072938 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091249526 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131153425 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.100412639 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088731894 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147269924 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116646125 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080922051 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076785317 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115512045 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117554687 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105007717 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074424624 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135659169 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071238073 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128674316 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164278396 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079231845 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101765966 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093170093 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.222609256 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106525605 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10044469 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088294221 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.09669667 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16907452 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.086484144 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147759584 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138938725 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114015815 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137294843 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10136296 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636953694 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079124993 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153394725 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117437362 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173603051 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098723962 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118679126 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111042615 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125225644 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144852269 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106973054 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179802298 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131652753 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115370228 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078567825 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100589407 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10152221 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.090504497 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106445165 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11449935 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117146249 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094343024 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117347981 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12472938 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083607912 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096824201 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156234634 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11575714 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14194894 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139544763 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083104903 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115310092 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135728596 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078304924 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.118735915 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147352936 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103469415 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095249387 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.078266076 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.246508697 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16714001 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072222933 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158736788 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11703766 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108628022 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110099674 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112614954 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128156813 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105933963 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119623093 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092577776 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109207583 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111981392 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083080723 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077934473 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10601704 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112990901 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098915636 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099273393 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099633358 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153183268 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073687796 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097038623 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104885235 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14530034 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174761743 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088588081 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082365161 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116851129 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111228813 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.110439468 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118126139 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078049791 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080501937 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080459243 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077252299 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.106164104 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10987147 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102014296 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108459088 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160348718 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.080896704 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.22226572 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093171155 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103323984 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071109362 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079259812 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097217151 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098721946 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109659522 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102591851 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169450511 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094382533 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087956576 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090179199 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.071566499 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080255041 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123760677 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253195499 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117660219 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095456723 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061938747 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107276886 seconds)
  done (took 58.235907852 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.107110293 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.08064576 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095068411 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.147948298 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120260952 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.210164682 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156116197 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.197714725 seconds)
  done (took 2.767852501 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067134849 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.09226281 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099354834 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083626278 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067681211 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067895767 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.222052661 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079631886 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065484622 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.086870512 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078060835 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067923008 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.40268024 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068980054 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069128925 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062579434 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.065993857 seconds)
  done (took 3.392184787 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.368937402 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.36154198 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.367590761 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071926172 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.651831049 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.08756918 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.084357176 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.094277878 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.069399753 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.280669308 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.700426303 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.090167334 seconds)
  done (took 13.882196057 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.073957862 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.067921873 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.081594461 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082124951 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.07131085 seconds)
  done (took 2.028522082 seconds)
done (took 102.497153185 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078009765 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.293227165 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052153381 seconds)
  done (took 2.023399049 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.081711234 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.082819068 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.082707667 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082524604 seconds)
  done (took 1.989516211 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.072754693 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.074288948 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.082513314 seconds)
  done (took 1.883251138 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.219871806 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.136818292 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085293449 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.080736426 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076311678 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.076583348 seconds)
  done (took 1.889499737 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070413141 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073605839 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071635242 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075418958 seconds)
  done (took 1.942207789 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075423403 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051246543 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.053994905 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.054919766 seconds)
  done (took 1.888427176 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084204792 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077708254 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077100539 seconds)
  done (took 1.892542671 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104176379 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.083033729 seconds)
  done (took 1.841008359 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08064 seconds)
  done (took 1.735434011 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096579783 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.111473325 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.125380075 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.106431837 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.133636094 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.106361803 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.083630066 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085039084 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.075667452 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08559652 seconds)
  done (took 2.664850557 seconds)
done (took 21.917981809 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077429387 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.364968306 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360283042 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088897873 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670883263 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355683068 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.991857154 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091334915 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119131193 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066475556 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082261058 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.646910633 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.98616434 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.322995415 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.970118656 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.41260187 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.646991142 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067136361 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066474852 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066559868 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.977066181 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068975124 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06950417 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069795921 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649204905 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372382103 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068133546 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.413040954 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066663106 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068327599 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.353497396 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066662085 seconds)
  done (took 16.340234668 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069385954 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.116038387 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072828096 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085251204 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07168213 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070187776 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072983801 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070253289 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12712414 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068951153 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086909668 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069021575 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073301225 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069290311 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088192049 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06951067 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069355426 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069118692 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068461857 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067369213 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085044027 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066512295 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067350332 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067437751 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067825873 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080362296 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067840575 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068132643 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067355913 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068550647 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070805513 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069077214 seconds)
  done (took 4.070187224 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113044072 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123223691 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073102685 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101102347 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11340517 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071934327 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143733839 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095098392 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129483421 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069497605 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086701503 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069602602 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103146796 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070656842 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090593351 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.07031432 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07106378 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070406302 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070130242 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070133227 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089601644 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069756883 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070127411 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070459187 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070159309 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.0831539 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071015592 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070371905 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069829503 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071741688 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073525188 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070590961 seconds)
  done (took 4.357774901 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07098029 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073047411 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081351139 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083030197 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070455491 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071514869 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071588995 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068192748 seconds)
  done (took 2.265800426 seconds)
done (took 28.693570333 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.07676335 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067498873 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071933761 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081590391 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073700588 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.07994716 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068583878 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076007473 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073406308 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074809599 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076405576 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068930953 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072680975 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069015543 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075200489 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069416679 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081197688 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073357111 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081640446 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081121197 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.071117314 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074757417 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075829895 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081157135 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080935874 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080496809 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078950388 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074264664 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070644721 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071695436 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078578754 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.086783373 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069623797 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081236404 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.069730257 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069138471 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07268624 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069164424 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080965343 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077867372 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070842643 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077425647 seconds)
  done (took 4.809599025 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087018232 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092076535 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.086955673 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062756423 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.069613826 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066792348 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.091021969 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.061267681 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.061347857 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090437148 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057360297 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061220347 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.064588397 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055914325 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.061282304 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.05833543 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.063415569 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.057631438 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060814596 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.061432496 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.059883228 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056084081 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.061687662 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.067615912 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058077048 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063698447 seconds)
  done (took 3.422899227 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073230016 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.082561415 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087868892 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128544895 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104288435 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078187879 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079539126 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088986722 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.086754978 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068566096 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072603795 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094824527 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089571965 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075127251 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068911635 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085083417 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083698883 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070664465 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074787488 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092394379 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08566868 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.078984616 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09368835 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081592443 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068181474 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069825643 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071176492 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083163808 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072908582 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077527933 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072387713 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072115411 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070684578 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080209255 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072260014 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070441327 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090956087 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078715656 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.07883608 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068997203 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.072266605 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069701497 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.091089183 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12358529 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068817767 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075447098 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076962582 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.07782952 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068816711 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087408161 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080049078 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068291617 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.072246139 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068014849 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06884832 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082075131 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070523453 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071191318 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077312049 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071549587 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.081113273 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072673267 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08454159 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068544625 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076515507 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068029724 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06944385 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067940553 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094174074 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070181215 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110924408 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069906252 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069642862 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077894098 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077209807 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074950687 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069058695 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08418242 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079298542 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072462065 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077743173 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072731895 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072438703 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.089186817 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071373995 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.07024084 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069780189 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.090157345 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072034407 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070722226 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082444599 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068921131 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072343567 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086091126 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068454679 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070279074 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075450324 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073457515 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068664928 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080934145 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073415006 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069614296 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078329796 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069107738 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071912624 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079131041 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075545274 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068414263 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074194503 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075247389 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069911784 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070846499 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072366944 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071023009 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078149886 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075259106 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073311567 seconds)
  done (took 10.741711084 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.157380712 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.150879397 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.068720661 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.141864002 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075067236 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.077578385 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.144799352 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.092836291 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067154565 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067499103 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067560228 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112947425 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106010606 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.127016345 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.080402726 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069180286 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084977575 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.118595976 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.146897249 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.139532811 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.081952491 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075282648 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.068735695 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.067919731 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073248068 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080553928 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089296743 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075068413 seconds)
  done (took 4.42560847 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.0790878 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.098736939 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07257803 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088266658 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089369286 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068167935 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070677962 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071125006 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.08217061 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079865586 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069472798 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075033515 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075787096 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07729594 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069953008 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07454357 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074407217 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068789418 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070274579 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.071358438 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076306075 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.078987035 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070328093 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066135493 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073045513 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066024589 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06312861 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.082921524 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067032271 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089392188 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066231931 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074466175 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080394461 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067891096 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.0668542 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067547716 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067412989 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067506521 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06974348 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06731031 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068442453 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059168598 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068413267 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080564736 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075451405 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.058190167 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073964168 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074088293 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074310603 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066738217 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072027076 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071968827 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072489644 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076587424 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074429716 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074555821 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070233681 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.06843677 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076598548 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069018842 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066342048 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06807743 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073669842 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067518212 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076983514 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073674511 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067907248 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.06892323 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070600603 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.075398178 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068949995 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072462264 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066852738 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070781561 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073995778 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071046043 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070416708 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06751512 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068539363 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069340284 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.057270469 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068664545 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05476608 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071853121 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06748906 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067601193 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068649868 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073641606 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080603388 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069855405 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074673119 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069815421 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067130283 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070348726 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.05992342 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069441594 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08135449 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081294825 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066019586 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064362234 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.080510637 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.070827697 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065678608 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056058385 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074797616 seconds)
  done (took 9.229968355 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.093013713 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.086909818 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069934958 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083427481 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.092417205 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087502417 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074898634 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076268303 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068907877 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.081614307 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073706772 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07808623 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070189281 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078614266 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.096559606 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078661023 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071446155 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078175039 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07404839 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.103778641 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084629583 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08362705 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.076381509 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.070060097 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077524216 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081405385 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.092346897 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081534462 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.079931015 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.076993093 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.081284377 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.09199107 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.075534049 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.07358006 seconds)
  done (took 4.475176942 seconds)
done (took 38.771414604 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.758945984 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.941040082 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.759133213 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.131057273 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.019165892 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.861490269 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.87472518 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.756149458 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.94619875 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.800895621 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.026804586 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.808239919 seconds)
done (took 65.379671965 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.786511774 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.895478085 seconds)
    (2/2) benchmarking "String"...
    done (took 2.028651786 seconds)
  done (took 5.622261539 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.083763309 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.29085022 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.006094502 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.755094629 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.761434988 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.055139291 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.561168681 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.281087242 seconds)
  done (took 30.409971061 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.956677044 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.955758163 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.447871429 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.463209644 seconds)
  done (took 15.569922853 seconds)
done (took 63.255026264 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.761217989 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.810910321 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.763249884 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.742208877 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.814829953 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.764758302 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.235799047 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.771443558 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.757799553 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.741357201 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.759069503 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.193997236 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.76796358 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.137591427 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.761367727 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.766979892 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.807304815 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.221884068 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.914230133 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.766783147 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.782220851 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.77981163 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.756870294 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.763694315 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.796155583 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.756755673 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.198328719 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.758922621 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.382374828 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.763282679 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.789897474 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.321542601 seconds)
  done (took 203.80918665 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.763604136 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.888118618 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.949141616 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.783014413 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.29024643 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.959618825 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.894581288 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.327232599 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.763112576 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.76567413 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.897982858 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.757515502 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.920253981 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.708391239 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.770868336 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.840942829 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.008650319 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.941863021 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.766196114 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.031045821 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.765610328 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.720708159 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.684895419 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.89074256 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.76573595 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.856664116 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.921315911 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.761495937 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.951454583 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.971602001 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.794134601 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.790340858 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.984144588 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.629167713 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.777234671 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.767299552 seconds)
  done (took 169.75998726 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.142341267 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.760127737 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.757440636 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.760196647 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.758816863 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.772426933 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.758933076 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.885498241 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.88582643 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.22391566 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.118707593 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.811582089 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.585763952 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.760398806 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.827989346 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.773308259 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.764763104 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.774392407 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.787802609 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.760339276 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.761191346 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.884721954 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.770897352 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.965411682 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.768037989 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.760193466 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.765982874 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.127936078 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.761103725 seconds)
    (29/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.760456672 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.766284579 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.022517118 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.760245055 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.760563212 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.647458808 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.044290011 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.851303487 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.762987768 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.767972052 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.760248444 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.978924693 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.761712138 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.762044015 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.764222411 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.939902751 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.76092861 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.8905756 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.76088127 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.259531222 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.762862206 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.760991952 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.58290742 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.441766169 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.763420494 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.761312434 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.764624565 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.763116713 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.762342698 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.768612915 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.385678496 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.838350036 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.764223413 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.767078983 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.768388784 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.763521357 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.866368513 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.764894725 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.863194518 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.816084402 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.872268391 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.886141895 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.766105273 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.829991827 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.856449094 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.762524165 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.76579625 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.770964631 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.772478206 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.848324843 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.764558737 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.884478839 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.769060479 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.765408205 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.81180642 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.832055093 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.764646061 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.653419837 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.767722639 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.763579474 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.074458628 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.834130569 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.765718492 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.764655026 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.763667427 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.764947461 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.887232203 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.887219705 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.546902885 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.766007036 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.381817007 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.767516749 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.900867981 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.765237639 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.76426183 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.949591205 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.764643771 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.843170648 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.765898313 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.762175311 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.760859865 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.7901974 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.761059033 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.81869155 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.767014243 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.133862523 seconds)
  done (took 400.978217774 seconds)
done (took 778.442788098 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.425466824 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.389047624 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.498082336 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.415571924 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.392872204 seconds)
  done (took 13.82421554 seconds)
done (took 15.527524563 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.847501001 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.853004474 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.787177208 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.851488248 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.784441527 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.850021085 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.834030178 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.787456979 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.818739735 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.788114766 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.820982144 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.786725564 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.774228949 seconds)
  done (took 25.286712085 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.996670907 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.004336158 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.831823007 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.002829293 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.808779113 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.989960227 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.922724504 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.916444072 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.913779739 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.77757929 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.775485346 seconds)
  done (took 22.646920881 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.001430753 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.000832664 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.835428178 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.002388253 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.810018706 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.002346504 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.936282137 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.91662721 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.916905508 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.777200217 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.776220018 seconds)
  done (took 22.679607103 seconds)
done (took 72.317009202 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.777205954 seconds)
  done (took 3.483635862 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.792284172 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.931848464 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.778590764 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.777120877 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.778060441 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.771676582 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.77686716 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.772318374 seconds)
  done (took 16.084834926 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.767519779 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.767964269 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.768204751 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.768462321 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.771941216 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.76886301 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.772531487 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.768226287 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.772403897 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.769375419 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.768879673 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.770906485 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.772013699 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.770956414 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.771060402 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.772079125 seconds)
  done (took 30.030020282 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.769545503 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.76781726 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.769065633 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.770537245 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.77034819 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.771521998 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.770883655 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.771334553 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.769995683 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.770413541 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.77201355 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.769172697 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.770513811 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.76862356 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.770094867 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.769154421 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.770863455 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.77074978 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.773772117 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.770155031 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.76834648 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.769141394 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.769407978 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.769789126 seconds)
  done (took 44.19273119 seconds)
done (took 95.495225307 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.459290182 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.195236473 seconds)
  done (took 8.360846934 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.772026182 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.771580542 seconds)
  done (took 5.284273237 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.77197125 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.77134308 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.77152687 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.77199492 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.77129604 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.773466696 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.77450698 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.771777548 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.771572773 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.772447817 seconds)
  done (took 19.429911403 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.773610102 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.772147774 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.770363396 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.771536013 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.771934745 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.770674093 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.772273822 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.772008996 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.771564964 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.769586382 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.771998829 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.769845952 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.771961989 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.770319668 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.772657742 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.770582048 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.769835624 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.770524514 seconds)
  done (took 33.592150488 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.772230238 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.77283844 seconds)
  done (took 5.253546312 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.771977149 seconds)
    (2/7) benchmarking "second"...
    done (took 1.76991583 seconds)
    (3/7) benchmarking "month"...
    done (took 1.769541557 seconds)
    (4/7) benchmarking "year"...
    done (took 1.770703703 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.771276323 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.772178676 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.770233811 seconds)
  done (took 14.103983783 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.775658809 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.937990413 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.001498026 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.44185505 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.774466153 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.777722932 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.744454233 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.777678938 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.779683045 seconds)
  done (took 19.721666222 seconds)
done (took 107.453323366 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.577565959 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.775505625 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.14512431 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.818473494 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.819137798 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.070268149 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.771136797 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.994899067 seconds)
done (took 42.683483124 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.79168484 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.241094887 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.252852989 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.718444788 seconds)
  done (took 11.922490895 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.770505585 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.296766273 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.804153035 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.370502295 seconds)
  done (took 19.965173511 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.138454168 seconds)
    (2/2) benchmarking "read"...
    done (took 2.199361132 seconds)
  done (took 6.05372017 seconds)
done (took 46.445886876 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.775691316 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.773193239 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.774575764 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.773678179 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.775641882 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.77618646 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.774248898 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.773752343 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.775476662 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.774866735 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.774666686 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.772707579 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.774523998 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.774909114 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.772546027 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.772452173 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.776383488 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.773387684 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.772172861 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.775844973 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.773349533 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.774963043 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.774166727 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.774602407 seconds)
  done (took 44.295400483 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.774878705 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.774254203 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.776306794 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.775865654 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.773483431 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.776857461 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.77518372 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.774152348 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.776229735 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.777198916 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.774410246 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.773833251 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.776948668 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.774863086 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.775717041 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.774586578 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.77712477 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.773539169 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.776075898 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.774132457 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.775841795 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.774022101 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.773923067 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.776676945 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.773787396 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.774649704 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.77811176 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.775878651 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.777188937 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.774592026 seconds)
  done (took 54.972269908 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.783042647 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.785265177 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.777630618 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.777505053 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.777372419 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.77825695 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.777789992 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.777490091 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.777009291 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.778048254 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.77852926 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.777946174 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.778229785 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.778170479 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.777750089 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.778113582 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.778116653 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.779636142 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.778542928 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.779723847 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.779140314 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.777994346 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.778608305 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.78051222 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.778834556 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.77781394 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.778481137 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.778225016 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.777980464 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.781007455 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.778885665 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.780213596 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.781678988 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.781919787 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.781124247 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.778709587 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.784411154 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.787785914 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.779592258 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.7789451 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.780129694 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.780077457 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.780954538 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.780836509 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.780851736 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.778997823 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.780480925 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.779841635 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.780877421 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.77957804 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.780766311 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.780475229 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.779319376 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.779797613 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.780961211 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.780027108 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.780797481 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.780818844 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.779963828 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.780412886 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.782359578 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.780312511 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.780266599 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.780772898 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.782028914 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.780127888 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.780360367 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.7805923 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.78044136 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.781384259 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.78008339 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.780922465 seconds)
  done (took 129.867499379 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.781660592 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.779274493 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.77889314 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.778985741 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.778963703 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.784344746 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.780178268 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.780894091 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.778537482 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.781903253 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.781548905 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.780806889 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778899858 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.781949237 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.782588992 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.780384988 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.782736325 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.779389075 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.781270529 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.783333032 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.782197352 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.781460371 seconds)
  done (took 40.897013917 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.784091105 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.783689123 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.779586562 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.782846807 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.782229268 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.783713364 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.783553392 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.782093762 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.782774796 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.780475418 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.780168006 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.783486029 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.780377628 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.780930164 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.780173016 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.781381391 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.784027764 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.781086361 seconds)
  done (took 33.795642776 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.780661693 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.780590208 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.783618609 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.781429563 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.781657616 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.783950329 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.781494077 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.784054413 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.783221236 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.781872246 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.786040337 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.784992427 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.785583544 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.781078939 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.784287536 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.782256648 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.784217823 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.781276333 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.785560104 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.78371782 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.781865851 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.785481613 seconds)
  done (took 40.948539657 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.78367802 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.785159822 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.784143992 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.783976386 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.783150002 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.785341424 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.785274906 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.782950123 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.785822319 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.785286785 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.782332229 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.785611521 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.782914905 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.785356609 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.781916588 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.783265921 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.786812778 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.785091532 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.787212744 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.782459533 seconds)
  done (took 37.409953956 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.791741427 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.79308945 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.79437196 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.793560265 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.793396414 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.793821954 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.794089551 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.79333091 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.794303957 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.794529528 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.793086682 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.792485313 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.795518996 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.793239637 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.794324856 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.79378226 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.795326585 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.793968007 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.795121233 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.793811804 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.795126 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.79520269 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.794860616 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.794851228 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.794403421 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.794987788 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.796451148 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.793626219 seconds)
  done (took 51.96192571 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.789979133 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.788308626 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.78436751 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.78550596 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.786315584 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.786809177 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.785295467 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.786575963 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.78789235 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.787459131 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.787536597 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.790950796 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.789915789 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.788784697 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.788698777 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.788570021 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.789536057 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.785504833 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.787644299 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.78657905 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.789158745 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.790169032 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.789318652 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.786456599 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.787157023 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.78957619 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.787538072 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.787090354 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.790119751 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.787834087 seconds)
  done (took 55.360848767 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.807545439 seconds)
    (2/2) benchmarking "in"...
    done (took 1.807290201 seconds)
  done (took 5.3415902 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.78877952 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.791200257 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.790386836 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.788356165 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.787168167 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.790843681 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.790625836 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.787202142 seconds)
  done (took 16.039828034 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.794443246 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.790237985 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.791849394 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.792731741 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.796856491 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.793758269 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.802071514 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.791774635 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.795228964 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.793775318 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.800289512 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.803513712 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.798019796 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.793264657 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.793712273 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.795563158 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.790594779 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.798678752 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.796974636 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.793102723 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.796995902 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.796190227 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.796876768 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.789815786 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.797381614 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.807590562 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.797686057 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.791812016 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.794612718 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.798525894 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.798071541 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.790814276 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.799622811 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.799712846 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.791860608 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.799227033 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.804185893 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.794251708 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.801289556 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.798881036 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.792438516 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.789283156 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.796212692 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.798056413 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.795620041 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.79987215 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.793348335 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.790418153 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.794272654 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.799664012 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.798212846 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.796644641 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.790415242 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.802980995 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.797038405 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.804166404 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.800441467 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.800197591 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.805839195 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.808505821 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.811673758 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.804679917 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.799749325 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.800956263 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.807137663 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.820954403 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.805404233 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.792471825 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.791335387 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.793701808 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.806265345 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.814467572 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.806013147 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.801505463 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.801889591 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.794783305 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.797146919 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.794298931 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.805933492 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.80011416 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.802025926 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.800257821 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.807776032 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.818730698 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.795812497 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.800928395 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.800767171 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.802368124 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.798112601 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.810178937 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.801323392 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.795081261 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.798117743 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.797450942 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.800635104 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.803051058 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.798201643 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.80049219 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.792301354 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.7950096 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.801378572 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.801755152 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.808057834 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.802625163 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.804140464 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.806551896 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.795737007 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.799172928 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.808040082 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.795453299 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.804356043 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.799239504 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.807440147 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.793458716 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.800758599 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.806667914 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.803441715 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.801686184 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.803196059 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.79652998 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.808681563 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.826093151 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.797997329 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.798506873 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.803592636 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.816483487 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.803951591 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.802151375 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.796350945 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.794460635 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.795860999 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.803430037 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.796879326 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.802138845 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.803565232 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.803191313 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.798029348 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.79742181 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.803482529 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.803680089 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.802123927 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.80142115 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.801770133 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.803375285 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.805325923 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.802442448 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.808115371 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.802428658 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.801683356 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.802919348 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.794673525 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.798080603 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.801294009 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.804437287 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.800712472 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.804252744 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.799879796 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.804465085 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.798118707 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.798979685 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.798394596 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.803667739 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.805154162 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.804424981 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.805808679 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.800721931 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.795470601 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.797054557 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.798913281 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.801831673 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.799743951 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.800157105 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.804191953 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.814513478 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.798765229 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.805985156 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.804819844 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.806541616 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.805835255 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.809066499 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.805773258 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.809946695 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.805141956 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.808281874 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.806725856 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.806755405 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.800098082 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.802314013 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.802739921 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.807597401 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.806200056 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.807375804 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.817819926 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.811626187 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.80507393 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.804068749 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.80509977 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.812186068 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.807716969 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.807011031 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.801980648 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.808849477 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.802103321 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.806968863 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.806016543 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.807963204 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.803671238 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.800783427 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.80186189 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.808041424 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.800537453 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.804835726 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.807193653 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.798930234 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.802765745 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.808288494 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.802194541 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.798319286 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.8024363 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.804395463 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.801381637 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.810293234 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.813250164 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.800229165 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.805253974 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.804738041 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.805128831 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.804080757 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.803314471 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.806692096 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.805428582 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.811755813 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.80551296 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.808096648 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.811941336 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.805122012 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.804381344 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.808692051 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.803642744 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.799802104 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.809584696 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.810433744 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.803112974 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.809508166 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.808848147 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.805561558 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.802956086 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.81220402 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.799612174 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.804464199 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.804197031 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.809235617 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.800941382 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.80686293 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.807509803 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.806481776 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.808754114 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.806352996 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.803919262 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.808641682 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.809209711 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.812704885 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.81124865 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.809335695 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.817271599 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.811306648 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.809602722 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.810541446 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.806907191 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.807972339 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.808367554 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.810957062 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.806214187 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.82324867 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.823832911 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.814701161 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.809247882 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.804624607 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.813161323 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.80794059 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.812234435 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.808578125 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.807814157 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.808358058 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.806010097 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.801557783 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.810904047 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.804948384 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.808161937 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.809572447 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.808788391 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.80643884 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.807257283 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.812183681 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.815292842 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.805339156 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.807450158 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.80474643 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.813019755 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.812090766 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.808093828 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.808104916 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.81768734 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.80923231 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.809684281 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.807459835 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.809892929 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.80665608 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.80990597 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.81548158 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.812494118 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.820406025 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.811964367 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.81896145 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.811686695 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.819634332 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.814470058 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.811735111 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.820732504 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.805090383 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.809149078 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.810970646 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.814477104 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.81739432 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.814927794 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.810412224 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.81742364 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.813078361 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.812170694 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.806676426 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.815085184 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.808881066 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.813858773 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.818852976 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.811251298 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.815499 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.812278307 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.805325883 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.815007386 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.807730253 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.809865315 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.81693895 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.814774173 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.812237416 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.808485817 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.81024161 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.807657061 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.816277358 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.807124012 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.806282348 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.80936946 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.81888349 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.812235334 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.820042618 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.8090425 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.821831842 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.816409671 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.820591706 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.817237888 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.811413186 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.81523042 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.810054587 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.814649159 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.812996636 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.814217149 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.815908461 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.813963958 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.813808769 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.817508218 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.815385855 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.814209353 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.816626775 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.813892224 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.823886562 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.840826747 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.812398227 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.813427873 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.807108822 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.815757726 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.821305576 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.81676118 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.811225305 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.815669833 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.823354625 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.81814516 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.814463425 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.819301952 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.812929045 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.818400308 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.809992046 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.810283477 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.818023668 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.810624085 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.814993884 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.817644347 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.818791079 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.81297757 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.812947266 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.815320951 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.814890984 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.824686601 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.817552693 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.815765613 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.81955687 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.811654857 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.813775375 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.812047823 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.818043443 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.815947661 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.811403904 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.81700074 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.820830638 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.820652712 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.816986468 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.813430163 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.81806199 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.815670695 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.817450099 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.820476123 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.818370568 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.819802617 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.815990536 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.819337521 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.817245509 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.812800926 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.812595023 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.814761462 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.811607843 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.818022228 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.822233487 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.817349527 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.812004894 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.8153416 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.814332474 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.815039437 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.820095081 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.829192309 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.817808221 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.829793256 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.825928521 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.827352947 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.817975491 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.822158278 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.827756786 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.814304528 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.817995949 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.821739492 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.822245448 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.817722119 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.822390383 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.823112619 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.823825448 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.817435496 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.815286684 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.828617795 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.815906293 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.821422651 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.818254043 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.823568359 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.817165866 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.81081728 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.816667896 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.818535558 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.818877453 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.813903025 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.816915133 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.813008241 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.809474512 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.812782053 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.820098363 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.809351517 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.81246908 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.805888395 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.81235779 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.815553646 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.807275525 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.806788922 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.811202761 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.811531088 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.80912642 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.81290355 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.802825795 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.80679461 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.809910182 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.80809321 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.809920311 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.800520724 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.797463313 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.795204618 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.809358153 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.81226982 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.802000169 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.806276802 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.80422642 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.80426611 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.803051696 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.809812314 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.804657285 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.814051209 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.806814988 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.797130676 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.805939828 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.801011328 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.809874597 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.808461043 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.8107617 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.800772717 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.80710293 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.797395545 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.809544411 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.80158146 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.811067219 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.827568139 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.798880938 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.80726238 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.804463885 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.810870649 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.804589702 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.799463447 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.803297281 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.807472811 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.807324631 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.817990582 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.809213854 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.811568264 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.806132019 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.80731373 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.806797424 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.80628319 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.817309179 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.809912622 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.808765501 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.808796691 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.811616089 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.826944996 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.794310194 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.817353629 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.840077949 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.801858323 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.806265555 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.813155997 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.803261907 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.810042271 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.810055443 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.810903085 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.80610301 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.799228939 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.811107929 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.807653323 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.813782555 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.807196721 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.805149845 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.801867977 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.806049966 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.811001511 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.801421899 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.8192614 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.80003026 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.807809341 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.811216591 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.808558557 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.803127657 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.823775381 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.818000944 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.801026923 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.80909628 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.799168055 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.809126498 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.806315428 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.81804102 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.813435411 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.81841502 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.814385289 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.810852665 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.809513677 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.798287183 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.808911793 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.803829374 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.809501488 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.804295113 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.826405162 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.821198898 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.814796592 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.810796193 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.815937493 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.805432476 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.808040629 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.810593652 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.810406938 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.813444884 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.812146862 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.814775613 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.803219184 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.80434167 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.811013079 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.814571593 seconds)
  done (took 1079.252106022 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.796631511 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.796519426 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.796323083 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.794137334 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.796577139 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.795884223 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.7952923 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.796790924 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.7963115 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.794226786 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.791405715 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.790956171 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.794502112 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.79374783 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.793407285 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.795151425 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.792720802 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.792625167 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.793837205 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.794764935 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.79540509 seconds)
  done (took 39.41648511 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.792934082 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.791035701 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.793199842 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.797128996 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.792906244 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.79529214 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.794274357 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.795936521 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.794872267 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.791967807 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.797071411 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.795624873 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.791244734 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.792342534 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.791425207 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.797056884 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.797450896 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.79460633 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.794360896 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.792602686 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.794255732 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.794213307 seconds)
  done (took 41.196337469 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.805856419 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.802725219 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.797551014 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.794900232 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.795134375 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.792784324 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.804878633 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.795024799 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.800479339 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.801255068 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.800087784 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.79951781 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.804322621 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.802848307 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.800104599 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.794273683 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.939969807 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.80384801 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.803249658 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.803826064 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.796882225 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.805046478 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.793429513 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.79325872 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.795620791 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.802528979 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.79781163 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.794642939 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.801138847 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.798447106 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.806384246 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.798657304 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.797264739 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.798319453 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.797765074 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.7975042 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.797852888 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.804487595 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.792435598 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.795200316 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.805433869 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.814249159 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.805763872 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.804916271 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.79178389 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.792686381 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.798378715 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.809985942 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.793045475 seconds)
  done (took 90.05133043 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.792588338 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.792000692 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.791036249 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.79885211 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.789237119 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.790646523 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.791102423 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.791859735 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.788599759 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.789937225 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.790560887 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.787886155 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.787191615 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.789941803 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.791342356 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.788101709 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.789450748 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.787800971 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.788651982 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.787607659 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.792701739 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.78958569 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.789601566 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.786867488 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.787711797 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.785964049 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.78575154 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.787514147 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.78356348 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.784794837 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.787316198 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.789899256 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.787179833 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.784861777 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.783439902 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.787695424 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.787404869 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.786987504 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.785049829 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.783305082 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.786620873 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.786492215 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.785881759 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.787725705 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.784342265 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.785017399 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.784227963 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.783909183 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.788204075 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.78695205 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.786067802 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.78374427 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.786488664 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.784000887 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.787481519 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.786680284 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.783457177 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.782031845 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.785733496 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.783728196 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.782204759 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.783938898 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.782847677 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.784681409 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.786380777 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.785673062 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.783923689 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.785386486 seconds)
  done (took 123.249466831 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.79331368 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.792355141 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.79536781 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.792857588 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.792099515 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.792204586 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.791910649 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.79374093 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.791904887 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.79299188 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.792220841 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.785209325 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.791392164 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.785111949 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.793829287 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.79129928 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.791544931 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.79306344 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.796183621 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.795239119 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.793257915 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.79413229 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.792431081 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.792623794 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.793839143 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.796216289 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.797284377 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.794548872 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.793358142 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.795301611 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.792929062 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.795436002 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.792804731 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.793337514 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.792910131 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.794518036 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.793809947 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.793751069 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.791241608 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.793634188 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.791918141 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.794968013 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.793528489 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.793453522 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.791012866 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.79312046 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.795563133 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.790835018 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.785620268 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.790513176 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.79225122 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.792483972 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.790848602 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.791492903 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.791402169 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.783069177 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.794352368 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.796201145 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.794171656 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.794060938 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.79142985 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.783653111 seconds)
  done (took 112.855336184 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.783164344 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.782323156 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.781297251 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.781207982 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.783120213 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.781338756 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.785557628 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.783917509 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.784212762 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.783663612 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783993455 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.780252268 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.780329544 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.7836315 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.781036787 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.781513651 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.780971062 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.784014407 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.78414812 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.782453075 seconds)
  done (took 37.365303585 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.781417077 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.788124701 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.782149494 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.782851183 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.786110143 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.779808145 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.785582786 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787755244 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.781238307 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.7847435 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.786374937 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.783217791 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.781270316 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.785486236 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.788016413 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.786401591 seconds)
  done (took 30.267550005 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.78347179 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.785494957 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.792339932 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.791578508 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.779767854 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.782671607 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.784381602 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.784176577 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.779082392 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.782240157 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.783183263 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.784565169 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.783972542 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.794322408 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.778659846 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.78494292 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.780214396 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.781286653 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.785075569 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.792866334 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.780750157 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.78065141 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.783946541 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.786079713 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.783211084 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.783431778 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.780232832 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.780501936 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.780534797 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.786219634 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.781258158 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.781213382 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.780239022 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.779939451 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.790853321 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.782778124 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.784880844 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.785365893 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.783327612 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.783764195 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.784599235 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.78268507 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.784301211 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.783668927 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.7804022 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.785055102 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.784695047 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.781374823 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.780354775 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.781307811 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.784752095 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.795413548 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.784103087 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.784163363 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.782668923 seconds)
  done (took 99.831369172 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.783079558 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.78653972 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.781862569 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.781116459 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.782345984 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.779021275 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.784149662 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.782132809 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.779557386 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.782574268 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.784765953 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.784616245 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.78317924 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.786648649 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.780223013 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.7862249 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.778426301 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.778212757 seconds)
  done (took 33.800662004 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.780903538 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.780628702 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.781522536 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.778208324 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.780008374 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.786777466 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.783088048 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.78348137 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.782255465 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.781562999 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.779538106 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.783131081 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.781786039 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.783017622 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.780660408 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778706798 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.784715768 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.781761835 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.779894135 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.779082257 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.78225455 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.783018906 seconds)
  done (took 40.910707118 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.783267289 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.784309633 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.800453546 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.82511413 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.818505765 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.784900001 seconds)
  done (took 12.510876946 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.781322654 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.782726158 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.781075093 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.785657432 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.783335517 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.780217954 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.781347575 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.782060176 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.782594554 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78361911 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.77977494 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.783763111 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.783052507 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.781468397 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786311231 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.783002521 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.781115271 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.780479233 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.780841835 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.784475133 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.78324104 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.784081603 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.782304401 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.781933516 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782371384 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.783841082 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.783242849 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.780608867 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.780415336 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.782669265 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.783535112 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.781672886 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786863028 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.782258708 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.78484301 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785448363 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.781290891 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787638463 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.785029952 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.781762517 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.786750881 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.784137853 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.78477 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783235046 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.786962802 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.781314836 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.781865618 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.782233503 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.785022203 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786269757 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785487098 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.782227265 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785086452 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.785910019 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.784594873 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786074405 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.782885402 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.782752541 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786243736 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.785238595 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.782254234 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786715088 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.784350416 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.783505614 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785569383 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787862902 seconds)
  done (took 119.428339414 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.784115948 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.783473532 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.782790875 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787817435 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.783510584 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783719612 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784523891 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782438283 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.783783248 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.784950761 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785108698 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.782709505 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.784189257 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785258511 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78412526 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.785494478 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.784160494 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783186236 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.782870877 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786438456 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788266552 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.784384512 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.783093004 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.783478588 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783612546 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786667165 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787331354 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.783385359 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.784439847 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.785109604 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.782763825 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.785045692 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784716285 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.785532927 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785144374 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.784985059 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785203791 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.786385865 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.783910324 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.787952562 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.784021941 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.787033363 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783959305 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.785535052 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.784654409 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.785205201 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.785137987 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.785000051 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786737279 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.7854989 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786027298 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.786166161 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787771216 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785016296 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785527518 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785050342 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786785532 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.785321292 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.784685654 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791868192 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.785656446 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785983308 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788866299 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786980106 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785977086 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789031515 seconds)
  done (took 119.544544139 seconds)
done (took 2492.283893582 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.844578532 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.95487264 seconds)
  done (took 15.518195748 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.96332959 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.912926059 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.798251855 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.84417563 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.796237642 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.793722577 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.81067051 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.794309171 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.80198081 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.799056367 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.797416642 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.984816634 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.80144061 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.794782024 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.798766453 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.892162873 seconds)
  done (took 51.114634531 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.801552661 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.803330974 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.814110109 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.804516511 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.804011575 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.821665906 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.836483683 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.80711379 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.860857911 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.826201686 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.936639071 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.809729768 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.804126851 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.862159782 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.811194887 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.819967937 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.905033853 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.875751425 seconds)
  done (took 34.733647376 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.881711357 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.803229855 seconds)
  done (took 10.42137043 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.833809378 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.829805093 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.831721628 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.825862036 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.801509325 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.807569986 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.803402324 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.80050196 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.804071083 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.81603907 seconds)
  done (took 69.884341228 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.808899605 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.803613611 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.804271776 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.802106056 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.794451677 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.795181787 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.803362936 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.802656036 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.495410765 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.837918124 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.810858364 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.809301104 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.803229608 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.806152648 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.800505253 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.829929286 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.962922058 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.800339385 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.798580193 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.809933265 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.805344671 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.868141742 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.817507251 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.802991681 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.832956111 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.495145814 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.813572973 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.810154065 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.925235926 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.801331045 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.803451222 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.808992645 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.806793386 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.190850491 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.100509592 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.800624249 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.809676355 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.810911007 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.800832239 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.916649245 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.805083957 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.810990477 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.753754517 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.080063578 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.902058906 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.847631808 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.158192794 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.804407169 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.80722449 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.836918724 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.80813487 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.806699096 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.82367405 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.32351978 seconds)
  done (took 129.105435586 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.808130543 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.288397568 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.955382808 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.803601371 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.089509099 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.034298244 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.799532734 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.849645942 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.806094381 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.054440162 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.975855907 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.918450558 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.801709804 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.802065165 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.797804905 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.796311161 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.952271649 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.874794319 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.799920603 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.801362441 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.837054597 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.069297527 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.925623401 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.944086537 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.82698107 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.030554671 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.924758014 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.9203084 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.801861438 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.798962765 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.873419287 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.802439937 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.804410278 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.80055603 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.967583922 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.906903139 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.89435507 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.799797103 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.840606945 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.802063139 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.795737321 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.022969742 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.906660697 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.939909042 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.049187458 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.026584349 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.799781093 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.801114982 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.804818307 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.994186358 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.017136529 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.057831137 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.929985982 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.805273514 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.153970366 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.802062032 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.83149017 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.055762099 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.033050591 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.91243891 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.841797536 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.804414232 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.799464405 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.119244987 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.803824635 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.906588937 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.184578585 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.806708521 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.915847075 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.914947195 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.033180397 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.04102652 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.830564528 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.805896658 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.845412158 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.088842646 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.872412552 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.051351372 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.852865083 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.801552965 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.896188266 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.803580263 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.97463594 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.120063762 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.066715634 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.842667545 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.805196736 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.803197212 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.052562224 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.052253655 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.075505442 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.0529854 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.965237543 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.803572561 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.803766907 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.803149923 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.838236875 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.936484074 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.802830706 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.168422615 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.04921244 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.576481797 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.835876662 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.124615942 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.940522889 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.804766101 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.808054004 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.805222707 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.01015527 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.849817073 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.812671296 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.805799643 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.051229586 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.748959348 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.930534905 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.503380132 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.876447825 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.804806917 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.072461996 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.807220657 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.056356848 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.855817783 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.117209851 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.167000659 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.849977614 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.999935982 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.050484769 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.803707339 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.072022024 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.116758182 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.92783051 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.052537232 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.550987993 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.806285271 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.099560287 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.813630643 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.826689089 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.978349629 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.812417493 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.984797712 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.813090491 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.114930173 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.830508657 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.978736664 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.07547312 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.08212125 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.848834566 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.864798713 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.822125974 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.942100824 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.812634705 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.778732739 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.990623607 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.926374091 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.807605597 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.37095606 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.809892891 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.956071838 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.108710254 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.829123731 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.879400481 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.806773574 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.809515351 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.901193108 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.835017502 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.434576518 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.808045282 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.977886102 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.789815538 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.258256542 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.805965216 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.118831034 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.014027137 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.808802891 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.809389353 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.608586238 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.806260704 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.964415393 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.968457833 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.593483807 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.813216284 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.025859817 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.807399972 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.942486248 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.81145664 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.805992703 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.16002987 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.881411761 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.812742353 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.817649198 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.810753398 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.8097716 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.04682537 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.832982945 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.53783206 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.946881822 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.0595394 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.117598492 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.076519012 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.854480348 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.811296254 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.076615411 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.85047301 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.885089131 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.808302707 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.834089241 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.057536577 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.810415666 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.038643167 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.099546469 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.82688682 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.86174103 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.810544987 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.862568138 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.810214868 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.952394271 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.908052877 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.808712986 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.80850881 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.924707361 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.937629653 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.004965519 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.810680779 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.812752989 seconds)
  done (took 940.360182669 seconds)
done (took 1252.857055392 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.811404479 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.807441018 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.793363735 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.809883446 seconds)
  done (took 28.963760177 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.818013656 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.816888386 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.827669263 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.81799214 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.817316277 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.817175602 seconds)
  done (took 12.658147756 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.838853081 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.810326451 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.81071802 seconds)
  done (took 21.203678823 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.88479999 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.225607492 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.919827359 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.263002258 seconds)
  done (took 10.037672783 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.823794283 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.823294276 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.824635744 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.81703986 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.818673356 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.821685608 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.816715527 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.817292474 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.820244255 seconds)
  done (took 18.13038642 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.089840521 seconds)
done (took 96.825799137 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.961993617 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.794999981 seconds)
    (3/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.950556385 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.909987427 seconds)
    (5/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.019084742 seconds)
    (6/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.08033517 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.948050348 seconds)
    (8/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.948271815 seconds)
    (9/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.043765341 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.853520041 seconds)
    (11/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.978334952 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.842798959 seconds)
    (13/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.966660007 seconds)
    (14/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.522768641 seconds)
    (15/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.392185582 seconds)
    (16/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.824261113 seconds)
    (17/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.798208213 seconds)
    (18/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 8.153835925 seconds)
    (19/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.316482589 seconds)
    (20/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.954328087 seconds)
    (21/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.600568475 seconds)
    (22/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.01844101 seconds)
    (23/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.309591035 seconds)
    (24/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.02296029 seconds)
    (25/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.228026025 seconds)
    (26/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.938710969 seconds)
    (27/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.917789107 seconds)
    (28/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.183694169 seconds)
    (29/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.797827648 seconds)
    (30/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 3.447741483 seconds)
    (31/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.806515427 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.851042321 seconds)
    (33/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.151045616 seconds)
    (34/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.83947974 seconds)
    (35/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.011263257 seconds)
    (36/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.116341827 seconds)
    (37/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.814903549 seconds)
    (38/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.947727071 seconds)
    (39/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.073281524 seconds)
    (40/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.980620201 seconds)
    (41/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.783104135 seconds)
    (42/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.839145529 seconds)
    (43/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.872593706 seconds)
    (44/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.801775264 seconds)
    (45/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 3.0856069 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.083490027 seconds)
    (47/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.482011043 seconds)
    (48/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.877814198 seconds)
    (49/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.902225708 seconds)
    (50/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.935342533 seconds)
    (51/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.893042372 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.632879547 seconds)
    (53/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.072708162 seconds)
    (54/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.803884708 seconds)
    (55/309) benchmarking ("map", identity, Bool, false)...
    done (took 3.334343814 seconds)
    (56/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.801263129 seconds)
    (57/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.826521281 seconds)
    (58/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.815952651 seconds)
    (59/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.996496933 seconds)
    (60/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.223033192 seconds)
    (61/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.212546537 seconds)
    (62/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.031859185 seconds)
    (63/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.144219175 seconds)
    (64/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.952712247 seconds)
    (65/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.102275049 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.062312669 seconds)
    (67/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.781534614 seconds)
    (68/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.821351454 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.189965616 seconds)
    (70/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.898561587 seconds)
    (71/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.942013149 seconds)
    (72/309) benchmarking ("sort", Int64, false)...
    done (took 5.522052531 seconds)
    (73/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.625971582 seconds)
    (74/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.830262039 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.860215618 seconds)
    (76/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.072239433 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.799262899 seconds)
    (78/309) benchmarking ("sort", Float32, false)...
    done (took 7.888184433 seconds)
    (79/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.253715413 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.862650574 seconds)
    (81/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.00170392 seconds)
    (82/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.964541814 seconds)
    (83/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.405968547 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.114357353 seconds)
    (85/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.423752819 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.809456375 seconds)
    (87/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.848262815 seconds)
    (88/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.960631492 seconds)
    (89/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.95990734 seconds)
    (90/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.919083326 seconds)
    (91/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.821661058 seconds)
    (92/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.819706555 seconds)
    (93/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.016746949 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.47396367 seconds)
    (95/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.152917452 seconds)
    (96/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.807268052 seconds)
    (97/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.917821396 seconds)
    (98/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.110658787 seconds)
    (99/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.840710452 seconds)
    (100/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.392034402 seconds)
    (101/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.816191171 seconds)
    (102/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.855905334 seconds)
    (103/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.003300115 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.039141548 seconds)
    (105/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.987409107 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.149044129 seconds)
    (107/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.113070532 seconds)
    (108/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.821215531 seconds)
    (109/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.702783773 seconds)
    (110/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.702473423 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.815509574 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.468055616 seconds)
    (113/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.928872898 seconds)
    (114/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.823327255 seconds)
    (115/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.317573092 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.116287317 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.807696883 seconds)
    (118/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.834261508 seconds)
    (119/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.438769992 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.067631123 seconds)
    (121/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.842560509 seconds)
    (122/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.881702365 seconds)
    (123/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.173648579 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.912954146 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 2.271950206 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.842133853 seconds)
    (127/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.844840748 seconds)
    (128/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.028264306 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.10233948 seconds)
    (130/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.094903701 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.203062215 seconds)
    (132/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.99778019 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.117734092 seconds)
    (134/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.017252754 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.095806079 seconds)
    (136/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.122171335 seconds)
    (137/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.818164912 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.896941648 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.507272888 seconds)
    (140/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.8559635 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.947636422 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.842917799 seconds)
    (143/309) benchmarking ("sort", BigInt, false)...
    done (took 6.820155688 seconds)
    (144/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.94575373 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.045071279 seconds)
    (146/309) benchmarking ("sort", Int8, false)...
    done (took 4.851322555 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.847119974 seconds)
    (148/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.82183084 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 5.334901749 seconds)
    (150/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.807359142 seconds)
    (151/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.989195747 seconds)
    (152/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.80500387 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.415358309 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.849118671 seconds)
    (155/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.843073197 seconds)
    (156/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.117656809 seconds)
    (157/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.359468228 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.827409319 seconds)
    (159/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.719427509 seconds)
    (160/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.107660901 seconds)
    (161/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.202221178 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.748022771 seconds)
    (163/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.911580996 seconds)
    (164/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.755158372 seconds)
    (165/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.903717567 seconds)
    (166/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.166124656 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.825020273 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.144372149 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.251605547 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.989690069 seconds)
    (171/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.198345523 seconds)
    (172/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.949525617 seconds)
    (173/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.921173029 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.824532562 seconds)
    (175/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.228644162 seconds)
    (176/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 4.047983892 seconds)
    (177/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.119487823 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.821592896 seconds)
    (179/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.3394112 seconds)
    (180/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.817047044 seconds)
    (181/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.186055134 seconds)
    (182/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.806039346 seconds)
    (183/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.870660134 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.121185479 seconds)
    (185/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.852064707 seconds)
    (186/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.907637715 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.928065999 seconds)
    (188/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.883333843 seconds)
    (189/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.84938178 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.824701364 seconds)
    (191/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.83477407 seconds)
    (192/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.920720797 seconds)
    (193/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.805710585 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.867659527 seconds)
    (195/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.139680119 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.941831841 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.883327201 seconds)
    (198/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.043742831 seconds)
    (199/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.88496952 seconds)
    (200/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.806870788 seconds)
    (201/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.97416413 seconds)
    (202/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.852195385 seconds)
    (203/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.903310156 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.825360007 seconds)
    (205/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.536784226 seconds)
    (206/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.020601931 seconds)
    (207/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.873196982 seconds)
    (208/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.340349911 seconds)
    (209/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.053800173 seconds)
    (210/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.077001153 seconds)
    (211/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.977764124 seconds)
    (212/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.134466609 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.898076711 seconds)
    (214/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.893914645 seconds)
    (215/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.851713015 seconds)
    (216/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.841077403 seconds)
    (217/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.84972309 seconds)
    (218/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.935622999 seconds)
    (219/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.019895133 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.853143568 seconds)
    (221/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.390571149 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.631679841 seconds)
    (223/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.922206765 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.119840575 seconds)
    (225/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.128116405 seconds)
    (226/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.254226843 seconds)
    (227/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.864286238 seconds)
    (228/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.174865762 seconds)
    (229/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.881833884 seconds)
    (230/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.519377588 seconds)
    (231/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.06948085 seconds)
    (232/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.014945335 seconds)
    (233/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.833500108 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.487538029 seconds)
    (235/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.203589812 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.824378958 seconds)
    (237/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.956180256 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.071915622 seconds)
    (239/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.121637102 seconds)
    (240/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.022550319 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.210548856 seconds)
    (242/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.916474024 seconds)
    (243/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.842246266 seconds)
    (244/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.832087495 seconds)
    (245/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.375339666 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.846306773 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.825653283 seconds)
    (248/309) benchmarking ("map", abs, Bool, true)...
    done (took 3.208672145 seconds)
    (249/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.700595186 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.833851718 seconds)
    (251/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.433397847 seconds)
    (252/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.521523208 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.00282356 seconds)
    (254/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.832424822 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.211982175 seconds)
    (256/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.886733976 seconds)
    (257/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.431417796 seconds)
    (258/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.059546659 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.852077139 seconds)
    (260/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.011606592 seconds)
    (261/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.830085937 seconds)
    (262/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.211419051 seconds)
    (263/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.899922665 seconds)
    (264/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.958213934 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.201827972 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.06716859 seconds)
    (267/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.065770874 seconds)
    (268/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.180376788 seconds)
    (269/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.812650339 seconds)
    (270/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.921958884 seconds)
    (271/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.120081313 seconds)
    (272/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.172130247 seconds)
    (273/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.924703796 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.164548787 seconds)
    (275/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.908170081 seconds)
    (276/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.429966121 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.495974451 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.151293321 seconds)
    (279/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.027633098 seconds)
    (280/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.935564315 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.844878385 seconds)
    (282/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.710589685 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.907063519 seconds)
    (284/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.431744085 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.90780974 seconds)
    (286/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.90627272 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.888212885 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.946394785 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.017154827 seconds)
    (290/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.842408348 seconds)
    (291/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.714897459 seconds)
    (292/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.996577035 seconds)
    (293/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.010158322 seconds)
    (294/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.829004269 seconds)
    (295/309) benchmarking ("sort", Float64, false)...
    done (took 5.658741672 seconds)
    (296/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.133839391 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.973309892 seconds)
    (298/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.181714408 seconds)
    (299/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.236928449 seconds)
    (300/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.422447396 seconds)
    (301/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.855043891 seconds)
    (302/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.116515959 seconds)
    (303/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.954095301 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.854797816 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.221241689 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.745840215 seconds)
    (307/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.774101104 seconds)
    (308/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.944680631 seconds)
    (309/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.819353372 seconds)
  done (took 1011.392354943 seconds)
done (took 1013.15347118 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.002686884 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.86175594 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.845618661 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.867241702 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.955358494 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.876411969 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.856424123 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.847207981 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.890611591 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.895197819 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.839238148 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.877001447 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.845149791 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.842705726 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.847456699 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.858651392 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.150843812 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.867074801 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.862904845 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.855157898 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.863701947 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.845696385 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.895480306 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.877565459 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.851473289 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.852096872 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.84831544 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.865117537 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.958101228 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.847712737 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.850609002 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.858734736 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.154167437 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.864388749 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.837132613 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.867282389 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.853836211 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.854735934 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.848538363 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.875412085 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.289994715 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.845173139 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.845999533 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.844121329 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.84298306 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.850962643 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.84893474 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.85344695 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.856765407 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.857486936 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.288712103 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.863086374 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.849963828 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.849531851 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.857270465 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.848612261 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.851039619 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.86325199 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.868027622 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.862219063 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.147426504 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.871751839 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.849379231 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.864364951 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.852604915 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.327135134 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.844886101 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.852886605 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.288638711 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.854902802 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.322495066 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.858451878 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.850077434 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.861689178 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.879850328 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.155525021 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.863352662 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.845648226 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.855278183 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.844959769 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.859783799 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.85826551 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.851358805 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.846465069 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.861323728 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.881059295 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.854606192 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.846101339 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.859890228 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.863803672 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.859016305 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.858322437 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.847444378 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.840195167 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.855545739 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.851666164 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.851124366 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.849175806 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.85157284 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.860916828 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.287449322 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.865646479 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.845312931 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.845610939 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.848681737 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.863123264 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.288794702 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.848765525 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.869275736 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.896416156 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.848661708 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.148302145 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.871727248 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.864937221 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.856433386 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.854684696 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.842724489 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.14989354 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.31101527 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.862592224 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.848493429 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.844235121 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.86343508 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.851426044 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.846620621 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.155941867 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.870996544 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.859657683 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.968565853 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.85842979 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.882553466 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.845199298 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.850765198 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.875309286 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.86344376 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.877283746 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.855351601 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.866678932 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.864399149 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.846617609 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.86048255 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.863726381 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.855627061 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.856024126 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.845797739 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.876255624 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.860825203 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.862921695 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.872451048 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.967017901 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.846427241 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.14880754 seconds)
done (took 291.731373183 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.929550212 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.83888501 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.950584677 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.844790464 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.944456677 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.932964545 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.839689552 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.840449806 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.842157382 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.25564916 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.841088757 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.849346302 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.841993484 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.842415104 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.945453758 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.844848761 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.841900625 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.189294796 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.854191702 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.925447494 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.839571433 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.843685127 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.842984752 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.228435314 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.838583237 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.850206631 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.91758521 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.842245324 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.219258967 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.844233305 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.84047563 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.192537991 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.940433295 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.861107102 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.852443591 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.85029339 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.930612113 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.850308899 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.931002457 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.947455531 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.945715518 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.893690627 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.848558147 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.843090091 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.849442083 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.85475592 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.844052004 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.873113759 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.841823618 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.846541423 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.218362562 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.856252656 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.844235059 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.843898213 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.846475964 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.883266951 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.846112378 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.856762444 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.950613894 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.854360098 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.913161957 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.261782393 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.232222824 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.847586563 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.844374204 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.842459316 seconds)
  done (took 183.008533824 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.915855617 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.924442302 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.916462498 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.8479808 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.900907375 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.919105532 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.848723766 seconds)
  done (took 15.047109977 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.854843982 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.848927253 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.906871757 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.904898497 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.853236853 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.011570944 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.84621547 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.862284381 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.846577812 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.916658746 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.847932983 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.846791849 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.855132287 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.849759066 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.907654204 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.864461626 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.96524331 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.849530238 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.854640199 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.006511034 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.847251017 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.854311424 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.90516783 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.861166514 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.851949709 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.856918163 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.448664232 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.85642668 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.845274981 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.848451479 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.844781541 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.891406046 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.852934822 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.847344616 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.843692804 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.991078511 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.85655259 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.84286122 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.850157813 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.845557713 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.848610865 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.846305038 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.85034924 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.84534377 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.853452231 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.877633271 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.848904472 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.847033901 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.847212573 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.848932859 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.914642765 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.851251593 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.848307077 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.844116764 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.919922447 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.85501967 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.861500836 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.847125558 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.850253454 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.845763441 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.010863535 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.908138018 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.850548225 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.9088487 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.849962034 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.851363738 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.852093498 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.854112584 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.916280108 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.850009597 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.913075125 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.850678831 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.056911979 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.876260842 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.852939033 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.856324647 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.857453678 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.861995982 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.851590797 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.863411613 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.851320748 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.855621654 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.862517969 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.850447601 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.851191013 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.989078017 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.989000866 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.849468648 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.870938577 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.862270607 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.85090172 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.920061302 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.85494385 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.851869643 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.912943424 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.973178465 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.911553834 seconds)
  done (took 204.269248157 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.864258986 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.864095407 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.857864274 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.875208665 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.855366321 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.856245385 seconds)
  done (took 12.952025443 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.858582936 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.85527123 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.856493113 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.853133016 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.862168495 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.855630106 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.862692342 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.856506668 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.863796312 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.853566453 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.85815092 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.85573435 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.8587094 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.864717644 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.860375572 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.856332222 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.862945506 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.851606238 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.8530195 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.86167372 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.000638572 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 2.295711844 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.862808573 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.858057097 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.861819865 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.85592933 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.866397432 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.855921027 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.855470613 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.867802761 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.866902169 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.856002465 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.859479485 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.863798746 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.870801434 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.859421051 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.859368211 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.858285031 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.853598856 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.860752465 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.858752598 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.864533913 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.856089624 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.858389458 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.860744426 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.862913297 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.862336417 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.866850023 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.866577201 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.859154141 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.859850925 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.856822341 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.859528357 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.859811457 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.862750776 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.862997723 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.864005388 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.866256971 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.86428426 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.860329762 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.858084677 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.859737643 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.86216966 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.870726216 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.864609238 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.860196295 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.861663521 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.870597421 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.865690425 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.858743055 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.861130305 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.85575934 seconds)
  done (took 137.3134687 seconds)
done (took 554.373246834 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.100329116 seconds)
  done (took 8.882536122 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.931976462 seconds)
  done (took 8.801813619 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.25255489 seconds)
  done (took 10.034357609 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.860218968 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.869892607 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.858707483 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.851285712 seconds)
  done (took 29.232648631 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.133923363 seconds)
  done (took 8.916179614 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.865354522 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.849306947 seconds)
  done (took 15.562328796 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.923441755 seconds)
  done (took 8.707444404 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.267537529 seconds)
  done (took 9.055451279 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.876279634 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.861302146 seconds)
  done (took 15.533881163 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.837667801 seconds)
  done (took 8.621462121 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.488638767 seconds)
  done (took 11.279280603 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.863416606 seconds)
  done (took 8.658635028 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.858057972 seconds)
  done (took 8.640454098 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.966975001 seconds)
  done (took 9.750514057 seconds)
done (took 163.46050909 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.854655816 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.850021699 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.847893956 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.848523212 seconds)
  done (took 29.182089935 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.891950206 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.891427888 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.892381797 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.901950403 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.893241057 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.890756804 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.88299445 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.883186704 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.901440458 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.894640586 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.892772463 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.892852851 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.892022132 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.883720294 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.893225274 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.895301688 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.902467213 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.892629606 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.883136908 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.895779249 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.857996532 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.902198338 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.895247333 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.858138478 seconds)
  done (took 47.144524997 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.062726467 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.931706164 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.012464162 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.912366866 seconds)
  done (took 9.703239374 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.909731598 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.912332761 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.921829445 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.962694418 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.994562927 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.919688827 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.887764423 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.879237327 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.866260159 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.911593609 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.986964029 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.926714836 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.99438564 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.85802756 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.041431809 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.859058719 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.857939184 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.911871576 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.96250656 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.975659982 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.860078674 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.911522696 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.916234322 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.928686907 seconds)
  done (took 47.94168678 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.859004898 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.867407918 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.864391071 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.858970251 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.85836159 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.858643172 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.865725921 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.860177341 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.879518239 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.860324416 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.858736922 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.858891348 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.85884173 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.860232346 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.857759713 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.872481751 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.872559875 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.859059219 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.863607971 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.866031801 seconds)
  done (took 39.046437657 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.855230201 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.710214829 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.208061072 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.112907772 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.857002945 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.851882047 seconds)
  done (took 31.381470844 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.875331186 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.926971689 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.869725372 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.920710119 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.002686081 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.868260456 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.862280494 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.930262056 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.969423095 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.934757641 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.878125411 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.886183901 seconds)
  done (took 24.713540479 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.869785823 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.856453515 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.858105326 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.872320562 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.873767683 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.866925737 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.870718555 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.857658749 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.874681371 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.877226808 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.867087769 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.875364696 seconds)
  done (took 44.210623631 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944240833 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.899498994 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.872746399 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.53871321 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.235017278 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.063334603 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.509783711 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.19002511 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.861735708 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129735917 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.871674073 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956133565 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.114346301 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.324412964 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.889816383 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.314811139 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.152901304 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061450403 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885986444 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.515640992 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918928291 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.002158868 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.57893791 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.912560074 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.068535543 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.992212193 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.118458872 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.859268381 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99051913 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.895037487 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868484627 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.85858749 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.132623051 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.238455015 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961349272 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867714095 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.478970169 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.57469353 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.939132856 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.596613825 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.54616394 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.970658469 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870009064 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858695144 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.792574513 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.970162681 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236809707 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.865234096 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.570481078 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.859687852 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.871038898 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952933614 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.86219608 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.674885105 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.772953401 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.857113545 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.856579199 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867466438 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.428923793 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.950988943 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.01468328 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.832521076 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.953548705 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.516706128 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.237773452 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.005069355 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.863594498 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.864962296 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79557764 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.591057027 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.910458556 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208249593 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.87651886 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.50242024 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.151462743 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.919178815 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.799490981 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118337559 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.371772442 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.8346586 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089635231 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.861279591 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795490746 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.807389894 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.794855674 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.11882283 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898597649 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.596357744 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903795754 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.190964296 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.873125398 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8784398 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885047921 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.086262245 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.748058195 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86052683 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.623637789 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.01581032 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880424606 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.191858664 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.797783321 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.861299636 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.120409433 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.073516744 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.902181429 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.354052257 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.018490602 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.39607994 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.914293685 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.978430453 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.909075953 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.125052429 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918896744 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.952798893 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914244385 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.861693593 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154277626 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.419538748 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.999231663 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.880094261 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.985825817 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.171255086 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889077029 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944553938 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.865504866 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.862981503 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.622314873 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.412009693 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.86323644 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.868685141 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.910994457 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.911151467 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.873352883 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811471844 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.485000981 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.87996952 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.874100463 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.08722918 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.396405978 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.176222671 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.797604727 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.193684702 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.952177547 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.08215316 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.501976853 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.928356913 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.125167852 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.905660634 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.942270051 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909242436 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883341938 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963938686 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886949876 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.975614594 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.157252559 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.867890608 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.86756568 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.63366752 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.901191881 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87170619 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.872153024 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.621203975 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.130316301 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.888438735 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.87003735 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.753760521 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.87860286 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930813957 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.871003841 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.875642269 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.409653887 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.575854703 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.872088731 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.451583022 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086651368 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875748722 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.526808751 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.982385226 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.950134213 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.133014487 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924022789 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.799223333 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.578766123 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.559916731 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866996909 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.801988049 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.866433022 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876504491 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.878925424 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.06699177 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.132969303 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907130452 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.532173866 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.910664411 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87784032 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.872655966 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866811659 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.378817467 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.956496906 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.015084519 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.912094362 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008965024 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.88086814 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.799112401 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.870956791 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.872938174 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.866047019 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.867416421 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899867201 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.52416641 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248980351 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.128911743 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.482348254 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.881767756 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.572233168 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.920800451 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.870908668 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.646999126 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.003654904 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.909804069 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896644171 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.87941871 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.603170736 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.572293306 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.431393668 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17504995 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.160246375 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.29400603 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.041408332 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.896629159 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.207436924 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803235255 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.426466838 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.927557869 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.211935554 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.814876149 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951662232 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.509704869 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.201135244 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879251741 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096773691 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.24411292 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.558982085 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.032672464 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.082185845 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905315121 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.988388625 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.830967768 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.389779132 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011345305 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.520673194 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.06802561 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.203676386 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.509097032 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.985247875 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.871257203 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.542586677 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953573428 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.581478821 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.044255894 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.048743688 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.783616699 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340667955 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.876813406 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.096540408 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209589388 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.001517932 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.992208541 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.808052553 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.881806405 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.882100621 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.872976895 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.870693298 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.750023669 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.121285033 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881519634 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.806008068 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.966799022 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.151871007 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.771664122 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.877731502 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.871153976 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161431349 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.38760132 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038003029 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.942080711 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.391308196 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87667325 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.808173352 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.806124923 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.565011823 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.878047865 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.850125865 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.072149042 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.979379092 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.784589293 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.923331643 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.120389124 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.128489569 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.88685946 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.135325362 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.146295316 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.572325779 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897956473 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.973321497 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.511887256 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.973192393 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.873208745 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.110179383 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.627771004 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.097574289 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.899602783 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.826667454 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.875622215 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.08885872 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.872825121 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.753104836 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092924166 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.597096246 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.876734652 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174551117 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944377418 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.757507725 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.910113211 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.963763753 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887010502 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953316072 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884996652 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.88630076 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.885708675 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919949257 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.751695265 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.986517329 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.887561136 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967994676 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.970200647 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.394239512 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.875569168 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141583697 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223061742 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.186632253 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.931665805 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.875515126 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88489899 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809571022 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019769589 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.101574441 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.149619458 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.005989542 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.99249275 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901932681 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.512260907 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.045073736 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116306595 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150812926 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.770517825 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.353693822 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.916447411 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.876743304 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887106218 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.089505192 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.083288416 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172242112 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.046420829 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.925768427 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.23900074 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.151971158 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.876863033 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.875459782 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.41229897 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.880399154 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.554374654 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.915800522 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.750994742 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.143173899 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.888039055 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.255680539 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.901823642 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.037820428 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.650956085 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.581623421 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.167346299 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.855817937 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.932793115 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.14455541 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.251223948 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187323686 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947083428 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.890360199 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.992433664 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0259456 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.757645095 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.87504015 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.879848826 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.93079116 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.588410833 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.888572773 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.14578405 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.188499729 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.873975565 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.757577954 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898735419 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.890319668 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.103844893 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.139038484 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.133610804 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888754922 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.887228894 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.695695959 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.144120137 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.937392694 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.813205571 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.881273168 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977698311 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.127956245 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904104797 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.331886619 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.591000077 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144249876 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.881066983 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90329617 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.01319344 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.231631621 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18882685 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.413565782 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079281572 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.468966776 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.428909733 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182043791 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.885555365 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.000336561 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.185411801 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.8864449 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.93571453 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919548291 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.142684545 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.191130479 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.891842243 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.563626814 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.848836779 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.223932007 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.445150042 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.820978225 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.887267316 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.943803464 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.881611819 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.014435447 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.889082696 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.760499792 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.005136833 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.640725131 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.156786075 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.885155693 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.876522901 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.610418973 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.131496169 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920055333 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02600429 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891584328 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.556018583 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.235462042 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.140564324 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.93846239 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.891975945 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.885219812 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883510569 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.869611335 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.078515149 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.079220743 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154850977 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.969904199 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.919996463 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.888339193 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.099505764 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094162943 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.762148573 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.010854983 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.940172816 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924610057 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.790522677 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.385873601 seconds)
  done (took 1671.667810458 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.908619678 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.915444727 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.919978435 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.921168534 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.918644307 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.020022211 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.949238183 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.951787053 seconds)
  done (took 57.320318403 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.886178476 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.103276505 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.895117307 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.887663247 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.892760224 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.886792096 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.054219497 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.891949518 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.891469948 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.897352447 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.888768844 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.883055705 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.197366808 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.911596681 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.887034337 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.868819331 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.891354719 seconds)
  done (took 74.651949176 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.886942544 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.904881645 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.920452388 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.899355651 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.913377339 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.881387198 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.705273612 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.904955472 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.886471427 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.012830436 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.51546255 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.896107203 seconds)
  done (took 87.144271703 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.896147216 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.894568918 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.89547095 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.895230083 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.895069301 seconds)
  done (took 11.296262522 seconds)
done (took 2177.214868505 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.141515844 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.101589854 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.109170752 seconds)
  done (took 6.026831312 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.035166175 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.081362336 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.203467766 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.209589348 seconds)
  done (took 10.34636305 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.173063742 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.256457045 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.101187405 seconds)
  done (took 8.34374476 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.288133983 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.892605803 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.992306686 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.883293853 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.882947156 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.884793119 seconds)
  done (took 22.467146605 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.889701733 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.890851316 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.889382454 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.891663498 seconds)
  done (took 9.377409835 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.87003677 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.605341973 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.86751899 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.882112287 seconds)
  done (took 21.040390489 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.644257505 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.648083421 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.632475683 seconds)
  done (took 9.74094886 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.483376118 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.79902173 seconds)
  done (took 9.097270737 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.1530508 seconds)
  done (took 3.967189221 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.020559775 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.153034152 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.354672867 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.374969181 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.436319642 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.752891593 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.197054843 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.128218601 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.276152599 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.325314669 seconds)
  done (took 24.83623578 seconds)
done (took 140.374237856 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.268525955 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.119419018 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.09305497 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.265721589 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.176135656 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.100992287 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.104789859 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.253096742 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.729145366 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.726970931 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.223554669 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.117435043 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.057349294 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.126916918 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.055733843 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.256190851 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.10857067 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.287705087 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.914769484 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.115460239 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.10289244 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.863579409 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.066069538 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.872705844 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.106965732 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.040691805 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.444802354 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.255883099 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.074547608 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.449867571 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.037650985 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.275079567 seconds)
  done (took 171.508620311 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.814104851 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.884970194 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.885233671 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.89784118 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.297394212 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.886924458 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.888171892 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.885800163 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.055139701 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.039546097 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.886089511 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.283344578 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.887680266 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.885497179 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.88926938 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.885280666 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.250929413 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.874318732 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.896554121 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.89917328 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.90273622 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.227274733 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.904710671 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.273073863 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.247862094 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.906482868 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.887022633 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.909451877 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.892753307 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.895937255 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.900081124 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.886396503 seconds)
  done (took 208.827671931 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.890992347 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.886975911 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.886713025 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.889319736 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.899419219 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.890182532 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.890669764 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.887910625 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.59099257 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.583589877 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.899157255 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.89658588 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.888003785 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.894289865 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.89189524 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.891945698 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.900132524 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.899598696 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.895376863 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.896582874 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.90286649 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.714583325 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.902762511 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.712115006 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.89655243 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.8970544 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.890330025 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.898735663 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.899368442 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.900815319 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.900784255 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.8898072 seconds)
  done (took 221.488607503 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.097158925 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.898568639 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.897860645 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.83075322 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.898554596 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.897590844 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.893037391 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.087950351 seconds)
  done (took 19.337342844 seconds)
done (took 622.991375532 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.350667354 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.191431786 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.072150269 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.92339199 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.177142389 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.948470617 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.918839975 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.979126346 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.104556584 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.98522413 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.568084914 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.934498332 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.65970715 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.934916961 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.041501042 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.972916769 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.469848185 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.551025245 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.090480775 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.013787399 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.079468919 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.856664054 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.989088241 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.139468022 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.669016944 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.896636168 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.075205435 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.470592624 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.923455027 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.081567761 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.639541252 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.291019694 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.926659078 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.917282635 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.969955323 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.950995195 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.250832401 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.922626086 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.039499877 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.664269084 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.99221811 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.98766877 seconds)
  done (took 105.444118628 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.88984118 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.887638727 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.887535478 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.888944627 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.889875064 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.890540785 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.888226093 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.888723382 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.889396807 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.889332939 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.888606041 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.891382669 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.888316964 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.89103893 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.889686478 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.888461547 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.890483155 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.892239655 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.889737452 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.888767955 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.889180721 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.888821519 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.889253716 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.887853848 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.889621463 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.891273475 seconds)
  done (took 50.96236017 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.901026375 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.043819975 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.127000914 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.921497736 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.907924938 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.906981752 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.922548996 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.90605756 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.906595373 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.905255343 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.994029992 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.907046152 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.923922706 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.126948626 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.917014669 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.902147152 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.902032229 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.904351374 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.051441732 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.920307961 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.923485212 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.906281959 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.923179572 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.918693739 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.907240985 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.905499271 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.908824545 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.342169778 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.912936562 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.996354878 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.946904221 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.922549624 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.291652586 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.137075648 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.957036337 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.905365727 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.90415291 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.999932243 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.909569063 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.904364036 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.922800175 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.909332816 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.133300169 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.400436218 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.917269658 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.903321871 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.352542183 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.006155129 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.945910394 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.917729083 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.135200121 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.921256684 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.905107972 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.907360098 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.942432858 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.914908081 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.907200879 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.209695924 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.918199827 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.925111156 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.909339642 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.906695273 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.058443186 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.91099413 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.047907801 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.914311326 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.915695734 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.906850836 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.133715139 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.922567827 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.403216484 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.919454832 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.906172887 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.997616308 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.051792868 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.375905047 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.918359966 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.063366614 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.310281084 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.931377653 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.915323621 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.332969638 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.934962201 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.914387742 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.909110581 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.907848855 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.906565619 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.961899817 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.92396084 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.340569846 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.410104692 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.220809327 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.934996185 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.923633986 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.909835421 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.212941075 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.91410539 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.907056283 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.128211603 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.41825177 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.920834725 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.916426618 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.39088553 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.923070239 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.926865041 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.918132187 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.1365312 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.922487271 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.952046148 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.907068982 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.915370813 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.912830811 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.928484366 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.916499554 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.907797479 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.378744114 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.016443712 seconds)
  done (took 235.868522781 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.905602026 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.90101045 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.904498655 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.901648437 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.904547039 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.9097984 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.903864888 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.903630426 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.90900576 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.903678668 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.903035492 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.905268143 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.904754936 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.910306302 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.358596861 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.913176796 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.518684671 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.910894588 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.906583185 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.919000179 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.589636106 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.914235955 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.907687198 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.904215341 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.907846876 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.910972019 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.922370273 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.929745713 seconds)
  done (took 169.018695828 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.911632707 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.095774616 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.932342519 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.949132809 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.921060008 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.909213054 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.93807838 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.934610157 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.919824316 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.910431615 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.908419467 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.974776829 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.917694373 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.045950991 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.941304003 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.945338433 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.020360423 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.915376109 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.909149246 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.908984269 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.941917338 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.908255437 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.976341335 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.038352482 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.929770362 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.033279928 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.917021821 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.912111347 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.914728587 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.033810745 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.925332467 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.972313444 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.938533429 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.931626903 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.036299017 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.027695644 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.01628483 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.940482014 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.914561007 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.910003878 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.910297459 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.900959591 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.0333952 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.931257412 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.915974463 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.020845295 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.927585208 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.913525336 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.921375241 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.911507212 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.928173683 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.93343377 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.983771485 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.043220023 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.941727053 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.93867298 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.940922193 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.20198797 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.926608081 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.017121542 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.904122865 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.032219263 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.929698215 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.901486909 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.911964954 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.917589817 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.941163305 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.946128101 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.024194723 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.919561758 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.016499949 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.944014184 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.920449568 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.912841073 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.916467122 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.031953918 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.033563497 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.945980102 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.948961307 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.94727028 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.911743231 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.916974787 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.90350451 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.935297888 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.918917602 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.030675882 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.033022932 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.919227072 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.916951377 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.916718695 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.917666535 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.942305863 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.044008755 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.947992556 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.014152475 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.980855386 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.986679158 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.932572384 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.927947414 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.919488667 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.981845553 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.92520625 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.925322459 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.256071636 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.985403646 seconds)
  done (took 207.345342748 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.013976018 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.388991247 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.967416945 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.97496271 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.210198868 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.340645288 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.729180343 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.96161488 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.967471879 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.993954143 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.129666286 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.024453256 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.978009077 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.952319151 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.378728561 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.960937864 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.966957773 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.988411572 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.969349079 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.533443656 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.278445736 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.083084889 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.966285485 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.121125511 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.944165274 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.273035958 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.456810539 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.347214639 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.002073391 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.311844706 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.318971803 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.643600343 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.183581436 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.206455999 seconds)
  done (took 76.41508082 seconds)
done (took 846.87541684 seconds)
SAVING RESULT...
DONE!
