cset: moving following pidspec: 9349
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.338339357 seconds)
loading group "string"... done (took 0.53388382 seconds)
loading group "linalg"... done (took 6.952606727 seconds)
loading group "parallel"... done (took 0.148682486 seconds)
loading group "find"... done (took 1.073042887 seconds)
loading group "tuple"... done (took 1.80167797 seconds)
loading group "dates"... done (took 1.222454658 seconds)
loading group "micro"... done (took 0.214852846 seconds)
loading group "io"... done (took 1.002124587 seconds)
loading group "scalar"... done (took 35.995592926 seconds)
loading group "sparse"... done (took 11.067305579 seconds)
loading group "broadcast"... done (took 0.898342776 seconds)
loading group "union"... done (took 11.752152922 seconds)
loading group "simd"... done (took 4.103968117 seconds)
loading group "random"... done (took 8.43389505 seconds)
loading group "problem"... done (took 1.846976522 seconds)
loading group "array"... done (took 19.65973489 seconds)
loading group "misc"... done (took 1.623483635 seconds)
loading group "sort"... done (took 3.062034573 seconds)
loading group "collection"... done (took 16.361124227 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.485681049 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123401054 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114803726 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118502675 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.145413485 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11466538 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123590249 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083617923 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.773902414 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147843864 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119275303 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.41448848 seconds)
done (took 5.058141887 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.171098931 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083358127 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081542239 seconds)
  done (took 1.292893244 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06499382 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121550702 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066475122 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066665698 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067011147 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066119811 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06605512 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066408432 seconds)
  done (took 1.652328794 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073304728 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068930365 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068356681 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067844959 seconds)
  done (took 1.410330298 seconds)
done (took 5.731204965 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.764372293 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201415406 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182781157 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.395539571 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.128566941 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.154391234 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.637410767 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.329207104 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.182661738 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080762365 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104110413 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.317065956 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106795331 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.634337124 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073969798 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089944586 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136990605 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.416052292 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067096919 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082190151 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088770393 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127676949 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085188486 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074203887 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.144316826 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067599361 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.13334507 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080010633 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069930809 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.207020907 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172218409 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.65855703 seconds)
  done (took 10.161490938 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096633064 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097229486 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068548224 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136138773 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096120896 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069990482 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071029782 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067176919 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086553228 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127274021 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088542807 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100447894 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06529698 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068868017 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084651581 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203196557 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079634303 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08142592 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070131714 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074991988 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.118977585 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078032662 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077552953 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07728451 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127826349 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.178872256 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096024646 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096517923 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066748489 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080597054 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115162367 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125709751 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065069932 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066181146 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124232167 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094211354 seconds)
  done (took 4.583078013 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.291131686 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140043758 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090486076 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.132073923 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064812811 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107008195 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065688085 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080309576 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.199516525 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.292503986 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.109519074 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.573459171 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110714377 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103158038 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06784916 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068122693 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066939756 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.33839918 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107540741 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103733815 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080576029 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069607551 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068268865 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.342162538 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067554115 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063636725 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067836874 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057353233 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122583554 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067755329 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.020471735 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.069265488 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125342438 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066751512 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064032317 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100118417 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.219094019 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.143724616 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068617967 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064849921 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.14987764 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069980096 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065884368 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083353427 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103362539 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112356421 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064999284 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067240552 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161964956 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064280447 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079172129 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.978039724 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153321326 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077767684 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064767746 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.244299968 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085927887 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069082245 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064597969 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.171083678 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137705203 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067524205 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066244152 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068006948 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068848739 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.367613843 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066282564 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.780201564 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069439024 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076232847 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068824811 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069596151 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07271511 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074954756 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085386255 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066421409 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075598734 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066196455 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065943516 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06683728 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084501984 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.361321441 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066589561 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06817459 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064808698 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086518504 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096592595 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066589768 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06523253 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100249193 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068233963 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.169803637 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105471326 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.0680694 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08422259 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069525193 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113006619 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066432725 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064572696 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.090683149 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067231056 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.101804673 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070426436 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10020563 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081193083 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064212956 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068367408 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.400039402 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065628951 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064871714 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067953217 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065274589 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068246016 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066537761 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078969975 seconds)
  done (took 20.87890364 seconds)
done (took 38.045613174 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.232736442 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074581833 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075202109 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074924126 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.07509741 seconds)
  done (took 1.753838297 seconds)
done (took 2.957635735 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.11910633 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098273027 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064026286 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094860098 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063940673 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099029931 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098525502 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08054778 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098523406 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063846767 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095748884 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063984795 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064053476 seconds)
  done (took 2.32355327 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082491728 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082547259 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069830832 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082208674 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063030707 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082027012 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080651851 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088103137 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080036839 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071500217 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063468236 seconds)
  done (took 2.040803174 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081437131 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083995702 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069003616 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08071005 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065915757 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080977893 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080590894 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084982183 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080583555 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072951399 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063100044 seconds)
  done (took 2.035945641 seconds)
done (took 7.590586408 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077515154 seconds)
  done (took 1.259871005 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.587335652 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.080060502 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081207334 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.11165767 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182601722 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119125478 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.277492565 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.0865142 seconds)
  done (took 8.889165567 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.088316738 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069818919 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.081822772 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068108842 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069432831 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069044052 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071097601 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07148741 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.06953561 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07176061 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071199943 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070805717 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068639807 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071945557 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068166352 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071583242 seconds)
  done (took 2.407454961 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092118815 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090402371 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073186193 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07439979 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071773995 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071671491 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073719731 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073476415 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070651256 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072260757 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074112734 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073155241 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071116055 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065164648 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073851549 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075047488 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070629515 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073880762 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074796717 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075393444 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074471328 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064396163 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071093431 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073981102 seconds)
  done (took 3.065234908 seconds)
done (took 16.813809686 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113912417 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072017904 seconds)
  done (took 1.37549493 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082101063 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083332717 seconds)
  done (took 1.362575902 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08372843 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065771 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092513168 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078595249 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066030204 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065384451 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088893053 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066092069 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066210609 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066151694 seconds)
  done (took 1.938478924 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069007786 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078050648 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070692905 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080910404 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073852711 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064320367 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.0729326 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06819878 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078728857 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062601106 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071768164 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082393522 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071312337 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084380152 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072514449 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068884744 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070975713 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067469895 seconds)
  done (took 2.50636923 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066882443 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066446051 seconds)
  done (took 1.337701256 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06846699 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063793375 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066872206 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067744006 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063687561 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062386552 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063405473 seconds)
  done (took 1.655733081 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.381540149 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110708828 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.296689858 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070154943 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08084694 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.250635451 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065502499 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070555492 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070416768 seconds)
  done (took 2.639979284 seconds)
done (took 14.024830802 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079348628 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085443488 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095605004 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.35985751 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09171771 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065860592 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114155376 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.188903498 seconds)
done (took 2.291297822 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.216275323 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.613430556 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.388093727 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.197005789 seconds)
  done (took 2.402408424 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.329316957 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087076787 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059411329 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06644746 seconds)
  done (took 1.755223382 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065997785 seconds)
    (2/2) benchmarking "read"...
    done (took 0.0686206 seconds)
  done (took 1.342991682 seconds)
done (took 6.93289265 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066559373 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.085250765 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066107678 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065278669 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066173313 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.063244285 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065752383 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.063772087 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063395155 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066542504 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068522891 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.066075115 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065810521 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065814023 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063602054 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06359891 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065645575 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063396783 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063290274 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063188259 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063301472 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065507126 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063438628 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063375919 seconds)
  done (took 2.81658596 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083670477 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066901457 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071161319 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071687918 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069991186 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071346098 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074403699 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066114911 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071020348 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068454863 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069750751 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069487016 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067962077 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069785929 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068416478 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07013249 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071513069 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065991874 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068302779 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069879402 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070812379 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066324224 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069391144 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070748602 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069393639 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070694241 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068144818 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066132221 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070769602 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069897655 seconds)
  done (took 3.318610877 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069975339 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063620059 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064612329 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070298982 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064441197 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064566017 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063082489 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063746873 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064128394 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063185097 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064730901 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063700527 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063663723 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064317576 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064196275 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067478308 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078321297 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064018892 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063990348 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064164836 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066897138 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063477926 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063960373 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063255961 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063253874 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06311969 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063877036 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063691984 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064365963 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.175206391 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066620726 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067079606 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063333762 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069838137 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066973134 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063554411 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067208898 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063050034 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06423201 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06326896 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062906667 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063102079 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062924274 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070036736 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063543042 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064944284 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063256718 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064678224 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064440959 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065946943 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062898129 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063411491 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065279062 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064446173 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067530016 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063108813 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06422145 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063034936 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064445588 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062771283 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062708436 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062601838 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065351033 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063763534 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077773328 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069940476 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062676105 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065035255 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063872511 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065650133 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06470303 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075796168 seconds)
  done (took 6.024047481 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090888037 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086730602 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065531909 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065005797 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062241506 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063837476 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067456283 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064089687 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065131162 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069531203 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064427263 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064933003 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065059227 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076936829 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064432933 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065296289 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.06978082 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062088585 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064000089 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067232834 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064545489 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067225504 seconds)
  done (took 2.729941362 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153538837 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070334893 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104515403 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07322514 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067846804 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073214263 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069850507 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070100907 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070153785 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067916523 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06850193 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069881566 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067536123 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067734088 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068356099 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068023142 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069536993 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06845783 seconds)
  done (took 2.595767273 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077237713 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06604849 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085979952 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066022585 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066110948 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06832426 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070228569 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074114433 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068206185 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065627485 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073935877 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068181223 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068464034 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065871708 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067890771 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065805453 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067836734 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065903627 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073982791 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070357723 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070432977 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074070724 seconds)
  done (took 2.768544046 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079332833 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067202229 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08224608 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068798831 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062328475 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064278351 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070401872 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065842234 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070103408 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06761904 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066326655 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064036969 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069078165 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065817617 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.06919739 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065530308 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067300665 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065873881 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067683515 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061836488 seconds)
  done (took 2.58965182 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086686757 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068111185 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068147365 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07536765 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067170609 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067218097 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074620493 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067167424 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066955978 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086776761 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.0672607 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066913249 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074754299 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071683385 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06711894 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075120818 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07488835 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074993431 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067294303 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067321011 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086922686 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067038193 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074977852 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066893419 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067372659 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066965138 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067262421 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072166469 seconds)
  done (took 3.236097543 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066909462 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066869497 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063810659 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063793635 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064413316 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063933648 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063501875 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063377535 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065606896 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063520126 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065500877 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065601356 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065902396 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065841796 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066472053 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065794951 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066527835 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063304761 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063364367 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063638404 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066018347 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065762247 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065913033 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063040159 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063904035 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065460469 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063819065 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063167321 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065863795 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063788423 seconds)
  done (took 3.179734819 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075438485 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07235777 seconds)
  done (took 1.382137973 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064262146 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079895125 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063098628 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069775379 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069856337 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066161463 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073157125 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06945928 seconds)
  done (took 1.786274038 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081467735 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077233415 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068379962 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079870347 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076331701 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082731612 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132656358 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067189683 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07316958 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064377902 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079444947 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064864867 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072100192 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06623288 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071688797 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072422455 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06418592 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072401848 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068288455 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06476464 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067576599 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074727868 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068189889 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061727369 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067346034 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087919278 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077400729 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065663749 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068645168 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073083012 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071377164 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059964866 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065796097 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065990787 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064490175 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075106556 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080827955 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068605228 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073954199 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067017458 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0764078 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060919643 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070329036 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072346136 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076128984 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066177529 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066415156 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060849471 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063809319 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067939521 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.0608352 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066052922 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060791665 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075295793 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.06935997 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076617745 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064776731 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067921194 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069233585 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069633026 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073013733 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068101787 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068690614 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066098598 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075955869 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070575427 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074875692 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061178261 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060420353 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064072734 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075392442 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088017987 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072176401 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066645186 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066840249 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063621196 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069299394 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067126412 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071412511 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071961897 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.0659418 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071697736 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073051108 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066108341 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068570069 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074165292 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06422652 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069003899 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06391402 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081953667 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064576072 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064036431 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063647156 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076012747 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.06901778 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066135338 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063728999 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07300807 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059702035 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066385563 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065409647 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06558 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074654599 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069078884 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06956448 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073078945 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07204983 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06510262 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067638187 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061724018 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065414197 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063852499 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071799314 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.05923423 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067433354 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06607825 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065372789 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.199194019 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065696832 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066724264 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074481779 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072418471 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064589491 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063582872 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069301193 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06652654 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069845058 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074142785 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065264842 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062216165 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061627283 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069559121 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06690757 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070303918 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071794791 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069691661 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060790546 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065055196 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071645776 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07576595 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066572152 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067041812 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072925163 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067822482 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065915667 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072904567 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069346267 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065982131 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072248219 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067799515 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061951184 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069289297 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069235489 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065437055 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070808328 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069489278 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069093283 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067255288 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064935118 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074164266 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067509883 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065870798 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066208657 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065682575 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077152821 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068590409 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061961826 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063169981 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075179265 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064725569 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065555434 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065148958 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068940173 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067551596 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064646807 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066026927 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069054454 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07697186 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070503247 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067174457 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.0713347 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078033752 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065687512 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069033129 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066298453 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067496759 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066481895 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074744089 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071680765 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070556489 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068394084 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063358724 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071294518 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073265022 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065224145 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063607029 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065196792 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070175775 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071260202 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070035901 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066951693 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064701726 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066401113 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069038797 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068669487 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065574074 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064896342 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072938336 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064539391 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072930684 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066934099 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075847866 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069083794 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061343513 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068760282 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064577718 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071640218 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061351495 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064004121 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064872471 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066072968 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064059874 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.06730058 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059212959 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07106385 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071855071 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065104961 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064547529 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065007894 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071460151 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065871565 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068424763 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067973708 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07049726 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075174738 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06425647 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068047468 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.203489598 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066569052 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061137993 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071438941 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065364308 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065437482 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.0657054 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065216856 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070020298 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076319096 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073014895 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060160628 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069277629 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065601821 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065930115 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062299048 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071081237 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069916062 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067068096 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073555476 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067651242 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.0672354 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070024246 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066976562 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067225314 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067185484 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06991646 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06768164 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068556698 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066303201 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069584118 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066099659 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064591773 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069012356 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06745155 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066905362 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071972898 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066792303 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066756246 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069485629 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067375645 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067509653 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067075449 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065827923 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069695351 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067700056 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067180037 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068438871 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062081082 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073737824 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065996749 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074210016 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067041537 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063389583 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074171046 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069031257 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072123044 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067923149 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067003717 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068110601 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066192131 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069396757 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073457287 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06439877 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076283456 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074358695 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068174841 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069036368 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067033897 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067682428 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065449792 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067159901 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066947465 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066741061 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065941475 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071075738 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068904291 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066127073 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067753516 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06695767 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066222634 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067059175 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060909567 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065546154 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065927018 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066481891 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076014622 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066772837 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065754487 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065039072 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066971838 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06528586 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063297542 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07434578 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075399211 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066374476 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072918593 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065294602 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067329272 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07641536 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060414104 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064168912 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063835406 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064098838 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072970215 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066445824 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074307885 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06562732 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06546561 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062876395 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065765065 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063746005 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059208121 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062754133 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068448932 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064355457 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063578605 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064871438 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067848892 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065849819 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07434008 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064277833 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065699646 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065234309 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.194940342 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066388103 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06569467 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070002592 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067202388 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064832862 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063740932 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065964138 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067692647 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068464313 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066717315 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068078888 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076150305 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066189399 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069677752 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070051539 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062137799 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069990627 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066590071 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065550931 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065964866 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069985861 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070513455 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068419079 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075603306 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.06693278 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067945431 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066657067 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064041267 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066204994 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06679136 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066109098 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066513135 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067815852 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074238569 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064803468 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069018723 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06606266 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067045059 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073180024 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067929812 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069249187 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073182154 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066582487 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068027427 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074255021 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071278494 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070425747 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067443966 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068089827 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072760491 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065771792 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073430085 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066775015 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067631937 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068471108 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064594036 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066271351 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066497917 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065212954 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072674029 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067724186 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065676343 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066023463 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063637383 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067685957 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070064043 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07425001 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068849627 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069630985 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061599892 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063916233 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067147775 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063784776 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067843739 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068258223 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071458031 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067921388 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066577809 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064838832 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074972426 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071830206 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069581026 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063897179 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069830385 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066552964 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068268274 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067221105 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066798988 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067617346 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069882955 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067894528 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065845966 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073336276 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069535421 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067452204 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067809276 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067457251 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066379551 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061815941 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066880409 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068195785 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071353024 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068105839 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066000626 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076280935 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063681092 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065583455 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068492889 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064593976 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070453176 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060542281 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066803566 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065588785 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065555501 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060253104 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.063856465 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06320524 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066864409 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063990439 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060177712 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074809392 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073526469 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067929945 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.194612886 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065890561 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062800787 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061664532 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065982701 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067506234 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068415506 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076269098 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065536795 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065842546 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062256281 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066938495 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070080975 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069812938 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06370473 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06175096 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065588229 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.06934129 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072636083 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064840021 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066749248 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070664685 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068302752 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064261403 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069740016 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063527629 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07057948 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079116015 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06713564 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067536018 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073042826 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07441605 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067518986 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061951622 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067603237 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.07053109 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066972119 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067914503 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067870836 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081766002 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069545607 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.0654912 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065890294 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068635429 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06610753 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07448563 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067466812 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066674691 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071513716 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068614686 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075253409 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068716149 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074570673 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069197527 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069382574 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065635319 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06790374 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064291555 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065620724 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06807884 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067007701 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071760459 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07546196 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066144982 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076783637 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075034969 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067913336 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063831343 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065845387 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065550121 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061664667 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067328369 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064099235 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06428996 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064466867 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064939701 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067355409 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071345092 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067080989 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066786874 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065775308 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060337679 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068561266 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068097338 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066760361 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062844372 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065953771 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066970273 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070350285 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069428395 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063505609 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067697858 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067961647 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067268906 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061379596 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072674486 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06505095 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068319843 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065423917 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066233823 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067184464 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.06985174 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070961548 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067039733 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068257791 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069832894 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068014807 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062960644 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063403601 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070473996 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063239859 seconds)
  done (took 42.419961236 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099984339 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062800511 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061755724 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062085791 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073629785 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06316069 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06138276 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063295638 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062836655 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06523969 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06170062 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061967134 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071026896 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077261117 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073688637 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066437288 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061707743 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063247458 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061896972 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06260153 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070722423 seconds)
  done (took 2.745561055 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073820657 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070266222 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072574755 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075546965 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066774984 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070304958 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072311515 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070625236 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075629643 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066951591 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075867815 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070422027 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066744508 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066726329 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066818253 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070505319 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075439835 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067179925 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070461832 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072485047 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070855653 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07219702 seconds)
  done (took 2.871502234 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067650275 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065903822 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.06776493 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06095567 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066369084 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.069791041 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069452983 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06410073 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068884075 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065033978 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065024234 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064552552 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067302092 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060578523 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065245909 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063272962 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107038308 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068606277 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065848202 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066509094 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061256673 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067555402 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061195504 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061978975 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064525758 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069253352 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066462281 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063939354 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065344647 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06498262 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065432014 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063381873 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066903583 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066108676 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065223033 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06456476 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065386114 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065781074 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060964963 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063701772 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066154998 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061402555 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065506099 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066751956 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063430998 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063516545 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067198502 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065625872 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061265506 seconds)
  done (took 4.549776632 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080261223 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107042012 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067277342 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088161002 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079446859 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075083923 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06913116 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088823037 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062944649 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063972032 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08151274 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079162119 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065557647 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069755603 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069220911 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065628595 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066573156 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064834385 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069288336 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064672111 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.06945556 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072040441 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079543534 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07820655 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069168087 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064619973 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064895044 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069569967 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077968671 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069731569 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070068521 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070630305 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080631626 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070917882 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06478273 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067519216 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080941939 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065341198 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067769208 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062881628 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067114613 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069648113 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072168999 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080976478 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065293645 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070177322 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065128485 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06246553 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077745264 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067435707 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073076873 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.07923947 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069176223 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065561263 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06947476 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079868504 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065373223 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06348111 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068361904 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077679137 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062736647 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069461681 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078576297 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067191961 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07249336 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079028653 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070283668 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06922855 seconds)
  done (took 6.321278619 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075371527 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072828268 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080179444 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079882584 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072191225 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072027085 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071803232 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071905404 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071785226 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076629209 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071897644 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092510198 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067328098 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074682716 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072474513 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07232936 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071926491 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071972474 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071938858 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071830193 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072277222 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07943636 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072123443 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079411661 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097900836 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067192482 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.0719612 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072008508 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079825415 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071593489 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07938077 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072081918 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072087255 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080155125 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079311244 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071889588 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065072078 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071907696 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071966124 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071934682 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067379173 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07969558 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071414594 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067268166 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071613478 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071201898 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079372045 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078594254 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074464432 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076486449 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071708177 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080006533 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071159923 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071888583 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079509873 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103904027 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079018278 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079683486 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072121689 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079196387 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079378765 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085633166 seconds)
  done (took 6.010422126 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083499783 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074119128 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076701499 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061302095 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063684588 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069460046 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064052772 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063819794 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074488117 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074264383 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076573257 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069172162 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072745333 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07646046 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069336903 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0725176 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069575229 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069658129 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074450216 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069679478 seconds)
  done (took 2.761200091 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074826031 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082986767 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066776849 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071696952 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068687432 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071422723 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068030276 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069145149 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066621774 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068796651 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075580387 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075344093 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067016713 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071029681 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075565817 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071479056 seconds)
  done (took 2.472498997 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075870219 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.07193039 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079379227 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066093062 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064198152 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062270995 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065532947 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061216411 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06232571 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07756156 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065284393 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068248716 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065310313 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064810042 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062753614 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068325483 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061940674 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063271579 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065363562 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077838409 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076698105 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064588507 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066252691 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065443681 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065817572 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070267804 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064837142 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063251538 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062824127 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065713938 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066142998 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069479942 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062849943 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063406745 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064183053 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063138037 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065602485 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065464054 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068209654 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064989369 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063539834 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06517879 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065065115 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066641033 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061973211 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065434776 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061791808 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067569499 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063403981 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065433727 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065718276 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067760521 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066210816 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072268746 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068628572 seconds)
  done (took 4.984552856 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079103952 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069029616 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061437232 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064340117 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068745359 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06727875 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069376492 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067537406 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067557006 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063733722 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067560147 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068058376 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067319309 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069127225 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067336636 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069112027 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061559578 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067013631 seconds)
  done (took 2.555711121 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071698764 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066211912 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072410905 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065737835 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066097033 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068143329 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06160767 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064018733 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06420573 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065045404 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066084534 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067901477 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064216058 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.0678996 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06577206 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065559952 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068031162 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064105536 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065790566 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061503751 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067989277 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064253656 seconds)
  done (took 2.787277041 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.092998156 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081090809 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.137034459 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.077742062 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082835493 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071273389 seconds)
  done (took 1.877917252 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090958843 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079181828 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066796298 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088066298 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073335999 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067183203 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067247161 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067376876 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075554396 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075549987 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066966769 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075621651 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075902289 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075114072 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072748284 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072726747 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067226675 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066913197 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066124561 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084221613 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067562699 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075772426 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067843702 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066640001 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066847997 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074976529 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075665899 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075519965 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067369633 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076207428 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073076415 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06723928 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075811145 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075705977 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069633475 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076128561 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06764119 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084717861 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072933405 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075121406 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068274079 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073277948 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075334929 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072139534 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075623711 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067101338 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07183736 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066901293 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067374269 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085798735 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073077711 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074997123 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072911442 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07545271 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075732481 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085560089 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075771031 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074944395 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07356299 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078491882 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075191869 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072744218 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074542602 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075583552 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073120909 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074886502 seconds)
  done (took 6.197005829 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081754336 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085869124 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067934561 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076083295 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075031105 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06749537 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067303095 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067843754 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066878757 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067102881 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106660208 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067893058 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07545483 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075809894 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067704596 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067313005 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067565494 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075068224 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067243116 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085806649 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067329997 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07531149 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075480237 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075258596 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076043309 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073040246 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067685288 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067468392 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067229585 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067204095 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072409328 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067618917 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075047828 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066778599 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075340915 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067218917 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067480168 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071984502 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067254889 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073067859 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075504543 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083679497 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067347624 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067671237 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076409387 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06731918 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067933202 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067115906 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067894713 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067107164 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076089312 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075945507 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07607981 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07499838 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0675182 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06713624 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067252165 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067244478 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067378711 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072744131 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075247409 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067033785 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086071953 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067212208 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067869597 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075238799 seconds)
  done (took 6.10989286 seconds)
done (took 128.297324544 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.184380163 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165355416 seconds)
  done (took 1.68027461 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069250906 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097153345 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076826183 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128430518 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066779099 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100285085 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098961101 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077825837 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06578871 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066000892 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065973091 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068550725 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131655463 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066503992 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066148385 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068837241 seconds)
  done (took 2.659284875 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098111018 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.156524772 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099656193 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065215994 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096737731 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072544509 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064170458 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.07463801 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070807146 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065031215 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072773472 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071017129 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064956335 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070099961 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070653131 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072778093 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064493778 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072826284 seconds)
  done (took 2.771757918 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099755297 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090776131 seconds)
  done (took 1.541272726 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.15465521 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105076461 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.15034999 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.345106217 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166699494 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229599013 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126682766 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127321314 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117765925 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.12346742 seconds)
  done (took 2.989789903 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.09828674 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.151344675 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255535532 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114389885 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072108121 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094760528 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115823428 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077935411 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080462304 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080569102 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079837322 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076575033 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099117649 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072970503 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072988611 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.07599862 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101952411 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072277892 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073783573 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076837538 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.09878198 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065335902 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073189226 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072111719 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077413387 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077756276 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065417398 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065767975 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07654436 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074091331 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076870694 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093002101 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077001448 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106803396 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069980584 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107965011 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076720564 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074093761 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074004765 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073749522 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078960557 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078953275 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072171591 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076581874 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065227882 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07633146 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065793683 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065742828 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077646631 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066274648 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077835155 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076550487 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107057649 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066766633 seconds)
  done (took 5.947532783 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102149123 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103667184 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071467047 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111112078 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099760625 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072182268 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101310041 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092963096 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102625699 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069764361 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068384067 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070259257 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083387631 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08317695 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.112946961 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104420836 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07378408 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07152225 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104259977 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102395309 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068090736 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094540933 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089269201 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101645421 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06697095 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070403243 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068085437 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070009722 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077056953 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078530206 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069338845 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08095995 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084570499 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078328967 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067498664 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067748418 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.0683051 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080075475 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.0793448 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078908112 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078143641 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067216873 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069405095 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069625253 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069653417 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067566717 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079035117 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081150044 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078584531 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069153723 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069980287 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067976987 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069338952 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080513339 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078214784 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081386143 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079922247 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068283484 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068254173 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072323952 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081174994 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079337164 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079446241 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069243529 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078939376 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068041267 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080579965 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084024792 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068569852 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070136566 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068460396 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069472165 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069732094 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078129282 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07786226 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069905221 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06951092 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068350273 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08030242 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078963566 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068087354 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077367692 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067427746 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068503642 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069289372 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069750431 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077429521 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080393398 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069501724 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067994864 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068865737 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067377472 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066036572 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075621823 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078378622 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076908353 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077197928 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068355723 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077519314 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077450914 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068540746 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07803078 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067012339 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.197414933 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070412786 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07948942 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077956371 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080147596 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069340932 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069029741 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.07892429 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08102507 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068602023 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079502779 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080691631 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080310395 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067927932 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082205537 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069139931 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081187414 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069981682 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080555495 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069159297 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080600458 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.0690557 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068456585 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069324633 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.085653843 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070330617 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068898157 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06979942 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069957279 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080206356 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083222235 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070345914 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081225751 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078831311 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070826391 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078689521 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068343988 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079160059 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069757191 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070012522 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067431681 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082078295 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068905701 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069239636 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069382475 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081273378 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068853622 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080618523 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079187649 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068104708 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081699868 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080792347 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078573513 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08064691 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07051476 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068712981 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068103039 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068926281 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07854738 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079764795 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070588738 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068771886 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078454655 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080358733 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067220183 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078432209 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078354272 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078350012 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068623197 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069012671 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08066106 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080323205 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078630237 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078379603 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078428189 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068295513 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077434848 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078528065 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067542066 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084351862 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067761783 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083267659 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079317725 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076881522 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078342141 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080641706 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080240276 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080147614 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083083575 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067677831 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067895634 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079701302 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067934488 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068198799 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077226728 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068522105 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068219442 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081532287 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067064572 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078270558 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066517387 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077159061 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06555264 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068791299 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081552196 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.198527005 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070388639 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081076007 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069967182 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078381708 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080951018 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078639991 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068702478 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070377653 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080329337 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079098538 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068707783 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068394209 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070901896 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.07906184 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078449933 seconds)
  done (took 18.640030472 seconds)
done (took 37.588268321 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210691718 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151612499 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.199529104 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119082794 seconds)
  done (took 2.128479362 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.12384548 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100686723 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.09509449 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06502473 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102069109 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065212101 seconds)
  done (took 1.946480426 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.312154977 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211004536 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.183045015 seconds)
  done (took 2.092955536 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199642819 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187845953 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.399020422 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.25490143 seconds)
  done (took 2.538942615 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144081934 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090641511 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067516535 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083613183 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.13486742 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160931908 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101839461 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.1260211 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078523587 seconds)
  done (took 2.424846424 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14785885 seconds)
done (took 12.673182083 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.113027891 seconds)
    (2/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.095670231 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.119859363 seconds)
    (4/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075704153 seconds)
    (5/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.218152977 seconds)
    (6/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.242558814 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081621144 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077455327 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.147502152 seconds)
    (10/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.089386209 seconds)
    (11/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.20193689 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073371217 seconds)
    (13/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.216498872 seconds)
    (14/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.178168274 seconds)
    (15/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070434838 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.108106394 seconds)
    (17/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.183121531 seconds)
    (18/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.113297616 seconds)
    (19/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078578689 seconds)
    (20/309) benchmarking ("sort", BigInt, false)...
    done (took 0.183739812 seconds)
    (21/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.111186079 seconds)
    (22/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.198222703 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.187962426 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.08907905 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091517746 seconds)
    (26/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.105713699 seconds)
    (27/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.163741098 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.100529709 seconds)
    (29/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.164594416 seconds)
    (30/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.148882144 seconds)
    (31/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075069931 seconds)
    (32/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.218461988 seconds)
    (33/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076700249 seconds)
    (34/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.20541828 seconds)
    (35/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.157558495 seconds)
    (36/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051046631 seconds)
    (37/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072273793 seconds)
    (38/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.174795136 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071613868 seconds)
    (40/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073127438 seconds)
    (41/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.156623359 seconds)
    (42/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.07595143 seconds)
    (43/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.171602014 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.119174361 seconds)
    (45/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051456941 seconds)
    (46/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.10333628 seconds)
    (47/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073239557 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065129872 seconds)
    (49/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080305219 seconds)
    (50/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072403854 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073013192 seconds)
    (52/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.196353786 seconds)
    (53/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.135657796 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.089265519 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072231294 seconds)
    (56/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079581386 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.123898641 seconds)
    (58/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072826551 seconds)
    (59/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.16570488 seconds)
    (60/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051251052 seconds)
    (61/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.186108584 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066542435 seconds)
    (63/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.148780091 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.132571787 seconds)
    (65/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080511487 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066671496 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091003471 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065001937 seconds)
    (69/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073517838 seconds)
    (70/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061264408 seconds)
    (71/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.070731099 seconds)
    (72/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.186544804 seconds)
    (73/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067086056 seconds)
    (74/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071975201 seconds)
    (75/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.194843802 seconds)
    (76/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064647633 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.08885732 seconds)
    (78/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050601078 seconds)
    (79/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.076425768 seconds)
    (80/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.13937542 seconds)
    (81/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087435959 seconds)
    (82/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.330155522 seconds)
    (83/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.220923613 seconds)
    (84/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053958228 seconds)
    (85/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.077139663 seconds)
    (86/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.177261842 seconds)
    (87/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.298579059 seconds)
    (88/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.10071139 seconds)
    (89/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080359643 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 0.066986547 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.101826622 seconds)
    (92/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.199042096 seconds)
    (93/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066738344 seconds)
    (94/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071843331 seconds)
    (95/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051927149 seconds)
    (96/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.076036188 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.06626539 seconds)
    (98/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051467395 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088039714 seconds)
    (100/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072931422 seconds)
    (101/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.111432157 seconds)
    (102/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.19774789 seconds)
    (103/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.185566619 seconds)
    (104/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.150467816 seconds)
    (105/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072666338 seconds)
    (106/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051869378 seconds)
    (107/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052591713 seconds)
    (108/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.15114737 seconds)
    (109/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075600231 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089188193 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090335137 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.119350222 seconds)
    (113/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.06908077 seconds)
    (114/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071006413 seconds)
    (115/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075871861 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072543217 seconds)
    (117/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067973003 seconds)
    (118/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069036251 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.136334988 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.097982152 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065917872 seconds)
    (122/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052718442 seconds)
    (123/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.112023455 seconds)
    (124/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072195439 seconds)
    (125/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072831038 seconds)
    (126/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.106536328 seconds)
    (127/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054798159 seconds)
    (128/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.136898647 seconds)
    (129/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052529734 seconds)
    (130/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.099766706 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 0.133440765 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073115922 seconds)
    (133/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066678124 seconds)
    (134/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.105479694 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071559229 seconds)
    (136/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063677762 seconds)
    (137/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.066845867 seconds)
    (138/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051640291 seconds)
    (139/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067909604 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070367376 seconds)
    (141/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075117682 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.084749036 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.092470992 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.06713289 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07200373 seconds)
    (146/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072750853 seconds)
    (147/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.146622354 seconds)
    (148/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071116868 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.075562591 seconds)
    (150/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060747854 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064894936 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072182671 seconds)
    (153/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.1141883 seconds)
    (154/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064884314 seconds)
    (155/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07280969 seconds)
    (156/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072406676 seconds)
    (157/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.150079982 seconds)
    (158/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052346456 seconds)
    (159/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.097850659 seconds)
    (160/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052479505 seconds)
    (161/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051216959 seconds)
    (162/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068804644 seconds)
    (163/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.149464544 seconds)
    (164/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051867035 seconds)
    (165/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.05167654 seconds)
    (166/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070871837 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065158261 seconds)
    (168/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051242721 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087459517 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.137770215 seconds)
    (171/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061681606 seconds)
    (172/309) benchmarking ("sort", Float32, false)...
    done (took 0.126305215 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.089815537 seconds)
    (174/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.079322343 seconds)
    (175/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052947258 seconds)
    (176/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.0976809 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13470609 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065077357 seconds)
    (179/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.157874705 seconds)
    (180/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065877972 seconds)
    (181/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052365697 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071211002 seconds)
    (183/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062723108 seconds)
    (184/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.05053177 seconds)
    (185/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.051659813 seconds)
    (186/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.070806201 seconds)
    (187/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086714427 seconds)
    (188/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08046096 seconds)
    (189/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051014595 seconds)
    (190/309) benchmarking ("sort", Float64, false)...
    done (took 0.123975299 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06449243 seconds)
    (192/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065432572 seconds)
    (193/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078124677 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.257341782 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075776498 seconds)
    (196/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.176310033 seconds)
    (197/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.152388115 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092941701 seconds)
    (199/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.06608258 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093297087 seconds)
    (201/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.052252324 seconds)
    (202/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052867829 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064572711 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06616819 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065893067 seconds)
    (206/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.06730074 seconds)
    (207/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066823603 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090608139 seconds)
    (209/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053126549 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066314943 seconds)
    (211/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051780981 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092118227 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07471063 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073072085 seconds)
    (215/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054279775 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066640754 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089844768 seconds)
    (218/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.052303434 seconds)
    (219/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051951259 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06547908 seconds)
    (221/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051542016 seconds)
    (222/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052424057 seconds)
    (223/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051770556 seconds)
    (224/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.05182608 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071235755 seconds)
    (226/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051859531 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136027258 seconds)
    (228/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.066218824 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064602855 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.138099859 seconds)
    (231/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.05274841 seconds)
    (232/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071674626 seconds)
    (233/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.053216625 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.095602105 seconds)
    (235/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.052312674 seconds)
    (236/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073546204 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.132097273 seconds)
    (238/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051977681 seconds)
    (239/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051652206 seconds)
    (240/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087904976 seconds)
    (241/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.052420049 seconds)
    (242/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.172222755 seconds)
    (243/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068636731 seconds)
    (244/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072410608 seconds)
    (245/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079037935 seconds)
    (246/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052929455 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088163807 seconds)
    (248/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087368335 seconds)
    (249/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061446754 seconds)
    (250/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067875775 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065500748 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.133274748 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.110331474 seconds)
    (254/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.095700936 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065637182 seconds)
    (256/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074485117 seconds)
    (257/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052514517 seconds)
    (258/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065015942 seconds)
    (259/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066082401 seconds)
    (260/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066489128 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071382374 seconds)
    (262/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.06670536 seconds)
    (263/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.099052819 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.093727609 seconds)
    (265/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071115111 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072801071 seconds)
    (267/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065340872 seconds)
    (268/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051247341 seconds)
    (269/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07152654 seconds)
    (270/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067950385 seconds)
    (271/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.06204771 seconds)
    (272/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072757053 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09197247 seconds)
    (274/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085838123 seconds)
    (275/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070862012 seconds)
    (276/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051836661 seconds)
    (277/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051567385 seconds)
    (278/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051485219 seconds)
    (279/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064695235 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.126276787 seconds)
    (281/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.06404459 seconds)
    (282/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065871446 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.088277805 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073100693 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064326023 seconds)
    (286/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051735856 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064501693 seconds)
    (288/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062361889 seconds)
    (289/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.137909127 seconds)
    (290/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061330558 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072661281 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090067936 seconds)
    (293/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065391762 seconds)
    (294/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072251042 seconds)
    (295/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.174807957 seconds)
    (296/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117788571 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071398097 seconds)
    (298/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066959606 seconds)
    (299/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062193144 seconds)
    (300/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052609502 seconds)
    (301/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052336129 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.06550918 seconds)
    (303/309) benchmarking ("sort", Int8, false)...
    done (took 0.137894413 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070288367 seconds)
    (305/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078068307 seconds)
    (306/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068854892 seconds)
    (307/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052015816 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.116887532 seconds)
    (309/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.171188321 seconds)
  done (took 30.426099823 seconds)
done (took 31.822389454 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085241354 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092502981 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075230066 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092611537 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080348883 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.07639256 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072094583 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077766652 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079023174 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081153488 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077479881 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054862732 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073677778 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073527646 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07385 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091205402 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077953766 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072341601 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072933092 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064663483 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072487827 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065754048 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066966443 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054510315 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077251071 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071095829 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072123743 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07388814 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065565713 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065271476 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.06874469 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07299347 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065305402 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077279569 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071697523 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072857474 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074328689 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07612115 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067346358 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065770338 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073902832 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066094662 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072319122 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073172332 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071726124 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07161132 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072756698 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077886373 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091227032 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06833854 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074241822 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076027719 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07608946 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07223676 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069291322 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073095092 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070608633 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090747894 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073236235 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067659893 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07352245 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073516196 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071039375 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072576587 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072515692 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074788044 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074911933 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07050672 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074117427 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070745116 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065430076 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072737734 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068471556 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065951796 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075459182 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076801535 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064437947 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071170691 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072376142 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071304389 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064915311 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067850431 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066742498 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071304817 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067341008 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054669052 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069772027 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071877654 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064478279 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072880059 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071370442 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07172117 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06675791 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074805949 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064992013 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070145631 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064974515 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065290188 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066555206 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.06852478 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064929031 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067662583 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07377693 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066944386 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070817962 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.0786754 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065312474 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07149202 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064626257 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064479696 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079538813 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074059201 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064960122 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066971295 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064070768 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071663477 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063920503 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064842435 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064485416 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064577961 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069945427 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06377808 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066049386 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071106372 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076152975 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063604223 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067281027 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06649024 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06407991 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068897417 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063991939 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.199768046 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068238567 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062360078 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068164072 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065627735 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072387298 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068136929 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072670886 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067207037 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074065373 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070266231 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070651063 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070969586 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065050608 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058935313 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067942855 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068419815 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067662082 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065893449 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06698339 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065491885 seconds)
done (took 12.407984407 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066764333 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143425516 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099733365 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09495893 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085844111 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066450203 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075893 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101581433 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067239225 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102576527 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086822793 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084812466 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11215825 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064757735 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065639242 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069626666 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067344975 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081839968 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101285445 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086377816 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115911888 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065134973 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094129813 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089717437 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087024239 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101933292 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067274885 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069799136 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069319268 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090942491 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086156534 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069749349 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066516533 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100762136 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09229075 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083287156 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066302005 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082466901 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066387595 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065897619 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067964978 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098363664 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080176356 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080649453 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.06961519 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068955581 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067017534 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083148522 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088952462 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078298654 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086279141 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.10286656 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068594865 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065311454 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064487058 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085084925 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065170518 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068714644 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066252953 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067739955 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065511645 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068948961 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081418041 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081676105 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069579384 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080099056 seconds)
  done (took 6.785278035 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084431802 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089960812 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083269888 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083354196 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065704883 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066457162 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066523113 seconds)
  done (took 2.031651144 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067095766 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088132204 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089058135 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088289816 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084506735 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087251074 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075809726 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066771108 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080177701 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067264681 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08701324 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10159428 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066887975 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072801364 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090553666 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066233589 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089820098 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066794754 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.06979743 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089641916 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068538846 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082185888 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070026917 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06728963 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080602444 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066446598 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113179887 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070439599 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067821354 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069116529 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06462752 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106704652 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079777651 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074975931 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066170445 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080458055 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080690195 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064581159 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082873243 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.07125632 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079631885 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066464503 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067049642 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064221642 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070452225 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076501859 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067559608 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066793475 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069287974 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085538255 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066667757 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079675678 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069255729 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069087995 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06752352 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07011209 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076355171 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067101429 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085515528 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067712627 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082836546 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082361329 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079543204 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082668352 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068540369 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079395174 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079688508 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068660568 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067857398 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069660182 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082614019 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.06481547 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067816028 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076589952 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068144357 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089252704 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088776186 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067663592 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075353898 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066628873 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066176086 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06638001 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088427899 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068739407 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066021899 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070340238 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069161308 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06500045 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065986953 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069802715 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064642106 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067719271 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069502688 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069377392 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069337281 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082986291 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069090123 seconds)
  done (took 8.734907759 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.06913891 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067809855 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069251512 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067688333 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067693947 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068155252 seconds)
  done (took 1.924253589 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093896247 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069060504 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080407872 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072801846 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103803614 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086179462 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087087975 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078766432 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083819616 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079104481 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087181619 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088430729 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092702125 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072856785 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086062362 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071739098 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086661076 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076004166 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078099809 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07281116 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086400298 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072919238 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072848778 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081264485 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075328305 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072182949 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066859403 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078831225 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078225517 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078489794 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072226347 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075347042 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07083819 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07846906 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086733132 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070664255 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071424057 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077246788 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072479236 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075206609 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088189149 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072713823 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074273505 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077062598 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078264171 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070678851 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076843321 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076058636 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08607702 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077115962 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077261572 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071404863 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075371063 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076857458 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070541945 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077831798 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076397044 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086195816 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072260848 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07000247 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068634324 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075120941 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077536763 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074856697 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078656586 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07684492 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070490604 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072518001 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072579933 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071858479 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077479304 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069475801 seconds)
  done (took 7.072535244 seconds)
done (took 28.031015159 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.545094232 seconds)
  done (took 2.023572819 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.602180218 seconds)
  done (took 2.106219885 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.613199762 seconds)
  done (took 8.113683749 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.389187915 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.471814205 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.687639401 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.12995864 seconds)
  done (took 3.222606826 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.671575996 seconds)
  done (took 2.181569488 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.208973408 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.195426 seconds)
  done (took 1.924005472 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.380542675 seconds)
  done (took 1.883180898 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.109625359 seconds)
  done (took 2.616456727 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.261668036 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.167382313 seconds)
  done (took 1.937828211 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.457450554 seconds)
  done (took 1.965035494 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.927217478 seconds)
  done (took 6.434315835 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.206345206 seconds)
  done (took 1.757031714 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239835753 seconds)
  done (took 1.747759981 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.694340758 seconds)
  done (took 3.205736302 seconds)
done (took 42.631477287 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080157794 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081284437 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081635333 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078047329 seconds)
  done (took 1.819533303 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076765056 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073132499 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076838111 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073247154 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.07711588 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073116561 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074365711 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07717508 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072553958 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073271789 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072676965 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072837267 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075390986 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074542903 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071175324 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074922924 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07618852 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072335256 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075443493 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07290954 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071144983 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074821481 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075303311 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072496829 seconds)
  done (took 3.296569438 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078531809 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072712331 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075634302 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072447846 seconds)
  done (took 1.82147876 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078470222 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092577443 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088949285 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077914787 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092184251 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086453694 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069299976 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069392491 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073291057 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077409047 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067941034 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095961599 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087744306 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077036075 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079089048 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066726216 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068656673 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087290545 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077542879 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077589272 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070084927 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076955143 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068208371 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088780898 seconds)
  done (took 3.412643061 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079117585 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10330165 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.07793024 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087823913 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.0901811 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065652755 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074511203 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089901574 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123664826 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065520409 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070515368 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065559378 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.07285221 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065919214 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076722514 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.105411131 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108417199 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068552417 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095791873 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065681645 seconds)
  done (took 3.181057178 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073487937 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070430417 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066217082 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068773837 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077377787 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073538977 seconds)
  done (took 1.959410729 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068636076 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067900363 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067665339 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067523129 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073024277 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067904515 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06620514 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067491698 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.06756809 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067451372 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066762523 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066150256 seconds)
  done (took 2.338185981 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.173586201 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069207778 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070982055 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065911638 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07058034 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066779706 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080256842 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06858187 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090506424 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066814786 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06687904 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068945884 seconds)
  done (took 2.485617904 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205824373 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076383706 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237959539 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137322334 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111831231 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115815443 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104149235 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114035666 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.144338587 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102514808 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168746473 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165634013 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107167011 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137773859 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089376716 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098063245 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155923105 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163050199 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104216161 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166261986 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144398065 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12484788 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147603994 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101590854 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106266813 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122217271 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071239017 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080172459 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171270538 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132127944 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146752127 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111464987 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093680648 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17674486 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171209602 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14234025 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134366116 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083842645 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102625696 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.13435685 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197629128 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087635888 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16190566 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247305306 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081732638 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134898406 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121801107 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120709881 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107701578 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090360486 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14775893 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184432234 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.140015975 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08779946 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11241114 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115584506 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.117183918 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105010491 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182549759 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161480569 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128586666 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071716371 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100626224 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153595037 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133249056 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110137141 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127162717 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094103403 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133541565 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15437199 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118663654 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144155779 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.129330665 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088947272 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119597036 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13985806 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12874721 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17078698 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124923463 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073355444 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125459514 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103830078 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081670187 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142217496 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075740021 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174944837 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098326476 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106061508 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112951739 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108440646 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108690844 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16086878 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141053156 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.246166382 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.067183472 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104271906 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120711055 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14910391 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08835315 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109016612 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116855341 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078275335 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139136128 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075228421 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124765403 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075943061 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125981771 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13274696 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07609773 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123019736 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101314425 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10065595 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134637919 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160771973 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089409805 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082859574 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16767852 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123342792 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105592076 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144922635 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1565829 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099620703 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102875755 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149107777 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180757425 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089715015 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163464846 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107736424 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084453862 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.08800743 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124492063 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112881597 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122726261 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082509246 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119265888 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169141016 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075338023 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095515204 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132794122 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079157005 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080469349 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103262678 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100279039 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094717662 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100254562 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104088176 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136546848 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122332244 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103153495 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269947978 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098859055 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170822335 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089002435 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.10143434 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105177097 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070553385 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137388419 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157995763 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079841669 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165991361 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123180365 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105610004 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119853908 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083222763 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140591671 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079155773 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070962391 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14491504 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111153104 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111162147 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150537505 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105526636 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127608263 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120131383 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136203316 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133784273 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130270475 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105958793 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088218873 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111929257 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126135701 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072995577 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091539054 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080436643 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104291459 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095982003 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083761727 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14266998 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125591098 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100552899 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111730403 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097068863 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14828163 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077039231 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129312209 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118745887 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093858615 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151232369 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15190694 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130602399 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098759451 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143805405 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.0699571 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072948806 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087672098 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120595674 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081968192 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082245528 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114321749 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143129434 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125530296 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132901241 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109497845 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1173313 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151031012 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068437408 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.113853358 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143513186 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116200167 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.09835692 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086250706 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.095917784 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135145109 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102832832 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169251373 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108752136 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120593756 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144342959 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.09606866 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077649042 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09871657 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128231421 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098838095 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135935936 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095313858 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084454274 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104644819 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.071495244 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094493638 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120811293 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113118972 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127648611 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115498559 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125576234 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074846996 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110085596 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114724032 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11573035 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.062429621 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113730653 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150475731 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089881584 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11207536 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144051401 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07677822 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.119413903 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.435643532 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148945202 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087295183 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112376568 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121439771 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130409662 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122664227 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142087134 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111097422 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137907106 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112152532 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087288018 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090098323 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099083062 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107350471 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096628457 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109694318 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.116074374 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096379075 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133544829 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104183568 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110492574 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119429861 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099162771 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.09107829 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098363827 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176922881 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120335317 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171900937 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.09991711 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146662962 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165143715 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075438281 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079541863 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078780739 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14058943 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0841754 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131656812 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098643557 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106803458 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124585859 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142978228 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095774577 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068613348 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109040212 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13463485 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112661778 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097945104 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103662785 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162314328 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100547295 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078975536 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113136528 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10413253 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102311548 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.324252771 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062200964 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098304853 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076062532 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081587137 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128325447 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153332206 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080957657 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103180116 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119262818 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110733849 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128201992 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101890399 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100376432 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115261706 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150334382 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129909646 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090904176 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113085058 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130670289 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157330159 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108526436 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096337808 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172155549 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152722887 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.161099273 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089312936 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115615308 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115143905 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10900443 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140136638 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083792164 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164534225 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082366989 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136424586 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104784624 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090725146 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130347032 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.116538353 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088393174 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148828287 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117982027 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083065533 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078233439 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118395751 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12073994 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106264347 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075147537 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138296687 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073282742 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131486073 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169041454 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23120261 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105838193 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098919448 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081085794 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109503942 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103655104 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090771482 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.0998908 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173294579 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088504387 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15075269 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141538021 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113961452 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13779288 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100319788 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636606543 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078677692 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152145489 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116633668 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173335986 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09830595 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118390462 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109828421 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124150163 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144888715 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105535732 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179544153 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132618441 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11680065 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080742586 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103408296 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103103828 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089455018 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105844106 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114222293 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116891505 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094346291 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116705581 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123814321 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082158931 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096089442 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156275187 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117330941 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144910337 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140807607 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085044722 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117231621 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138091414 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079697356 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121964791 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152116081 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106082228 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246214169 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081750002 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103340988 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170975222 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073332112 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162337961 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11959346 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109460863 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113692562 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114373436 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131184368 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107854753 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121798706 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093747146 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111230055 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11312487 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081794104 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077414018 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104914943 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112297808 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097552397 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098760626 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098560874 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152030651 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072122228 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095912134 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103801519 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145065461 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175403923 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088816576 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083559696 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119535053 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113057477 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113817273 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12119875 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080237226 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082738137 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082736477 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077648988 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109100915 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112742204 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104582843 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111712266 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164530138 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082820922 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.226263806 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09592683 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105265086 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069910022 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07914742 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096437518 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097587553 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108051297 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100244894 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1686993 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094574032 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090036626 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093061574 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073537749 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231418951 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130183087 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111536105 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120167834 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098119627 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063304786 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110367754 seconds)
  done (took 58.829344939 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110484602 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083137374 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097578501 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.15018649 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122737551 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212753593 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.158054696 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.20001808 seconds)
  done (took 2.797204783 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070586933 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094646352 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099975468 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084019566 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067642587 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070449897 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.22563129 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082432007 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066863834 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.08896456 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081510622 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070315463 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.420657226 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066318783 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069072914 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.064538577 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067452933 seconds)
  done (took 3.444920391 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.36909543 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.601600968 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.374156733 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074041009 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.933526436 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.09015342 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.109431467 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.127571488 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074301234 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.52738826 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.702024716 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.125960216 seconds)
  done (took 18.77484088 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077465833 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070997865 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084340052 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084329043 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073536553 seconds)
  done (took 2.051560386 seconds)
done (took 107.783144851 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081604469 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.393443205 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054012964 seconds)
  done (took 2.13783139 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083650464 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084692455 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085639371 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083194822 seconds)
  done (took 2.011032313 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074899759 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076259281 seconds)
  done (took 1.816881729 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.225520521 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.159575247 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.08697321 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082854199 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078384778 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078553954 seconds)
  done (took 1.909689955 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073660112 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075408959 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073195927 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076468421 seconds)
  done (took 1.963401208 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077336832 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052908213 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055496626 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055823035 seconds)
  done (took 1.906952045 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086964945 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079635717 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078811066 seconds)
  done (took 1.912991633 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101431629 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085258399 seconds)
  done (took 1.854860066 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082953252 seconds)
  done (took 1.750471651 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099542121 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.114571584 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131266672 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110478844 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138588232 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.111696382 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085881523 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087087858 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077614684 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087837842 seconds)
  done (took 2.711828142 seconds)
done (took 22.190259164 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079357594 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.362802722 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362020069 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090125135 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66786471 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356688072 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.992761936 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092590045 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113832828 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068264529 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084506484 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649666924 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.982860278 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324222186 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.967234672 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324917098 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651375264 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068788742 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068226824 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068050527 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.978323119 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068361317 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068403225 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06877053 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650093647 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371671421 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068829687 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.319406818 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068165511 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070054274 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355752701 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068763274 seconds)
  done (took 16.184114634 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071863757 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119352597 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073670196 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084409155 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07134111 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069962856 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071819558 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069679153 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120098003 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068500054 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084794052 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067997331 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072567047 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069159267 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08751172 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068499794 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069131362 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068851737 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069079371 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069109294 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087315824 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068030265 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068899096 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068776448 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068440282 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079976301 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068691648 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068274309 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068651676 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070483763 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071481035 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069454732 seconds)
  done (took 4.089196044 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.1165322 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125686338 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075287478 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10372616 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113250929 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070883195 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143989255 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093458995 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128373932 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068494132 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084920915 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068866912 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101803598 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069440598 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088030118 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068998407 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06965538 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069182395 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069168995 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06884909 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088077085 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068654605 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068943888 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069193626 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069169336 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082268841 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069861813 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069309137 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069016153 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070859898 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072541257 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069774153 seconds)
  done (took 4.352612835 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073328383 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075067793 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08348638 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084040649 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.07005816 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072399479 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073264962 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070036479 seconds)
  done (took 2.290603475 seconds)
done (took 28.59201683 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.08023299 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069370256 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073972853 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081720448 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073609268 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080066175 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067735739 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074998333 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072430572 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07359608 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075478667 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067914118 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071710201 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067967748 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074435362 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06835436 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.07992227 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072905391 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079523407 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079810179 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070357751 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074125285 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075035141 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079886109 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079622314 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079973317 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078076969 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073655208 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069689372 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071886172 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078183161 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084941523 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068955063 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079568446 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068339181 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06865286 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071813054 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068576353 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079679942 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077375242 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070344416 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.07694877 seconds)
  done (took 4.794231287 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088808979 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091963844 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085055852 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062955239 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067224799 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065237439 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089325864 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059955159 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060009712 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088202082 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056425354 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.06029858 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062729175 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054341643 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059767943 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057154363 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062062744 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056487943 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059616308 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059852614 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058329389 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054863116 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060375185 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063277023 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059559423 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06231933 seconds)
  done (took 3.403874993 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075570804 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084593345 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089407396 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128278001 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104819911 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077705965 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.07836801 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09366549 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.086370329 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067344052 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071589185 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094609672 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088489973 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074290953 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067913219 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085473905 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082785277 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069362468 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073922674 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091410034 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085142809 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.0845638 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093549736 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081211324 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067460512 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069857879 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071926354 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081823619 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072667503 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077649201 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071715815 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071405272 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069852859 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078965388 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071587453 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069474125 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091131849 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077778569 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078553124 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068877368 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071195516 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06926478 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089694101 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123782111 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067788103 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075202675 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075894911 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077197288 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068490736 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086441575 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078602098 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06744748 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070907915 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067354634 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068347366 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081249074 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069955122 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070432677 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076782597 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071234851 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086225911 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07233624 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083374137 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06752528 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075384498 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067252002 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068992997 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067547998 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093137555 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069848044 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108796065 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.0693085 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068932235 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077191561 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075612005 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073710089 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068152311 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083177197 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078247801 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071531408 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076489527 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071790329 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071076675 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087924199 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070295506 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069417236 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068963335 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074119108 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070854692 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069462408 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08070977 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068000113 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070935145 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084464071 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067331805 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069412038 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074115647 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072417085 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067339063 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078841796 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072965514 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068572272 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076824436 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06830823 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.07121436 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077947943 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074175267 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066828669 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072198399 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074045857 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068588227 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068889228 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070117243 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069128265 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075950174 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073969738 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071673577 seconds)
  done (took 10.660517675 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.175675378 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15467794 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071188285 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.14614275 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076973887 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079757306 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.148598674 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095094492 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068861906 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069212648 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069423027 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110657781 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106458292 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116403599 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079715809 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068608632 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084461497 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114695996 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.150655967 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.144267719 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084332594 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077680988 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070986077 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069382047 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071143327 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079339239 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.0861383 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077397543 seconds)
  done (took 4.474495977 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082179814 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.097684685 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074949912 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090752441 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091405445 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068189378 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07055737 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07045443 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081035968 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079393178 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067967978 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073813746 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075058601 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071994778 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069517142 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075381343 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076323882 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070165116 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071593604 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074150529 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078198967 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081306319 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072351758 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067703597 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074715159 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067604013 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065152585 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.08496895 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068610557 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090668759 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065919542 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075408727 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081973059 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069040986 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067884086 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068289942 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067989682 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067720721 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070211475 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066621418 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066791249 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057915685 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06793445 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079866472 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074343095 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057014508 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072817319 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073562435 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073388668 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065892722 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070971862 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071215744 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071325965 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074892471 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07289021 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073140411 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069037226 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074149061 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07566232 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067884826 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064908798 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066405173 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072287642 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066275363 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075839579 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072270907 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066117941 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067981405 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069623593 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073977631 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06783813 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071017859 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065755405 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070098056 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072424501 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.06967484 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068880356 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066445845 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067760458 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068418995 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056036401 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068409788 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053997421 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071119634 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066012351 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066518804 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.0675337 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072746697 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080488318 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069256027 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073530961 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069028616 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066944272 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07103507 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060657198 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07053366 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083264736 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083073399 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068113346 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065845516 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082415151 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072497809 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06697396 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056408939 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075061657 seconds)
  done (took 9.241751352 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090658896 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070954004 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084653053 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091487948 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086693107 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075296005 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077092101 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069599854 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083059881 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073980425 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076888458 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068725472 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078452843 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077318328 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070812452 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077241962 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072736475 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083825445 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083098389 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.0690078 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076701779 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08062463 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089641214 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080492351 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.079388953 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.081153881 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090207084 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072600655 seconds)
  done (took 3.952763438 seconds)
done (took 38.208565308 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.766329926 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.029005409 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.773763187 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.145731448 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.856241417 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.971670258 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.836810274 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.766535446 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.966465983 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.811124871 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.050383672 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.843687603 seconds)
done (took 65.523982409 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.838038129 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.906628991 seconds)
    (2/2) benchmarking "String"...
    done (took 2.042278435 seconds)
  done (took 5.657279123 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.104397948 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.30258914 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.01489039 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.767617284 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.774823955 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.077254841 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.585439805 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.301569259 seconds)
  done (took 30.534687973 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.950594296 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.004532413 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.478634129 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.520445899 seconds)
  done (took 15.717017377 seconds)
done (took 63.644454965 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.79531213 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.822016709 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.79049989 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.754663151 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.827685078 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.783816281 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.856468809 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.985535407 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.769824639 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.75620857 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.772464906 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.204618865 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.781751102 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.86454225 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.767804545 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.7744785 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.818142766 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.179773345 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.926103956 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.789873981 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.776670844 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.769562688 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.767816283 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.780221247 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.824939044 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.774061259 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.1958828 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.78361681 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.587030122 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.773813438 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.815783363 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.064979517 seconds)
  done (took 204.643910532 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.771189357 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.840748652 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.953527939 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.810794743 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.301640795 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.953964447 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.888886665 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.351756128 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.774331508 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.787680621 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.072969619 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.7696892 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.100418222 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.723346105 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.801114039 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.853436022 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.043707375 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.092261436 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.805093394 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.938692216 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.800040208 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.934373471 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.892265567 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.051378457 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.792706085 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.87815691 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.796909886 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.790028394 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.965693965 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.013015991 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.784234604 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.772360577 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.977517075 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.645677319 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.781518322 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.795544145 seconds)
  done (took 171.017785851 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.953911134 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.774479658 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.772730193 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.772156032 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.777730083 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.771796675 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.899384921 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.899436702 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.234238451 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.084879965 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.771630699 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.82312073 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.589250608 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.772720832 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.840286854 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.786115831 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.773502037 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.789197731 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.800634498 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.773604969 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.773522211 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.89826313 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.785981343 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.88453642 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.778914174 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.77364364 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.777526243 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.144171927 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.773117276 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.779148709 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.821901979 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.024783072 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.775663535 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.773394754 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.775108458 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.661925876 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.85642223 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.775953941 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.779638969 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.773660555 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.995175152 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.773190049 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.775895868 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.779107315 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.94635752 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.774850942 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.8995574 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.773006527 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.264738926 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.773197766 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.773277599 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.664214155 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.42525254 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.773245259 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.774299136 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.779402985 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.775595714 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.775030308 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.78209757 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.44552498 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.847996563 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.77548474 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.779844863 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.781424289 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.77501298 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.963908145 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.775437131 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.047009175 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.831854979 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.897916625 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.898444816 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.776583229 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.847744098 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.872636487 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.77803207 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.7775809 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.77841407 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.777708806 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.859626601 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.77622178 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.893755184 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.782657103 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.777977592 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.826843295 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.845293216 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.775408105 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.655706968 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.776729587 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.775524516 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.078055079 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.842555532 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.769573697 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.769982622 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.770735611 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.89005251 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.892581509 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.539274699 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.771330753 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.770170647 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.635323228 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.772470487 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.908218574 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.770159052 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.944305264 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.772158326 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.771067929 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.85222395 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.775458663 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.772126758 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.770093914 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.803353324 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.772059324 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.832595982 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.771301973 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.141261134 seconds)
  done (took 402.431076213 seconds)
done (took 781.815417295 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.450891052 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.39543758 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.499111567 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.409926485 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.384812546 seconds)
  done (took 13.849791831 seconds)
done (took 15.559246326 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.857375722 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.863032915 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.796630218 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.861602814 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.79197183 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.861599395 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.844048635 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.797695597 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.828565105 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.798453889 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.830334359 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.797335859 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.784496222 seconds)
  done (took 25.423294425 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.008607599 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.004918334 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.841818979 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.004049412 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.818600782 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.014724342 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.9360127 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.923726953 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.938488836 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.788725402 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.786382454 seconds)
  done (took 22.777612322 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.007443291 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.012865933 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.84577868 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.005796718 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.820532405 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.012759464 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.937000328 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.925502679 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.924520276 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.789880539 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.787172152 seconds)
  done (took 22.780711081 seconds)
done (took 72.691891823 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.782877313 seconds)
  done (took 3.494326928 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.804057263 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.940879754 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.788184861 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.785534312 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.782356079 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.783649433 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.784744409 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.782326537 seconds)
  done (took 16.16731612 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.779624907 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.780206839 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.783001727 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.779311074 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.781718373 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.781402658 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.784890475 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.782152772 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.781057008 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.784200777 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.782366884 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.783037628 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.778896099 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.782207147 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.779129052 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.782671483 seconds)
  done (took 30.220864374 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.782006406 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.780620575 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.780254502 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.781472904 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.7810531 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.781034385 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.781129648 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.78072612 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.780803492 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.781349791 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.782064572 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.78123457 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.781200393 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.780635239 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.781274129 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.782272518 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.780901508 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.780753668 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.785944673 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.782203081 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.782295368 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.781047948 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.782070548 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.782579542 seconds)
  done (took 44.473685282 seconds)
done (took 96.067242279 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.670537175 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.417430743 seconds)
  done (took 8.800548742 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.786015135 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.784811839 seconds)
  done (took 5.328203127 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.785079507 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.785692706 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.785533343 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.784845829 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.784666838 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.785614263 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.786111525 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.78552694 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.784763097 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.785114281 seconds)
  done (took 19.568191361 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.784653192 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.7858835 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.783333539 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.784878517 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.785585319 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.782353176 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.7852284 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.786141968 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.786170205 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.782756934 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.785953849 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.784188541 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.786261937 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.784363822 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.786053955 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.784282974 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.784643585 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.783399815 seconds)
  done (took 33.841592692 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.785818743 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.78576085 seconds)
  done (took 5.288070308 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.784254848 seconds)
    (2/7) benchmarking "second"...
    done (took 1.783371318 seconds)
    (3/7) benchmarking "month"...
    done (took 1.784332292 seconds)
    (4/7) benchmarking "year"...
    done (took 1.783600893 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.784588659 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.783905276 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.783605771 seconds)
  done (took 14.204319748 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.787744361 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.946984066 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.027106718 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.460114391 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.787390847 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.789977862 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.72385212 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.791328362 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.792530263 seconds)
  done (took 19.823563427 seconds)
done (took 108.567355743 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.616821083 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.781204288 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.120219864 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.838422959 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.832556075 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.122135124 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.802491995 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.001495074 seconds)
done (took 42.832543883 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.842196582 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.328523924 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.361328895 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.183488319 seconds)
  done (took 12.589339572 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.768866806 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.310886345 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.82568487 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.382481438 seconds)
  done (took 20.028831807 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.150229533 seconds)
    (2/2) benchmarking "read"...
    done (took 2.147583206 seconds)
  done (took 6.021721561 seconds)
done (took 47.202681257 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.788490232 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.788825896 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.78892345 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.786912094 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.78830713 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.786558594 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.788451811 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.786109503 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.786643792 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.787872878 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.787240947 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.787596741 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.788875624 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.789447451 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.787385249 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.786562042 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.789578062 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.786513493 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.786065644 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.787063053 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.787438023 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.787828721 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.787862292 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.787031644 seconds)
  done (took 44.621892646 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.79111349 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.788032198 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.790880009 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.788931669 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.787972879 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.792279936 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.791574265 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.788417419 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.79170337 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.791187703 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.788558434 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.789372962 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.790921403 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.789047078 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.790607193 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.787664679 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.792750354 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.788328867 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.791053098 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.787705753 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.791788341 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.788531645 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.788575294 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.791975731 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.789842169 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.788739333 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.791782959 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.789674353 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.792394174 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.788811292 seconds)
  done (took 55.420875692 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.795533578 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.801882365 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.791307025 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.792218451 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.792638017 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.793200271 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.794599151 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.794984399 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.794003379 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.792810142 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.793025682 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.793363983 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.792385525 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.794677428 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.794741921 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.794027929 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.793906466 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.793950453 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.794318825 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.792657816 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.793409728 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.794122361 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.79330369 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.794356771 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.794265781 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.793767349 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.79451752 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.793393174 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.792452362 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.793048939 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.794412263 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.794804853 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.793981813 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.792986542 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.79482094 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.79410705 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.799105532 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.804244285 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.79637207 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.795010804 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.794824296 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.794721364 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.794938767 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.793581899 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.794266587 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.793732587 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.796113894 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.794211947 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.795878085 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.797049112 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.795431981 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.79588797 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.795362602 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.795772136 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.793641784 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.795046139 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.797363028 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.795832771 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.795514271 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.796227537 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.795855287 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.795978288 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.794839693 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.796271005 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.79564016 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.795975142 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.794812114 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.796221985 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.794548075 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.795004648 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.795556732 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.796121108 seconds)
  done (took 130.953708302 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.796349603 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.792899394 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.793265579 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.792721373 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.792835121 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.796014304 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.794320834 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.795795251 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.793169891 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.796786419 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.798488624 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.793379217 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79472059 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.797470198 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.796186431 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.794736444 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.79902916 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.795272084 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.798269197 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.797824835 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.796752653 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.79466255 seconds)
  done (took 41.226570816 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.795724103 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.797818802 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.79470951 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.796307372 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.794843858 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.797071641 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.797169653 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.797555777 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797391733 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.794618484 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.794707415 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.797837715 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.794974388 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.795917842 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.79412042 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.795628724 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.798349621 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.79482349 seconds)
  done (took 34.058208866 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.796607055 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.795714443 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.797396722 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.795862626 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.796315795 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.79759148 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.797369767 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.799429251 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.79729656 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.795574645 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.797623868 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797902271 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.797308719 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.797944507 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.798172313 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.795001552 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.799685118 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.795652553 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.797584346 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.797694433 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.795721643 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.798350162 seconds)
  done (took 41.265730059 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.797888915 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.799822334 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.796331715 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.796310819 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.796525405 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.797344169 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.798940181 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.795709927 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.798819866 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.798716227 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.796468676 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.798254077 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.796640898 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.797293875 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.796857001 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.796746973 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.79993534 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.796878472 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.798752959 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.795133345 seconds)
  done (took 37.678237914 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.799658955 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.799403825 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.79931155 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.798970394 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.798473919 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.800657659 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.79973793 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.800535466 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.800724251 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.800619573 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.800503321 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.800983965 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.79967176 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.801562475 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.801752815 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.801239558 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.801144179 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.801434335 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.801572685 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.802075482 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.802170012 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.802373321 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.800090459 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.80362505 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.800647674 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.799932309 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.803329203 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.801674392 seconds)
  done (took 52.155019519 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.801548621 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.802884821 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.79915492 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.798550969 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.79911627 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.798616229 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.798700657 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.798134798 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.800911289 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.798353116 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.803359652 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.801979981 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.80135148 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.800617867 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.801902553 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.804650191 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802874386 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.801690543 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.799929996 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.799886415 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.803457232 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.802747875 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.801600595 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.798467662 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.799660121 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.804506659 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.800905828 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.801453263 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.802288081 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.801227612 seconds)
  done (took 55.762873167 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.821896354 seconds)
    (2/2) benchmarking "in"...
    done (took 1.821998287 seconds)
  done (took 5.375739951 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.801276749 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.803104449 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.803820718 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.801302838 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.800118935 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.804030368 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.80546599 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.802082316 seconds)
  done (took 16.152936617 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.804226482 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.806103659 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.803965595 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.804522237 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.804517657 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.803253057 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.811149629 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.80499291 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.804372835 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.805154268 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.81235969 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.813676031 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.807473756 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.8052198 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.803911213 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.806274313 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.805191066 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.804967982 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.805691242 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.804490084 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.805683141 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.805919541 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.806873971 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.802857501 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.80640164 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.815422936 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.807121556 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.806570824 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.804850824 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.808234477 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.806718058 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.801646566 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.80423109 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.80738672 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.804521284 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.805198088 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.814444344 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.807512431 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.811313819 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.807587922 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.806483865 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.802138974 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.807147929 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.805865039 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.808020373 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.807054403 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.805820762 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.805010142 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.807547733 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.808311824 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.814859246 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.806791091 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.805425789 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.812603541 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.808024745 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.814028446 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.807650707 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.810702739 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.819166992 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.81840912 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.823699916 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.816211099 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.808627703 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.808943148 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.818916567 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.836074042 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.814968308 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.808031824 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.805132751 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.810181511 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.815656625 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.821635575 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.817563388 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.807641403 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.809240649 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.809722283 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.809263804 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.809756546 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.81687921 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.811806274 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.809797237 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.808690741 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.818788564 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.83604311 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.808874887 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.810008994 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.810842591 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.809706964 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.810157586 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.820299596 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.810039465 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.810291669 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.806943013 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.809080059 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.811525633 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.810445407 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.808586956 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.813463104 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.808859006 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.810629204 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.811618199 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.813967741 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.822022296 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.81144677 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.81306187 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.817530803 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.810510743 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.809300139 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.818821349 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.812127817 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.812626884 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.813841949 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.818858557 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.809475061 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.81475396 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.821397982 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.812262627 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.812606107 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.813636113 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.81037354 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.822500059 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.842359544 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.813229045 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.811305754 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.819442207 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.826114575 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.814036663 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.816804183 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.813830174 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.809048822 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.811555066 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.813677696 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.814562953 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.813589578 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.812956696 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.813498961 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.809073246 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.814202563 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.81373414 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.814729818 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.813758617 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.813046621 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.815607943 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.814199116 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.814673875 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.813543904 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.820248103 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.814088069 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.813301135 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.816645951 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.812248896 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.812192727 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.814191478 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.81445672 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.814946733 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.814942464 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.812186862 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.81562675 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.8126384 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.814216292 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.813440058 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.814811388 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.818309097 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.81430386 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.818806787 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.813269658 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.812867454 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.815935609 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.816176503 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.81470002 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.814277299 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.81408215 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.819240301 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.824993975 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.815417475 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.815847466 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.81850794 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.815783588 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.816591226 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.814638449 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.817340035 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.825652312 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.815681837 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.821121102 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.816207095 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.816473971 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.814848798 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.816149745 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.816177654 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.816764635 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.818692084 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.824618631 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.829540058 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.826828942 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.816765334 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.820518844 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.815567973 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.819928836 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.820035694 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.818109507 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.815121992 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.815263083 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.816617248 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.816395839 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.817218732 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.81647319 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.814980549 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.816667206 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.815016686 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.815040455 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.816917229 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.817151185 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.81599447 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.814493239 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.816753351 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.816350995 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.81572738 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.814825969 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.815695846 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.814676885 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.817198029 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.817119096 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.822190489 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.81499149 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.816034899 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.817959108 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.818414212 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.818165344 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.817278437 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.81938297 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.816696348 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.823687136 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.818085161 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.818868687 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.822591818 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.816727455 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.814558589 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.819638499 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.817206465 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.815447665 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.820815726 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.827924225 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.817935419 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.817866552 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.817147445 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.816375318 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.818061298 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.825255521 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.816256011 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.818450076 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.817885963 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.818754906 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.814839468 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.81760106 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.81855504 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.818936695 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.820158123 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.81737008 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.817990093 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.819581706 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.818541935 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.818401035 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.818074706 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.822923279 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.829872652 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.824844038 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.820129601 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.82021327 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.820935326 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.82298994 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.820308323 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.819682318 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.819889187 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.833532932 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.829686519 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.824506769 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.821182146 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.820437327 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.823764294 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.822125843 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.824469704 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.821540263 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.8201577 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.819527507 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.819937643 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.817323985 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.820455195 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.819265173 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.823428552 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.821011964 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.824102705 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.818731498 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.819361721 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.820987466 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.82180701 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.819928003 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.81912632 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.8239359 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.821882607 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.82330046 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.820918975 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.821329494 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.826947594 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.820560738 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.821864915 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.821002626 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.821654948 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.820772595 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.821913804 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.824158383 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.82447295 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.830052142 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.822894366 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.831297151 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.823349713 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.829643818 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.822005284 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.824985134 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.830080374 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.819283106 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.820092745 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.822038181 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.821301941 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.827948259 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.823364012 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.822135352 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.825812984 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.824275861 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.821824101 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.822184833 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.823213965 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.820671574 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.821763617 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.832187376 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.824928549 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.82624875 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.824281674 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.818835612 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.822975501 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.82218594 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.821563044 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.827069134 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.822888235 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.823547762 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.822897988 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.822967527 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.822416452 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.823008863 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.822385715 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.820847215 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.822169499 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.829225096 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.823337613 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.827861531 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.822500385 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.830343144 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.824262989 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.830694048 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.823811534 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.823113984 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.824722438 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.824085688 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.824975447 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.823346695 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.824290675 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.824024406 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.82509128 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.827221221 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.82507761 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.82617731 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.824829227 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.823694146 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.824560398 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.833669699 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.851268658 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.825823456 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.82818314 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.82030023 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.826637591 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.829191248 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.82467432 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.822518893 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.827824229 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.836485794 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.834376056 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.826881993 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.824977208 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.825912586 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.825945181 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.824848815 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.826404186 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.825343853 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.825031381 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.824647861 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.825432556 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.828631568 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.824487365 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.825595767 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.826143765 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.827824914 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.836148957 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.827623358 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.827043578 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.825347509 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.824823002 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.826568388 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.824544091 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.826851336 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.8259341 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.827623223 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.826579637 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.832776108 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.834379099 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.828978501 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.826031824 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.827220771 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.826811226 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.826057567 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.827779433 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.825476413 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.825658977 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.828418494 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.827069116 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.827783982 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.823855034 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.826173704 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.827307011 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.827655139 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.829698326 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.836561296 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.826502334 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.825272639 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.826920928 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.826319085 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.826987647 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.827343252 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.834430616 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.830317053 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.839679495 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.839672183 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.832916187 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.826598333 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.831265421 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.837794717 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.828436649 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.829023871 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.827900063 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.829922221 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.828855663 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.832328978 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.831513122 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.835329311 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.828601808 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.828295035 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.838116638 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.830101797 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.828732117 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.83000838 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.83235085 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.828150045 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.825525313 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.828856066 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.828176592 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.83519025 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.830759494 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.828751864 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.829784961 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.827529849 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.830684592 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.834489897 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.829178158 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.829114687 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.826649665 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.829737435 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.829965129 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.831730458 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.82705512 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.829456848 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.829274623 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.834456789 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.83860142 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.826237251 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.832591489 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.8312908 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.830347343 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.830109171 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.830488096 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.829329454 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.827962003 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.830100267 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.8316401 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.831521365 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.832507913 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.829787563 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.83268622 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.832554219 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.829987785 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.834465507 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.842378041 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.84036605 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.828098044 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.832874142 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.831427225 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.834116501 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.833126001 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.831243438 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.830699728 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.833088925 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.832383255 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.832350135 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.830348947 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.836746935 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.850660804 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.832425321 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.830768159 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.83127818 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.836009492 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.832454424 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.830049819 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.832556247 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.834124922 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.833762897 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.84045672 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.832529635 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.838434619 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.831804336 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.83336116 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.838460382 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.837010115 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.841585656 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.834654957 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.833135222 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.833247523 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.837807514 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.849480982 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.833370521 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.843720013 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.86635162 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.834656381 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.834078042 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.833119676 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.832267916 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.832124472 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.835473323 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.834653699 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.833828898 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.833753558 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.834338109 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.833975704 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.840952595 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.835558754 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.834189074 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.833668534 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.832662302 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.836320173 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.832563204 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.836152576 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.834607701 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.834178704 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.83565563 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.834892567 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.834438751 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.846822225 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.84605026 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.834915156 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.835699813 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.831600085 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.836754018 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.837781872 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.847991688 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.844641785 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.837277989 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.834321317 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.837736881 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.836060682 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.833299598 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.837346 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.836283568 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.836872399 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.832941583 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.850303914 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.846043432 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.840447457 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.8361627 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.837725293 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.835716745 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.839445153 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.835649059 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.836192725 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.837818604 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.838492812 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.841730832 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.835907984 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.836450889 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.839736397 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.84559216 seconds)
  done (took 1088.054252004 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.834103608 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.83320697 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.834343698 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.835380117 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.833104311 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.834594199 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.833752255 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.834582933 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.834557713 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.835489328 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.835273772 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.833773328 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.834708409 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.836393921 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.835441689 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.834619828 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.835295831 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.833965907 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.835315856 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.835163042 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.835790054 seconds)
  done (took 40.293160324 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.838617799 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.836204365 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.834869431 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.837437316 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.834471297 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.837337441 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.835612348 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.838239139 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.837353093 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.835293297 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.838711217 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.837886015 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.836970842 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.834221412 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.83534373 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.837334335 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.83861605 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.836315099 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.838735788 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.8353966 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.839069202 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.83481561 seconds)
  done (took 42.175448558 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.840253649 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.83925477 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.838209363 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.835371714 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.839823741 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.837168741 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.840083232 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.839074524 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.838535687 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.838824677 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.837052932 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.840284492 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.846698049 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.846213724 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.840666071 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.839126034 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.983627875 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.838799592 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.840288126 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.840251507 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.835930035 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.845550149 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.83800541 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.837878518 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.83921986 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.839523832 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.840306191 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.840041846 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.839399331 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.840913922 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.84557498 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.841176217 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.840083256 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.842445476 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.839247527 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.841573539 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.845041425 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.841574653 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.837329396 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.841655243 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.849859699 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.864504492 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.841139633 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.846116386 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.841303582 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.840077045 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.843971449 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.850027642 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.838101173 seconds)
  done (took 92.135410182 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.839988987 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.841375025 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.838311833 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.840932465 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.841853835 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.840916359 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.840874018 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.840958957 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.840225045 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.837881294 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.841705706 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.839825859 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.83863393 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.842060078 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.842349444 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.839626948 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.839316642 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.83943497 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.84003503 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.840001115 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.841000999 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.8432629 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.842618242 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.84098692 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.843517918 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.841583525 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.840238713 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.842811218 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.840341114 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.840850034 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.842575449 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.843905047 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.843876537 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.840976892 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.840408314 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.84428386 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.843444083 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.842037938 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.844236051 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.840438894 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.842337894 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.844602856 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.84299954 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.84443344 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.841233373 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.841137864 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.840796725 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.842398684 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.843158536 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.844779552 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.844533347 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.842342664 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.843357772 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.841829331 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.845196991 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.84496747 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.841912927 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.84300626 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.844565653 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.841909571 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.841926818 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.844496544 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.843161008 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.845342156 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.844708205 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.84248314 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.842329652 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.844760381 seconds)
  done (took 127.032437195 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.845752123 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.846308313 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.846071893 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.845997299 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.844619388 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.846295807 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.847148179 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.84668192 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.846709865 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.846024884 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.845879375 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.845871195 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.845560139 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.846521896 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.846669593 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.846088738 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.846543217 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.847374068 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.84688076 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.847696141 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.846157039 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.847199061 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.845789653 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.845883726 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.845292519 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.846874412 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.846484417 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.846424873 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.846110415 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.846438373 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.848181206 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.84665646 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.846180313 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.84654204 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.847255971 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.845831359 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.847285388 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.846883494 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.846292228 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.847333063 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.846403984 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.846781277 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.846100857 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.848213155 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.84717907 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.847665323 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.848044207 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.847966114 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.847549455 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.847623801 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.846809475 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.846843627 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.848294526 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.84832439 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.847790963 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.848338671 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.848184551 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.848374055 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.848298541 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.848380482 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.849105403 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.84840136 seconds)
  done (took 116.285609683 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.848108049 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.848744966 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.846505886 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.845510348 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.848263647 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.846058986 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.848720574 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.84859837 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.847539868 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.849093939 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.848776677 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.846326776 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.847185115 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.849307789 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.846554152 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.845610869 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.847015419 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.845374547 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.848555645 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.846345325 seconds)
  done (took 38.72531096 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.846086122 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.849176732 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.846049617 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.847430545 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.849388582 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.84738343 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.850477115 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.8494091 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.84740934 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.850056066 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.849598129 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.850274116 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.847444732 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.847557158 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.849734935 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.847359513 seconds)
  done (took 31.351643157 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.84656848 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.849379839 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.850268497 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.849661327 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.847159312 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.847423689 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.849825673 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.847496401 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.848066808 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.850460428 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.851057753 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.851276654 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.850461177 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.851319284 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.848107215 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.851106441 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.847957012 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.848644965 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.851200488 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.852004449 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.849548034 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.848339201 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.851736589 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.851870665 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.849115095 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.850568505 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.849925699 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.849042282 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.849516369 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.852382834 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.850600452 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.850569008 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.850179225 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.849887505 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.85110362 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.850083403 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.851262448 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.852031742 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.851271881 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.851514847 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.852167137 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.850548119 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.852738592 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.85306004 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.848539466 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.852652839 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.851227673 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.850898954 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.850709815 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.849607432 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.854059696 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.854192434 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.854112508 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.854886352 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.853360639 seconds)
  done (took 103.562751818 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.852560049 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.85442281 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.851543316 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.854700063 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.853033005 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.850569137 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.853110292 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.849714095 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.851942013 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.852443299 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.851999322 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.853946631 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.852793589 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.85430443 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.853071182 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.85463113 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.852777803 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.851561279 seconds)
  done (took 35.131609877 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.852575322 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.852080362 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.854317409 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.852713356 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.851446051 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.854116399 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.851223107 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.851510281 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.853081558 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.851715229 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.849959691 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.850413116 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.852171688 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.852557961 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.852166119 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.848909496 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.851748984 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.851097711 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.848347177 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.849652724 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.851164568 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.849819532 seconds)
  done (took 42.517201019 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.848068606 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.8487126 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.868160564 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.870692499 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.869784936 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.887506281 seconds)
  done (took 12.97222548 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849413115 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849985234 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.847636501 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849571747 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848549343 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846624251 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847672098 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846363464 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849266878 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847012864 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847504226 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85262761 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847668452 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.844428039 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848799007 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847455069 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845714852 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845913653 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845621287 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848726076 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845176623 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847707758 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846298585 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843885528 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845161648 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843959485 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848740725 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846295182 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842290814 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847050968 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847600648 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.844581204 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84835222 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.844848401 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847210648 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846707981 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843128962 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846951751 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847494184 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841517167 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.845231411 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844773451 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844853672 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843268443 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849246592 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841891099 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843496387 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843081157 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842465904 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846398054 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846145892 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843196237 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8456591 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844233223 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.845154151 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846496444 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842265691 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842884258 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846302791 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842607036 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842379049 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845134164 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84294119 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844066294 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.845693894 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844126938 seconds)
  done (took 123.60563324 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842496764 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.844390035 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843805256 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845301608 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844167371 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843925585 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843801383 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84542487 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844763726 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845648644 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848372713 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.844692711 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843712691 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843240442 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844309367 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844323347 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845389078 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845859048 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845189834 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847326488 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847784164 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844571321 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.844605016 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84426858 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.844550753 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847309127 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847240101 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843901411 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844497299 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844635639 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.845118153 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84868313 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845441556 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.844470643 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.844861902 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844854853 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84716787 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.844521262 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844915961 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847962572 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844989065 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84727278 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84720132 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.845223852 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844964859 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845560305 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846238675 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848342753 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845520075 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845345957 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.845976701 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846530467 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846237576 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846880666 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845294796 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846585543 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845866861 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845041893 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846857806 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848908695 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845634518 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845190127 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849041385 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847943141 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.845076645 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845811727 seconds)
  done (took 123.588931186 seconds)
done (took 2533.821069118 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.897407414 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.921222768 seconds)
  done (took 15.595274587 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.005236187 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.96061661 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.844376513 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.891197022 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.838333042 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.858516021 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.852260848 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.837011107 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.837195009 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.838018003 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.837849962 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.025886078 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.83985237 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.837389191 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.839184743 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.931727933 seconds)
  done (took 51.854769723 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.841290502 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.842113988 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.854036554 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.843118933 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.840344328 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.854255719 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.874590135 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.846185338 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.877721885 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.853940089 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.911482721 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.852945662 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.842570847 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.892015182 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.856636568 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.85773848 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.929265637 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.919771704 seconds)
  done (took 35.361525413 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.920847038 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.859605385 seconds)
  done (took 10.559802361 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.838242698 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.864861077 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.864188875 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.861160304 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.837108406 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.841074902 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.860795185 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.858671007 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.849058192 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.872938055 seconds)
  done (took 70.32172222 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.848368108 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.84304059 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.844736003 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.840898801 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.837498198 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.837174144 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.837674983 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.833186505 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.536911119 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.872665167 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.842670245 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.841960137 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.846273644 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.837695774 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.834268681 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.859718581 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.96866897 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.833389305 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.836328754 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.841155241 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.835549473 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.888001047 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.848127488 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.839586021 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.863063382 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.528203119 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.84088857 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.838725962 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.951786455 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.830978044 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.831362221 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.833807848 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.834797169 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.216242996 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.102423645 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.831691978 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.842573917 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.839954005 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.829656253 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.957292044 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.832890849 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.839688256 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.825003215 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.082912218 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.93989734 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.876603875 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.246887934 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.834734695 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.834425302 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.863528548 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.835229324 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.833802604 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.845040047 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.35059843 seconds)
  done (took 130.881061167 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.825491768 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.128279313 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.979727608 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.825368249 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.100102177 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.034661949 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.826496579 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.875546819 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.828302909 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.028059467 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.990342669 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.933500893 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.82444867 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.823103854 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.823547138 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.821852107 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.987223142 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.894223707 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.826021406 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.820361782 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.851859437 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.033077873 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.953203751 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.826129193 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.844088102 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.033708785 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.945321416 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.932080002 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.112699804 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.820392399 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.887494887 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.822902061 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.820217602 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.820061779 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.977664643 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.920311623 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.91712451 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.820746518 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.819366424 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.819987314 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.480557605 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.017914061 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.920406045 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.965892063 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.021265705 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.026013807 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.470445082 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.818524719 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.461693327 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.983894271 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.034636504 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.03892599 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.945971477 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.82299952 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.072028891 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.820199322 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.817645253 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.061726891 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.968435522 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.928318059 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.820273853 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.817309972 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.822193683 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.063451549 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.818955194 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.915958423 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.819086508 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.817325066 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.918604801 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.926604888 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.957610557 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.031452426 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.854403407 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.757073714 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.325400946 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.033533281 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.885973938 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.052206094 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.817228361 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.814799341 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.899875824 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.579510433 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.975805264 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.065414401 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.038004197 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.85409636 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.425296836 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.813028568 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.011803055 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.002946641 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.012501139 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.021706227 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.976139083 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.020856091 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.815608108 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.814160528 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.021675581 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.953494818 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.817057427 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.171154861 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.048941262 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.431462537 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.835084788 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.110573193 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.949251828 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.245558455 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.443027 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.814989938 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.982757845 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.852669721 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.814835575 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.816790833 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.009149532 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.625398684 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.814337547 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.365331067 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.879526778 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.816674921 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.019755819 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.81753537 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.029199916 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.817405172 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.055500327 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.2845457 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.850590634 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.988097253 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.024440065 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.612627185 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.067444866 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.062281407 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.936015516 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.041254203 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.413107503 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.816576946 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.093572476 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.817290589 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.815407794 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.98478792 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.815793279 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.965300034 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.81827065 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.046353233 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.845912466 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.974972495 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.818587937 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.053935066 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.852519968 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.869357096 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.818866522 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.948884019 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.819541563 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.711786023 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.973388744 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.820336645 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.816053843 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.271867292 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.81895296 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.963859299 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.053393174 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.842052433 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.890552844 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.34614002 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.817920811 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.914767333 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.845636281 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.217639709 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.820760715 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.977513636 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.760144864 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.255590231 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.819507672 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.061876287 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.0023137 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.827148557 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.819598805 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.561844116 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.509687247 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.819506748 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.9831229 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.595294579 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.471015431 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.024483113 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.819734603 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.949450968 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.8225748 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.907491126 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.168795315 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.819887838 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.82131993 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.8213099 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.820822781 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.820415696 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.03142403 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.852311709 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.320868096 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.965842509 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.039251192 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.130712181 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.04015429 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.865447237 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.827139933 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.082242421 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.822202764 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.887805861 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.822724293 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.84564347 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.054209343 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.822970999 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.051373753 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.07077781 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.725775771 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.872721575 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.822909286 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.824789798 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.820670957 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.971884705 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.917236136 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.822650537 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.822176054 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.934011926 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.950183486 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.012361211 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.41546973 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.993983237 seconds)
  done (took 887.064414359 seconds)
done (took 1203.413588728 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.827471585 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.820666988 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.810183936 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.826120164 seconds)
  done (took 29.042083768 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.83932706 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.83311596 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.836292661 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.831174533 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.834880872 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.83217865 seconds)
  done (took 12.769822903 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.865014422 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.82579495 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.826176272 seconds)
  done (took 21.280941007 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.900865157 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.243064851 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.935698972 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.278735234 seconds)
  done (took 10.122727016 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.837946522 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.833768263 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.836156577 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.836888836 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.836148418 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.836640689 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.836282892 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.836503439 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.837107225 seconds)
  done (took 18.292752762 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.284405962 seconds)
done (took 97.54948521 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.834270318 seconds)
    (2/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.454750832 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.837209432 seconds)
    (4/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.860484848 seconds)
    (5/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.026640998 seconds)
    (6/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.980668337 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.047960453 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.873721745 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.947977375 seconds)
    (10/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.837734583 seconds)
    (11/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.93069789 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.856396174 seconds)
    (13/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.297418094 seconds)
    (14/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.132237713 seconds)
    (15/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.95193349 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.418710731 seconds)
    (17/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.10227431 seconds)
    (18/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.851608213 seconds)
    (19/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.946739512 seconds)
    (20/309) benchmarking ("sort", BigInt, false)...
    done (took 6.82893211 seconds)
    (21/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.728308205 seconds)
    (22/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.130720196 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.833779609 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.720195916 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.060694588 seconds)
    (26/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.828623276 seconds)
    (27/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.884080482 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.15778795 seconds)
    (29/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.831729512 seconds)
    (30/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.135226502 seconds)
    (31/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.829276117 seconds)
    (32/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.853926299 seconds)
    (33/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.947771349 seconds)
    (34/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.173746596 seconds)
    (35/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.029686746 seconds)
    (36/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.012779118 seconds)
    (37/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.181688186 seconds)
    (38/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.830947602 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.961297903 seconds)
    (40/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.915356534 seconds)
    (41/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.172442132 seconds)
    (42/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.932104301 seconds)
    (43/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.029101282 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.462356322 seconds)
    (45/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.216140549 seconds)
    (46/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.814911166 seconds)
    (47/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.884896076 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.097746786 seconds)
    (49/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.657169775 seconds)
    (50/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.846350909 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.938880501 seconds)
    (52/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.145217973 seconds)
    (53/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.818229504 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.154761055 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.113713847 seconds)
    (56/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.494003148 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.913148592 seconds)
    (58/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.253727056 seconds)
    (59/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.36432142 seconds)
    (60/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.421111697 seconds)
    (61/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.813898356 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.838224394 seconds)
    (63/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.053282202 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.934617263 seconds)
    (65/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.335601194 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.893272286 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.468790149 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.489104981 seconds)
    (69/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.933491993 seconds)
    (70/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.032506589 seconds)
    (71/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.001675182 seconds)
    (72/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.012980099 seconds)
    (73/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.817017651 seconds)
    (74/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.862738059 seconds)
    (75/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.424012839 seconds)
    (76/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.97306009 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.215516721 seconds)
    (78/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.924297007 seconds)
    (79/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.939269592 seconds)
    (80/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.004817438 seconds)
    (81/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.865434233 seconds)
    (82/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.434723819 seconds)
    (83/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.018264639 seconds)
    (84/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.81592008 seconds)
    (85/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 8.407534165 seconds)
    (86/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.220487436 seconds)
    (87/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.94779346 seconds)
    (88/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.986225868 seconds)
    (89/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.957825615 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 5.535372623 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.47255071 seconds)
    (92/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.412265187 seconds)
    (93/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.693899134 seconds)
    (94/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.328551482 seconds)
    (95/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.713155671 seconds)
    (96/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.943514912 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.832837679 seconds)
    (98/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.076180586 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.75196228 seconds)
    (100/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.868109333 seconds)
    (101/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.002893645 seconds)
    (102/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.820549282 seconds)
    (103/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 8.091318848 seconds)
    (104/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 3.540071666 seconds)
    (105/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.964192323 seconds)
    (106/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.14247841 seconds)
    (107/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.84419083 seconds)
    (108/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.184888406 seconds)
    (109/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.132027125 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.937841637 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.981152639 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.821271072 seconds)
    (113/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.35787752 seconds)
    (114/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.864397816 seconds)
    (115/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.841351839 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.049727415 seconds)
    (117/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.996973504 seconds)
    (118/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.895075859 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.83170852 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.888816931 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.129800129 seconds)
    (122/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.234290632 seconds)
    (123/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.118462941 seconds)
    (124/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.176899522 seconds)
    (125/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.938331478 seconds)
    (126/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.00656144 seconds)
    (127/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.823059253 seconds)
    (128/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 8.083077137 seconds)
    (129/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.185253735 seconds)
    (130/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.968532626 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 2.285297257 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.858261443 seconds)
    (133/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.918427034 seconds)
    (134/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.000640976 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.094797211 seconds)
    (136/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.916743478 seconds)
    (137/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.917345554 seconds)
    (138/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.962635495 seconds)
    (139/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.898527624 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.048202786 seconds)
    (141/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.834953996 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.146004825 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.83307345 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 8.123948826 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 3.293450469 seconds)
    (146/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.859098252 seconds)
    (147/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.879171106 seconds)
    (148/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.075517687 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.078276216 seconds)
    (150/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.346584058 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.054042559 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.862751115 seconds)
    (153/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.37670868 seconds)
    (154/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.235114337 seconds)
    (155/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.856502647 seconds)
    (156/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.342877486 seconds)
    (157/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.169068784 seconds)
    (158/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.047453093 seconds)
    (159/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.170790083 seconds)
    (160/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.470252921 seconds)
    (161/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.22567318 seconds)
    (162/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.853862714 seconds)
    (163/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.941386232 seconds)
    (164/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.918972094 seconds)
    (165/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.964751462 seconds)
    (166/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.930539843 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.174313599 seconds)
    (168/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.216953477 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.735523872 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.948406867 seconds)
    (171/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.13573292 seconds)
    (172/309) benchmarking ("sort", Float32, false)...
    done (took 5.602536585 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.161018888 seconds)
    (174/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.838255418 seconds)
    (175/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.874459412 seconds)
    (176/309) benchmarking ("map", identity, Int64, false)...
    done (took 3.283677109 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.836989814 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.210505849 seconds)
    (179/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.350307172 seconds)
    (180/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.840211331 seconds)
    (181/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.476702975 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.862956061 seconds)
    (183/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.821309143 seconds)
    (184/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.130456774 seconds)
    (185/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.42595254 seconds)
    (186/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.863601413 seconds)
    (187/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.853942442 seconds)
    (188/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.648763511 seconds)
    (189/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.941313756 seconds)
    (190/309) benchmarking ("sort", Float64, false)...
    done (took 5.653397948 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.135430366 seconds)
    (192/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.837573802 seconds)
    (193/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.560573349 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.920178958 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.877986151 seconds)
    (196/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.140002415 seconds)
    (197/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.047049053 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.529417157 seconds)
    (199/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.103664629 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.857473508 seconds)
    (201/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.825410089 seconds)
    (202/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.317154715 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.899846478 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.162586364 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.225166432 seconds)
    (206/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.923567757 seconds)
    (207/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.787298007 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.322825421 seconds)
    (209/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.828753292 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.227456039 seconds)
    (211/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.142039383 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.635584079 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.637579896 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.046834957 seconds)
    (215/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.86057232 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.8429033 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.847371579 seconds)
    (218/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.032139217 seconds)
    (219/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.013192669 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.13026632 seconds)
    (221/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.911162174 seconds)
    (222/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.223751906 seconds)
    (223/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.224322691 seconds)
    (224/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.19769545 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.864077092 seconds)
    (226/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.023361145 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.84242288 seconds)
    (228/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.108290511 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.882603879 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.860735237 seconds)
    (231/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.130758835 seconds)
    (232/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.026133121 seconds)
    (233/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.214758109 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.036236987 seconds)
    (235/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.067955037 seconds)
    (236/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.853612301 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.769688424 seconds)
    (238/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.902924441 seconds)
    (239/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.828388072 seconds)
    (240/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.959184797 seconds)
    (241/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.083005746 seconds)
    (242/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.844987077 seconds)
    (243/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.904567058 seconds)
    (244/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.86708497 seconds)
    (245/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.403352883 seconds)
    (246/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.834357641 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.901852401 seconds)
    (248/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.933980598 seconds)
    (249/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.030502633 seconds)
    (250/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.656356537 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.073727016 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.84312421 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.918724396 seconds)
    (254/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.791291212 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.218771545 seconds)
    (256/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.951310341 seconds)
    (257/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.318730918 seconds)
    (258/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.061776312 seconds)
    (259/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.817711362 seconds)
    (260/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.024364406 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.866534791 seconds)
    (262/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.986647311 seconds)
    (263/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.985463977 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.828969136 seconds)
    (265/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.956639238 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.220241013 seconds)
    (267/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.841860539 seconds)
    (268/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.476390508 seconds)
    (269/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.867666951 seconds)
    (270/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.905079156 seconds)
    (271/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.129036741 seconds)
    (272/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.867819254 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.891625005 seconds)
    (274/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.856296732 seconds)
    (275/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.857702087 seconds)
    (276/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.723273342 seconds)
    (277/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.936749286 seconds)
    (278/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.141098623 seconds)
    (279/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.774759994 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.950676061 seconds)
    (281/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.940794289 seconds)
    (282/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.843413431 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.924973794 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.938424058 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.923982457 seconds)
    (286/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.00651454 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.987034094 seconds)
    (288/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.093424615 seconds)
    (289/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.847266237 seconds)
    (290/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.364136902 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.621561021 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.636205208 seconds)
    (293/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.988069275 seconds)
    (294/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.872070936 seconds)
    (295/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.841823115 seconds)
    (296/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.842092908 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.885723241 seconds)
    (298/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.89202659 seconds)
    (299/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.131313244 seconds)
    (300/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.360666333 seconds)
    (301/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.768345577 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.590979388 seconds)
    (303/309) benchmarking ("sort", Int8, false)...
    done (took 4.839608658 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.867196024 seconds)
    (305/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.356655817 seconds)
    (306/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.935786859 seconds)
    (307/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.057888761 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.866879239 seconds)
    (309/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.843696054 seconds)
  done (took 1005.633962127 seconds)
done (took 1007.475852731 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.876136383 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.870990505 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.854634166 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.875843327 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.966318646 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.889170536 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.86445868 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.856909041 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.90207284 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.9035893 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.855417133 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.888297775 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.85877434 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.858264347 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.856117975 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.872127509 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.162684547 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.878140139 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.872031884 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.865350061 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.87186055 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.853561632 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.903877131 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.887471443 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.858667081 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.857967985 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.858836327 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.875627544 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.967080772 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.860120166 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.858089876 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.867167106 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.161039707 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.872967615 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.850208327 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.876964918 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.865811063 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.865246598 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.859104468 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.887989528 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.289816371 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.859965879 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.857683945 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.856011882 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.856773949 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.860067548 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.857581195 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.862852299 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.87000488 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.870633538 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.290907378 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.877103839 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.861190003 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.857346691 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.867244693 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.858805176 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.861171595 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.874425966 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.877026376 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.87574226 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.151174106 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.883480007 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.859819838 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.87439911 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.86570472 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.326708101 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.857526372 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.861205151 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.289618339 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.866258742 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.325388901 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.871946769 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.859867286 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.872788043 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.890718597 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.162576394 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.874289869 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.857342535 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.865927416 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.85840785 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.867768501 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.870641962 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.863918217 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.859601918 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.873258065 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.891942039 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.868207956 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.86066876 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.868022586 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.878578617 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.867690622 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.870272968 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.863485272 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.855125487 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.868514731 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.862621855 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.862130748 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.864514348 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.864478879 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.869969573 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.288969278 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.879857383 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.856295248 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.856995815 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.859167931 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.873631776 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.289551351 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.864801803 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.882387476 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.907907678 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.861377474 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.153850625 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.884484217 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.877927961 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.869513524 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.863475231 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.855963708 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.154491803 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.311268533 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.880495946 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.862920294 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.859541311 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.877794867 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.863396029 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.857179572 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.16651926 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.881911646 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.874426608 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.982832817 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.872161962 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.893291258 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.860282967 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.864337515 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.894879611 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.878710132 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.893915041 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.863822976 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.878254893 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.879414185 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.857871397 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.874555513 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.871727877 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.862586753 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.867171096 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.856607528 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.89644897 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.874196603 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.875187359 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.882339492 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.983713855 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.860151823 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.157031307 seconds)
done (took 292.139907302 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.934536836 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.859204003 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.962931077 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.859580856 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.948726257 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.944082955 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.855356626 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.8575456 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.856777017 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.268214204 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.857438682 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.858561348 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.854860673 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.85805045 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.949732768 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.859650394 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.857293759 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.1985177 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.859846048 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.936088869 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.857428502 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.857254799 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.860762318 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.239419402 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.852697752 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.852207884 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.931956337 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.859517737 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.204955254 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.861037728 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.857203855 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.205082377 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.9500302 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.879024958 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.870409966 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.869079607 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.945291113 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.863113268 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.942650942 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.949698777 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.96262377 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.901920131 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.853208602 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.861250083 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.863372761 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.861813106 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.857671374 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.889343523 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.860024416 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.858352281 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.202654729 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.871581065 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.860474141 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.860135303 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.858851334 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.892964477 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.859037511 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.863216898 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.959308686 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.86295139 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.923877944 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.241871409 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.263196811 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.862428319 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.858943673 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.861137436 seconds)
  done (took 183.806067582 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.927195628 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.938856694 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.928935631 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.863456227 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.912640927 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.933647848 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.863520504 seconds)
  done (took 15.158102819 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.868058895 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.861496271 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.913520437 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.911907023 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.861875604 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.011894787 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.862961577 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.874613129 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.269464687 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.915533362 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.863115934 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.863729026 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.872643893 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.856640033 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.910866104 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.874089297 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.978052515 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.863528477 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.863979528 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.013187762 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.860438243 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.869234353 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.916806349 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.874514555 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.863441567 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.868065057 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.445839206 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.863675856 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.859976565 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.864561639 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.86164427 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.907020219 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.862814637 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.856626774 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.860268075 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.979071848 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.863500162 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.8609297 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.863605416 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.862229487 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.863790059 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.862496327 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.864097739 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.861304886 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.863313774 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.887791259 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.863851785 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.862926909 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.863298992 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.86440102 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.914913589 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.866444237 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.860457297 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.862289806 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.921563489 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.873101265 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.865897955 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.862091649 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.864957498 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.86350705 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.016179651 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.913699642 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.863721089 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.912990789 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.86502681 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.864898398 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.865236424 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.864362659 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.926901863 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.866079681 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.91288606 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.863545362 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.024408285 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.888759175 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.866362633 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.867707354 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.868263233 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.866043357 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.861609814 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.872463788 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.863085609 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.866458312 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.87150356 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.86305858 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.863225922 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.978395283 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.97487234 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.863594767 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.878130211 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.872361952 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.864995297 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.918489072 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.866178115 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.862622158 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.918059257 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.98117368 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.922521882 seconds)
  done (took 205.661265788 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.871392696 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.875994067 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.86776229 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.8826558 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.865955716 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.866280156 seconds)
  done (took 13.022567124 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.867828931 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.867195391 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.866695889 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.867374381 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.867939181 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.867056335 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.867686307 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.868928889 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.871198634 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.867519524 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.867703748 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.86876132 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.869921254 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.86706015 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.868483726 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.867789618 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.868605495 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.865434312 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.867582229 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.86901251 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.012500757 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.868233035 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.86725283 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.868235402 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.873222666 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.86765337 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.876062317 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.868834585 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.867727735 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.872677763 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.872599314 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.868505888 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.868277798 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.873376581 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.87253543 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.869751021 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.871859877 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.868942035 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.865907134 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.868982443 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.868688393 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.868569709 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.867986304 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.868658443 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.869707533 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.872395335 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.874590026 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.877962514 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.871405563 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.870533071 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.870079558 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.870125597 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.870916387 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.869973139 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.872964377 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.874052718 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.875120094 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.871608022 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.870598302 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.870512482 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.871461218 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.871978835 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.870672367 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.875351178 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.878103416 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.870917642 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.869362807 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.87418416 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.871023504 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.870131059 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.872371601 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.86767364 seconds)
  done (took 137.589952074 seconds)
done (took 557.036380243 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.147740415 seconds)
  done (took 8.943974518 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.997756026 seconds)
  done (took 8.900499267 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.335263964 seconds)
  done (took 10.133652248 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.866498615 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.86403034 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.87074119 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.862924323 seconds)
  done (took 29.269740393 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.958633358 seconds)
  done (took 8.756576443 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.873459765 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.863846391 seconds)
  done (took 15.572011166 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.93209934 seconds)
  done (took 8.73212114 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.021753209 seconds)
  done (took 8.822272597 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.88158583 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.900039263 seconds)
  done (took 15.593585533 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.851487019 seconds)
  done (took 8.649880343 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.759819171 seconds)
  done (took 11.568184001 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.874526188 seconds)
  done (took 8.685281457 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.920064488 seconds)
  done (took 8.719958547 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.932254053 seconds)
  done (took 9.733351078 seconds)
done (took 163.877981786 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.867606215 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.86330982 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.864480009 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.866048173 seconds)
  done (took 29.260206951 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.905065951 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.905293054 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.907205421 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.916651951 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.908951896 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.906520576 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.897559623 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.897934448 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.915771221 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.907250463 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.908267897 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.910463062 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.904718922 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.896847192 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.907519787 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.906352326 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.916800873 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.91083435 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.898054344 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.909227856 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.87298424 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.917467611 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.911615785 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.873576398 seconds)
  done (took 47.51399983 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.06928226 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.944858998 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.029385516 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.92454364 seconds)
  done (took 9.767922871 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.923170994 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.927093177 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.94041929 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.976928396 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.004181423 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.93626076 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.90192896 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.899713056 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.882200713 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.926878239 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.00351001 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.942508468 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.010154262 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.877085382 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.059834028 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.873399534 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.873768653 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.926157702 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.980334738 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.99088317 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.874717351 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.925226843 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.929909245 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.946065642 seconds)
  done (took 48.332505359 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.872204859 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.880523322 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.879708316 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.874620056 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.870612903 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.874228867 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.879020685 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.875217655 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.89355808 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.876773341 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.873179179 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.872916799 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.872036173 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.873432979 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.874726086 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.885458065 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.887595392 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.873584411 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.877202352 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.880483552 seconds)
  done (took 39.349507852 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.866588479 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.722854925 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.219293937 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.123053749 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.866051479 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.865767774 seconds)
  done (took 31.465177768 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.885475441 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.878505304 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.874454269 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.929544833 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.005711957 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.878260689 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.872700134 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.881638951 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.916099041 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.936012239 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.89047373 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.897880421 seconds)
  done (took 24.648516536 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.872053926 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.867837883 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.866839566 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.885352939 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.885594673 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.8792635 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.881593971 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.868953623 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.886604355 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.892307685 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.882470977 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.890946056 seconds)
  done (took 44.363692109 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958532372 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.914832331 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.898660957 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.559243538 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.248438129 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.082983493 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.520442416 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.210475606 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.873151948 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.14452314 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.984937976 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972231594 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.12807844 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.277071809 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.897107343 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.345400798 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.171342256 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.087371305 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89845714 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.60314339 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935960397 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.952049416 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.733488417 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.930819497 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.082668529 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.001727013 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.140296276 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.870552893 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010677312 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.909708612 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882627578 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.87106767 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.145602716 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25446052 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977930992 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882048155 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.491692589 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.583904392 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.858376148 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.707184962 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.658420679 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.004715547 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884150614 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872713894 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.805964739 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.908334358 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240390351 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.877026084 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.584327837 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.873570375 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.884025436 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96916144 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.876808817 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.688111929 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.785932981 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.872581538 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.871309511 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878584067 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.442917602 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.035866442 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.936491141 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.840800548 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.963163106 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.604848104 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.289190539 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.023441502 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.87695013 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.878298494 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809353518 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.678413618 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.930158538 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.202240075 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.894163963 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.523986368 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176946099 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.005845283 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.813037106 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.147767636 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.312148829 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.839351257 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101109287 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873778127 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809418271 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.814844317 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.810570406 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.147398302 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911012431 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.63437916 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915962022 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.204299994 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.884536714 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89383078 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899293072 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.098748344 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.759808132 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.875489129 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.786299096 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.026489454 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896495135 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.206896375 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.808783028 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.878994596 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133422607 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.088263285 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.818403108 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.376440606 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.050600258 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.346446736 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.921005143 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.909452883 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.916872869 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.154667193 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.935913077 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.055045398 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930817856 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.877125132 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.179645275 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.369045874 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.009411209 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.031662738 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.000752024 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.204497444 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903841014 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959382122 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.880666266 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.878257316 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.706006767 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.431544989 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.87781758 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.880683695 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.821091537 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.917401604 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.879623088 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.826540623 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.495666724 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.986642678 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.892063665 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.101314032 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.360187791 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182509712 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811755214 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.230143717 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.966954321 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.100036987 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.529094158 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.961758122 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.139989729 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.816898455 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.850041158 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918916418 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897701776 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976691792 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900195468 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.893209896 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.163999271 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.882944264 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.883129571 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.705861277 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.914315682 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877864755 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.883357972 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.629941965 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.154873962 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.901495757 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.885295645 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.770916562 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.891969765 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943367022 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.884252619 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.890019492 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.415392489 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.589956957 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.883466467 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.460090676 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10286608 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889703095 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.698783655 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.995974096 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.962956563 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.156189462 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.940276926 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.814272453 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.591029262 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.574986265 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.880005385 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.816764463 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.881537574 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890996539 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.89012937 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.077642603 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.163818411 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925701365 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.606422705 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.923865824 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.892746109 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.886930276 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883141912 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.387626814 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.059423908 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.942606287 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.922645681 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027952809 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.896114135 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.817642108 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.885651517 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.887588774 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.883620032 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.88263104 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917381192 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.611320296 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261972581 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.14232615 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.496205451 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.896786112 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.640271632 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.944164202 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.880778477 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.611464403 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.086192973 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.018145987 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891596949 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.893162051 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.616336279 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.57764594 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.450028108 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195714259 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.192175921 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325819162 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 4.976864893 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.906238913 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.225922191 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817118107 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.440829447 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.940011337 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.225102212 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827155627 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97354915 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.532793811 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.23597512 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89669077 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.111444817 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.277685888 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.690378271 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.035562803 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.096214298 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918617732 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.915233737 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.838433301 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.170884746 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029199258 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.630945604 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.098152402 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.219595178 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.606927355 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.016604577 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.882926498 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.568196825 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972713072 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.59480056 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.05851038 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.94996932 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.867868544 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368254633 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.893790285 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.114267214 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.241118987 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.915763701 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.004443534 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824099276 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.898637669 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.899599261 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.88953508 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.882739369 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.758431509 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.14342547 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.899403888 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822063698 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.883667702 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.178666281 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.790564102 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.895140012 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889727279 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208500743 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.314722206 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053907243 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.851099637 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.400573978 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897121929 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.824668763 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.823692066 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.583847262 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.896411133 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.865176368 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.102018689 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.993313619 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.805897992 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.831434229 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.964709989 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.147274255 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.906252424 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.164594343 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.165841268 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.588253849 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916731687 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.990270434 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.623652862 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.004079731 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.889028422 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.126433468 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.643882764 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.114397244 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.946358128 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.844999302 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.888279008 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.10205876 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.890519807 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.814299029 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125327399 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.608822435 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.892277145 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326455037 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960544451 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.877667758 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.938333595 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.978733378 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899001871 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966855238 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.899610892 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.900365357 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.900001755 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934926768 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.878535168 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.01833736 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.902016882 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981623403 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.060661935 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.415399121 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.893985279 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.16818564 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266195159 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.221025923 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.949128068 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.889388361 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889985197 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.823603624 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037124281 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.11400312 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.164998952 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.020063072 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.006051475 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913677249 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.624714757 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.979020528 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.124931781 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165220107 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.786115869 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.275180564 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.924999867 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.890402568 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90060732 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.102820842 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.106699182 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207369197 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.029956941 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.851909739 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.244709549 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16429593 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.891127901 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.891349253 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.480279156 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.893153922 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.699018495 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.93309787 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.829414726 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173583633 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.901485662 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.270667918 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.913483653 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.053096654 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.665427868 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.618118207 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.181358321 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.881626444 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.953871417 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.169431237 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.289268463 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205354537 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958830636 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.903071397 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.004721652 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038562921 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.767009057 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.891551066 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.893608117 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.94097792 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.602442187 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.90303695 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172353154 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20539447 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.890441221 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.766111818 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915742328 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.903064013 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.118670593 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.169957513 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.14476986 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902842609 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.900239644 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.708084442 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.17182053 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.954625659 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827913409 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.896833298 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993525457 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.141654327 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.915740894 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.346889981 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.604624542 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171336342 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.895725272 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91723884 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.939885714 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.267427681 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.227734169 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.433619309 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.109978004 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.479467369 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.346234979 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18956194 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.898883481 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.93443197 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.191897368 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.898206168 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.862225309 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927467654 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.168767279 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.208556212 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.896546018 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.753658401 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.864492344 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.237753075 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.459292383 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832916523 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.899440115 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.95636857 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.895482358 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.028387588 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.907602485 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.775773119 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.935766196 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.644987478 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.167816816 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.899032505 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.885579288 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.650980208 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.069424578 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919620231 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039533452 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.900062791 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.56744552 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.243695562 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.151097542 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.8565672 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.89606976 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.901213646 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894648774 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.880816619 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.09104583 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.093753371 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.192923231 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.887964617 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.926057029 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.897350582 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.112168502 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106635886 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.902949325 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.039510534 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.860058097 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.930704728 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.800495222 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.398690281 seconds)
  done (took 1679.312819338 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.908919419 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.921197559 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.926472999 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.947566002 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.923094337 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.940322685 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.958845871 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.983385549 seconds)
  done (took 57.339526013 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.896436542 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.091536655 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.90679572 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.899003964 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.9065578 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.897807893 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.063834349 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.904332748 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.906414205 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.908546953 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.898244672 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.89428247 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.206345848 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.918251952 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.897131742 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.883295051 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.905626009 seconds)
  done (took 74.81661706 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.909327249 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.957155139 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.930129689 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.91175901 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.853992779 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.906065506 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.684925448 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.902919189 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.897008427 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.119643509 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.531123271 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.900191505 seconds)
  done (took 90.336694839 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.90901517 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.90433935 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.905155997 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.905359922 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.903727297 seconds)
  done (took 11.361410449 seconds)
done (took 2189.691659254 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.152271499 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.120790333 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.135871101 seconds)
  done (took 6.087626442 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.049094517 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.094620348 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.216844643 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.222748243 seconds)
  done (took 10.41760777 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.185732459 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.277394159 seconds)
  done (took 6.295046135 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.290058293 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.90750113 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.280668098 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.900772262 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.899962267 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.900979151 seconds)
  done (took 22.539904849 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.904061692 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.906267176 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.904369833 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.906899456 seconds)
  done (took 9.452996241 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.884654489 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.593635802 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.887827127 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.898089847 seconds)
  done (took 21.09661837 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.652103912 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.661972475 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.648167832 seconds)
  done (took 9.79487968 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.450722093 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.800738872 seconds)
  done (took 9.084649956 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.163282028 seconds)
  done (took 3.996110368 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.036075022 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.211428919 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.419251444 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.42126653 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.536863365 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.573994229 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.206501948 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.133225099 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.307173799 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.332309201 seconds)
  done (took 25.011779407 seconds)
done (took 139.238110553 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.271292705 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.139512679 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.103352784 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.23338086 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.122405387 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.102795779 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.123223066 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.216446484 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.738064913 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.740004371 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.23572378 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.122579047 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.067491939 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.135146929 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.068609473 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.137668246 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.125020084 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.283544004 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.93325208 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.125592427 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.124982621 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.871010446 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.077866503 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.880996131 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.127230041 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.054175613 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.447202704 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.90723949 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.085773166 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.456989492 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.056456783 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.280927377 seconds)
  done (took 172.230895557 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.652478632 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.903707917 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.901295763 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.904002134 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.486742661 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.902760862 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.907357814 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.902970186 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.159453116 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.120735935 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.902508722 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.477598868 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.903245758 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.901597956 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.92102552 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.919597612 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.24071157 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.66885698 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.904182338 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.9020958 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.903775881 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.392374238 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.902968776 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.411003888 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.250340708 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.92060347 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.904343124 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.926286063 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.914133626 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.915403933 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.922424373 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.905558819 seconds)
  done (took 209.690493163 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.90725207 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.905499545 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.906205915 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.904707184 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.906281393 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.910485238 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.908214834 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.904029328 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.579703136 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.575481712 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.915101002 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.912629131 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.905352657 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.917408702 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.92408118 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.904902934 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.913056716 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.914386232 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.911027659 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.913582756 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.917557948 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.711916756 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.917602299 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.70383732 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.909479046 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.91139994 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.905910332 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.911980865 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.915766888 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.916290578 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.912990033 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.907696543 seconds)
  done (took 221.943672048 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.110380363 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.914687718 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.914885199 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.872075977 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.9143393 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.914679427 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.910367033 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.111844828 seconds)
  done (took 19.51917721 seconds)
done (took 625.22672633 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.371615905 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.199445165 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.082393479 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.937446392 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.187479515 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.96415915 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.935029642 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.994719831 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.661887539 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.994564019 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.636606752 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.944799728 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.737286328 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.950655797 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.062275441 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.986082113 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.49234133 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.566285571 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.107007126 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.012201298 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.092611722 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.861671605 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.002225762 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.685469024 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.749083742 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.90061792 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.103409444 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.492230849 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.939926555 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.097140193 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.63900339 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.303121421 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.940337763 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.929818878 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.982772813 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.967103015 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.264266281 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.937849233 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.057564148 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.666113923 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.009984025 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.548858252 seconds)
  done (took 104.835914883 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.905339853 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.905756323 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.90193844 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.905239247 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.904778703 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.903504162 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.90440866 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.898822677 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.901554379 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.90173272 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.901338232 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.901114228 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.903312736 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.905596792 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.903584361 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.904064837 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.904561396 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.907340079 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.902783194 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.902957781 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.904141824 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.90295208 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.907166801 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.901679999 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.901620114 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.902937544 seconds)
  done (took 51.343215248 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.917404965 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.057808942 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.130280425 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.930583084 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.914185975 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.918997423 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.931681797 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.918789448 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.915620745 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.919862357 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.006431837 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.919063051 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.93305818 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.132997744 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.924293065 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.914446723 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.914986127 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.913742441 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.061666266 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.927866488 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.933120224 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.918429679 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.933657433 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.927992546 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.915647681 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.91433723 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.91752446 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.354670954 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.919548123 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.010136128 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.952327514 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.939822466 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.313700307 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.140663099 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.962180252 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.922453685 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.915247354 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.012112127 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.917370849 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.914865245 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.931125443 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.918184983 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.133054657 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.405064585 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.92189101 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.91459964 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.36899085 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.017110135 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.950495739 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.923525649 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.137440879 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.926911651 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.915208187 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.91342198 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.948646624 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.922779669 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.914133728 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.228497621 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.922280058 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.929230057 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.917284244 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.91694121 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.067342721 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.919282394 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.063058974 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.920815332 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.923804428 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.912434781 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.134449198 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.924724092 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.406984132 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.922345591 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.913701721 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.009101156 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.067015271 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.387171524 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.923978434 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.070717902 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.325360519 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.934271548 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.918591054 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.342698012 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.937348117 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.919869429 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.916098447 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.915342146 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.913109932 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.957881424 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.928804857 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.345568739 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.409404396 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.234903687 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.939165301 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.927902447 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.915064643 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.229712459 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.920923105 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.91410564 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.127479777 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.419778332 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.92404394 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.922484247 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.394525647 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.924476293 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.931372918 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.925196119 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.133363073 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.925059513 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.958331538 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.915393228 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.921093205 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.916957574 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.932464752 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.920387676 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.914405237 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.383626979 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.021717286 seconds)
  done (took 236.790855358 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.913863279 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.908458371 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.907072545 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.90783962 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.905441514 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.913694327 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.906353674 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.905280454 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.912211551 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.907067612 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.905825357 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.908639081 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.908949305 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.914820903 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.435221879 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.934323267 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.539020816 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.928944727 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.929146296 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.92765452 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.606779727 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.934447672 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.926767425 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.935283156 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.925740339 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.926220686 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.940021429 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.961986349 seconds)
  done (took 169.421895475 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.935027044 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.114188027 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.950898742 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.970098244 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.944459839 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.933491751 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.958824582 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.95435185 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.94043108 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.933233422 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.933332921 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.997101523 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.945388038 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.069072991 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.967292207 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.969227043 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.040146516 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.941238653 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.933957039 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.934485136 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.96271851 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.930273225 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.996659636 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.060368383 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.952290982 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.050945434 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.939667939 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.936371695 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.93901375 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.051118056 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.949205653 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.995782324 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.962626778 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.954579671 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.056964588 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.05041646 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.04091602 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.964776191 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.940394884 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.934049175 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.935500919 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.923602126 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.05015358 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.955000007 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.936293715 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.041525381 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.953065261 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.937986161 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.946199384 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.934822389 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.948926971 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.954085981 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.003607064 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.066323002 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.970485542 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.962429165 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.960890694 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.217046969 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.946333464 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.036947811 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.929241147 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.05450877 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.954136252 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.925646407 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.936222581 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.941575043 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.963361702 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.968536596 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.041332116 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.943332629 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.037488873 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.970528351 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.945272189 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.935644836 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.938682536 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.05527098 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.053835028 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.971899104 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.973919782 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.970486836 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.935225316 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.936429126 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.92811717 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.952981736 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.942302968 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.052578592 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.053420646 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.945112234 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.939234532 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.94020677 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.939898597 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.96439289 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.062355 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.972152056 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.036223943 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.005145097 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.01095485 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.951210596 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.951654423 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.942310509 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.001589021 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.952455349 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.949779676 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.261916707 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.009415242 seconds)
  done (took 209.729595302 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.397112469 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.992559147 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.994944551 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.232098879 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.372857089 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.795731804 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.984909359 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.98864991 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.018381853 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.144609534 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.045411481 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.0006233 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.975265131 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.962411717 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.989737531 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.010667453 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.992025757 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.278657012 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.11905496 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.133459856 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.967471803 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.26086891 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.303388355 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.389395756 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.022288259 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.311999365 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.668597552 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.227957356 seconds)
  done (took 63.454436289 seconds)
done (took 837.4150609 seconds)
SAVING RESULT...
DONE!
