cset: moving following pidspec: 1932
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.905638723 seconds)
loading group "string"... done (took 0.535374196 seconds)
loading group "linalg"... done (took 8.879321393 seconds)
loading group "parallel"... done (took 0.181859758 seconds)
loading group "find"... done (took 1.367893224 seconds)
loading group "tuple"... done (took 2.186166295 seconds)
loading group "dates"... done (took 1.351644468 seconds)
loading group "micro"... done (took 0.211040585 seconds)
loading group "io"... done (took 0.625323675 seconds)
loading group "scalar"... done (took 42.305456817 seconds)
loading group "sparse"... done (took 13.234310143 seconds)
loading group "broadcast"... done (took 1.159344967 seconds)
loading group "union"... done (took 14.085879251 seconds)
loading group "simd"... done (took 5.06947077 seconds)
loading group "random"... done (took 10.140439657 seconds)
loading group "problem"... done (took 2.199338482 seconds)
loading group "array"... done (took 25.567031251 seconds)
loading group "misc"... done (took 1.188462402 seconds)
loading group "sort"... done (took 3.633895515 seconds)
loading group "collection"... done (took 21.840205309 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.692453558 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.147732929 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.184256137 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.193483743 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.216476709 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.156815381 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.177334735 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.577658394 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.010887707 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.243491796 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.159463349 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.576324256 seconds)
done (took 6.059936871 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.323717811 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.465161703 seconds)
    (2/2) benchmarking "String"...
    done (took 0.141452713 seconds)
  done (took 1.24711535 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.086680029 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.189594395 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.120927831 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.106275621 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.123156677 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.12060032 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.120945791 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.120010681 seconds)
  done (took 1.53827834 seconds)
done (took 3.833251595 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.503752202 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.876264341 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.524064021 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.14797178 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.190069432 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.151357372 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.337124051 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.174012225 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.132968877 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.127320444 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.187547221 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.370905611 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.540592342 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.990690115 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.112692053 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.140773436 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.107228015 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.761140525 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.096635831 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.141317405 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.577616486 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.121228983 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.112058509 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.151480466 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.214124563 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.146317202 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.185875032 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.110114062 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.753852895 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117016057 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.200934717 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.113518344 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.181730062 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.25032293 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.106884701 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.116632175 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.73421889 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.205177014 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.13760029 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.089974493 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.746327278 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.094913714 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.20472488 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.120771988 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.121554332 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.209630967 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.124901596 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.109074728 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.111286061 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.099387972 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.19226812 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.525155518 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.12116496 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.156575317 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.119011493 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.753831487 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.112680057 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.169504702 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.153016492 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.121157553 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.094833182 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.125496894 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.173562359 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.126146025 seconds)
  done (took 20.866106616 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.133468928 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.153984264 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.104875156 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.166666355 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.157840561 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.092648549 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.109654278 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.088516961 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.138679356 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.199543871 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.15067543 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.158332749 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.100323689 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.092410075 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.127970622 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.260024033 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121005968 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.133615608 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.10696364 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.102580673 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.151630519 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.12364523 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.105398892 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.123296299 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.182124815 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.231361622 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.122138183 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.133804689 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.104692536 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.12611448 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.151346199 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.161550689 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.105677658 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08876298 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.194621264 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.133453826 seconds)
  done (took 5.59254035 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.208344757 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.127536548 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.206591104 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.190641322 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.123923308 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.159012536 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.19666591 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128789546 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.273157469 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.312795969 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.192195454 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141568433 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108437701 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103554856 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.090846375 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.103273875 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.787996776 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.196331574 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.160851296 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.137294048 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1129261 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.092341303 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.755956195 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097696427 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.107773155 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096067673 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.10106682 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.189222437 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.113511546 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.344578855 seconds)
    (31/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.14620245 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.111078165 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.118794212 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.142091607 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.220070775 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.130519079 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.156627108 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.113063813 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.09381541 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.250129381 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.11995884 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.088789244 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.137297974 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.141303671 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132301243 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.111031696 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.120737664 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.258838152 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.09441206 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.132142384 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.179905258 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.227940886 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.110767101 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.107754122 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.384190837 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.1274828 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098334675 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.110448249 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.314575332 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.150469106 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.093923326 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.10912985 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.0893843 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113154902 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.088626417 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.792344692 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102944997 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.30873145 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.094949497 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.180763632 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11182935 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.116063203 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.112574614 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09678953 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.129783534 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.090422696 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.106851658 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.105419091 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.090330648 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.110717929 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.125376046 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.097264855 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.10621196 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.158407746 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.133285347 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.129676659 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.134569914 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.097626704 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.106466064 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138940241 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093267365 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.109844369 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.157812213 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099550307 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.127033673 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111520742 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.153122804 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.10992336 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.18554395 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.11020706 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.133442708 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.111636659 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123361033 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.130505831 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.107578394 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.094262383 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.105498894 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.106709801 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158369504 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.109874043 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.090785728 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.111687025 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.107399229 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.107101436 seconds)
  done (took 26.523850927 seconds)
done (took 53.61368491 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.457575111 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.123272718 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.124223306 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107045109 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.122479639 seconds)
  done (took 1.651859764 seconds)
done (took 2.342568576 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.384978431 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.20469786 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.131155121 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.206536704 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.116912136 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.213262107 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.191922631 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.133434663 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.242454871 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095826816 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.221174672 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.095907761 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.117432803 seconds)
  done (took 3.074505977 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.106933187 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.129440775 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092177622 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.121885085 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085554768 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.121951939 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11772928 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.12324321 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.119793319 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.096448287 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.102164736 seconds)
  done (took 1.906111501 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102676586 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.124341974 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092303507 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118359003 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086000397 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11819534 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100908486 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.129391177 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11739991 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.097731772 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.101966323 seconds)
  done (took 1.877564838 seconds)
done (took 7.539319265 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.077390859 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.316575347 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.131453515 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.178775893 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.365679974 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.203238036 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.547913158 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.12607198 seconds)
  done (took 11.860328475 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.121389659 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.108373858 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.107250813 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.092731946 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.127361951 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.095366455 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.108218965 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.094013872 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.107514532 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.110208013 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.095755595 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.108035954 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.094077629 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.109384404 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.094104767 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.108178125 seconds)
  done (took 2.438486176 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.126585792 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.124352539 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.114585909 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.119418581 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.096893733 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.113721385 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.114268526 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.097945194 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.11167279 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.111188739 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.103855328 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.118372977 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.115856503 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.096015572 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.115093774 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.119454609 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.096632563 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.114107703 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.099124048 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.115120952 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.118828413 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095781655 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.117228287 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.117287228 seconds)
  done (took 3.4884358 seconds)
done (took 18.474469347 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.180016847 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112670804 seconds)
  done (took 0.988716783 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.114486435 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.130550513 seconds)
  done (took 0.946294124 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.117517796 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.108542546 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.145370484 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.124953722 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.092855413 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.107504319 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.140707028 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.092478869 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.109321725 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.108968938 seconds)
  done (took 1.853996862 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.097728779 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.112370715 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100961282 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.131590839 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.119761673 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094563674 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.114939215 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.112267848 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.09896807 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.107178052 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.099270149 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.127683911 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.115080045 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12943471 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.097253287 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.115364524 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.118306394 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.096569541 seconds)
  done (took 2.692045311 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.092542502 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.109444306 seconds)
  done (took 0.90754491 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.094482423 seconds)
    (2/7) benchmarking "second"...
    done (took 0.106303161 seconds)
    (3/7) benchmarking "month"...
    done (took 0.094452955 seconds)
    (4/7) benchmarking "year"...
    done (took 0.109677912 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.106085022 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.091005153 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.105949591 seconds)
  done (took 1.410405832 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.725604842 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.25912902 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.361461084 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.126557379 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.147760002 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.387289022 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.14874272 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.12386815 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.124564341 seconds)
  done (took 3.168215117 seconds)
done (took 12.665581589 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.10362419 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.213305792 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.57536422 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.130109936 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.089610061 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.170802269 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.280046866 seconds)
done (took 2.270530728 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.510858658 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.122255031 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.100691738 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.090673795 seconds)
  done (took 1.529779403 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.091501762 seconds)
    (2/2) benchmarking "read"...
    done (took 0.11459459 seconds)
  done (took 0.920577114 seconds)
done (took 3.161192733 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090420835 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.105800629 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.121325128 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.106051412 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.089411252 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.105941393 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.087972775 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.10767819 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.08682267 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.106182208 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.090082099 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.107425273 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090048789 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10445451 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087947747 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.10523739 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089216072 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.103937317 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08961248 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105198052 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087030141 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106870747 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.087390031 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.104609956 seconds)
  done (took 3.114441094 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.111881079 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.108644968 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.116825496 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.097349695 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.111892977 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.112413302 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.096538769 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.107269991 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.096531615 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.10982358 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110705243 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.096378691 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.109587408 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.094618769 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110965048 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.111790493 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.096861891 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109015056 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09339188 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.112148838 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.11315661 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092541758 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.112571462 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11224312 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.095412261 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112129503 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.093016242 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.108433467 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113384192 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095635054 seconds)
  done (took 3.880762171 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098982964 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.10368661 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089909074 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.116820107 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.087851879 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.109109806 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.087046174 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.105428256 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.089150097 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.105742076 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.089071267 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.104738675 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.087090686 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.106243326 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.089668142 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.111627292 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.123036491 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.08932901 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.104664043 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089158392 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.111154354 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.087865692 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.107331584 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.087381921 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.10494427 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087523917 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.106199917 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.088000026 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.106522974 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.087938239 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.112268618 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.09447839 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.107088322 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.117559631 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.096071183 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.104656181 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097531597 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.104927074 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.090043363 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.10525274 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.087873579 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.105628131 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.088033679 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.11680419 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.09165563 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.105967028 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.087539003 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.10629157 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.088644766 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.108563502 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.089064591 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.106627853 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.09083568 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.107472315 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.110647025 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.088498444 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.106936001 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.088274165 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.106376661 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089040639 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.104524923 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.089271581 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.112883389 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089512551 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.130743965 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.116046711 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089108672 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.106949189 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.093788538 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.11341054 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.091086088 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.125007949 seconds)
  done (took 7.948662723 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.09438042 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.117491121 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.090934464 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.108305101 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086551033 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.107145346 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11200725 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089194268 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106887179 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.108822159 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106867652 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090717024 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108163038 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092475177 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10608956 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.107466748 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.100221708 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104018046 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.089413716 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110473308 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089011667 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113610814 seconds)
  done (took 2.967327254 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.235746055 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115488345 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.154904456 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.123413435 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.125902211 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105884633 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.113899879 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114704705 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096724039 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.116605441 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115327215 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096690635 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.125926215 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115492494 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099978078 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.118934635 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113293003 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10013384 seconds)
  done (took 2.916338948 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.104973691 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.109624392 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.133878541 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092459559 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.10977499 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09507777 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.11590492 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.125491751 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.095016966 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.109223196 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.103630201 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113579627 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.111110143 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092714023 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11193251 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.093046465 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.11216384 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092042827 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119644209 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.116480927 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.116130672 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103911384 seconds)
  done (took 3.110068792 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109367216 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112610018 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.141938353 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096104801 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.106393107 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.090435961 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.116805273 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.091911793 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.118590345 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.111583794 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093625576 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.108921249 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.099261876 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109627285 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.115101365 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09369321 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111658219 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092719626 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111765572 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.088385202 seconds)
  done (took 2.855160455 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.136687969 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127454599 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.12512949 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119670116 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127594622 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.125666723 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120238382 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.125723339 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.125482838 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139343417 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109838585 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.127567088 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.138083318 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11707864 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126206481 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13797314 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.137467011 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120364875 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.126518109 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125433261 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121970841 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126466733 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.137503258 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108952578 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.129753833 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125606721 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109379783 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132560913 seconds)
  done (took 4.270146006 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092085329 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.109135378 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.089507674 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.106261886 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.090293572 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.105796668 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.090154316 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.105717317 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092433546 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.106273519 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.092277935 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.108474496 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092251709 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.109107664 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.091960847 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.108456092 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091900395 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.106521042 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09033598 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106778142 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.092747008 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108552004 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.0930816 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.106273491 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089946966 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.1095262 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090184899 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107238124 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091901994 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.106481173 seconds)
  done (took 3.720144349 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.103442182 seconds)
    (2/2) benchmarking "in"...
    done (took 0.117142152 seconds)
  done (took 0.959998268 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.089859958 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.126959777 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.08942574 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.113509318 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097833667 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.110818749 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120000326 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098697635 seconds)
  done (took 1.589737014 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.119018278 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.131767221 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.097995142 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.122614499 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.131264669 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.113010438 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.178171104 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.11628608 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.099832407 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.111923245 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.131228288 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.092707303 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.12149264 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098630042 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.120198372 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.126409288 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.090645514 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.121102711 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.100573356 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.112941781 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098487464 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.128124401 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.122901453 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.101127447 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.114367764 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.122305101 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.106506295 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.12287547 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116050766 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106389548 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.118297264 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.086800749 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.115301903 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.098633007 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.109122584 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.129907057 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112167911 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.117159075 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.103287124 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.117626291 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.120352026 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.088903047 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.122037076 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.101439014 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.125088957 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.115870638 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099367318 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.106567711 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.094980371 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.115566035 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.089497287 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.115878238 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.087294938 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.122241507 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.120917395 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112846841 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.114334679 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.115676818 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.098906778 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.115479258 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.101068372 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.11685356 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105253799 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.114794036 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.122784921 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.103598389 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.12020871 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.088965588 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.106116415 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.092268429 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.122259586 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.137987762 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.106471105 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.117843659 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.117175292 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.09233828 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.1181257 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100130645 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.119996795 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.123123151 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.098945662 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.118971836 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.103756319 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.116049663 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.115761043 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.100646032 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.113323352 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.097571443 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.112910022 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.132259667 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.096162678 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.109548189 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.095429631 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.124164658 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.099745146 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.115525548 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.094756595 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.123032426 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.104943183 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.099684353 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116986938 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101033351 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.125334043 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.116680638 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100982012 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.12173205 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.107190062 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.117982351 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.097543599 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.109569323 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.117753837 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.096082857 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.120939376 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.088492829 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.118344643 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.098799515 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.117967271 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.123432112 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097394349 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.116685252 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105804017 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.124291246 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.113953538 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.091265942 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.116614449 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099253232 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.12223006 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.115219773 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.115247785 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.107225572 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.089850169 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.121234535 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099456134 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.120060707 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100117654 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.118231989 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.106785168 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.092654375 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.117688031 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.10570952 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.11626506 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.118994978 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.105101196 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.119715819 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.097727773 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.122507882 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.114842587 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.095327848 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.122842472 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.098760103 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.108524054 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103658451 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.117689505 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.115620525 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.100656068 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121656922 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.099453047 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.118606747 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096638929 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.118938516 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118426652 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.094967783 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.128023836 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.097515954 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.126127586 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.09852812 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.108956092 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.091122647 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.120533676 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.113639025 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.099783267 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.113067371 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.099862198 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.118181924 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.093076796 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.116421763 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.09825831 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.131069297 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.126076587 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099978117 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.121306528 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.124794616 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.099721787 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.120220794 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099553011 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.119684917 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.099960934 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.122418814 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.120166024 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100569115 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.11812015 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.091312827 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.120921287 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105698932 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.113657448 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.110825871 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.095201252 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.11789269 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106428372 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.118758019 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.099613291 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.116459327 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.120133884 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104601124 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.118576414 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099131381 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.114867222 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.099604337 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.123645759 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.119664878 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10293018 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.126247312 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.100584319 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.109835483 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104284957 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.115271209 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.122348973 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.091072269 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.114052804 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.097035716 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.120123706 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098422279 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.116973126 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.088757642 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.124492435 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.12460419 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.101319062 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.114880392 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.099691107 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.128449724 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.116541121 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104288953 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.118976022 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.102699746 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.133385706 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.114311338 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.100890655 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.127495323 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.09996289 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.108012915 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.121034347 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.098665614 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.11265418 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.098618139 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.115449395 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.101319979 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.121131206 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.10093201 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.108130251 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.099650013 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.117134101 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.114300453 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.09276243 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.124907844 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.101569433 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.118899481 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.12827907 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102417695 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.119724666 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.101906723 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.118221672 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.100896837 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.123487621 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.120297476 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101856413 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.117558354 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.095442314 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.119232487 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.095211958 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.112933214 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.117233668 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100667912 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.119828379 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101952162 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.117767674 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.124384677 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.100881196 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.119679308 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.13879103 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.098703062 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.114527993 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.101500672 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.121507612 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.098697542 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.118425856 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.109348626 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106715959 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.118668707 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106919415 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.11825019 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.091746011 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.120011226 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.118186472 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.103007607 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.119615283 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101782954 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.117778111 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.099618904 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.119148362 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.128651652 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.096726179 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.126200583 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102297833 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.122622167 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.118957431 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.102420761 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.118238675 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.095809076 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.119698729 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.1011 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.121396979 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.117629896 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.104276002 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.119879488 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.099128093 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.1177443 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.120675676 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.102476427 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.120914121 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.091633801 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.115299773 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.097177584 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.118869362 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104036917 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.121016259 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.117172768 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099052655 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120991894 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099060656 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.111204189 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.104524987 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.122977714 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.10112422 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.130375387 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.114353433 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.100621174 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.133546581 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.089333214 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.11864999 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.112480296 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.09791722 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.125929929 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101898237 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.125705962 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.10198579 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.116362773 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.111889843 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.103063194 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.11702674 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.091441615 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.11266766 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104464075 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.117767348 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098761974 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.119807976 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.103330702 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.121698064 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.123027064 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099581435 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.119210573 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101838939 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.112515096 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.096699685 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.117163122 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.119424188 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102719085 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.116314457 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.09519489 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.119697746 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.101151328 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.121388155 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.099342794 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.119897118 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.126047037 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101051495 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.120586624 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104944127 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.111110881 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.120274113 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102067996 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.119364261 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.09773863 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.121178398 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102821785 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.122251655 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.124375363 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100779469 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.122150113 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10147609 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.113994143 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100197812 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.120958793 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101696472 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.116332891 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.120692876 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108989662 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.112818481 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.101849683 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.122727174 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.09811262 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.122409831 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.120751936 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.102023211 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.124330743 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.102195825 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.121195747 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.123532786 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.102702123 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.121746792 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103124719 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.119025115 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.105562654 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.11675787 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.127939777 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.103022944 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.121548502 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.100258029 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.11713083 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10034564 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.120306832 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.118385961 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.107748061 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.12220663 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.097193344 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.116223053 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.094717257 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.12116432 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.124674982 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109000875 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.12179435 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102526924 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.112774409 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.094145598 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.123190246 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.116584931 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.101027724 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.123412745 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106370215 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.121555469 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.097737257 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.120486989 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.125831876 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106297649 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.124114304 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.097540611 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.124560807 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.122392138 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.102893749 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.119207343 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.10122387 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.122939052 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.103768336 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.121329575 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.117071083 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111475735 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.126353676 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102311944 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.120487296 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.123581124 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101712278 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.112131369 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102701811 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.122360234 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.123863545 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.10323055 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.120328984 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112475317 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.117402228 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.099958725 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.127134968 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.119156693 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.107838472 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.11222742 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.10306278 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.124389688 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.122861147 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.093577252 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.116399945 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.098573201 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.121172974 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.097791998 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.112381726 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.131630063 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.108029338 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.121056418 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10072073 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.11908615 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.093034306 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.112634093 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.097252674 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.123056037 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.11912513 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.112022452 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.116917478 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.098182026 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.112786876 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100888536 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.124356102 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.123461729 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.095710379 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.112608387 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.100051038 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.121508954 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.110223332 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.120582951 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102373058 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.124343089 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.12124364 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.096289935 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.126838307 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.094924927 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.123092603 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.132790831 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103868826 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.124353259 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.105432146 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.128815392 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.12210393 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.094544089 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.122669184 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.102221123 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.123818236 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.10404813 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.124937253 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.137070981 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104384074 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.118215441 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099481964 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.122608998 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.116868994 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111088635 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.123058358 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103236514 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.124429562 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.119116324 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105603203 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.129883563 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104363364 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.123454555 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.121797521 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102049153 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.121197063 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100388237 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.120155111 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104278684 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.124622918 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101971478 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.126453005 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.117272509 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113530268 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.129419891 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.103890731 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.115521268 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.117191264 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.099606792 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.112678556 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104775917 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.114992881 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100162822 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.119342053 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.101070147 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.12465146 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.103982468 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.123405057 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.122654688 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102705184 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.110848156 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.106974743 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.123714924 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105776972 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.117597943 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.121029664 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104680969 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.126351551 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.1084762 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.120543117 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.102165305 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.123048174 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.12425449 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.09429348 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.125888753 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101197936 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.120717059 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.098633521 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.122593297 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103624793 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.126435978 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.123346492 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105008702 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.123017387 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.106577492 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.127188235 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.114265132 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.096012743 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.12558167 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.097488666 seconds)
  done (took 67.42005013 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.167770182 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101170265 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113662264 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094009845 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.140282756 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113786492 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093270714 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.114247043 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.095047121 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.128181573 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.112306877 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094540914 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.136064996 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142839619 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.139950967 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.12896013 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093848393 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114230018 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094023775 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115280177 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.13578104 seconds)
  done (took 3.282095161 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.119258878 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.133966689 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130327386 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.135628073 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105341764 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.132437102 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.131373466 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.131488939 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115200208 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.128047356 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.135979477 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.132472265 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.106963322 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.128434081 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.126707738 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.128988443 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11599448 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.126638021 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.132325 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.130686051 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10976789 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.131730185 seconds)
  done (took 3.58071779 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.108523738 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.121253575 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.108114957 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.11631786 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102405425 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.116276226 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.107082546 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.118944745 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106926785 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.123837052 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.119315225 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.10399458 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.127018308 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.096719901 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.120148345 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.099029243 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.126606013 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.101586829 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.124720859 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.095986004 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.144394751 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.116904187 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.096333451 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.121397151 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.130415273 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104671694 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.122313409 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.10253976 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.119612107 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103241946 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.118754731 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104455299 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.127003598 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.120286325 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.100728111 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.121219664 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102805464 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.116068129 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099234175 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.126461018 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.09663773 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.123500914 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.129106741 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.100086837 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.118165821 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.104799275 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.121917284 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.096273646 seconds)
  done (took 6.24970352 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.137631703 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.175122657 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.106657209 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144654289 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.13961165 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.136943124 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.103332401 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.158864683 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101165552 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123095204 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.143093285 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.117335917 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.13040148 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.131773783 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.108669334 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.123988765 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.127765672 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102870205 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.129186886 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102288579 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.130771277 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.130672194 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.137179363 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.141345967 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110988709 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.127450028 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102535855 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.133489991 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.135020472 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.129739813 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109459481 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.131467504 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.141214825 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.12536512 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10886726 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.127815973 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.14506454 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103937057 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.129005146 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100467773 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.12737319 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.127814446 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.106792393 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.144277777 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.124800406 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.130669121 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.107266833 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.124474965 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.135449772 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.110373222 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.133525053 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.138212716 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108270529 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.124912999 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.132325737 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.139576614 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.11006754 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.124595452 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.111811862 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.1364008 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.123891051 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107503164 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.138689947 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.125579446 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.13259808 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.140845231 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.10641363 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.13428932 seconds)
  done (took 9.571320911 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110225975 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.148606843 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.140012494 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.14035686 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108674471 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.128761076 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.128343427 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.108911198 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.12918215 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.135561172 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108364405 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.179856152 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.122625069 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.134286722 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.108421736 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.129435567 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.129199262 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10859435 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.129606975 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.128391888 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.109425429 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.140432887 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.128460057 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.14041024 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142322822 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.103046858 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.12884162 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107911752 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.140760675 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.129125404 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.142613676 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.107791263 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.130346231 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.140737194 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.142344121 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.129443457 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100179718 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128948151 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107994994 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.131568834 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.121967815 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.140228899 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109714199 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.121883414 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109343662 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.13026479 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.139983355 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.142906946 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.13467405 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116128276 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.130678093 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.139990054 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128906036 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110220409 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.140119471 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.148740273 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.139783992 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.140271132 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108818685 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.141132215 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.139485845 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.149309302 seconds)
  done (took 8.80202907 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100394532 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11915939 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098480697 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.116771657 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100295809 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.118259721 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10045601 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.119149875 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100168587 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.119834259 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100561788 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.116649361 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098579534 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119281905 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097777987 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11759644 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097848106 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.117535658 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100920397 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.118294855 seconds)
  done (took 3.010863786 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.108758755 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.141619928 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.099781748 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.130198674 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.123686294 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107739289 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.125772945 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123163169 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101950135 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123067839 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112277706 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.135065562 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122172242 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107017376 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.134897463 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.128621433 seconds)
  done (took 2.759055744 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.12139951 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.135254158 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.14800124 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104601089 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.121848954 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.12912384 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101449844 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.117008976 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.096679249 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.130047506 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.107037033 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.133072461 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.120597714 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.099018318 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.120854769 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.106971486 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.116934686 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.104893038 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.121772573 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.147162562 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.10639698 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.124837688 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.10131177 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.12544096 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.127293639 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.10603578 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.128818387 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.118526513 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.099706232 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.121656973 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104230577 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.130783163 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.096794517 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.12880968 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.119434993 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.09893037 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.120111133 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.100953339 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.127652968 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.099189361 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.121131916 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.123981909 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.101080222 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.122166546 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.096515898 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.122084489 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.096250044 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.128886727 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.123255008 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104228751 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.121111669 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.108997162 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.129028418 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.133488291 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.111815223 seconds)
  done (took 7.252761857 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.115956384 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.125745945 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.104798876 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.120301278 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124625584 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109326927 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.125133419 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103744884 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.124081399 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098020128 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.12396398 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.125034889 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103919403 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.125270868 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102946304 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.126115179 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.095159636 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.124126114 seconds)
  done (took 2.925377429 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106930864 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.12129768 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.108985083 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.121799007 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.100976471 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.125140732 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096577487 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.120591522 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099122519 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.12290139 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.121493966 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103539244 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121063388 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.10407852 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.121559889 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101012157 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.124053499 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099099289 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.12180247 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095624102 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.125284918 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.119832478 seconds)
  done (took 3.330307837 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.123908913 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.161568918 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.140077367 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.149092806 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.130273907 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.127019525 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.118326739 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.128639634 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.14743407 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.106583985 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.127552655 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.105608649 seconds)
  done (took 2.411710871 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127283917 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.163097627 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119777613 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104895523 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135983802 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12679823 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107099863 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127828237 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138764134 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141509532 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106502827 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139489319 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138206539 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139185409 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114041716 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135353765 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127313542 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106308913 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123644222 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149775279 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127665334 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118953201 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127892069 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127543495 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106913776 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138733275 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139461869 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142013673 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106687827 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140601864 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135361493 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127490456 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118534219 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142618401 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125657865 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140244335 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105996335 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.152032086 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136074524 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138628339 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103084281 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137259828 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139900465 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134336502 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139525836 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107336453 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134571628 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127116453 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10755357 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.156461776 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137359314 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138176557 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135899216 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139871731 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119578429 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.157415912 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14221593 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139364732 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135722938 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142327673 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138836318 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114474201 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139049713 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142411785 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135725111 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138803476 seconds)
  done (took 9.511460426 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143412119 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122592712 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127745191 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142021442 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117628236 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130036255 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127954576 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107389425 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128489576 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124729346 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.179375074 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107835144 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140549504 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139447397 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127964335 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106726048 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128993913 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139599905 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103500502 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.156467606 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130521628 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139093257 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140195685 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140128786 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121188447 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137302107 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128110219 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128935469 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108328289 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128101978 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135170065 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107804617 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139631756 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.121384785 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117733174 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12920377 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128344066 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135449249 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107721998 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136291165 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13998097 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.152048908 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107692215 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130493862 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143689757 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127927518 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107788643 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125831679 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107129989 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127041971 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142895842 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.143428444 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142149651 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140378738 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108534633 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128627701 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108000399 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129857137 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128912949 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114739043 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141226661 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129273547 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.157826583 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128431501 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107591776 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14012182 seconds)
  done (took 9.38197647 seconds)
done (took 177.531450125 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.121342678 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.163378228 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.139444656 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.165452856 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.123223772 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.136980151 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.157479689 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.118591778 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.125146128 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.100756235 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.124701446 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.126461696 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.167897504 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.122976162 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.101912646 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.127847473 seconds)
  done (took 2.991508819 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.206326078 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.319329491 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.144732175 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.109402324 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.132622197 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.105528157 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.1305196 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.107814812 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.127545974 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.13880065 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10530747 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.127897119 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.137956845 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.105895447 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.1257648 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.105649281 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.138680622 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.126639567 seconds)
  done (took 3.362821737 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.136456037 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.178184941 seconds)
  done (took 1.182104105 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.141011972 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.20814493 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.344020465 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.184357379 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.155780342 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.148879094 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.16060318 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.145465019 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.220943792 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.152323689 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.151070818 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.132748044 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.155847631 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115843809 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.135645047 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.109120005 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.159572333 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.13341528 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.110931855 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.133918432 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.157408251 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.110848439 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.13828659 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.133037326 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.211595651 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.151664218 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.111383287 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.134717418 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.133088588 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.112144977 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.137833841 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.148165548 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.150245835 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.197553018 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.137908577 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.19519951 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.39870813 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.130812222 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.111302313 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.131000437 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.113753887 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.13723965 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.150067482 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.131070616 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.112644583 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.141772604 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.112646954 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.135483594 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.139503784 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.14224133 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.118038734 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.137304279 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.1949787 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.145326156 seconds)
  done (took 9.111074781 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.930899514 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.152765674 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.13335444 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.058170788 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.163286765 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122002044 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.935033407 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.132374379 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.291523879 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.923205598 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127245008 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.145807741 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.266629104 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.283747147 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.177538424 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.372321876 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.796171393 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.144920306 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.139197757 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.177796269 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137622662 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.159293806 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.149984133 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.439008422 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.132667081 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108486419 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.136277653 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.142085071 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.19225293 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.107123208 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.133868857 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.233870978 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.298187961 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.230426235 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111049552 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.128462598 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10733058 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.222038391 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.30359935 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.230402994 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.196212254 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126323723 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.105952519 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.142430221 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.150043182 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.126051073 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.195980001 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.204329366 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.228180808 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.111097669 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.141783301 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.138659997 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.140821403 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.193084476 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.104699666 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.370604785 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.374966328 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.129693077 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138274269 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126703477 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.302231892 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129852271 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.261896187 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134204885 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.248814458 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.128883254 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.850845993 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.20036051 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.129053145 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.116562306 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.137968127 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.134941041 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.119688913 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.191005712 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.402141982 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.145355125 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.133964434 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106557496 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.273709319 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.129202005 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106744574 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.195176218 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134143756 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.138674688 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123076576 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.143674212 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.226325589 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.281705807 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.144539582 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11598411 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.135810491 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143069597 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.110730041 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.269484278 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.255285344 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.192266248 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.246576479 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.144248915 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.218615037 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.19983516 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.141586853 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.202575578 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.137994366 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125689054 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143343796 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.24950603 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.16782147 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.130363224 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.112972788 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.137784864 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.170549488 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.133705092 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.114508646 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.222571236 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.469741607 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.196419232 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.127573397 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.134234742 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116298112 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.2172161 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114819043 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.297323061 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140175829 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.200489244 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.138324967 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.104529067 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.139305387 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.195552155 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.145302644 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.139425301 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.143102342 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115850711 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.304613279 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.256612952 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123790487 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.273667787 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.20752971 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.139548733 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.206837927 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.139329134 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.201543696 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.140490972 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.143133771 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111370464 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.835346891 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.144032774 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.115503843 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.135466783 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.215791729 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12912244 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.108542215 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.129530035 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104504194 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.839310475 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.132942154 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.105445206 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.130862428 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117790435 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.138796355 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136578248 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.112792333 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.217022043 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.271615896 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120012624 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.13805279 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.129870223 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.193908509 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.133523594 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.108211376 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.129563143 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108249661 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.140462844 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.111255959 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.131822486 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.204804862 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.214084702 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.257076585 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.543239105 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.130913933 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.107601917 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.266431246 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130542674 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.343071587 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115860252 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.262076725 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.223549244 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.105764129 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.37350106 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.225230712 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.216920241 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.110724561 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.226715121 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.104900891 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.137169302 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.194522252 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.130925276 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115570369 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.21477909 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124544848 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.146168443 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.189682983 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.130384418 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.259810907 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.128014618 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.202416268 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.134477905 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120856479 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.347641144 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.132307882 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.150879161 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.195060538 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134323198 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.108277866 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.620730923 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.108390433 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.141847414 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.140305973 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.259014966 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.199441605 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.138277721 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115136204 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.144062671 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.194205548 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.267770959 seconds)
  done (took 50.24663193 seconds)
done (took 67.756465259 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.32730571 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.287920671 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.338482518 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.245571012 seconds)
  done (took 2.187168003 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.204056201 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.177583046 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.171291301 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.106023238 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.178337301 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.131450478 seconds)
  done (took 1.875602374 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.518501831 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.431740004 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.37404199 seconds)
  done (took 2.233838458 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.287946072 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.305661305 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.393372573 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.478857547 seconds)
  done (took 2.485262869 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.224941808 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.147352178 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.118710633 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.162885551 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.196350997 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.223360406 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141751524 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.198808637 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.127742735 seconds)
  done (took 2.500624504 seconds)
done (took 12.190633297 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.179127958 seconds)
    (2/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.20576661 seconds)
    (3/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.34826997 seconds)
    (4/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.311586358 seconds)
    (5/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.141231006 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.138280101 seconds)
    (7/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.139929172 seconds)
    (8/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.149352241 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.145028006 seconds)
    (10/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.113191914 seconds)
    (11/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.317059408 seconds)
    (12/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.243134987 seconds)
    (13/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.115633944 seconds)
    (14/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.312653752 seconds)
    (15/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.205130694 seconds)
    (16/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.185461052 seconds)
    (17/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.228071533 seconds)
    (18/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.243339459 seconds)
    (19/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.128742098 seconds)
    (20/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.132899005 seconds)
    (21/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.304695307 seconds)
    (22/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.138226881 seconds)
    (23/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.264050214 seconds)
    (24/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.227894214 seconds)
    (25/286) benchmarking ("sort", Int64, true)...
    done (took 0.248585914 seconds)
    (26/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.145862349 seconds)
    (27/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.275978287 seconds)
    (28/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.249907875 seconds)
    (29/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.212396469 seconds)
    (30/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.260562984 seconds)
    (31/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.219771657 seconds)
    (32/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.204938361 seconds)
    (33/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.244773473 seconds)
    (34/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.146582865 seconds)
    (35/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.206502458 seconds)
    (36/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.235990086 seconds)
    (37/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.229298898 seconds)
    (38/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.218883548 seconds)
    (39/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.138695495 seconds)
    (40/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.225117152 seconds)
    (41/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.186312309 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.166537411 seconds)
    (43/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.128622361 seconds)
    (44/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.237877289 seconds)
    (45/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.173310361 seconds)
    (46/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.230913145 seconds)
    (47/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.116166159 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.163830434 seconds)
    (49/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.148404166 seconds)
    (50/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.101733029 seconds)
    (51/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.119997075 seconds)
    (52/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.272715943 seconds)
    (53/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.216594615 seconds)
    (54/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.109588735 seconds)
    (55/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.131211672 seconds)
    (56/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.192315463 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.164748732 seconds)
    (58/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.175289054 seconds)
    (59/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.146209709 seconds)
    (60/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.173265033 seconds)
    (61/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.228138953 seconds)
    (62/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.184219197 seconds)
    (63/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.119676808 seconds)
    (64/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.13831656 seconds)
    (65/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.118698572 seconds)
    (66/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.186768942 seconds)
    (67/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.151963218 seconds)
    (68/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.112943436 seconds)
    (69/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.147343402 seconds)
    (70/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.225272296 seconds)
    (71/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.201203742 seconds)
    (72/286) benchmarking ("sort", Int64, false)...
    done (took 0.106322505 seconds)
    (73/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.144675364 seconds)
    (74/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.092869234 seconds)
    (75/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.14409333 seconds)
    (76/286) benchmarking ("sort", Int8, false)...
    done (took 0.222378507 seconds)
    (77/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.12115159 seconds)
    (78/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.114554621 seconds)
    (79/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.151677159 seconds)
    (80/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.093549323 seconds)
    (81/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.136541561 seconds)
    (82/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.136634871 seconds)
    (83/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.109879167 seconds)
    (84/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.167282152 seconds)
    (85/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.104678953 seconds)
    (86/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.221055631 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.139366481 seconds)
    (88/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.246730598 seconds)
    (89/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.093554004 seconds)
    (90/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.233950013 seconds)
    (91/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.229378638 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.139667309 seconds)
    (93/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.107653919 seconds)
    (94/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.145748426 seconds)
    (95/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.093927016 seconds)
    (96/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.18296532 seconds)
    (97/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.165432725 seconds)
    (98/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.110374728 seconds)
    (99/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.225578185 seconds)
    (100/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.148220149 seconds)
    (101/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.118822698 seconds)
    (102/286) benchmarking ("sort", Float64, true)...
    done (took 0.256582862 seconds)
    (103/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.128059834 seconds)
    (104/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.201644643 seconds)
    (105/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.133194126 seconds)
    (106/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.165887376 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.12320695 seconds)
    (108/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.147085353 seconds)
    (109/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.135494955 seconds)
    (110/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.125154125 seconds)
    (111/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.188235894 seconds)
    (112/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.139562069 seconds)
    (113/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.122373574 seconds)
    (114/286) benchmarking ("sort", Float64, false)...
    done (took 0.196140534 seconds)
    (115/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.169408541 seconds)
    (116/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.142066344 seconds)
    (117/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.119320034 seconds)
    (118/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.175725385 seconds)
    (119/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.114497767 seconds)
    (120/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.175290443 seconds)
    (121/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.1383558 seconds)
    (122/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.126968387 seconds)
    (123/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.145388513 seconds)
    (124/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112592543 seconds)
    (125/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.140201505 seconds)
    (126/286) benchmarking ("sort", Bool, false)...
    done (took 0.214015068 seconds)
    (127/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.14592135 seconds)
    (128/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.151703244 seconds)
    (129/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.110874061 seconds)
    (130/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.147068353 seconds)
    (131/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.094576114 seconds)
    (132/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.119992095 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.114638174 seconds)
    (134/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.146469708 seconds)
    (135/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.224747592 seconds)
    (136/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111554288 seconds)
    (137/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.137738031 seconds)
    (138/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.118671156 seconds)
    (139/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.14446368 seconds)
    (140/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.119316498 seconds)
    (141/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.14992775 seconds)
    (142/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.120543955 seconds)
    (143/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.137593078 seconds)
    (144/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.09492538 seconds)
    (145/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.169222754 seconds)
    (146/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.11889185 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.124922542 seconds)
    (148/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.160595172 seconds)
    (149/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.107352469 seconds)
    (150/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.140307538 seconds)
    (151/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.138015326 seconds)
    (152/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.114750792 seconds)
    (153/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.216472284 seconds)
    (154/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.158928716 seconds)
    (155/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.226588611 seconds)
    (156/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.105387232 seconds)
    (157/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.138607818 seconds)
    (158/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.094320182 seconds)
    (159/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.146889748 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.169185731 seconds)
    (161/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.158894572 seconds)
    (162/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.120471711 seconds)
    (163/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.137529108 seconds)
    (164/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.120271553 seconds)
    (165/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.1527731 seconds)
    (166/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.1078191 seconds)
    (167/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.119898536 seconds)
    (168/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.10826239 seconds)
    (169/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.138529857 seconds)
    (170/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.112561028 seconds)
    (171/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.11969527 seconds)
    (172/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.094526736 seconds)
    (173/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.139425459 seconds)
    (174/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.178560201 seconds)
    (175/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.114262129 seconds)
    (176/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.175937085 seconds)
    (177/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.133184899 seconds)
    (178/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.128410354 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.140263987 seconds)
    (180/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.104892622 seconds)
    (181/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.139839236 seconds)
    (182/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.137933727 seconds)
    (183/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.093782994 seconds)
    (184/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.120078438 seconds)
    (185/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.123020008 seconds)
    (186/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.120703233 seconds)
    (187/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.121385187 seconds)
    (188/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.119758572 seconds)
    (189/286) benchmarking ("sort", Int8, true)...
    done (took 0.246184272 seconds)
    (190/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.094561736 seconds)
    (191/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.120340341 seconds)
    (192/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.107824646 seconds)
    (193/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.152216905 seconds)
    (194/286) benchmarking ("sort", Bool, true)...
    done (took 0.247548346 seconds)
    (195/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.137392534 seconds)
    (196/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.094825103 seconds)
    (197/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.120205976 seconds)
    (198/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.227815542 seconds)
    (199/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.094977252 seconds)
    (200/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.136850293 seconds)
    (201/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.112725541 seconds)
    (202/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.140577586 seconds)
    (203/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.152366212 seconds)
    (204/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.107959689 seconds)
    (205/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.188519184 seconds)
    (206/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.164081922 seconds)
    (207/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.125046787 seconds)
    (208/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.148175192 seconds)
    (209/286) benchmarking ("sort", BigInt, true)...
    done (took 0.277088615 seconds)
    (210/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.128463005 seconds)
    (211/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.095486355 seconds)
    (212/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.1286659 seconds)
    (213/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.128622963 seconds)
    (214/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.139531314 seconds)
    (215/286) benchmarking ("sort", BigInt, false)...
    done (took 0.256623671 seconds)
    (216/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.119512071 seconds)
    (217/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.097945235 seconds)
    (218/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.136523762 seconds)
    (219/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.138842646 seconds)
    (220/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.143681646 seconds)
    (221/286) benchmarking ("sort", Float32, false)...
    done (took 0.199913684 seconds)
    (222/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.110975978 seconds)
    (223/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.120936888 seconds)
    (224/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.11201621 seconds)
    (225/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.21817765 seconds)
    (226/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.187915411 seconds)
    (227/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.095579455 seconds)
    (228/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.121354541 seconds)
    (229/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.095048419 seconds)
    (230/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.120090648 seconds)
    (231/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.139848377 seconds)
    (232/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.095080632 seconds)
    (233/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.14393843 seconds)
    (234/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.113268669 seconds)
    (235/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.120532969 seconds)
    (236/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.109329643 seconds)
    (237/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.120132965 seconds)
    (238/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.114772386 seconds)
    (239/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.147415112 seconds)
    (240/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.09479664 seconds)
    (241/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.137812972 seconds)
    (242/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.136537926 seconds)
    (243/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.135024302 seconds)
    (244/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.133583451 seconds)
    (245/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.094667272 seconds)
    (246/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.121664753 seconds)
    (247/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.094850931 seconds)
    (248/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.128703342 seconds)
    (249/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.112295407 seconds)
    (250/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.120270012 seconds)
    (251/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.112530141 seconds)
    (252/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.140934999 seconds)
    (253/286) benchmarking ("sort", Float32, true)...
    done (took 0.257003246 seconds)
    (254/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.150391173 seconds)
    (255/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.095412159 seconds)
    (256/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.121991569 seconds)
    (257/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.095534952 seconds)
    (258/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.121935507 seconds)
    (259/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.116021558 seconds)
    (260/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.151776271 seconds)
    (261/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.141086437 seconds)
    (262/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.119014311 seconds)
    (263/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.139700648 seconds)
    (264/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.114014463 seconds)
    (265/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.141124262 seconds)
    (266/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.141141937 seconds)
    (267/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.094921557 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.143631294 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.11559774 seconds)
    (270/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.12089932 seconds)
    (271/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.109818481 seconds)
    (272/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.173825287 seconds)
    (273/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.135804389 seconds)
    (274/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.12502385 seconds)
    (275/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.121369415 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.11200462 seconds)
    (277/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.143042367 seconds)
    (278/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.16340442 seconds)
    (279/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.113264203 seconds)
    (280/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.139407312 seconds)
    (281/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.114982695 seconds)
    (282/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.121169087 seconds)
    (283/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.096250434 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.137114724 seconds)
    (285/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.145784544 seconds)
    (286/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.117227964 seconds)
  done (took 44.675238883 seconds)
done (took 45.592616614 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.122417695 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.179309961 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.146308983 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.140854391 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.149021073 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.15171044 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119654181 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.147434124 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.147760782 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125125906 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.149765577 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.1032553 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.146492792 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.144891153 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.121901868 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.168861894 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.149630998 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.11618174 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.137001267 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.112224441 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.137559784 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.112492038 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.140297988 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.128286742 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121274132 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.144949148 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.115245458 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.146855332 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.138653984 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110417955 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.13704641 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116956708 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.136958313 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.120928192 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.140816859 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.137914295 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.120811366 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.145756963 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.115346863 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.139007483 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.116733327 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.139226756 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.141385671 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.118033324 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.139048759 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.111241215 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.137417371 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.150118841 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.142813573 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.141202496 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.117219355 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.147110608 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.147611118 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.116015709 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.13714609 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.131183934 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.139446547 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.169673816 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.111906135 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.139933141 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.117056268 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.146391085 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.111022853 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.137012292 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.136957734 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.119667194 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.145263124 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.111333978 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.147172318 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.140903159 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.107894134 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.138056258 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.110550381 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.135924475 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.119008686 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.147368285 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.106660403 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.140029915 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.141460261 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.115245651 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.138547777 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.109733656 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.141237267 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.113052017 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.136642546 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.128996012 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.111025322 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.139580059 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.112530604 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.138351445 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.114758414 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.140434991 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.140786747 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.120028412 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.139016732 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.112570659 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.139977561 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.138969313 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115514011 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.136905843 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.107334185 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.136181285 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.117623115 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.136406957 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.11273945 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.148198517 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.135975184 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.115738308 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.138801672 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.112127713 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.152575371 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.146351157 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.112994163 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.1411294 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.109548101 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.141997099 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.136173379 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110984884 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.136119932 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.113793365 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.140101878 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.11363872 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.136719769 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.142696224 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.122443539 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.135187268 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.110944114 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.136649008 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.113728379 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.142749507 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.139323536 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.110676571 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.138136135 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.108813214 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.136853426 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.109927152 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.142352974 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109744385 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.139149953 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.139071126 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.113632267 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.140100924 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.114145495 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.140523365 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.135540581 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.105691762 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.139754448 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110873372 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.140936329 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.113363453 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.13954977 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.108103606 seconds)
done (took 20.83735644 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.120583697 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.209320285 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.173234403 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.17554828 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.17452567 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.157716966 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121828908 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.170219485 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.147002972 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.168924669 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.170267445 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.136021694 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.177148902 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.147146969 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.156990274 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.122320208 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.144349924 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.156058598 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.180245959 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.141553812 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.1725896 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.148739704 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.16680031 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.166614122 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.118315029 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.176874648 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.148846188 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.119074875 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.149683655 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.155080688 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.136674969 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.150412316 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.148552052 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.156845318 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.127019761 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.144089248 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.157545239 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.115661469 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.148131295 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.145661686 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.131774983 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.157767039 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.142737877 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.127667157 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.146715193 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.149659165 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.118007507 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.145570602 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.145335363 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.114874942 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.150840835 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.166597238 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.119356261 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.149204827 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.147806593 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.119956646 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.148386586 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.149866116 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.121848353 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.14972985 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.146757355 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.121785792 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.15161302 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.163643537 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.145706016 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121276519 seconds)
  done (took 10.738542323 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.136165469 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.178754451 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.153474288 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.154488493 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.123074736 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.135827652 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.108511379 seconds)
  done (took 1.98904855 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.11035898 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.168309629 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.171894175 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.14503369 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.160533446 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.176664419 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127060247 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.138224383 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.161822282 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.120844637 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.166992947 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.193787741 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.137684133 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.123491707 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.175453584 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.136699639 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.147765432 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.138143251 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117414981 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.172741856 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.144010716 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.160826445 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.125646705 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.138693068 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.132508805 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.141628075 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.209093032 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.149145925 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.110670661 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.143792499 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116009322 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.240384897 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.134754714 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.149693707 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108177684 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.168937968 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.160991255 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115870377 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.165479129 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.144111297 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.161387196 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.119555944 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.146127685 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.116912478 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.146423818 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.153573263 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.122618149 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.147297152 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117124553 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.169314642 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.149919447 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.160849387 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.112689176 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.142606164 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.122155741 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.145279299 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.151714656 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.116454307 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.167971199 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118269983 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.167825227 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.168370896 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.161374352 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.140018024 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.156299367 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.162060369 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.133095261 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.145686881 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.147032793 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118842149 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.168148455 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.142368779 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.122489889 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.154785956 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120967094 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.168460248 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.168598001 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115289744 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.153175918 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.142276593 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.114037949 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.138540476 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.128297054 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.14352 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.1127818 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.157908 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.152233211 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.116174971 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.143337529 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.163590452 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.115802724 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.151770475 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.150998758 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.144935038 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128061744 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.172431191 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.152498242 seconds)
  done (took 15.087858136 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.114232177 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.139656411 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.118066748 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.141258062 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.112670783 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.140711978 seconds)
  done (took 1.776190521 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.143542737 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.144044025 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.155341126 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119765502 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.18395453 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.163453571 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.137408883 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.149477714 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.159897829 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127109668 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.166063683 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.1670045 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.171253529 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120465023 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.16429521 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119337787 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.166060479 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.143015848 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127026934 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.144316556 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.156957489 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.11946171 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.144487341 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.136665715 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.147503883 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.148255422 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.118165087 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.15608025 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.153740675 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122653423 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.147694842 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.146244634 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.120302078 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.149796549 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.165612096 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.119855193 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.142368647 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121464786 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.148443764 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.150220066 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.139018816 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.144040399 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.152800765 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122655442 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.150864609 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119663062 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.151239835 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.146619612 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.136941191 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.149804084 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.148561836 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.120776162 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.147487351 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122523746 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.149256937 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.149663145 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121489175 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.166500584 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.147299653 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.120663278 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.144301099 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.119486863 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.151406812 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.147471041 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.119061564 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.149784889 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.147384546 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.117012682 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.144338327 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.120268418 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.150345546 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.116575437 seconds)
  done (took 11.236299702 seconds)
done (took 41.815150894 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.727983664 seconds)
  done (took 1.738111512 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.955864698 seconds)
  done (took 1.967631035 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.1123502 seconds)
  done (took 20.157255624 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.587918868 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.682600222 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.067804856 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.194019925 seconds)
  done (took 3.542300323 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.031114976 seconds)
  done (took 2.062301258 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.347349264 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.298228314 seconds)
  done (took 1.663919834 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.909873501 seconds)
  done (took 1.934451046 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.633184086 seconds)
  done (took 2.65821093 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.384939872 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.226634092 seconds)
  done (took 1.644652516 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.621095809 seconds)
  done (took 1.649491411 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.042257324 seconds)
  done (took 16.073918606 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.273898039 seconds)
  done (took 1.314033666 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.333748111 seconds)
  done (took 1.364397237 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.946587152 seconds)
  done (took 4.980223186 seconds)
done (took 63.771857415 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.124952623 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.154808492 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.127391719 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.152541297 seconds)
  done (took 1.585316577 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.1317827 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.149921996 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.126100127 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.150070518 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.159736202 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.121681654 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.148312407 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.156414912 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.12184251 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.151277639 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120791476 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.149579725 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.151193808 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.120315136 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.147094882 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123176472 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.155260298 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.15038225 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.121902899 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.151380616 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.147163668 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.123496692 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.153075015 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121190977 seconds)
  done (took 4.388598655 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.12462882 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.145098573 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.120502658 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.145049904 seconds)
  done (took 1.577973126 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.130771717 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.168668746 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.166614613 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.130015767 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.168706577 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.166004603 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117115712 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.144298802 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119124837 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.158540021 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.145749662 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.143216822 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.168159795 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.140554392 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.131850098 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.139168565 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.114654661 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.16903607 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.156995311 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.131188357 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.145387082 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.128616833 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.154505024 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.161171677 seconds)
  done (took 4.538813529 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.236412998 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129633301 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.171138708 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.201646521 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.170632945 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.114453803 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.173065143 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.171586155 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.119567179 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.145168173 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.143225 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.172899601 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.175262379 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.148371704 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117840237 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.153405707 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.16822829 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.167262135 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.118771076 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.158593601 seconds)
  done (took 4.198954054 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.124859581 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.145248523 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.112429037 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.14427796 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.123727087 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.149223652 seconds)
  done (took 1.843300532 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.113292371 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.138786123 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.11298336 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.139058136 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.116940742 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.139349438 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.110789816 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.138292089 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.112553777 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.138596745 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.111789554 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.137239163 seconds)
  done (took 2.556337217 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.610611336 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.115551475 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.149602902 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.145303872 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.121430503 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.144208762 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.159007289 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.115914116 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.205375983 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.147040159 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.160537961 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.203288975 seconds)
  done (took 3.321496181 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24291175 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122474352 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.309586671 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.475787602 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191705785 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196186266 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.382950338 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196407742 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.215987941 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167285439 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235316529 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189136918 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18643313 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212254564 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171198231 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.21918963 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208612664 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234489262 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179055096 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279407744 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196647158 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201321494 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.225717352 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182751798 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167898284 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199962568 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.117618962 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163636411 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203874914 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200847374 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232204288 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150070175 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168247975 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262149653 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256941471 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237497147 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.404475723 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18056616 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.225370364 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.227471747 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.316641172 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170724673 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255050875 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155405521 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163146578 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214829645 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185364946 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.212360692 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.16122446 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171591313 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214786865 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208273385 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.24192533 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155833931 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.41314759 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182804266 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.175122549 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216853852 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221093207 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262306777 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199918145 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122447038 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.29490934 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226955837 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213162732 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.175154836 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.198406811 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153711751 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208983531 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.268000795 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220289379 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199450837 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.262643219 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136500753 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196822351 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.242988396 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155356967 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21456165 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195938087 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.151459283 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183234279 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171614218 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127253412 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.220768517 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151611054 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249111625 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167443649 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.324407703 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276611994 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189254911 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191056215 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19715879 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200556006 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177851482 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.118134648 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178689126 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.204207279 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190918919 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161750416 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188603675 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14508816 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.157340151 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185411393 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.152386748 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191537465 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.134500802 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198815833 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196126962 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.16615333 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198331661 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181577884 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.191522941 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202351748 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229723129 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164786385 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166694583 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238292799 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191609416 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.166338398 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.217908901 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.233056183 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.206681915 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173660345 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206615773 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228851414 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174066807 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234428389 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18811173 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171235189 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.182633004 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192510911 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189619521 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.185114503 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128655459 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.185458623 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264872834 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.133139431 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169856508 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208773333 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155086179 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127926254 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176070321 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173084121 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.173011494 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.149963044 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.170251301 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188068398 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192586589 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188459028 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188914788 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177716575 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232941846 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163042491 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.193298784 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180995494 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.116652696 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.240946882 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230751732 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164012948 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218274014 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.200459666 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.300965262 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197695502 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129760092 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.244064094 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131772992 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.149626073 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204945612 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.193792633 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196232655 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.227971725 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.297032632 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.199177568 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.185937003 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18256414 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19899218 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.221149676 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188724015 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.177361029 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196663182 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204827195 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.151622863 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122771042 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.157074887 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1703257 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135618738 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16393461 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212066121 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196945946 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.292375018 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193876884 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17105853 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.228285212 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.156700938 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197918833 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.207977529 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169922091 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.229516631 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226087705 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200120856 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173725214 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201536451 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.150923728 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124295099 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.165593409 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199370514 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165113434 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16886896 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149581403 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.255878218 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208466139 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182057104 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.308865702 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199775853 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.239426351 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.1519582 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.166043248 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244974228 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18897684 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.192053381 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162693441 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.192152782 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.223444869 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191627827 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226460951 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194933839 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201562452 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267570578 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.190092599 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135524358 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182071495 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199124717 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177560056 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203213362 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177543581 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168498155 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185532804 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.165101736 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125006031 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239676624 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145583686 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243174804 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.198221419 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207509574 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156536976 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148463256 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19380218 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176445853 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.147859432 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203046377 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228732773 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175310292 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190191409 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216708746 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168130133 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.424101432 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234535929 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217236215 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1861708 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18039132 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196224772 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202628173 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195656432 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.214982527 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181070696 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213428883 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191713279 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.173960655 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136999911 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177939434 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182398462 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.182756412 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.16482688 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.18620768 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.143584449 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248044002 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175066564 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190991356 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197765334 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149949513 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.185921298 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17158606 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245254364 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192519798 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209824353 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.188968167 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.20827901 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219121379 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157303476 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158055283 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.125239864 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21446533 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162015518 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193448968 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.298177932 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.301338774 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193406216 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200633877 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13915082 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.154703461 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194012516 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180586804 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.3010234 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145187567 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.164821873 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264422788 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.152290333 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167373998 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196280967 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.404645302 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148592173 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245071513 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.121122776 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.387398431 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127094615 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168281829 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201546148 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204765879 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.161980725 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.18974869 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195305035 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178671421 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20274539 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174109933 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.292845523 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244476793 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20704055 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23789957 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.143918387 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189433432 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194726879 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249846628 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142827195 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.181648495 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196606482 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227832814 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.25795203 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.134863339 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19751221 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197488692 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194550312 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237244479 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133400659 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219444451 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162865328 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197977739 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177294955 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154050407 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19078819 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.258546944 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163758661 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217531827 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192078896 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163889968 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124978315 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193710365 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192103146 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192393105 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.166517064 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212024301 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.157647326 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19642018 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213857664 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130262795 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188754664 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177160768 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159551771 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148834768 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176096353 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169873254 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.175957642 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252768979 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.160056913 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22028195 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205451295 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197184869 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191702057 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175844311 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693152031 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.126492882 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226827989 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18034521 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220409436 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181661832 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200149097 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195834811 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182777626 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205595309 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180612887 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.261078721 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199413552 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.190898414 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167103889 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174863025 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145968095 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.162205002 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184406613 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196875228 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172808427 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.136000613 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.190450202 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178108266 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.176777728 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172170966 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230096478 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181501209 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216453606 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217540301 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188005959 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200787689 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208077199 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162260233 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.19279768 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20481198 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174559883 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193414358 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.129872108 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.165884725 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213812876 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.154055971 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194871513 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192650682 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164468271 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199129661 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.166259249 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194849015 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182155906 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195174556 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156109579 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.186954402 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159219642 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162456091 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.158797441 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188248421 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192000121 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.191473195 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125583053 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.208053937 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228149522 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.157102195 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138073527 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.399284349 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191742782 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226223062 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.184812499 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166661587 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144277504 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194688115 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.185729035 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19388205 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.159181153 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161526031 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.129839826 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.221058242 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.195661364 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190797243 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225615623 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192901866 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220186236 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.165810979 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.30342911 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17246277 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187584739 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.136829531 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.158901072 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173426207 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138771878 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193380875 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.308856814 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214137772 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.187459414 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.176253252 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125380059 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.15900881 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163595164 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204069036 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187088802 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160570102 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182217914 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.149750866 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182394739 seconds)
  done (took 95.27749285 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188262154 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.189464233 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.192520513 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.243872824 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212194707 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.305448828 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.254567844 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.272572396 seconds)
  done (took 3.009774558 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.13009897 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.164066714 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.172800221 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.157986231 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.145720327 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.395301072 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.166163774 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.124299269 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.185100613 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.167412296 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.14704617 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.692641377 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.119419431 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.154080547 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.169933218 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.11722119 seconds)
  done (took 4.357626966 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.841694581 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.607693601 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.607157696 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.295377876 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.271856595 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.193037691 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.836574295 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.224958902 seconds)
  done (took 14.034267039 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.153534462 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.172933834 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.170438024 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.199450989 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.185707409 seconds)
  done (took 2.043988036 seconds)
done (took 143.758732117 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.123797043 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.157543533 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.123959607 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.158914398 seconds)
  done (took 1.709848523 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.136871208 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.137047362 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.110194206 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.136617527 seconds)
  done (took 1.67623506 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.52594289 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.107006061 seconds)
  done (took 1.822357579 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.158061649 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.169936667 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.17484437 seconds)
  done (took 1.670591311 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.132687651 seconds)
  done (took 1.289854697 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.126798312 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.16234739 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.147238431 seconds)
  done (took 1.601112698 seconds)
done (took 10.924016994 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.138492523 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.567675631 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.443594097 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137928404 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.756035473 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.405429496 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.065944239 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.194505041 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.198967616 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.149066039 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138767291 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.730064547 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.051412217 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.463869305 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.035353593 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.371353842 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.733573403 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119170383 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.158286264 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.149670636 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.009423437 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.148876324 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.118622568 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.150929347 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.699445078 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.455235786 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.148714121 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.386695748 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.148651685 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.122431515 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.439776706 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.148539131 seconds)
  done (took 18.136536417 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120366313 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.217892987 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.156213102 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119889478 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.153713816 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.119008681 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.161744161 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.164986767 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.212855599 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117563847 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.172424762 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.116883943 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.154522175 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.117600006 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.17427362 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.148343146 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.12023715 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.153237015 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.126131348 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.152204713 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.170356572 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.117678507 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.150756558 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119811707 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.149547965 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130651383 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.150177886 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.164209061 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117961888 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.154806179 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.122723431 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.150794666 seconds)
  done (took 5.8428704 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.168440654 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.227046669 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.161090132 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.187014423 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.171088819 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.151693292 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.242439628 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.196739689 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.216787018 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.149309877 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140210192 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.149584082 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.191158689 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.118901247 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.174543401 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.118555131 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.153251723 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120469307 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.159398107 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.151225229 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140902485 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.14923067 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.119262387 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.152260687 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.118206889 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.164143793 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.149731381 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.133555925 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.150167574 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.153530756 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.125660273 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.149272385 seconds)
  done (took 6.226520506 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.128025812 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.160152748 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.138140024 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.170048086 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.152405873 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.128411821 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.159481575 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121926512 seconds)
  done (took 2.328379339 seconds)
done (took 33.697069006 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.138662866 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.155417208 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.135238454 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.16442559 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.128721599 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.189077676 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.116924332 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.163338814 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.163633933 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.128154977 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.167624004 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.11909972 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.151563624 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.117316129 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.164185855 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.123115163 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.166955383 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.128154535 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.173316186 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.167332733 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.119032804 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.163522894 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.128375473 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.175255908 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.174423414 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.142250385 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.169283371 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.156611194 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.119907427 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.152047805 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.138326698 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.179645121 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.154688202 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.138735509 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.156020635 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.123333548 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.151288371 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.121923314 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.166671081 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.129732409 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.157562904 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.161331391 seconds)
  done (took 7.406038154 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.147275323 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.200694244 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.147487354 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.116996742 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.148149471 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.161269144 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.19033681 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.148240472 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.11603083 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.179387413 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.177734184 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.117330523 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.148578819 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.11659757 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.147797603 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.116985771 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.178534339 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.145228807 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.183507548 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.185568015 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.200741758 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.151974154 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.190813115 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.178047374 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.196448779 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.158559069 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.174396415 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.191526231 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.181858647 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.116089147 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.18546438 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.153583836 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.148021298 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.147633608 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.163520191 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.191044403 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.18135709 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.195080781 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.154203726 seconds)
  done (took 7.513075957 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.129185947 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.173231396 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.154449154 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.306503889 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.163197272 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.172779282 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.170773076 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.1391832 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.187051269 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.151657148 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.132725851 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.186767805 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.169485975 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.13509753 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.1591803 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.13625069 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.175187896 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.121593066 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.163235236 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.17328855 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.146327054 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.166701132 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.171942182 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.130594073 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.153684318 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128747288 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.162738175 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.16804164 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.131146595 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.16568173 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.124000746 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.15710044 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.15434227 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.133743223 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.156722961 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.1271 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.175909454 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.166011643 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.136688565 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.190504416 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.165090651 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.124046217 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.179214972 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.210400462 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.124212667 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.161719529 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.132898894 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.167644985 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.152640518 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.140468075 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.171659341 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.122395302 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.169783188 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.152869154 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121277789 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.164495638 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123070263 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.156723408 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.164477585 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125936645 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.17564698 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.131920477 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.163979771 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.158352409 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.13067716 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.152177581 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.119103582 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.158658735 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.180970657 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130375437 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.192714946 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.121412464 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.160443783 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.164773163 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.13074041 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.166460929 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.1197867 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.163285227 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.163627613 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.129069678 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.166730161 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.122634142 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.1572488 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.13911859 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.170675099 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.160949014 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.126403267 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.15971946 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.155824855 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.124097516 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.17441546 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.121709382 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.158095264 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.167517363 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.123621641 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.156287715 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.127526873 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.158862981 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.119184148 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.179888224 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.159561325 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.119332548 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.179103093 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.123021828 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.157848168 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.163189904 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.136162924 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.154056177 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125763272 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.160709698 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.119097412 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.163810085 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.156750061 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.120638477 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.168106622 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.138013253 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.162707496 seconds)
  done (took 19.069076904 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.281003778 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.258044932 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.26820378 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.319002134 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.178670552 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.186423968 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.253285798 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.209148467 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.119822463 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.198768316 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.248490285 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.228967791 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.216889804 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.226579011 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.219512641 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.12021411 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.192365029 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.213801173 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.25668969 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.349519114 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.192697472 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.136062646 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.233463894 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.198723128 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.143420108 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.173417395 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.179694784 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.146019125 seconds)
  done (took 7.157141635 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.138014044 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.196822345 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.161764308 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.151504008 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.181927012 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.15624683 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.125119655 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.154374713 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134611591 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.169383621 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.156162801 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.127038559 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.160339156 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.16397093 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.120526673 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.16312293 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.129783462 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.16428079 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.123372279 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.159544756 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.175968279 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.138245699 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.160724121 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.160687479 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.138247926 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.161525098 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.155163681 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.176164819 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.131527403 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.186481377 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.117144364 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.163927432 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.169365149 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.120506342 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.161802734 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.12380969 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.156995598 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.122143127 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.157420127 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.11768155 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.154066962 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.110811503 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.162024949 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.169656169 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.128325496 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.156714018 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.126095431 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.159184704 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.121504635 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.150842003 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.122445066 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.15730025 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.15825678 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.139408076 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.158056029 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.121644427 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.158821286 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.120975821 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.164368515 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.123068616 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.151236271 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.159158929 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128864735 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.159530786 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.129778567 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.161788429 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.159881601 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.123469588 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.158705805 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129316217 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.157270823 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.133927223 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.152286085 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.124643955 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.165261257 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.168308458 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.124437227 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.161016159 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.127788573 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.155569962 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.110617625 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.153711634 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.106637561 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.159661099 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.119409718 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.162124703 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.157936567 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126941595 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.171793078 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.164569351 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.128909731 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.154846871 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.127991766 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.160220678 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.117991895 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.159630147 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.173474367 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142299665 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.153905742 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.117369336 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.177757211 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.156411196 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.119486851 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.142510006 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.131572658 seconds)
  done (took 16.643564516 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.156090682 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.198838673 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.155325556 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.143492673 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.193635955 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.18999455 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.247505142 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.16484412 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.121183559 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.178073346 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128078378 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.16434197 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.162642966 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.139325287 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.190494341 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.170020772 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.123338008 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.173485728 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126761663 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.202434904 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.177798575 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.152858531 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.193930987 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.277930814 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.126325662 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.185213428 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.193482582 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.136961111 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.170152826 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.194729179 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.136594612 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.193646928 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.196102663 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.126967921 seconds)
  done (took 7.021606045 seconds)
done (took 65.985365231 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.335582498 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.545166818 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.284268209 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.284116313 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.342298651 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.338452046 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.288478302 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.47898011 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.081179043 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.274617996 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.283989673 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.28986033 seconds)
done (took 29.072291535 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.295566956 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.929190505 seconds)
    (2/2) benchmarking "String"...
    done (took 1.606430988 seconds)
  done (took 4.751661203 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.28470226 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.282704546 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.528493066 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.282892338 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.303108014 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.284547099 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.292317396 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.299373638 seconds)
  done (took 16.478909975 seconds)
done (took 27.018348581 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.334240217 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.610271849 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.580481556 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.304875742 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.303979094 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.30210352 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.284767271 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.292978467 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.306371802 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.290892302 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.285283824 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.557329694 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.32358082 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.693655485 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.287319883 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.292557389 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.285124879 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.616842458 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.290613977 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.290805759 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.293340952 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.27529939 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.31089592 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.308377 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.323754816 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.288987227 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.32304115 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.289286466 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.598963374 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.299852889 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.307458224 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.310886646 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.319205265 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.291366261 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.410572525 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.324098049 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.572257408 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.309018242 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.278381162 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.299668007 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.574151677 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.736303566 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.288344162 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.319572695 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.307204734 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.334812848 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.28280737 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 2.127925535 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.29357892 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.314625979 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.353231412 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.716939821 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.297648346 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.29202828 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.304246493 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.623325659 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.308249029 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.38310018 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.329645279 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.320657642 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.288544271 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.296441578 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.352863963 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.310589542 seconds)
  done (took 150.233432257 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.289050828 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.291772948 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.292983069 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.314454497 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.294016164 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.292112085 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.290364983 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.289264127 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.29371708 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.318941097 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.294028894 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.292718977 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.294123169 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.269528404 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.290863612 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.31022908 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.294163571 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.289720343 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.310993167 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.289443263 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.297765987 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.29383851 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.309747653 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.290703891 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.308398133 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.386023414 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.329295682 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.340012147 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.29353003 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.290648778 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.303528912 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.300886324 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.017098812 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.148260677 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.295259422 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.298720197 seconds)
  done (took 83.617874495 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.289444542 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.290929503 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.289106019 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.328919537 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.290663337 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.292383645 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.972548201 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.97610165 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.095141068 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.579795923 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.989361793 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.698958618 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.296541131 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.392040422 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.303693773 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.296990786 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.311049847 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.320540255 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.296899883 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.293707992 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.974789528 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.309604523 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.759120211 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.488059037 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.312076154 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.330044978 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.696360033 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.293040058 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.3306776 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.643866824 seconds)
    (31/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.314224748 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.331528248 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.294244012 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.786085912 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.342426451 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.417857159 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.295994643 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.330819101 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.295835211 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.589230263 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.296040642 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.29367124 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.296570478 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.084004932 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.29831354 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.978238852 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.298897073 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.399363992 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.299328747 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.296555197 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.737068731 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.243893054 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.316736243 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.294027413 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.296502113 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.294966732 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.294565517 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.331978993 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.695270414 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.422524578 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.298284379 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.296280463 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.298307392 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.332256233 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.294715987 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.754026491 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.296166456 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.567327617 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.375007722 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.511302291 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.979286026 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.298240146 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.398988212 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.424151952 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.29726582 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.296058811 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.296187756 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.296859696 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.411183516 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.296155407 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.78007199 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.486226721 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.317591168 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.002065623 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.402290061 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.297148488 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.784605955 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.300724283 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.296361956 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.198746819 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.402324781 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.296361049 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.296698155 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.29633131 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.781820798 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.98146335 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.656604318 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.30127865 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.691900235 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.301680623 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.790791703 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.936292804 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.09954848 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.302360561 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.416193128 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.488589528 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.318206639 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.297981989 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.005374738 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.302441785 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.353826494 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.301965302 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.299377107 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.702367682 seconds)
  done (took 381.934592588 seconds)
done (took 616.993859048 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.01796281 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.968221026 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.10624723 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.000735729 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.960031077 seconds)
  done (took 11.271723557 seconds)
done (took 12.489732536 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.517112394 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.517877535 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.371204498 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.514002497 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.337205785 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.532634592 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.501743259 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.324211734 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.416542604 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.400790145 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.421071523 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.366176839 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.338521816 seconds)
  done (took 19.777255609 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.601816393 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.301376636 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.383760082 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.56188943 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.339455625 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.578174802 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.620992488 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.301343056 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.447522384 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.314673372 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.315236609 seconds)
  done (took 18.987195074 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.612834126 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.303413943 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.368995526 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.560941739 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.343210462 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.596704392 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.618643709 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.302836119 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.457653595 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.316142637 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.315959724 seconds)
  done (took 19.018588935 seconds)
done (took 59.006450085 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.346778079 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.480276037 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.335900966 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.316182925 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.311779426 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.314283979 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.317440549 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.311130354 seconds)
  done (took 11.963105008 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.309281327 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.306991469 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.309111922 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.308826667 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.310150661 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.311416012 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.306768243 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.311494547 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.309352582 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.312107934 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.311305396 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.308742006 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.311221396 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.311380996 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.311030525 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.308831848 seconds)
  done (took 22.180575648 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.311966163 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.308306479 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.308769847 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.308476711 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.307825992 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.309174408 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.310462325 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.309382577 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.309664956 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.309403409 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.309661384 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.307818106 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.30901497 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.311436186 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.310112829 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.31035523 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.309460461 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.309877442 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.313656868 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.309619279 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.310361791 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.309399247 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.31004909 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.310177733 seconds)
  done (took 32.672084236 seconds)
done (took 68.038012442 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.323468337 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.315102338 seconds)
  done (took 5.862630069 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.372349247 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.373255765 seconds)
  done (took 3.973147198 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.313682665 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.313624803 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.313319292 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.313306635 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.313380721 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.314272959 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.314563727 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.313941486 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.313979816 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.313057342 seconds)
  done (took 14.361247457 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.314326623 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.314141684 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.311051128 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.31422811 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.313233768 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.311493396 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.315441208 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.315484331 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.313933843 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.3122017 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.315333901 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.312715689 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.315081768 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.312231432 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.315304774 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.311720737 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.31309496 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.313328766 seconds)
  done (took 24.868984963 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.328638604 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.335867694 seconds)
  done (took 3.889473853 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.452253115 seconds)
    (2/7) benchmarking "second"...
    done (took 1.353994583 seconds)
    (3/7) benchmarking "month"...
    done (took 1.428400785 seconds)
    (4/7) benchmarking "year"...
    done (took 1.419368869 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.354651519 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.333980774 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.353631682 seconds)
  done (took 10.922346715 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.316318605 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.51456878 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.627940865 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.873007055 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.315655012 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.319266761 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.194550909 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.320139135 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.321599857 seconds)
  done (took 15.029003178 seconds)
done (took 80.131961546 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.308062744 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.35128178 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.325735237 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.326271731 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.610942866 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.323987572 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.313442782 seconds)
done (took 16.787354529 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.295455611 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.298809513 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.309085894 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.313059889 seconds)
  done (took 10.443392067 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.310103551 seconds)
    (2/2) benchmarking "read"...
    done (took 1.662920707 seconds)
  done (took 5.200872848 seconds)
done (took 16.871667046 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.317742334 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.318569945 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.317443165 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.313977329 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.317704908 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.313978731 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.315174845 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.317764831 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.314921815 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.319244728 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.317665361 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.318542622 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.317159843 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.315835096 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.314965274 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.317797821 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.317836832 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.316533861 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.317850892 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.314386541 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.316129852 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.319026094 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.314666087 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.315121879 seconds)
  done (took 32.828351873 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.318270847 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.31518069 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.319644108 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.317197994 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.316627666 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.31899691 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.318599444 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.31683361 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.318683919 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.318839271 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.316003046 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.315961476 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.318806632 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.316742199 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.317946392 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.317133237 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.319067815 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.316740411 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.320311757 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.316321553 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.319911893 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317055213 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.317006984 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.320517374 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.316747496 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.316709048 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.319328422 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.317948815 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.320749688 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.31780947 seconds)
  done (took 40.767280315 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.325645204 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.327846474 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.318742974 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.319736588 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.319822106 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.322307415 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.319928408 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.320952437 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.321163111 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.320290866 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.321628668 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.320466695 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.320188008 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.320863451 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.319550477 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.321672138 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.320538214 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.319933079 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.31990304 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.32082676 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.321681974 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.844806187 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.320739313 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.322251729 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.321635759 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.321868669 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.321883363 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.321017151 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.32250307 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.321590759 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.321271352 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.322281195 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.321571718 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.322168579 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.322376278 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.323056815 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.326597241 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.33078314 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.321518152 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.322908153 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.320430954 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.321408 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.323400305 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.321764671 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.321378496 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.322395379 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.321756412 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.322718597 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.322420042 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.323774364 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.323415116 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.323847494 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.324340717 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.323294163 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.322735057 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.322716142 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.32424594 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.324043037 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.323819323 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.323790868 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.323968616 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.323683437 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.323086227 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.32418505 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.323533766 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.323626152 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.32334126 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.323159393 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.325450751 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.325516408 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.324851672 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.323831775 seconds)
  done (took 96.974958269 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.325265938 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.323102394 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.322800411 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.322543167 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.323172139 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.326622679 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.322272583 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.326303467 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.323906518 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.326235571 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.325455112 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.324159445 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.32241997 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.326717337 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.327226614 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.324598388 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.325790838 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.324100786 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.325934578 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.326875979 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.327062852 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.323107977 seconds)
  done (took 30.381143248 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.32609746 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.327641749 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.324608844 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.327996642 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.325880566 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.32777035 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.325651002 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.328054355 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.327245831 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.324138298 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.324019691 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.326711425 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.325605971 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.324103606 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.324006227 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.326823446 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.328042892 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.326534081 seconds)
  done (took 25.107457714 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.325321188 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.325936329 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.327388189 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.326087494 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.32644315 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.328154146 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.325004484 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.327725535 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.32886914 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.324941587 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.327333493 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.328265431 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.329766823 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.324918124 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.328096834 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.325518682 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.328181925 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.325384696 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.327030669 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.325305152 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.325729317 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.327261636 seconds)
  done (took 30.426380644 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.328727304 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.328869513 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.326908273 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.325812055 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.326112246 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.329127407 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.328292288 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.325966051 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.330298521 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.327875997 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.325269115 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.328937684 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.328214929 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.327665673 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.326750244 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.326002746 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.328639153 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.326615519 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.329105557 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.326450642 seconds)
  done (took 27.790293315 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.331187305 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.332358257 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.332605519 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.331795473 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.332083186 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.331239714 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.330049513 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.331961515 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.329655297 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.332980946 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.332173214 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.33205108 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.33174575 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.332147368 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.333595506 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.331779735 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.333105465 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.333223487 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.332414025 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.333377432 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.333232714 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.332822044 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.333912047 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.333697468 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.331477593 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.332947076 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.333212451 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.332759212 seconds)
  done (took 38.545859961 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.332321146 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.331726786 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.330069897 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.330364115 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.328904522 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.330707134 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.329958345 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.329607437 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.331775534 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.33035517 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.332699782 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.332466607 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.332012887 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.332904595 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.3331541 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.332861404 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.332891173 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.330740862 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.331450367 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.329939584 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.333348586 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.333914814 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.33403245 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.331311904 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.33114172 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.33313407 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.330917133 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.33156406 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.334181465 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.331024893 seconds)
  done (took 41.194505906 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.374829441 seconds)
    (2/2) benchmarking "in"...
    done (took 1.37758643 seconds)
  done (took 3.996395107 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.331795782 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.333460314 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.334826607 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.332548184 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.331197142 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.335382404 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.334718116 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.332354353 seconds)
  done (took 11.909773794 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.334949761 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.336062037 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.335826486 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.335370577 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.335534899 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.334255314 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.341233567 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.357918847 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.336025826 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.336516084 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.343254648 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.343369921 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.337599118 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.336009241 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.335086021 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.3377739 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.337392501 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.337008427 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.337531363 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.337160012 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.33756829 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.33833677 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.338645658 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.334292407 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.339008335 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.347997284 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.340605297 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.337833198 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.336200704 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.340620062 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.337507588 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.335317111 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.338947243 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.338002974 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.33870272 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.33789515 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.346077494 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.362685899 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.343712693 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.338237459 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.338934499 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.334498738 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.339129279 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.339629224 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.340188649 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.337794413 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.342086347 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.335991642 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.337619679 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.342455405 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.344985343 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.337374771 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.335618664 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.341203796 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.339402528 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.345545671 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.360925462 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.342708395 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.349962473 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.349984137 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.352013693 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.367269645 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.341625283 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.338659617 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.351457794 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.364750853 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.346556648 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.359502703 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.337947067 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.340453898 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.345557508 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.352241108 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.368380251 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.340745878 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.340543032 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.340500738 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.341220208 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.340746762 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.347094047 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.365316772 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.341756742 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.340866537 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.351795921 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.365502813 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.340653844 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.341832709 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.341725251 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.341716838 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.343380125 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.353019636 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.363927894 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.341620892 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.340559073 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.340872129 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.342191868 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.342330137 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.341180406 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.342337096 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.339685702 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.342774446 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.340870041 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.345852283 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.351951909 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.342191315 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.341595771 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.348732581 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.341345896 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.342833083 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.347937516 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.343802876 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.34243844 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.344393693 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.351132212 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.340892201 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.347332396 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.35142037 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.344487485 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.344043446 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.342590914 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.343431914 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.3537392 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.370887897 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.343590414 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.34371525 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.348854742 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.355387537 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.344072122 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.346149626 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.343636332 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.340077816 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.341233195 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.345897038 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.345501631 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.345215618 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.344357811 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.346107739 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.343166353 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.344468413 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.344706862 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.345973075 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.345829523 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.344848626 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.345245464 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.346007615 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.345355922 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.347126611 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.350533574 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.344951032 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.34575581 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.345074183 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.342469469 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.345569488 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.345251654 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.344875837 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.346611262 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.345028519 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.346197001 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.345335467 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.345554551 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.346531588 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.345956194 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.346704153 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.351124287 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.346455573 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.348575009 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.34649884 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.345476796 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.346881055 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.345366413 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.346159118 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.347046516 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.346412771 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.350487834 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.355460961 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.346813966 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.346628206 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.349964908 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.347404609 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.346631735 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.347810114 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.350722618 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.356263781 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.347168488 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.353793549 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.349097693 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.347253567 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.348467392 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.347491552 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.347524239 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.347712757 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.352401465 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.35704823 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.359488232 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.375701785 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.350448496 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.352198717 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.349279377 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.352214727 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.349841631 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.348346207 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.349629723 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.348193717 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.349869973 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.349793176 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.34989387 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.348628127 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.347373181 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.350161475 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.35069159 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.348920365 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.351204029 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.349184077 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.34912693 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.347364934 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.35040455 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.350298313 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.349407699 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.347035772 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.348749244 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.349147195 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.35078933 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.35035831 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.356752915 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.348693915 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.350532985 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.351658597 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.350014732 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.348624861 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.350025989 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.351975099 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.35042454 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.357485203 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.373137747 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.351200556 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.35695253 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.372701466 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.350730727 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.353474121 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.352816296 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.349111907 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.355490457 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.359832928 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.351242684 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.353462693 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.352369195 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.351362902 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.352510107 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.357536875 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.34948611 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.351561577 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.354045305 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.352860363 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.350633929 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.35399535 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.352229641 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.352208583 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.354438198 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.35291805 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.353856462 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.353850288 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.35345855 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.354197843 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.353247348 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.357206647 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.362613068 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.358677584 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.353456462 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.354094151 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.354336834 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.357319324 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.353102603 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.354120802 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.35343549 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.365768436 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.382528897 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.359698767 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.37672805 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.354000844 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.359594173 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.377069498 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.357588995 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.353734834 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.353744362 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.354639133 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.354288217 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.351478564 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.354956641 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.355146273 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.356318011 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.356508408 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.35928204 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.354778596 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.353881057 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.355130075 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.354701581 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.356460014 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.354703998 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.356620378 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.356897091 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.356519443 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.354260225 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.35514022 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.361498539 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.377493533 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.356636985 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.35577894 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.355501256 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.355906438 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.357101434 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.356469258 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.360358851 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.364518801 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.36006472 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.366130047 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.358176024 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.365810676 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.355965947 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.362568083 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.365348571 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.355147417 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.355247278 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.356163975 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.358356765 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.364385893 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.380107921 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.35993048 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.36386705 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.359345641 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.358233028 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.358317242 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.359302436 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.360087481 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.358048281 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.366418189 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.383026268 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.362851859 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.360213452 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.35634606 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.35926061 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.359515014 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.357349378 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.361528016 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.358504338 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.35816451 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.358326662 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.358752038 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.358565795 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.358434992 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.359418563 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.356848534 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.359480254 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.364975148 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.38477378 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.363769227 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.360990379 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.366254283 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.360214867 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.365511938 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.384932853 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.360367479 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.360395791 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.360211966 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.361215813 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.35883938 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.360804378 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.36064986 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.361716946 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.365302452 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.361215998 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.361960761 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.36160333 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.36046219 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.359659197 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.371242078 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.387649571 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.361810899 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.366568092 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.359011027 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.362423095 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.366709902 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.362351901 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.36119605 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.364486881 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.372711394 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.371401356 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.362230562 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.362514003 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.363663709 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.362422123 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.360939907 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.363466502 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.362396138 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.363502814 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.363048594 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.361882677 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.365598635 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.362644722 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.362817635 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.364740259 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.363445176 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.372943989 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.361666809 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.363604456 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.363764933 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.364793696 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.363299231 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.364048908 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.364638134 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.362937844 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.364348047 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.365237336 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.371516676 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.371654907 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.365675066 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.363532829 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.363726045 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.363463091 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.362952058 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.364787527 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.364529726 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.364573272 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.364836721 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.364943308 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.365077495 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.364039377 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.364032854 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.364803872 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.365154237 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.368342612 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.372601989 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.363716825 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.361778255 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.363467884 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.364783573 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.363675413 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.365181122 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.371605096 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.367423133 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.376495118 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.375339515 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.370086837 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.366297357 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.368894949 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.373942472 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.365437064 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.365366598 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.364809112 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.365602266 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.367051923 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.370658478 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.366361384 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.372257683 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.3657468 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.36685964 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.373983026 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.392185471 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.366397143 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.368551276 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.370683769 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.365923577 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.365763636 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.367588501 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.366824368 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.37214596 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.39134192 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.368087703 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.369587012 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.366416905 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.370134807 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.372848969 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.368715325 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.368414464 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.365339631 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.368700995 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.369229992 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.368556738 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.366071303 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.368172272 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.368520492 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.372970194 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.376987125 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.366265661 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.368662267 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.368825786 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.368400552 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.369120526 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.368993737 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.366629775 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.366173348 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.367920577 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.370687486 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.369009486 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.371872727 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.367734487 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.369463438 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.371786209 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.369758698 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.373709829 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.381538118 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.378738343 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.366679989 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.369123047 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.370404068 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.37180031 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.369179628 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.368817936 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.37032275 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.37090743 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.370560833 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.369627088 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.369649574 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.374450017 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.388422241 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.396707782 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.371367984 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.371908962 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.373634612 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.371162272 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.369268522 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.37249771 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.372542059 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.373237808 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.380490462 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.371997101 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.379108399 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.393090371 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.370649371 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.376275719 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.376674396 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.381477378 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.374153695 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.373100642 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.370994938 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.377739628 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.38885877 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.373166494 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.384279002 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.404085322 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.394953608 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.372885778 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.373555637 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.372779141 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.373095427 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.374009553 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.374012213 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.373581778 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.374190208 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.373863054 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.374071233 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.379897671 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.374607825 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.375032033 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.373191661 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.371525623 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.37346612 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.37072664 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.374050281 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.373789808 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.372823301 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.372952775 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.373594917 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.373908754 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.386711496 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.405225354 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.374188745 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.37450703 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.371947374 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.377732884 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.377951388 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.386235547 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.38456008 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.374499393 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.374325837 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.376011149 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.37520444 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.374745181 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.375690586 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.373904599 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.374917253 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.372753948 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.388127396 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.403927805 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.379621403 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.374160371 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.376294714 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.374841165 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.376070904 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.375039716 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.376851129 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.375973739 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.380240862 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.380783575 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.376030885 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.374505595 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.379685489 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.386069228 seconds)
  done (took 810.9673114 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.37387434 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.373231839 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.374596311 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.372847125 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.373835132 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.374014791 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.373853296 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.374758339 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.37507619 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.3747415 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.375215499 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.372943065 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.374476647 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.374189852 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.374717789 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.374991864 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.373844247 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.374241148 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.375336345 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.375040785 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.374589202 seconds)
  done (took 30.141816965 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.377421974 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.374496163 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.375526864 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.37968238 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.380061356 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.377097107 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.375824291 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.377222817 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.378699956 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.376399511 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.377433041 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.37712069 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.374873096 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.376674599 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.375744319 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.378035296 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.379337599 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.375511315 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.379517464 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.375663535 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.378465324 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.376817549 seconds)
  done (took 31.579580547 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.379435216 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.379662811 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.378839365 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.37768138 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.379444568 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.377451695 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.380268807 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.3794816 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.380396157 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.379707898 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.381044565 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.381083505 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.387621623 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.387489114 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.381428755 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.379791573 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.380162057 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.380660383 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.378598146 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.376631198 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.383660257 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.399982302 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.377306561 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.379526628 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.379666547 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.38176126 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.380104476 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.379663387 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.382374984 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.38522682 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.381072075 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.380304241 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.382702159 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.380509072 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.382402452 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.387269064 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.380747618 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.377054951 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.381222062 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.392038868 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.406116513 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.382002609 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.387408899 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.405199531 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.38157478 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.385915094 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.390694521 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.378796599 seconds)
  done (took 67.664525487 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 2.02870357 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 2.055982344 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 2.063165298 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.055318894 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 2.060539314 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 2.066379751 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 2.058076471 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.070194216 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 2.051056334 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 2.082841577 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 2.057218342 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 2.062561497 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.078206142 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 2.055712972 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 2.065035682 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.086780408 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.067212752 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.059625588 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 2.053889371 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.062094443 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 2.061496425 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 2.067793239 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 2.065197465 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 2.061962751 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.069009291 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.074208412 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.05972418 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 2.058131258 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 2.056271913 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 2.073647877 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 2.061837047 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.066427487 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 2.101075646 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 2.059389187 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.066824905 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 2.09241181 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 2.059977162 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 2.074700925 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.062142371 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 2.097833513 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 2.06237987 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.07745133 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 2.071107997 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 2.073684631 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.06957977 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 2.083037003 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.071565398 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 2.080511385 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 2.058517427 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 2.055861536 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 2.060784171 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 2.068214439 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.054032101 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 2.070704765 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.066429989 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 2.065919723 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 2.060664609 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 2.060060223 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 2.058348667 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 2.080388587 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 2.0767268 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.060524337 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 2.082333105 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 2.062564726 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 2.070659891 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 2.070628479 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 2.09239901 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.06270537 seconds)
  done (took 141.848393223 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.385782408 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.386310731 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.387282349 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.386408536 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.386908107 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.388344898 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.386962061 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.386958849 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.387309297 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.387843397 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.388387998 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.386420387 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.387424332 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.389156733 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.388786806 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.38697424 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.388728388 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.387924672 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.388428756 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.387417895 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.388283225 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.387860271 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.388874657 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.387605688 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.388528147 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.386836354 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.38840168 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.388745663 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.389734905 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.387710615 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.389494051 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.388122025 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.388287292 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.388367153 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.388964655 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.388229245 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.389012259 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.389441517 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.38859229 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.391531673 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.388956106 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.38947274 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.389127224 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.38913926 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.389369635 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.388519943 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.39066298 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.390417865 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.389777359 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.389768007 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.389858973 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.388740183 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.390316424 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.390280245 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.390679899 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.390566397 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.389639403 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.391020943 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.39010038 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.390602057 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.389506969 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.390911985 seconds)
  done (took 87.395585265 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.391019318 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.392489698 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.387218507 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.388832583 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.391343757 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.388108932 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.390989416 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.392385652 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.391098668 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.390052213 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.392567921 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.389236946 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.389767711 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.391366437 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.389870583 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.389483859 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.388833613 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.390017112 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.392458622 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.389371207 seconds)
  done (took 29.100766414 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.390002128 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.392825262 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.389177221 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.390819411 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.392330062 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.390162955 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.392192448 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.391867318 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.390281944 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.392715349 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.392190705 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.39340374 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.390544142 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.390556722 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.393170671 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.391065396 seconds)
  done (took 23.558767265 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.391403994 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.393967858 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.394065645 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.393694575 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.391557714 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.392017165 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.392916342 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.391080241 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.391855777 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.394196308 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.393011947 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.394096076 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.394853527 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.3942009 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.39311653 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.394595652 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.392257065 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.392757518 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.394791276 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.39506683 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.393427999 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.392370411 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.395081557 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.395564143 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.392588386 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.393606815 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.39281973 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.392121848 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.393157263 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.395844531 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.392906632 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.39282683 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.392079365 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.391633178 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.395415522 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.394035966 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.395042366 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.394609901 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.39592098 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.395002052 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.395379938 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.393515304 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.396792807 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.397216043 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.393371055 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.396334983 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.392432017 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.394120927 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.393153707 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.395004391 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.39644537 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.397128951 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.395976345 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.39919592 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.39609111 seconds)
  done (took 77.971774036 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.397166556 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.396889063 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.39432107 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.396551376 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.396565512 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.394195248 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.39837293 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.396379601 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.395484638 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.397084257 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.394176587 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.398829886 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.394733341 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.397003036 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.395667048 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.39855839 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.394891695 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.396348826 seconds)
  done (took 26.432710438 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.395307371 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.395769837 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.398267194 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.395544961 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.395337007 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.399091147 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.395255547 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.398163467 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.399355124 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.395721446 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.396433301 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.398807211 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.397015303 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.399182172 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.396218051 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.396888338 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.39941561 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.399213859 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.395506952 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.395129903 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.399880364 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.398828674 seconds)
  done (took 32.041208032 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.396491537 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.397962539 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.397622068 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.415946647 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.421247932 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.398194155 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.397039956 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.399152044 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.422178837 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.457785967 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.452342798 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.420000508 seconds)
  done (took 18.277474329 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.396260682 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399048373 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.39782137 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.401486279 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400631293 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39798739 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.397598295 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.397800866 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400180216 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.39745386 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.39824194 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400956335 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.401112151 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398252909 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401228371 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401583931 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39920468 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.398209585 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.398344126 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400988739 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398473514 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40035014 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399977473 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.398385913 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.398862424 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399201757 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.401921991 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.397875909 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.399901133 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.402699359 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.402207441 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.399228247 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.403133573 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.399671527 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.403254806 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.402358878 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400020874 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402808515 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.402941672 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.401051432 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.40305014 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402616219 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.4035348 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400607163 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.403075162 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400561124 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.398980173 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40154075 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.401195992 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.403703931 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.403951865 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402982478 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.403262341 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404312032 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404034791 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405128382 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40140678 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400613887 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.404019432 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.401514897 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401104977 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405539404 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.401569424 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401513087 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40521806 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402150062 seconds)
  done (took 93.769235047 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401457769 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.401998122 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401772621 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403549367 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402334953 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402389069 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403181641 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402513759 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402795967 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.403090092 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.405896114 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402344638 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402969644 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40272068 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402743405 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402072391 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.403374697 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402895586 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40304263 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406567103 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.402290307 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.403326632 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.402795672 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40261027 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403524244 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405187337 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403457703 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.403853681 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.403477246 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.403466627 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403173159 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.403224124 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403647479 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.403334377 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40346962 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403956915 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403417389 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402715472 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403579295 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407138458 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404713159 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407473882 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.404397812 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405092134 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406009124 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405304039 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404896666 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405268528 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405423053 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.405227262 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405228177 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405696266 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405041828 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405336812 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.405379219 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40658678 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405847809 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.405888554 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.405671333 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407929493 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406663553 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.405229686 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.409342906 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406065103 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406843914 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.406476254 seconds)
  done (took 93.993902277 seconds)
done (took 1945.893764056 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.575539761 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.525148665 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.407419394 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.421532188 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.406705207 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.405640629 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.418819891 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.405526305 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.406626166 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.407146022 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.406842262 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.614999477 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.405036042 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.407068379 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.407930925 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.505535674 seconds)
  done (took 28.448485629 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.437232772 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.413374499 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.554503696 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.436242282 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.439925455 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.63368221 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.477363066 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.412760492 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.636613124 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.464258407 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.418678007 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.443919066 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.411023205 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.419517423 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.4385358 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.637372694 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.729046447 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.419896932 seconds)
  done (took 31.136941205 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.997446208 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.45290716 seconds)
  done (took 5.762949723 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.43612623 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.413118273 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.414179595 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.412835804 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.403797135 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.40330295 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.4108727 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.409752065 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.404797603 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.575370267 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.419711357 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.424170741 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.437873605 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.413402072 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.411992766 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.453766425 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.567061229 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.411167885 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.411493829 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.420559623 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.413687086 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.519987659 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.466881706 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.416039389 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.573746165 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.411314732 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.421307058 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.42286753 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.553983657 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.413555091 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.413677539 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.414567715 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.416007838 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.405457472 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.010424908 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.40714014 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.444029243 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.423617369 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.41343943 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.577614559 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.417040349 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.422505718 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.407084682 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.988474439 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.570364235 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.554992882 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.429071394 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.417109481 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.417330015 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.485437006 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.416823097 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.41747113 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.464927626 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.292782591 seconds)
  done (took 90.223399603 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.451083534 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.40761836 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.594528087 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.42939147 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.407325686 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.441148289 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.407398061 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.769346471 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.411485319 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.409044471 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.742423919 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.053874567 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.431603407 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.455880264 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.259454337 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.504022704 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.410360453 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.429120044 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.410210984 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.409369752 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.02161153 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.414719482 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.431812734 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.478800598 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.454226677 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.000776349 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.409275388 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.409331883 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.43560234 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.410404548 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.006921632 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.441557268 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.464494966 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.411287337 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.718222542 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.86860655 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.824593298 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.418668601 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.452714953 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.410005305 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.421953304 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.984545745 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.84434137 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.411732936 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.410737995 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.993768885 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.411358159 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.416485662 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.422491979 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.66934268 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.411837398 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.41313239 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.431385456 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.410924466 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.411123732 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.514168337 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.491405517 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.004467222 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.412506857 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.412539684 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.452420727 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.413325906 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.41337892 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.412933852 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.433639825 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.848820161 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.617721699 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.413530209 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.847760395 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.005181017 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.433123402 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.073587805 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.43345037 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.424182996 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.603235591 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.429655819 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.411548423 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.051300096 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.424209594 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.411967522 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.863081927 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.419267849 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.741067816 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.436842517 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.440608966 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.032411142 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.423643347 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.414303241 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.41397661 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.419070987 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.414872846 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.436844703 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.740677482 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.45789475 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.414472912 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.414147831 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.439650456 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.414659654 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.44193674 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.421052002 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.089834515 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.447852304 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.415763354 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.415252902 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.41520361 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.419424232 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.41530851 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.418035275 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.690232638 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.433030983 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.423918795 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.416541574 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.429587601 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.425014898 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.484906865 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.42600501 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.834601614 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.421849593 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.415856661 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.448114339 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.415017787 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.476018008 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.41618613 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.42358991 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.337900646 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.688946435 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.439891929 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.421471782 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.417334267 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.416484931 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.435166513 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.420411463 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.480399665 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.422052402 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.273828615 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.45482478 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.444767661 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.418449747 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.417562978 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.417870952 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.431777197 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.417261582 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.735706697 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.755733377 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.629545794 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.428539072 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.43078642 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.264332787 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.478886566 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.604743799 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.440116189 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.418044841 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.675068236 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.629092259 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.4192123 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.421134521 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.419678178 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.687709823 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.420034326 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.74968237 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.045781883 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.442808051 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.419012254 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.25805066 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.193250271 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.424190343 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.424831839 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.758611349 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.448779264 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.417465386 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.418652497 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.419385994 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.439095237 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.419624959 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.424215907 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.419300395 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.419457249 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.431655827 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.617963865 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.443191125 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.424607813 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.009115856 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.433041708 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.435770641 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.433416155 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.421651086 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.421193135 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.489451416 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.422926429 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.451538044 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.421513838 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.431307576 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.023380679 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.420272089 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.426335727 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.618480746 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.1936568 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.443287549 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.422277099 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.44074687 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.327949254 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.065135742 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.442969168 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.808919249 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.426846144 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.466629589 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.425818016 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.463781322 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.032705859 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.423084036 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.443522317 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.156858234 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.442899673 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.824323119 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.422147443 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.421894054 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.110938723 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.44192377 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.421492431 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.437591143 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.447516607 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.723422377 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.422081771 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.436455172 seconds)
  done (took 520.387463185 seconds)
done (took 677.27116191 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.422048717 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.428490456 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.414233318 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.42881106 seconds)
  done (took 11.026938757 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.435251733 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.431927153 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.433140039 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.430570532 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.43424693 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.431955931 seconds)
  done (took 9.930618032 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.424031423 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.430073096 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.428158393 seconds)
  done (took 8.614903821 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.688974437 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.452473082 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.847989572 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.458381706 seconds)
  done (took 9.783206471 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.436441167 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.435886328 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.435729875 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.436752275 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.440282187 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.440584977 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.437890462 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.438812422 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.439748957 seconds)
  done (took 14.274843305 seconds)
done (took 54.960718904 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.428260622 seconds)
    (2/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.697469249 seconds)
    (3/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.390968564 seconds)
    (4/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.112943882 seconds)
    (5/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.613168204 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.48013835 seconds)
    (7/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.445497837 seconds)
    (8/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.438877798 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.440299122 seconds)
    (10/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.443467744 seconds)
    (11/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.227782386 seconds)
    (12/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.101308316 seconds)
    (13/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.434072386 seconds)
    (14/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.480933009 seconds)
    (15/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.453389078 seconds)
    (16/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.440906119 seconds)
    (17/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.51282829 seconds)
    (18/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.472245425 seconds)
    (19/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.490275125 seconds)
    (20/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.430133717 seconds)
    (21/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.444727716 seconds)
    (22/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.445269877 seconds)
    (23/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.142446895 seconds)
    (24/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.099113868 seconds)
    (25/286) benchmarking ("sort", Int64, true)...
    done (took 1.872833551 seconds)
    (26/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.446453372 seconds)
    (27/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.63515587 seconds)
    (28/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.685957943 seconds)
    (29/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.51546888 seconds)
    (30/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.612088261 seconds)
    (31/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.593159057 seconds)
    (32/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.557740936 seconds)
    (33/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.598712755 seconds)
    (34/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.47179421 seconds)
    (35/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.642038451 seconds)
    (36/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.595905164 seconds)
    (37/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.51200547 seconds)
    (38/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.431185249 seconds)
    (39/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.447749951 seconds)
    (40/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.424571142 seconds)
    (41/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.459439941 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.568866602 seconds)
    (43/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.663324486 seconds)
    (44/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.422663386 seconds)
    (45/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.557804254 seconds)
    (46/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.503465808 seconds)
    (47/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.456892913 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.458919638 seconds)
    (49/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.441377922 seconds)
    (50/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.623642463 seconds)
    (51/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.222666734 seconds)
    (52/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.458532692 seconds)
    (53/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.575100134 seconds)
    (54/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.448597166 seconds)
    (55/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.646791198 seconds)
    (56/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.457032082 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.489828545 seconds)
    (58/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.487725699 seconds)
    (59/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.450375574 seconds)
    (60/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.434312987 seconds)
    (61/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.418024334 seconds)
    (62/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.489177606 seconds)
    (63/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.439664785 seconds)
    (64/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.453586799 seconds)
    (65/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.4484492 seconds)
    (66/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.434002506 seconds)
    (67/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.472289397 seconds)
    (68/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.444337026 seconds)
    (69/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.470245865 seconds)
    (70/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.515802918 seconds)
    (71/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.653436569 seconds)
    (72/286) benchmarking ("sort", Int64, false)...
    done (took 1.646165044 seconds)
    (73/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.471064544 seconds)
    (74/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.454792094 seconds)
    (75/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.675450489 seconds)
    (76/286) benchmarking ("sort", Int8, false)...
    done (took 1.583297738 seconds)
    (77/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.294597904 seconds)
    (78/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.534101773 seconds)
    (79/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.460963682 seconds)
    (80/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.454081383 seconds)
    (81/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.450652554 seconds)
    (82/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.443944265 seconds)
    (83/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.435915958 seconds)
    (84/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.523160897 seconds)
    (85/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.545552971 seconds)
    (86/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.328863433 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.494887125 seconds)
    (88/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.850095715 seconds)
    (89/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.580754755 seconds)
    (90/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.606606701 seconds)
    (91/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.468510112 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.571283332 seconds)
    (93/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.52454793 seconds)
    (94/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.449525675 seconds)
    (95/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.544432389 seconds)
    (96/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.513414234 seconds)
    (97/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.59196427 seconds)
    (98/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.480078814 seconds)
    (99/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.222889655 seconds)
    (100/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.460191354 seconds)
    (101/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.519785337 seconds)
    (102/286) benchmarking ("sort", Float64, true)...
    done (took 2.061381254 seconds)
    (103/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.447215566 seconds)
    (104/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.349076886 seconds)
    (105/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.563093083 seconds)
    (106/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.486925692 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.492214716 seconds)
    (108/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.526705226 seconds)
    (109/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.446983055 seconds)
    (110/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.446392066 seconds)
    (111/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.610544489 seconds)
    (112/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.55542206 seconds)
    (113/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.479761394 seconds)
    (114/286) benchmarking ("sort", Float64, false)...
    done (took 1.650652501 seconds)
    (115/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.466671237 seconds)
    (116/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.462543229 seconds)
    (117/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.523576558 seconds)
    (118/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.522225178 seconds)
    (119/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.585887493 seconds)
    (120/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.464547463 seconds)
    (121/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.450540579 seconds)
    (122/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.52449544 seconds)
    (123/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.464594948 seconds)
    (124/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.449170773 seconds)
    (125/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.498038619 seconds)
    (126/286) benchmarking ("sort", Bool, false)...
    done (took 1.474763272 seconds)
    (127/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.446136216 seconds)
    (128/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.443577196 seconds)
    (129/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.445662651 seconds)
    (130/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.467514287 seconds)
    (131/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.852896597 seconds)
    (132/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.448736038 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.550677976 seconds)
    (134/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.475075801 seconds)
    (135/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.223801912 seconds)
    (136/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.474290557 seconds)
    (137/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.436758861 seconds)
    (138/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.706088749 seconds)
    (139/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.883697954 seconds)
    (140/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.430129137 seconds)
    (141/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.452002048 seconds)
    (142/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.45016606 seconds)
    (143/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.451883262 seconds)
    (144/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.424209627 seconds)
    (145/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.454263306 seconds)
    (146/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.521408403 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.523256596 seconds)
    (148/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.690757181 seconds)
    (149/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.559148358 seconds)
    (150/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.510104871 seconds)
    (151/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.460068605 seconds)
    (152/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.552426495 seconds)
    (153/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.588933691 seconds)
    (154/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.471292087 seconds)
    (155/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.583302782 seconds)
    (156/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.465268348 seconds)
    (157/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.458153048 seconds)
    (158/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.584452945 seconds)
    (159/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.453212493 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.639219914 seconds)
    (161/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.63722474 seconds)
    (162/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.533035089 seconds)
    (163/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.488045354 seconds)
    (164/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.466951299 seconds)
    (165/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.545591364 seconds)
    (166/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.555092563 seconds)
    (167/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.47103157 seconds)
    (168/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.504326485 seconds)
    (169/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.458504036 seconds)
    (170/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.456442263 seconds)
    (171/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.16973438 seconds)
    (172/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.462559689 seconds)
    (173/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.465358347 seconds)
    (174/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.450582168 seconds)
    (175/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.50304735 seconds)
    (176/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.464329511 seconds)
    (177/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.510245624 seconds)
    (178/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.554230684 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.568556878 seconds)
    (180/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.486221556 seconds)
    (181/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.503026713 seconds)
    (182/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.46221624 seconds)
    (183/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.163517467 seconds)
    (184/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.55473114 seconds)
    (185/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.450352469 seconds)
    (186/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.092772028 seconds)
    (187/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.452872711 seconds)
    (188/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.441534453 seconds)
    (189/286) benchmarking ("sort", Int8, true)...
    done (took 1.79293057 seconds)
    (190/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.605395417 seconds)
    (191/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.188073609 seconds)
    (192/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.620388646 seconds)
    (193/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.459615442 seconds)
    (194/286) benchmarking ("sort", Bool, true)...
    done (took 1.694452406 seconds)
    (195/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.456228809 seconds)
    (196/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.22444591 seconds)
    (197/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.387579589 seconds)
    (198/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.566108748 seconds)
    (199/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.539278568 seconds)
    (200/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.492379026 seconds)
    (201/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.441753662 seconds)
    (202/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.543427346 seconds)
    (203/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.695724711 seconds)
    (204/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.548010002 seconds)
    (205/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.568680684 seconds)
    (206/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.692527958 seconds)
    (207/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.547404082 seconds)
    (208/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.470735147 seconds)
    (209/286) benchmarking ("sort", BigInt, true)...
    done (took 2.444054016 seconds)
    (210/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.763612996 seconds)
    (211/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.677270258 seconds)
    (212/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.56408489 seconds)
    (213/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.691396738 seconds)
    (214/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.458860953 seconds)
    (215/286) benchmarking ("sort", BigInt, false)...
    done (took 2.443223266 seconds)
    (216/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.618797295 seconds)
    (217/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.128742137 seconds)
    (218/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.461891892 seconds)
    (219/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.466720462 seconds)
    (220/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.465430462 seconds)
    (221/286) benchmarking ("sort", Float32, false)...
    done (took 1.615265809 seconds)
    (222/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.481542052 seconds)
    (223/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.229697311 seconds)
    (224/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.495318616 seconds)
    (225/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.586683018 seconds)
    (226/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.645241781 seconds)
    (227/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.443841381 seconds)
    (228/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.473036177 seconds)
    (229/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.430902972 seconds)
    (230/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.158101017 seconds)
    (231/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.468625768 seconds)
    (232/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.105280377 seconds)
    (233/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.680786055 seconds)
    (234/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.453540359 seconds)
    (235/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.537001302 seconds)
    (236/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.465005031 seconds)
    (237/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.607920341 seconds)
    (238/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.531745518 seconds)
    (239/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.462753601 seconds)
    (240/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.243203016 seconds)
    (241/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.502236625 seconds)
    (242/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.464252625 seconds)
    (243/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.459710617 seconds)
    (244/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.487893548 seconds)
    (245/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.657383787 seconds)
    (246/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.593372495 seconds)
    (247/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.578243601 seconds)
    (248/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.619460514 seconds)
    (249/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.490000861 seconds)
    (250/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.222170546 seconds)
    (251/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.482261131 seconds)
    (252/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.638069352 seconds)
    (253/286) benchmarking ("sort", Float32, true)...
    done (took 2.048360503 seconds)
    (254/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.491984589 seconds)
    (255/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.494199074 seconds)
    (256/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.529082663 seconds)
    (257/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.65151607 seconds)
    (258/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.405986268 seconds)
    (259/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.481457659 seconds)
    (260/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.464403109 seconds)
    (261/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.642474473 seconds)
    (262/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.589788508 seconds)
    (263/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.511427232 seconds)
    (264/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.4628507 seconds)
    (265/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.524838339 seconds)
    (266/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.450288098 seconds)
    (267/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.533446159 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.467459326 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.56852758 seconds)
    (270/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.436297263 seconds)
    (271/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.470204308 seconds)
    (272/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.522155007 seconds)
    (273/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.470271049 seconds)
    (274/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.631528557 seconds)
    (275/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.454626297 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.461603464 seconds)
    (277/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.447578895 seconds)
    (278/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.533761409 seconds)
    (279/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.470566067 seconds)
    (280/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.103518616 seconds)
    (281/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.468042781 seconds)
    (282/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.531139322 seconds)
    (283/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.437463051 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.457316809 seconds)
    (285/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.83515709 seconds)
    (286/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.473960634 seconds)
  done (took 505.381288128 seconds)
done (took 506.718778799 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.495538277 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.50667079 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.461684878 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.494785697 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.572254259 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.635921274 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.471849191 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.500608839 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.510225474 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.51169467 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.466762616 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.635696942 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.462944365 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.461400542 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.464175874 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.5038752 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.448989709 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.462828614 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.481024685 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.502011932 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.479649073 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.479240522 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.51325212 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.637675053 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.469350162 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.46729578 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.46645729 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.483680597 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.57554819 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.467383595 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.466760878 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.47419817 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.45171255 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.467872095 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.458959042 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.48376601 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.475258744 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.474891783 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.498787722 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.574971085 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.463199889 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.481353404 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.465926992 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.465994872 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.465438325 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.503096992 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.464249301 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.522582725 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.506249798 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.507797132 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.453141142 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.478513254 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.473655918 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.466702602 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.476442838 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.464783839 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.523360335 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.509914395 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.484816497 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.511852266 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.468184423 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.470230539 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.50534953 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.483581495 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.473875 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.454254607 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.464237026 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.506506642 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.467229883 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.471248774 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.462087887 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.479565448 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.469661988 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.480565643 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.498679712 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.454958131 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.46081193 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.468002296 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.473904377 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.465708744 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.515997628 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.509917473 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.518236111 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.46822344 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.509319448 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.642977929 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.479962979 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.467929559 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.502633635 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.486184928 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.475796212 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.476581885 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.502357717 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.468686814 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.51567125 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.525712296 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.477510075 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.476377401 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.519045502 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.479067263 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.46772229 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.513246866 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.4672008 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.465916016 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.468349058 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.589114849 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.469155491 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.468738181 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.502347083 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.516375405 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.529838067 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.472031577 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.479059825 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.513070203 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.479795588 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.527707109 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.471138342 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.473448525 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.460257922 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.589023533 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.469938616 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.472833755 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.515251921 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.529489007 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.470218249 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.458304271 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.471995445 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.509964251 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.589127752 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.483343244 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.57968792 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.46979469 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.472755442 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.502564316 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.515876601 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.501675369 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.531058843 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.51507417 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.485437691 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.472301666 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.481072585 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.483300704 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.471900536 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.52794357 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.46907939 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.504905468 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.513794676 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.511742828 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.503498781 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.592818197 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.476736288 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.477623113 seconds)
done (took 244.419568726 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.528836258 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.466530352 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.574457994 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.468032934 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.572046183 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.577872566 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.465210084 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.464936268 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.466150965 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.848511119 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.466207214 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.465191303 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.467522797 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.466710527 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.550755265 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.469630064 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.466395153 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.811703044 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.469655449 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.542353815 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.469367489 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.46621338 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.467590124 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.849677214 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.466084394 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.460451883 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.540542808 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.469340442 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.814167614 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.461879519 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.463825836 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.813289816 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.560545077 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.484523662 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.477408531 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.47585558 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.573017835 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.494193633 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.547873302 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.548477063 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.576778913 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.506870008 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.461334129 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.465694058 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.470845167 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.468864864 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.46791145 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.495516513 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.467737473 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.465361349 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.812442192 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.478692407 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.475980207 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.468963463 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.467672783 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.488877024 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.467614343 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.468794031 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.562626801 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.470421956 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.531009968 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.851112844 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.850629114 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.471598522 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.466862037 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.468448684 seconds)
  done (took 113.526727732 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.539226906 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.548900195 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.598674282 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.495340206 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.522891977 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.601329212 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.494223077 seconds)
  done (took 12.167391771 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.475473059 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.471420642 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.521176383 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.521297155 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.471781709 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.685621672 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.473756006 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.481244981 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.471351541 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.548832736 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.473907091 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.473908714 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.478905634 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.466827583 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.521313381 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.485072359 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.587172807 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.475214106 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.474619911 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.625839965 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.47045211 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.479292903 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.549516832 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.483042216 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.472692183 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.479189242 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.425171843 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.473047042 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.469717336 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.472487894 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.468818289 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.581793862 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.475084688 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.469693432 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.471126082 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.632065968 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.474204719 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.471677101 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.473847342 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.473829826 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.473045814 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.475529538 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.476323695 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.471581334 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.475726123 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.499326373 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.475112749 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.474794549 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.474416073 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.475007252 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.553154232 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.47567688 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.471399402 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.471384709 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.551723808 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.482472317 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.475813666 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.473108866 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.476354489 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.473274091 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.628687521 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.522706635 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.475666976 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.522723098 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.475104313 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.474278663 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.473868627 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.474666968 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.568665144 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.474349607 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.52330648 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.474523942 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.6968712 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.500963106 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.479130241 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.479140934 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.479949284 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.475952329 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.473062322 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.484126292 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.474951953 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.477335369 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.48352797 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.47327134 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.472133997 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.658925904 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.633267133 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.474361338 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.48948559 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.482790933 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.475333683 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.554412861 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.476801474 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.473905545 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.529463124 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.593207525 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.554670013 seconds)
  done (took 151.932891437 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.482256939 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.485603399 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.481817778 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.5004688 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.478722338 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.47909926 seconds)
  done (took 10.28100777 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.478718276 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.479498023 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.478691935 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.477356692 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.47657942 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.479469472 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.478893374 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.480939994 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.483616947 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.47727433 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.479831826 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.480832731 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.481170116 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.48013702 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.478502472 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.479836236 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.480650502 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.477601724 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.480191397 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.479869643 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.477030438 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.479584574 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.478836796 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.480510045 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.48599335 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.479533506 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.48658832 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.480833203 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.478489652 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.486083948 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.505709354 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.481340908 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.483198967 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.48695295 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.486001003 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.482437805 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.486827936 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.482259785 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.480898548 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.481203088 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.482933269 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.481497254 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.482473483 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.483033719 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.483385816 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.49017676 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.489130122 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.489205984 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.481871648 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.484544122 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.483978275 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.482559948 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.481053643 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.484061804 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.483805276 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.507885045 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.488848365 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.483126597 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.481858325 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.483276423 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.485117921 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.48230269 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.484563719 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.487425691 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.480003301 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.483923924 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.484405311 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.4878386 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.482227337 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.482806716 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.485081818 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.48157637 seconds)
  done (took 109.151339191 seconds)
done (took 398.422592109 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.520549557 seconds)
  done (took 3.898637842 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.737088095 seconds)
  done (took 4.116443657 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 26.152561565 seconds)
  done (took 27.541450239 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.584125081 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.555365264 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.48235928 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.483275909 seconds)
  done (took 11.48165308 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.048937798 seconds)
  done (took 4.42818343 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.474011275 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.51843472 seconds)
  done (took 6.368224877 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.944344207 seconds)
  done (took 4.32434821 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.951209149 seconds)
  done (took 4.334751337 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.481488095 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.495129832 seconds)
  done (took 6.365876377 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.463605285 seconds)
  done (took 3.843931357 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.143019948 seconds)
  done (took 18.522053331 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.483913293 seconds)
  done (took 3.865374223 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.504398022 seconds)
  done (took 3.885268711 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.926776223 seconds)
  done (took 7.30416629 seconds)
done (took 111.659997078 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.476382997 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.483113857 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.484178127 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.480525934 seconds)
  done (took 11.302337995 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.520199901 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.516005945 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.53270439 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.530498869 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.533483934 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.520166778 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.510243302 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.508925227 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.532353443 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.524149518 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.522412972 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.522362873 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.538227419 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.531923351 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.520787447 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.521156959 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.530919732 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.521474562 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.511070335 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.523153823 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.485941001 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.531523364 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.524135488 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.487532904 seconds)
  done (took 37.881275068 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.005670743 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.557055334 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.641649202 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.540019469 seconds)
  done (took 8.122268278 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.548513768 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.557715647 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.56546575 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.60616226 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.635574531 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.566706206 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.51356305 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.511535839 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.495037142 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.565191965 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.623131677 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.549625632 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.63510652 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.486937123 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.676387116 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.488334699 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.487273803 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.566914819 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.606086328 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.620712683 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.490405564 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.558387679 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.569862929 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.550631815 seconds)
  done (took 38.857943235 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.486091889 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.501542093 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.485830751 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.495038869 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.487823077 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.489109517 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.487527086 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 2.226737317 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.493549787 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.486765672 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.488815071 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.501026308 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 2.221494435 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.492741899 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.495141632 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.486695596 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 2.227408453 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 2.25093343 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.492970787 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.494685173 seconds)
  done (took 34.173310872 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.479090415 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.48033128 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.836003051 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.73949668 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.484165651 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.487779855 seconds)
  done (took 14.888899101 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.581070671 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.772451187 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.491399301 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.982073437 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.036078712 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.492200133 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.49256927 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.815663789 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.25535706 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.229263984 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.570629069 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.584840489 seconds)
  done (took 22.686749625 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.496200753 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.488037702 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.493326636 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.505038242 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.563392099 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.521071376 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.496795326 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.483534595 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.570529087 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.589438692 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.521020102 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.564553712 seconds)
  done (took 23.678889781 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.583105093 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.483331668 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.499598073 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505529502 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490871307 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.338146669 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.499260678 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.353663482 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.519561641 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.759524588 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485075368 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587803014 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.746172813 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483917861 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.490438551 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.492467675 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.724657002 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.10853581 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488095947 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486070415 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526537844 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.490871698 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.492398251 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.77511604 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.492944841 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.48546427 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.824467255 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.487124102 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863397967 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.508755118 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500485044 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.487028675 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.761829165 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.267912156 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.617204036 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.76735121 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.537243686 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.492032404 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.471916415 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.514639403 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.493260134 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.493972013 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499048047 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488207047 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.488940029 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.505311578 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354743926 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.520920088 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.485730901 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.487569169 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.840735218 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.599304072 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.493538403 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.487453447 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.554618907 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490672103 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.492102606 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.500314329 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077959483 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486387016 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512302248 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.492730023 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.547451291 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494467203 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.298559063 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.498938849 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.49222007 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.49404985 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488407506 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.488437792 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.512282502 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487972319 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.511662526 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486985088 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401104458 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.495930869 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496068678 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169080255 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491393806 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.493158016 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.723471713 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488792247 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488628388 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.485501206 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.488695868 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.418124173 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504076506 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.48691147 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.506716542 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.358450315 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.802010865 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.516959564 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.522246905 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.717276043 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.476449556 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487968499 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.494233578 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495507071 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.513410733 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.347744128 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519075065 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.49567116 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.75222616 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.703619203 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489594763 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.52486326 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103530195 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519283777 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.511524548 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.488606569 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.798244649 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.248553958 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.51315045 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492795491 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.513248572 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.491491011 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.465553545 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496352612 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.599842007 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.494595373 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.81215562 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.501883458 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496134352 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559567405 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.496882868 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.490584899 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491235311 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498401719 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.490067683 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.766791203 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.537329976 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.508431254 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.49080219 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492914467 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.498373198 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504050886 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.498016215 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.719296652 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493044599 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.772398889 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492525396 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491632815 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493263847 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.71885925 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.489531981 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.855747883 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.759452897 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51194249 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.512151228 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.510935636 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512974686 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.597005945 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515573096 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.509117616 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.756196775 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.498018148 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.498745111 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.495385454 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.500482432 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493288961 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.500922102 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500055956 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249876892 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474397973 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.50014765 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.391788003 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.510226456 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564583931 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.500612729 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.777687403 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.500142477 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517650853 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.530759729 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.497534503 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.728002742 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.505888295 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.496548851 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.579964407 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.102361503 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.274879751 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.514195902 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.496531643 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.493598221 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.493830213 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496413259 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495665621 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.496734724 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.778095153 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.516814351 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.558727694 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.260482062 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504487229 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.499148757 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.511098159 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.511795344 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.504072942 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496366003 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.49369828 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497936427 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.516537218 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.512880907 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.641971129 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.511355792 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.496117142 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.01281777 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.503003186 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.497718687 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.496285814 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.531997074 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.500046254 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415998682 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.786575353 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.559999258 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.857335227 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.503378599 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.519567744 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.497103844 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511323318 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.523684881 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.517769898 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512514569 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.509549268 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.49975992 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503381076 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077555931 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.451422779 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.202320272 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.503957638 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.542371773 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.502882026 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.378546016 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527623188 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.499243674 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.78429034 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.399835707 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526766163 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112509512 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.544040287 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.485170642 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.859576029 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.74127908 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.499236639 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.5176768 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.86182053 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.719642354 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.535931816 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.498702299 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526156636 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.485813591 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147373486 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.531876912 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.588667856 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378976655 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.546185631 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.508922093 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.539976029 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.504516944 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.035432239 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.531187625 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498345412 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.502182072 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.515428543 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41363717 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.52948613 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.501441665 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.312300904 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.51632788 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.113632201 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.529387686 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.78478389 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.519757853 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.508128463 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.497506482 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.516060728 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.761282612 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.859195214 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507672492 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.518477934 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.212304284 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.381582505 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.508850186 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504744508 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.483514501 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528326618 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883859857 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.525902782 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.50210128 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504526624 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.503242579 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502373807 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.501670624 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.511018867 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475059497 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.164358982 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.560535614 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517916047 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.52326723 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504221006 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.763711128 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.520158806 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.261170762 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.74357285 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.558317577 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.532695784 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.509364621 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504556879 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.521327132 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.504805331 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.504437515 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.553533592 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.735612822 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.528363407 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.493829436 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.538299568 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.721807132 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.505628515 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.519841573 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.826706517 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.508380327 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.529459859 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465913622 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.546597367 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.522256161 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513873649 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.567206961 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.512072355 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.585554033 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.794874512 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.525747613 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.520483877 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039333982 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.552703724 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.51371635 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.521589126 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.610531701 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52841702 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.515990886 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.2861959 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267671318 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.455377041 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.277964133 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.869656474 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.511681958 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514128956 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508296916 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.67004631 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.506766167 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.779856188 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50841484 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.564127887 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.536135767 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507007185 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53912782 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.726570741 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.782254514 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.505977339 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518476427 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51092902 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.507992489 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.521687678 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.720903821 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142729004 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.196242779 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510104882 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.509344687 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.392414219 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.80810331 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509713531 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.507759118 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509025463 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.534113202 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.513867662 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.520515233 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.53228724 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.660300381 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866651421 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.308106928 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.54939825 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.538988744 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.281404508 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521576998 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.769566387 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.507101103 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.82975844 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.27474218 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.434021125 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.784411471 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.578930037 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.799261825 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.511246612 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.673902358 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.521188245 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.515466628 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.511573494 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511992869 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.508635062 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.520761922 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282037134 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.787672359 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.515787955 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.519339112 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.547742576 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.523973678 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.738742498 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.462336082 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.742544471 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.523739851 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.515279076 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.512003749 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.278052782 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.877750828 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518470675 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.515465253 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827904164 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.517153191 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.537810525 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.030546334 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.509823304 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.203617948 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.49148099 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.53430108 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512773612 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.441430936 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288683439 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.518813118 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.183119415 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.514954439 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52036334 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.791711131 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.519261351 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.531670941 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.793158365 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.518453968 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.510602809 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.810045091 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.282669099 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.52952406 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.548879534 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.535192782 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.520274029 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513922645 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.581748613 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520155709 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.517375821 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.065540376 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.541765534 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515696 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.526943647 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.532782121 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519036795 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.540344093 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516123011 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.520346624 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.515698549 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.505938449 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.521306482 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.518781481 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24310703 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.541832178 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.187359397 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.845094575 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.778408601 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.519203568 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.507955266 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.521163462 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516059372 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516868618 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515998575 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.572063174 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218664109 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.522682001 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.531087669 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.521771988 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.735316204 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.729471685 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.539118531 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.814000139 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524215545 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.533634923 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.50138799 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515809612 seconds)
  done (took 1054.330565708 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.547932357 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.569523905 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.562792705 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.57598151 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.592255058 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.544193866 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.551759406 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.624328246 seconds)
  done (took 21.984457913 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.527507421 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.534461748 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.528414906 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.535152525 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.521316407 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.097106258 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.561694639 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.536182588 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.531788093 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.521313796 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.525350578 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.512118829 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.533241622 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.536666161 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.526459728 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.529862387 seconds)
  done (took 35.484947642 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.279606646 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.918632035 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.900123103 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.534002887 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.562022582 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.534271062 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.060467228 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.544903806 seconds)
  done (took 30.759824343 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.534867377 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.53875287 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.535193204 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.533081088 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.534885595 seconds)
  done (took 9.093815918 seconds)
done (took 1344.623820706 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.52579991 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.530645289 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.525424654 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.529227862 seconds)
  done (took 7.522564309 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.508219866 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.509453839 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.508713178 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.529051366 seconds)
  done (took 10.47700119 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.432810864 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.365384617 seconds)
  done (took 6.219285557 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.099227175 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.08713466 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.085355032 seconds)
  done (took 7.696586668 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.873645215 seconds)
  done (took 3.294220657 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.521510153 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.458384223 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.274611655 seconds)
  done (took 8.674783768 seconds)
done (took 45.302235572 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.520715535 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.893777801 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.680713735 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.522862207 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.68251143 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.679519414 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.258323624 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.534327707 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.527413596 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.524260789 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.5227729 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.725282217 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.242381827 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.871809311 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.24150891 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.771391516 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.684288365 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.522370682 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.535801654 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.522801045 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.27973374 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.532625226 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.542170156 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.53911484 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.689368235 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.666540334 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.522345457 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.771649342 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.534581935 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.522901578 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.674522084 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.524118049 seconds)
  done (took 87.685068394 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.529017313 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.52245918 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.523053795 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.529870583 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.524143026 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.528689713 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.54580929 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.52234691 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.53430365 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.527054884 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.549915915 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.52379959 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.54773759 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.536461556 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.529573049 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.535138677 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.523954652 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.564719779 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.523593516 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.541040769 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.528151721 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.527274746 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.524557538 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.523970811 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.551260666 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.524092332 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.548112809 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.530947244 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.531381192 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.545052728 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.531574556 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.526848942 seconds)
  done (took 82.474749967 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.540694267 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.526707038 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.551254008 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.570234722 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.526179928 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.530125431 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.552042691 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.543675453 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.525870665 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.554513265 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.525286533 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.549108337 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.524940982 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.527027516 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.525371699 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.544102385 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.526945966 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.554932934 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.542856506 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.527925914 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.524541987 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.525524192 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.557966221 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.534994711 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.531208031 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.529078827 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.551591044 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.540540592 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.529314827 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.547713606 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.533847535 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.548253145 seconds)
  done (took 82.650023226 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.81301095 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.537918479 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.535901859 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.530070038 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.536794149 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.534904802 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.527792687 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.811692997 seconds)
  done (took 16.254568282 seconds)
done (took 270.483686307 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.532826851 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.526730015 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.77078627 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.558273535 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.534332988 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.55479463 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.555901447 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.793412129 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.553122772 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.821630649 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.55219873 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.586852108 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.529197034 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.578421871 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.862923539 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.70350153 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.558565373 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.555831994 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.946676447 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.558417545 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.849667294 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.532053882 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.883514627 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.545795977 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.536881779 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.551360673 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.529680948 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.53092203 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.562661754 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.949897827 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.549509433 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.520049837 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.642298773 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.661247053 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.780235554 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.724141083 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.532903245 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.663597262 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.789533463 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.537884815 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.539374176 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.389446475 seconds)
  done (took 90.862642056 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.538807116 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.654967103 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.538994614 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.53681135 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.539845067 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.65942288 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.637128331 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.538627697 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.539401188 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.538883642 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.537876306 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.540467292 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.54039369 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.539356468 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.539760373 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.54047485 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.5400148 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.541291329 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.541936595 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.587099924 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.665218138 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.568485369 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.534979597 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.541391239 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.645568217 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.68280796 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.539595492 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.53449225 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.583329084 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.53968288 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.543733221 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.587791856 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.543876067 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.543347532 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.666810066 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.643170388 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.568966161 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.540740039 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.659278123 seconds)
  done (took 62.735454558 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.543155894 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.835562165 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.065491339 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.543163752 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.543213446 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.548181975 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.647193681 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.549264413 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.546640955 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.54670449 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.736177236 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.54535126 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.583618678 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.096810086 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.548405419 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.544816248 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.54442458 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.544873549 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.842290685 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.55187656 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.675040062 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.551065338 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.649460315 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.558860308 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.572328091 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.543976375 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.548042334 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.136287564 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.547925827 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.73779482 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.54257144 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.652828454 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.100810838 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.081364084 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.556025768 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.551328984 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.545939298 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.740851263 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.54845683 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.547391427 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.648284554 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.551248954 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.084109411 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.260210375 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.569243723 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.544105839 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.166685306 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.737868898 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.884370643 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.558048661 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.083978999 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.549606745 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.547993367 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.54758982 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.884893898 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.554249124 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.547381252 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.236018118 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.575755054 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.650541134 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.553391075 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.549548078 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.844826112 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.545478129 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.836731178 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.548498759 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.555447856 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.572023038 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.05755646 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.548578184 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.274724769 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.570639382 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.546212969 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.739554223 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.83389336 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.208138815 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.577170786 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.851697954 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.107315849 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.650952353 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.555346717 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.133479795 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.652271258 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.551321886 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.551170317 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.551835725 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.548175054 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.601900127 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.646101595 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.210164509 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.291797288 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.267041468 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.678501585 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.558141489 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.550406344 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.24960724 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.578257566 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.549839722 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.075297263 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.277405296 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.57228781 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.554882259 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.292278548 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.577509047 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.651946522 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.557418833 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.081668982 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.553094273 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.601846701 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.54800187 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.557956087 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.581000987 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.654160618 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.560174331 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.550307508 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.264064602 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.771651852 seconds)
  done (took 204.896754239 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.543936869 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.543215227 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.541722031 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.541655896 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.542272112 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.553469338 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.541138323 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.544798189 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.548638223 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.542825307 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.543328195 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.545872964 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.546169957 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.55690293 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.554683685 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.548426808 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.543261404 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.545134509 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.555645506 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.544773368 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.543323425 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.54853502 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.55511025 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.542609322 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.545031778 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.54698131 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.561873188 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.545671197 seconds)
  done (took 68.755031809 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.554388344 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.346862699 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.559373955 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.722177844 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.580443807 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.549930684 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.720012263 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.628950228 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.555024281 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.551840458 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.554186536 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.941057168 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.552334004 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.218265719 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.803072267 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.742847289 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.213920171 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.574979472 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.552128586 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.550024083 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.726171472 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.571784142 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.941321373 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.341193364 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.559486923 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.350749737 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.550821876 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.555300738 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.555220661 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.344843365 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.579310384 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.972558419 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.655738694 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.634492885 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.356196611 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.25305215 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.244006723 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.756200268 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.555540967 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.549644744 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.54951756 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.541108641 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.351537866 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.562435892 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.558872317 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.345036018 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.582605578 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.556094483 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.561865551 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.552460093 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.631137483 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.63407689 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.985319503 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.552755604 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.681099076 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.56836252 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.722780596 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.93871317 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.560962994 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.221931888 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.562269487 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.354703145 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.584115381 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.542148673 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.553449666 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.561167074 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.747507565 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.725778697 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.285242067 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.578807624 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.273537181 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.774770199 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.555863445 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.552814627 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.559423955 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.356622431 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.267210936 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.778810953 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.727178851 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.817785532 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.554028791 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.557302162 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.547322697 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.654937869 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.556752077 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.359656394 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.299041004 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.588323418 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.558750648 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.559208465 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.557067228 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.791769547 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.380323999 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.663220556 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.262347153 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.016512945 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.990649946 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.562056029 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.638285614 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.585482912 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.549509707 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.564569706 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.634251794 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.018403981 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.987283195 seconds)
  done (took 190.223150605 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.850142948 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.575522394 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.672162775 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.73614291 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.296871915 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.241635818 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.581186409 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.696429518 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.692469404 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.86348306 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.566643477 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.649885698 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.82237391 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.653236003 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.351927221 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.646895955 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.667413093 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.733764747 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.722646423 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.5529758 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.362124323 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.925554879 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.786082499 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.60938439 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.688084318 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.469583589 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.251877043 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.177480805 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.779839037 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.558540285 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.139277838 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.552765279 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.571775671 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.360890222 seconds)
  done (took 72.25689587 seconds)
done (took 691.158388333 seconds)
SAVING RESULT...
DONE!
