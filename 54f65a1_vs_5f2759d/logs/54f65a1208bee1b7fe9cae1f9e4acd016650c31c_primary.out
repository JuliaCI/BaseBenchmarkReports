cset: moving following pidspec: 16991
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.229284602 seconds)
loading group "string"... done (took 0.460262353 seconds)
loading group "linalg"... done (took 7.559025447 seconds)
loading group "parallel"... done (took 0.172109963 seconds)
loading group "find"... done (took 1.162422618 seconds)
loading group "tuple"... done (took 2.116171195 seconds)
loading group "dates"... done (took 1.338155094 seconds)
loading group "micro"... done (took 0.248443688 seconds)
loading group "io"... done (took 0.652495128 seconds)
loading group "scalar"... done (took 41.308513069 seconds)
loading group "sparse"... done (took 12.404898461 seconds)
loading group "broadcast"... done (took 1.10841827 seconds)
loading group "union"... done (took 14.009550719 seconds)
loading group "simd"... done (took 4.765906293 seconds)
loading group "random"... done (took 9.608814003 seconds)
loading group "problem"... done (took 1.968621436 seconds)
loading group "array"... done (took 22.383238081 seconds)
loading group "misc"... done (took 1.414686228 seconds)
loading group "sort"... done (took 3.569913911 seconds)
loading group "collection"... done (took 19.33639363 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.508978739 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.136306312 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.13177009 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.146780004 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.20160742 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.142487697 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155267392 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.113380611 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.974064468 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.184755705 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153869491 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.493516784 seconds)
done (took 5.092536813 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.260869883 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093095817 seconds)
    (2/2) benchmarking "String"...
    done (took 0.102411831 seconds)
  done (took 0.86787638 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077196617 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.14364861 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094190328 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078079522 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093948872 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077055046 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094111347 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.076721169 seconds)
  done (took 1.334266204 seconds)
done (took 3.226701074 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.728979608 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.276962426 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.208750659 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.456196237 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.175697635 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.231438661 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.681742265 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.33434866 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.251216273 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099203342 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143237639 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.387585431 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134289117 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.683290031 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089371918 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.122352972 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177585461 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.437655111 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082654719 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.10882188 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.11540146 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140192554 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.131328672 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093223378 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.183741226 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081194956 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.191493296 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107884036 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079599538 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.288686905 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200011045 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.691378879 seconds)
  done (took 10.827959425 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11062969 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132301835 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096534297 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137306108 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134092222 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098410478 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082991246 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096158383 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120409907 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.173438148 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.115065619 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.135215898 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094713982 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.08195805 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114227382 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24226615 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119202546 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.10629666 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099845227 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.10383794 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120108632 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111867189 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106631552 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091473035 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165800512 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.219903902 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109414347 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124734775 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097860792 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111694227 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14491629 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143944654 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095984458 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080011628 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171314572 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125731787 seconds)
  done (took 5.108672351 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.185385667 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.118757241 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165363847 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.165350858 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.140006925 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.165332666 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112575134 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.226941102 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.182047482 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.152589693 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.161094084 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143036156 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.092282602 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098003122 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097772335 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.095985353 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079587243 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.635090916 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.16158407 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.117801868 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115102793 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103198147 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098700811 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.360608426 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102001079 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.094776859 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081997802 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.082412821 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160077563 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082761707 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.153944482 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.121336037 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099717952 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131603371 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.194476854 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127695323 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.117459164 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096953982 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078503984 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.194359079 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087345432 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.095992289 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.102651253 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135172986 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133363743 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096941038 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080415457 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.217935711 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079803788 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11313888 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.930594641 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181364222 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.089760762 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.094943586 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.322232148 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.100653119 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096391717 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078169299 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.258386671 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.18153182 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.09716359 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079332004 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096517631 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080194639 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.395098122 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08074768 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.754700836 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084103052 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108163444 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082725309 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096560222 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103063692 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086746635 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116726579 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078927124 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098581669 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079683545 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095403737 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080466674 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108557706 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.09403594 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08425889 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.09744803 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147848808 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.094267932 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.078208952 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.11813677 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126039722 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082901892 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094334312 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113268474 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097413332 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096900116 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.114224345 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098884731 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106846005 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082778313 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142436891 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.09635898 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.169895322 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080471659 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125777983 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098275134 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113740444 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111469632 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098097344 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084244184 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095092993 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.076762314 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164764434 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081122669 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.100889622 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081631339 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109049888 seconds)
  done (took 22.568054098 seconds)
done (took 39.181072241 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.327207656 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.100620237 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.100954572 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.100583895 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.09915822 seconds)
  done (took 1.475658883 seconds)
done (took 2.200585083 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.285801387 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.171146876 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094311003 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165627491 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092925147 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.172810367 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.157844902 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111287253 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.21683411 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.07708604 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162066982 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093316729 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076289222 seconds)
  done (took 2.626913504 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093642249 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114282733 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082019254 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109676187 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076133221 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110808682 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092096169 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116429117 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108137811 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084394675 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092715174 seconds)
  done (took 1.800071841 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093236933 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111852359 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081410074 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108741741 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075292228 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109081131 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091939218 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115115144 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108707237 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085052361 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092540782 seconds)
  done (took 1.793012772 seconds)
done (took 6.934405979 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.089875716 seconds)
  done (took 0.805467031 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.913341046 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.875825464 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.111788076 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148834838 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.298912441 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.191133406 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.47053563 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124670361 seconds)
  done (took 11.058038049 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.144538752 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083395719 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.100221522 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.08304422 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.09957332 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.0851633 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.101614202 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100120154 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.081944897 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.100536173 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083447077 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.102281205 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.098486215 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.082968248 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102132605 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085758493 seconds)
  done (took 2.31939632 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119080655 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117832915 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105775399 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109557034 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085929475 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103416911 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104337917 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088685932 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100879654 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102629514 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09197145 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107214116 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.10356241 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079617424 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.103534146 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109630545 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084718801 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105270981 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106292395 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090447286 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106357986 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095581215 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087044856 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106930705 seconds)
  done (took 3.243607813 seconds)
done (took 18.147543965 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.158247065 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107806495 seconds)
  done (took 0.990632354 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.093950118 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111911001 seconds)
  done (took 0.937283811 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096559388 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094232369 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.119003956 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108599139 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079223023 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095385544 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117839746 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079197763 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095652879 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079990732 seconds)
  done (took 1.700194337 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081198583 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108987919 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101030634 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094541001 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.10368846 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094138537 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.086192569 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098102166 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108388903 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.075718382 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10185069 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114243866 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086280105 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.114302288 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104534654 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083305278 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.099940967 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098203857 seconds)
  done (took 2.487266866 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078741797 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096539867 seconds)
  done (took 0.909268633 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081344442 seconds)
    (2/7) benchmarking "second"...
    done (took 0.0937738 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081210699 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097115215 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093223468 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.07519996 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093579573 seconds)
  done (took 1.349261918 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.469443477 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135569766 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.252242432 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084227571 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119540268 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302298043 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097145154 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083936787 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101999676 seconds)
  done (took 2.435963937 seconds)
done (took 11.541368089 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09256173 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116545749 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111623899 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.464577943 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106611648 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096781546 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.159452416 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.248001621 seconds)
done (took 2.136869228 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.151406858 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.322864751 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.112876977 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066618842 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094357075 seconds)
  done (took 1.342061255 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079311436 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099588592 seconds)
  done (took 0.921716042 seconds)
done (took 3.157520679 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079709702 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.096262995 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.077145005 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.096381009 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.076439224 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.094478586 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.079622075 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.096291795 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.110567867 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.095179321 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.096677984 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.079487741 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097743261 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077145257 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093891561 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079579105 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.093754071 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076717556 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.096450705 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077025972 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.096374504 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079335331 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094061684 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.076715988 seconds)
  done (took 2.891116005 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099024711 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09797082 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102152633 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085445886 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101150131 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085270377 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.100622729 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096571777 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.084732777 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098288545 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100272014 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.082704332 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.09903071 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083643284 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09849458 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10066525 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08584644 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097187071 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081877849 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.099564018 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101494551 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080156131 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100955787 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101402074 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.083183183 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100118522 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082415644 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097454828 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101552262 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.082891737 seconds)
  done (took 3.557635135 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084289765 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093738523 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077652119 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.100677192 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077056349 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096308657 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076515956 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095734225 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078583662 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094782118 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079431675 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094303215 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.076840755 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.096306256 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077867546 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097974534 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.106595146 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077229897 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094742762 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078730251 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097647924 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077498747 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095380987 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078034187 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095119109 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077564719 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095377755 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077610447 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094605111 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078885063 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097486723 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081368783 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09513697 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084587991 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.097992255 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077574669 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098493175 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.094337673 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078204804 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094216132 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076764941 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095153258 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077569984 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101231365 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078213996 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097307875 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077826699 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096702869 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077979958 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098123608 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077860094 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094284191 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079850711 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096276405 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098538256 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077527703 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095186996 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077270435 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095734502 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077467076 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094193029 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076797142 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.09705802 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077408212 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110283913 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084978328 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094100254 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079429388 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095098105 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079811948 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096822509 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.107947863 seconds)
  done (took 7.110808545 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082799105 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105844027 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08022002 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096981174 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076060743 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095050976 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098303995 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078163017 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096900701 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084009973 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095180845 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080107327 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096907295 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107079546 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078388296 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096724895 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08440883 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092644186 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078549509 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098382386 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079172598 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098481721 seconds)
  done (took 2.731736325 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.206496294 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104610203 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140362805 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107029804 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082547619 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106446572 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100588412 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086563813 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101859503 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082222614 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099683537 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100628782 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083674879 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100272797 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100614015 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083667157 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102194582 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083847231 seconds)
  done (took 2.630370311 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092012453 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097767631 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101649292 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097438468 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098230862 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08284135 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103686005 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106162647 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083172402 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09763231 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090771838 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100288978 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099972436 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080313384 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099794975 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080576818 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100297607 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080960376 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107733081 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103046435 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103141678 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089950238 seconds)
  done (took 2.856225461 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09548335 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100231582 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116920957 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083472943 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093970713 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079269858 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.104182213 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080947887 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105856218 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099418447 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081426033 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096660673 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087550241 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097564203 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103130238 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081038831 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100261526 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081383381 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101397188 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076990798 seconds)
  done (took 2.627416807 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101405729 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099266701 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099940293 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0907928 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09978033 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082338418 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109546392 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099630372 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082431852 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124217845 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099457677 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081984528 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108157349 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105505239 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099100255 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091308249 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108724731 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107726744 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.081906837 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099859793 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.234954789 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081902342 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107594041 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099567863 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082527222 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099545541 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099786544 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087687627 seconds)
  done (took 3.62881271 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080854295 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098323167 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078074111 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096698834 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.077898102 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096710976 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078373916 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096154335 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079828495 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095436962 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080885908 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097861301 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080177273 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097944209 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080488216 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098223764 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083202267 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095744103 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078307231 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095745951 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081192419 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098239056 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080884106 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095209119 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078288129 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098252654 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078469218 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095295574 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080899285 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095699432 seconds)
  done (took 3.413683436 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090210408 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106196931 seconds)
  done (took 0.960305506 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.077904499 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113921425 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078480073 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102876282 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086014628 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099325408 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107313379 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08542651 seconds)
  done (took 1.515066798 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.09527914 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109255154 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082299324 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.11049413 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.108333947 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.094404094 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159992029 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.099832243 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087234985 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.096702328 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112782761 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080391761 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105207063 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08177274 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104616804 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087564481 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096914762 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.08715245 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.10169004 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097266286 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083339163 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109192494 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084214634 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.09569611 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082704859 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.108717164 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.108840782 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.08308551 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102349787 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107950911 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086962933 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.09304442 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081628535 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100433263 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080716733 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.107014347 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112596929 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084014676 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108679087 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082758189 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110390267 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094153811 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086613674 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104480189 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09206236 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099325147 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.082278511 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093653492 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096265663 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083981734 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094679037 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081400623 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093864654 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08883065 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103198463 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111681688 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080473551 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100940239 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084396137 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102042767 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087548831 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.101313934 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083568574 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098470364 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105924149 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086276834 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106018603 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077582356 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093381958 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079557721 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107739235 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121374374 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089823692 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.10071385 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082743587 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.096690143 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102487556 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08296382 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106158531 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089555581 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099574407 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106531085 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089445458 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098625838 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084766103 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.107427077 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097226049 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084065232 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.09764278 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09602756 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.097939837 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079828176 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.09737749 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107603686 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084375064 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099481139 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080090171 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106448029 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079153512 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100962428 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083047653 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100896783 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.108646424 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087893277 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106156516 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107545008 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088410535 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09948864 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084858908 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096825693 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083278526 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.101957904 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.10649603 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.07614556 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10270424 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082962605 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101133397 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.08802578 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.098100149 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.082142324 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108172948 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106222413 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080984701 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096434794 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085199457 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099420114 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084857105 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.105662003 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098614779 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077277333 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095453875 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086434582 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099148606 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086588477 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104924043 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102420413 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.075927545 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097890135 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086689873 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.106757769 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100553295 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082653901 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104948553 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082798555 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099026034 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.087216182 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102465219 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08116967 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.104398951 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101304387 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077756158 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103925522 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085143535 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098108589 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085731697 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104409198 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102419735 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082946924 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098451205 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087476585 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101681583 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080831749 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099629418 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098579548 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.091098678 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102317722 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077573167 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096827772 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089448546 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097134348 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081591927 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.099103982 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.10262318 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.082506112 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098952562 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081310935 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101327521 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112097927 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086712937 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101746784 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087700374 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.109198469 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082877933 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.101664352 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099807932 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083229908 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100858364 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089069453 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105422488 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10528513 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084645372 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096777154 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087727453 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107522229 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081114362 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098190949 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081057772 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.10311456 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106426434 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085635904 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101217549 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079433572 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100323402 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103737476 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.084109867 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100907138 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081078552 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105195882 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081786258 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107635323 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101738754 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.090785061 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103628486 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077827007 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104371784 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09794625 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088337476 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095618674 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080131497 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099921835 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083876022 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099036087 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.084803707 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094191781 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08909728 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108695001 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100688897 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081573835 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100882916 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091169409 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101511092 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084774332 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.103587163 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105262484 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095645765 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099531269 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086091359 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.109845443 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100909712 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076193394 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.106123644 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.080951633 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099729995 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081381898 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098903644 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085569444 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109208203 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.10508635 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.075849457 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.102613073 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081061291 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099277141 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.077366393 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.106484425 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104180497 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084058669 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10873119 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084019241 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101272243 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104634291 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082653802 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101858269 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084425567 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103591375 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083564879 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103063867 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082328617 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.103715263 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.09922602 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080632678 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102763694 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.083579202 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100712934 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088313573 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.102438267 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082771841 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103734814 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101824304 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083208282 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101041773 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081766227 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104336862 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083203223 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101606756 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085691152 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095568146 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10835631 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082710377 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108234347 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083188908 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097379075 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087050096 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.102674585 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106460793 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083268151 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101021545 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.08438003 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100601734 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.08543615 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109039227 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098216634 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091337899 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106900905 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083717438 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.104127225 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082420097 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102145358 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100817752 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083351049 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.10232573 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082292303 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100406077 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087422618 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.104046867 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.082883073 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102672255 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102948888 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082454364 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102355866 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077036964 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.100656474 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083233549 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.102036616 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09032554 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102324652 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.104410609 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.080878923 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102892191 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082098401 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097598951 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090333127 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11094554 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102729257 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090298543 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.099898557 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.083969549 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.109890266 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095182163 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081104449 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099186966 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080078916 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108967015 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.083251248 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.109518368 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.101192867 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081867953 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.09815281 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083096492 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.098771341 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077236367 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098670512 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086574826 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103828734 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080851747 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.10252654 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.103024187 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084194962 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108549369 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.081738001 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.102987284 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.083217019 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098074869 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.080674904 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100055889 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.104787686 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.083590672 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.098506199 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080241225 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.1005835 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084724241 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.109925723 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.082678307 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.102744453 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089473103 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100990803 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.104645314 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086836573 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.095787354 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.086507329 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101078527 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082578409 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.1006996 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.104714306 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087193215 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103429891 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090748581 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101539714 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083890538 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103086939 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099719099 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.082688899 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100788053 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084257051 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.101411142 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.08460098 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109851157 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081255324 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103038698 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101546737 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083429062 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.106365728 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084408141 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103528427 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109336811 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086347284 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103438239 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.088534715 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.105389973 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086073777 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102878392 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.103323591 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088988755 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.099647073 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092028454 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.10057708 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084186947 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103409395 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080811991 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101783156 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101872364 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082568337 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.106113117 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.085216945 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.100565138 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082853784 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099395803 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085164705 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10577036 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108711588 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.08585399 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104435511 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.079302406 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.099179146 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084493259 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.098850482 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084222913 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104683818 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106992333 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085238917 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.101987679 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082956875 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109513713 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108591035 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088732423 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.100307868 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088349468 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.103676549 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085164293 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103311781 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.08358529 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103409524 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.106518647 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085087964 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101686612 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091635068 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.105725971 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083767798 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104240041 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.102531918 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083314833 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097232221 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084314488 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.103951418 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08950955 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.103621741 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102042235 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092697573 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101264209 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083671186 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10678845 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082625002 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.107734093 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097107755 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.08403389 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103245234 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084360233 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.0973933 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082423426 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099712905 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086000354 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101157592 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.07876707 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11188919 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109472975 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085586533 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100786995 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082154779 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097130685 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078296795 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101010981 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102768437 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.08495909 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.111065136 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082829955 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101203403 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.078603842 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101837203 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085688085 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105024204 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.079756811 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.09683982 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.100235126 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.085660885 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.108558203 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082704948 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101410437 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086902186 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103877777 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080253506 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106502942 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098154258 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087315784 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111525057 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.083675192 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103168963 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.106995209 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091205443 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103209495 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079073811 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103046917 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085995797 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102613588 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103383044 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084785552 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116503813 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085921111 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101655367 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081611753 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104968665 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.100935887 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.090641021 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103827523 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084614819 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106868958 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085056955 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110885209 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105170252 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089404446 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104296799 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085642758 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102454662 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102915339 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.082063208 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.100248519 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084857999 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.10374604 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08788431 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110852451 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.102166496 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092600992 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.109436947 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087922387 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099311149 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083461934 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.10233899 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078478624 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103195259 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100685433 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.081293033 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.09983078 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082847881 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102348551 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08979946 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.10466935 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084805851 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102850931 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096121169 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.084822922 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105734161 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084664895 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099323109 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083789547 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103774455 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089790576 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10970364 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103250549 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.084923044 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104010103 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084819444 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097998421 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.08978051 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10171848 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086341284 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.10239008 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083526516 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104793022 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105978636 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089836411 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104098708 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.085484192 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.114653506 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104342235 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.080840719 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099784527 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089192243 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101817033 seconds)
  done (took 57.404915142 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145769639 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080746711 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097922584 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079362446 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111507053 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099003187 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07830736 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099315234 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080083599 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101530401 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079309806 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09777937 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107425601 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122588245 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09295811 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10273104 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097266059 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080247842 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097427829 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080986768 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108384629 seconds)
  done (took 2.852258703 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103730972 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.116674116 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113578365 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118732787 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088972532 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114456376 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113300132 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115258767 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099938942 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11000471 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117039861 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114936329 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090713313 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110368336 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10953405 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093026579 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.116976675 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107637536 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.114906588 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094930183 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112626259 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113450464 seconds)
  done (took 3.201887622 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083778748 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101640178 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08435569 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097076371 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.082864167 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.096790804 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087279413 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100320581 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087239745 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102073601 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08119821 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101670324 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103856808 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078375089 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101725447 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081692988 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.149550652 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106033252 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082295746 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10496116 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.097949353 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.08549322 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097712477 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079176946 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101334241 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088181701 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102737022 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081880945 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102482288 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081976801 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103171247 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.079856502 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.103908793 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102441233 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.081861493 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.100884603 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083993898 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.10267282 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078611444 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100504715 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084143879 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098007589 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084489524 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103885783 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.080906657 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.100290523 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084034908 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103329839 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097597417 seconds)
  done (took 5.422572343 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.10403439 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159604996 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.084688046 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142514797 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.12120438 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113228427 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087574113 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.14193024 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101986895 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.08209321 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.12103782 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119658043 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103405944 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.08898567 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110435114 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103666413 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086882385 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.1020821 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108333876 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084204136 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108830808 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089968872 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119605416 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117459264 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10807095 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083194781 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103183358 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109020139 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.0969937 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109244712 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109459355 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090880675 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.12050072 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.108182972 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102917733 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.086519483 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121595461 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104149459 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08683322 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.10189829 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086801388 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108807359 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110399563 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.121034527 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085107787 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107856351 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084527925 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100246085 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116753156 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086134593 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114025699 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119373102 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108797994 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085272389 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109226283 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119376812 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084596616 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102313596 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.107045086 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.097429355 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.10195214 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107657085 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.098983791 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105629093 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111138311 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098676552 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109168639 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107587165 seconds)
  done (took 8.094348495 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093712401 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111479928 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119839927 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121009476 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091103456 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110456356 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110296353 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091646655 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110797138 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117432391 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11007992 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.13341914 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086181013 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115175416 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111294034 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092339135 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111041179 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111608987 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091350284 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111820079 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110905966 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120166029 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091364407 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120728995 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142077135 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105129894 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091236936 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110516899 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120765229 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109909052 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123333275 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091039451 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111234877 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121128558 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123397134 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.09122979 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103043518 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110558713 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.09095317 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111232733 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104715664 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119548606 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091723348 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.10560458 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110784113 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091503502 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120714734 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124366479 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112984893 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097764908 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.110975895 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119762313 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109948193 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091508424 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120433228 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147728416 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119627498 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119836554 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110394017 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.120702031 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101492235 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128570724 seconds)
  done (took 7.655909447 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107553058 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115687075 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117825275 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099660329 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083290308 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109100513 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082630878 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101783652 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113739856 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094630035 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117435199 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10927455 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111683494 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097834938 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108485362 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111270656 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088575869 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109748583 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113762972 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108406116 seconds)
  done (took 2.92832232 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.092553144 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124096565 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.0845073 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111918685 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107624317 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091307119 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106686672 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107800638 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085963047 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107354898 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096287781 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117432602 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105204306 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091675097 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.1165928 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110589888 seconds)
  done (took 2.484714518 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095725119 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117159574 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120938736 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084370277 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104102905 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081103286 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106015461 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100511795 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081061642 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120427003 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084591348 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108511026 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104160125 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082766977 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101634898 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087284579 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101166593 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083262001 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105749107 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120575981 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096072075 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103811734 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.1055186 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086513375 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104573874 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089873964 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105923028 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102045121 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083862154 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105712751 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085392688 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112797938 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100963049 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084207176 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102727806 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083235138 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104819841 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085657876 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108352706 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104909906 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083440858 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104017049 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085115455 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106416171 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081366428 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105621801 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.10064329 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.09149573 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102191729 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084860418 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105050184 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106602757 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.085773547 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116530832 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089558895 seconds)
  done (took 6.227287412 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098324967 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109251908 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081093386 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102291679 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088211359 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.10739209 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108522328 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087659247 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107661796 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083218936 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106730873 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089271383 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107471176 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10937034 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086528412 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10837037 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080836628 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106212802 seconds)
  done (took 2.605715585 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090906803 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104817576 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092919567 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.10529145 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084821958 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108859407 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081259255 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104106794 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102965148 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085312288 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104532099 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087438314 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103470598 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087327365 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105836665 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084609877 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107886258 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104486152 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085187793 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101092972 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087459865 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103731431 seconds)
  done (took 2.960096809 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.117919281 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.124556062 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092206007 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.228428969 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103783519 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.13239874 seconds)
  done (took 1.636577528 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109031376 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120421068 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105442902 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105856157 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114405958 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106866624 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087568624 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107171923 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117018656 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100738021 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106915652 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118533218 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116862863 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096677322 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115138294 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114775528 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107462339 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087182567 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106232085 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129069726 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087873722 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117899349 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107988737 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088266375 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108182567 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117486781 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117821876 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121652423 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087588967 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118391888 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113308161 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088254132 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118401466 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121452884 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109041002 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09821035 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107138128 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128148338 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114878641 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097382083 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108739471 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115172812 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098911462 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113635473 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118375267 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107943942 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092560595 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107592043 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107739722 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13519099 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094832765 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117044281 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115242647 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118048863 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118531288 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133977363 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101719104 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117550873 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115117343 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1222359 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117104732 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094407867 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116739572 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122768181 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114081137 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117384565 seconds)
  done (took 8.125795266 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10252219 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126319104 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108513301 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121748252 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096740814 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10880678 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107187198 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087444838 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108300975 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106101107 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151628021 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088168815 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1185163 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116987463 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108866568 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08900297 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10914179 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117334296 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086991495 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134984495 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108161316 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117950574 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118261204 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097215397 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122914783 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114855716 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10713035 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088934706 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108814638 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106993055 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093264589 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108498144 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117884512 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08702131 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11839608 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10833861 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08763265 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114342545 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107878682 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114694287 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097780003 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127166482 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108208052 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108350389 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122051311 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088008101 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107712889 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085747008 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108222301 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106992029 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122028429 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101873364 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123121235 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117925803 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108722581 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088020374 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109431711 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108350915 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089289753 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11484077 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117884227 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10860865 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134226724 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088102717 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108492398 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118304356 seconds)
  done (took 8.007522859 seconds)
done (took 154.271204459 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097982528 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135284611 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095890673 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168714091 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106762258 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118446197 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137887723 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097310313 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105588991 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085447905 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.10610548 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087886152 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171597602 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085778589 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107030707 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107580032 seconds)
  done (took 2.658285875 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.199724463 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254478195 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102223618 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106089255 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088301736 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110686384 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105078228 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091306315 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109554811 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085424952 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108618145 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086710887 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105366629 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086088813 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110430796 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087467738 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106243063 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.108179273 seconds)
  done (took 2.899511068 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111871452 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.159405129 seconds)
  done (took 1.121108569 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118509633 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179414548 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.293372471 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154633037 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119383082 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126338355 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156506355 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130300455 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196405517 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.121635824 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122176319 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097576006 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140414939 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115728204 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094223929 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117770607 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.140907755 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092725931 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115655866 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115202481 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116898232 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106005539 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115358788 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093326342 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.179889375 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119260616 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.085561603 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106821224 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115131787 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094438744 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113279854 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124155415 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098110401 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.177448464 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101897415 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.179098452 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098156001 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.11256177 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114458883 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091965324 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118038123 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117687981 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.10460006 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118188258 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.08622974 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.118484608 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105078128 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085573869 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114154907 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.118138234 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.095133661 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113921816 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.157923052 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118519857 seconds)
  done (took 7.514027372 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.797458677 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.163663033 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089827096 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.883312171 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.143049863 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103304667 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.780590767 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133757261 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.23757766 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.758657684 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134221393 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121966024 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22600107 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.239396754 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.968317355 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.312899251 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.671709569 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102241707 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149749547 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152755211 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119058666 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137549293 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130085494 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.428369907 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.09538343 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11289662 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11664297 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.099893939 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158949723 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124996459 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.1146687 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178149518 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.249830667 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.20509089 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115862699 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089719613 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112677282 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169675078 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271571411 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214094152 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.182145786 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087141686 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111739973 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121719964 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110388143 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10835799 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162820274 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.174458059 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.195657198 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092370344 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121731692 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120794638 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119564658 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165213612 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121162201 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.297556358 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.322142231 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112652196 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120400193 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105377089 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267905299 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123452912 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.223251561 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118748769 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213689874 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110897308 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.820971174 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.190038256 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090807328 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119609261 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120244334 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094540426 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122548406 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166468585 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.391552906 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124114666 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092236697 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111607292 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.204222453 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.126121463 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111289907 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162282573 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116600765 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099892225 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125064291 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122864271 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170265024 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.231293266 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125162178 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120230434 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094425342 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125835178 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.11600437 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.216234383 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218022856 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161896908 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.212427539 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123736235 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.164089825 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.188944008 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097613688 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.194366768 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09806216 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127763639 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123698203 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.214028715 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145339466 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102409877 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116567427 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119290909 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148291426 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12607396 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097798507 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191501107 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.458524833 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167209979 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109769057 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127228643 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09862851 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159526072 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118512201 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262312319 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122287686 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169820435 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119294742 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087953783 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12061548 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163534456 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122950185 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121390809 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.1007512 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119783153 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.237402386 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217525034 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123108132 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222183673 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183887678 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119798291 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171944767 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12303836 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166986711 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119886935 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120997349 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095434575 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.837119986 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123797923 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.0984389 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116748903 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187688718 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111790433 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102208852 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125882007 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108811252 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.802532364 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126806514 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120746734 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101955369 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119295044 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121019364 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095819115 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116480942 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162122235 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231085127 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122016331 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119022202 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102554244 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.182420989 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.09469903 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125589543 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124934641 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125510502 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100420508 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115833589 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.123692535 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171657966 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.16236874 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220706445 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.595658696 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090648028 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125583735 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22858786 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089825778 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.292491835 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120385706 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.224786554 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165593373 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120981646 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.320529785 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166885046 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.188083389 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126517723 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.175362026 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087746513 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118997776 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164006521 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113298242 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117061749 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162617185 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12512023 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101797833 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.986999826 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112669567 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.23012124 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109135801 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.170900522 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095139581 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121669942 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.295033736 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11264934 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.106895087 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.186517925 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093460695 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125753825 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.735060632 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104081157 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123565542 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118974547 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222424353 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162892139 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11876712 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097967257 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120995119 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163623269 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.212680011 seconds)
  done (took 44.279690111 seconds)
done (took 59.320653211 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.277734278 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212264758 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.261286286 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.17161739 seconds)
  done (took 1.874824594 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.169115116 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.14625862 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119254006 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107003799 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.14916172 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08554235 seconds)
  done (took 1.654410565 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.353905627 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.266033107 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.214890004 seconds)
  done (took 1.718196409 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.287843586 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.251293477 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.354597076 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.418914727 seconds)
  done (took 2.317538606 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208708368 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13142826 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111279911 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104550352 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.196650116 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.248261843 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.140742694 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201811652 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.121691043 seconds)
  done (took 2.392237112 seconds)
done (took 10.8407797 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.262711041 seconds)
    (2/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.155151214 seconds)
    (3/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.126436949 seconds)
    (4/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.314287293 seconds)
    (5/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.09285346 seconds)
    (6/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.226161295 seconds)
    (7/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.12414401 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.178899852 seconds)
    (9/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.093459604 seconds)
    (10/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.166212259 seconds)
    (11/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.12099724 seconds)
    (12/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.157307226 seconds)
    (13/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.103308732 seconds)
    (14/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.148716133 seconds)
    (15/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.124745761 seconds)
    (16/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.218806105 seconds)
    (17/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.111343436 seconds)
    (18/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.193927143 seconds)
    (19/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.125174033 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.135444276 seconds)
    (21/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.2129771 seconds)
    (22/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.165561636 seconds)
    (23/286) benchmarking ("sort", Int64, true)...
    done (took 0.225191392 seconds)
    (24/286) benchmarking ("sort", BigInt, false)...
    done (took 0.244059478 seconds)
    (25/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.084693821 seconds)
    (26/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.115694625 seconds)
    (27/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.095379512 seconds)
    (28/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.117421686 seconds)
    (29/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.098010815 seconds)
    (30/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.215406295 seconds)
    (31/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.192659352 seconds)
    (32/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.204623222 seconds)
    (33/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.090614383 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.147058563 seconds)
    (35/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.236731129 seconds)
    (36/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.173215232 seconds)
    (37/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.20062124 seconds)
    (38/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094879514 seconds)
    (39/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.147419285 seconds)
    (40/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.119551559 seconds)
    (41/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093618699 seconds)
    (42/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.115457766 seconds)
    (43/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.094407398 seconds)
    (44/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.223368844 seconds)
    (45/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.183907798 seconds)
    (46/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.099166015 seconds)
    (47/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.149820356 seconds)
    (48/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.170365684 seconds)
    (49/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.093271509 seconds)
    (50/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.154987586 seconds)
    (51/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.141569055 seconds)
    (52/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111500634 seconds)
    (53/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.120981707 seconds)
    (54/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.116439846 seconds)
    (55/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.137919695 seconds)
    (56/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.18595519 seconds)
    (57/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.185755624 seconds)
    (58/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.087660422 seconds)
    (59/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.132116343 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.146457075 seconds)
    (61/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.076791111 seconds)
    (62/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.121127798 seconds)
    (63/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.138289306 seconds)
    (64/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.188411162 seconds)
    (65/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066728126 seconds)
    (66/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.174169792 seconds)
    (67/286) benchmarking ("sort", Int8, false)...
    done (took 0.188643791 seconds)
    (68/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.205491835 seconds)
    (69/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.166636577 seconds)
    (70/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.204820872 seconds)
    (71/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.093342232 seconds)
    (72/286) benchmarking ("sort", Int64, false)...
    done (took 0.110197436 seconds)
    (73/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.111774348 seconds)
    (74/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.122927089 seconds)
    (75/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.114588863 seconds)
    (76/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.094614695 seconds)
    (77/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.140166953 seconds)
    (78/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.090481165 seconds)
    (79/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.118545103 seconds)
    (80/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.095133591 seconds)
    (81/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.1102269 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086248006 seconds)
    (83/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.141490512 seconds)
    (84/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117168327 seconds)
    (85/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.103537221 seconds)
    (86/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.136334328 seconds)
    (87/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066124147 seconds)
    (88/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.115590106 seconds)
    (89/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.094423854 seconds)
    (90/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.136634261 seconds)
    (91/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.122141012 seconds)
    (92/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.130727108 seconds)
    (93/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.185874264 seconds)
    (94/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.137172333 seconds)
    (95/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.198760349 seconds)
    (96/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.154052727 seconds)
    (97/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.132538776 seconds)
    (98/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.143135577 seconds)
    (99/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067341951 seconds)
    (100/286) benchmarking ("sort", Float32, false)...
    done (took 0.173737005 seconds)
    (101/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067676138 seconds)
    (102/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.110461907 seconds)
    (103/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.166244916 seconds)
    (104/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.188487734 seconds)
    (105/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.173715957 seconds)
    (106/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.17912683 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.086759133 seconds)
    (108/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.125519082 seconds)
    (109/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.167953179 seconds)
    (110/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.113585655 seconds)
    (111/286) benchmarking ("sort", Bool, false)...
    done (took 0.182554248 seconds)
    (112/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.120105518 seconds)
    (113/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.088364422 seconds)
    (114/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.186564221 seconds)
    (115/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094673726 seconds)
    (116/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.119863483 seconds)
    (117/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.119902275 seconds)
    (118/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.161267143 seconds)
    (119/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.120072686 seconds)
    (120/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092960804 seconds)
    (121/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.117833216 seconds)
    (122/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.086393958 seconds)
    (123/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.09950354 seconds)
    (124/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.094841752 seconds)
    (125/286) benchmarking ("sort", Float32, true)...
    done (took 0.232610228 seconds)
    (126/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.137529099 seconds)
    (127/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.066809598 seconds)
    (128/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.090825535 seconds)
    (129/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.070684048 seconds)
    (130/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.156580138 seconds)
    (131/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.113032139 seconds)
    (132/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.091229907 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.085777328 seconds)
    (134/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.117281051 seconds)
    (135/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.086578073 seconds)
    (136/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.138275176 seconds)
    (137/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068641351 seconds)
    (138/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.090476923 seconds)
    (139/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.069081879 seconds)
    (140/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117063266 seconds)
    (141/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.097401928 seconds)
    (142/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.089534348 seconds)
    (143/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.095797243 seconds)
    (144/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.142905176 seconds)
    (145/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.097324875 seconds)
    (146/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.123274463 seconds)
    (147/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.067224578 seconds)
    (148/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.089302527 seconds)
    (149/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068037461 seconds)
    (150/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.096937734 seconds)
    (151/286) benchmarking ("sort", Float64, false)...
    done (took 0.171255116 seconds)
    (152/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.140392078 seconds)
    (153/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.086174246 seconds)
    (154/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.134673052 seconds)
    (155/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.119893506 seconds)
    (156/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.068243661 seconds)
    (157/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067356655 seconds)
    (158/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.231877333 seconds)
    (159/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.099515578 seconds)
    (160/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.161439727 seconds)
    (161/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.10605678 seconds)
    (162/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.078068194 seconds)
    (163/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.108464568 seconds)
    (164/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.099848891 seconds)
    (165/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.168096553 seconds)
    (166/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.18117528 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.086807993 seconds)
    (168/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.109324883 seconds)
    (169/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068220416 seconds)
    (170/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066738934 seconds)
    (171/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.090897794 seconds)
    (172/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.091129051 seconds)
    (173/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.108370711 seconds)
    (174/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.087143913 seconds)
    (175/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.122199587 seconds)
    (176/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068012707 seconds)
    (177/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.153040674 seconds)
    (178/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068023936 seconds)
    (179/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067811084 seconds)
    (180/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.116536529 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.086973463 seconds)
    (182/286) benchmarking ("sort", Int8, true)...
    done (took 0.221663858 seconds)
    (183/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.120819164 seconds)
    (184/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.125647937 seconds)
    (185/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.098872491 seconds)
    (186/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.109940942 seconds)
    (187/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.087857099 seconds)
    (188/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.149840192 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.087222293 seconds)
    (190/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.163091278 seconds)
    (191/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.116330848 seconds)
    (192/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.148215637 seconds)
    (193/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.090654221 seconds)
    (194/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.151778086 seconds)
    (195/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.091950933 seconds)
    (196/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.095654702 seconds)
    (197/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.110310843 seconds)
    (198/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.106928502 seconds)
    (199/286) benchmarking ("sort", Bool, true)...
    done (took 0.223619271 seconds)
    (200/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109742035 seconds)
    (201/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.0676299 seconds)
    (202/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.114957215 seconds)
    (203/286) benchmarking ("sort", Float64, true)...
    done (took 0.232344781 seconds)
    (204/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.086320371 seconds)
    (205/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.152006569 seconds)
    (206/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.088378605 seconds)
    (207/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.090468678 seconds)
    (208/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.144909032 seconds)
    (209/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.33353441 seconds)
    (210/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089721479 seconds)
    (211/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.090708735 seconds)
    (212/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066986927 seconds)
    (213/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.117831572 seconds)
    (214/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.088481908 seconds)
    (215/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119260094 seconds)
    (216/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068700325 seconds)
    (217/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.067046972 seconds)
    (218/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.112884746 seconds)
    (219/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067902338 seconds)
    (220/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.11541902 seconds)
    (221/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.067355852 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.109164737 seconds)
    (223/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.08490986 seconds)
    (224/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067232516 seconds)
    (225/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.090666678 seconds)
    (226/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.11271329 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109750292 seconds)
    (228/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.077822553 seconds)
    (229/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.090063354 seconds)
    (230/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.112561079 seconds)
    (231/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.089757532 seconds)
    (232/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.093145471 seconds)
    (233/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.109662517 seconds)
    (234/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.095892462 seconds)
    (235/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.110299625 seconds)
    (236/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.087827127 seconds)
    (237/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.116474431 seconds)
    (238/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.086995094 seconds)
    (239/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.155076543 seconds)
    (240/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067446 seconds)
    (241/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.09291835 seconds)
    (242/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.101364358 seconds)
    (243/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.092625219 seconds)
    (244/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.087838785 seconds)
    (245/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.09075186 seconds)
    (246/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066676497 seconds)
    (247/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085957098 seconds)
    (248/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.092444657 seconds)
    (249/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.087304426 seconds)
    (250/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.090223226 seconds)
    (251/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093470976 seconds)
    (252/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.109763046 seconds)
    (253/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.104858322 seconds)
    (254/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.11012842 seconds)
    (255/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.08797271 seconds)
    (256/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.118753088 seconds)
    (257/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.10988283 seconds)
    (258/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.097706291 seconds)
    (259/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.09104811 seconds)
    (260/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.076175259 seconds)
    (261/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.18499175 seconds)
    (262/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.109273156 seconds)
    (263/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.092066255 seconds)
    (264/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.138751796 seconds)
    (265/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.116308275 seconds)
    (266/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.093800532 seconds)
    (267/286) benchmarking ("sort", BigInt, true)...
    done (took 0.233677284 seconds)
    (268/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.091428331 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.095126037 seconds)
    (270/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.116895629 seconds)
    (271/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.086053258 seconds)
    (272/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109616852 seconds)
    (273/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066864357 seconds)
    (274/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.118104287 seconds)
    (275/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.089229809 seconds)
    (276/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.1734867 seconds)
    (277/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.067380079 seconds)
    (278/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.11582982 seconds)
    (279/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.076889678 seconds)
    (280/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.112338981 seconds)
    (281/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.06739841 seconds)
    (282/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067255336 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.116871513 seconds)
    (284/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.086920852 seconds)
    (285/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.089933105 seconds)
    (286/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067389442 seconds)
  done (took 36.044440652 seconds)
done (took 36.930960963 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099530613 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147233829 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.097261302 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135005992 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.122995291 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090636141 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119919801 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.09892755 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123419412 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125318224 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097496381 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.069351934 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.121130439 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120707504 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097620593 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.137639941 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123523997 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093896405 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118925006 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085401578 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119263471 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086811079 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111228115 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.06957597 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.12130653 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094985854 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.11590742 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.09802961 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.109923313 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.086808336 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.11634869 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.093632852 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.109206268 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123994976 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093737075 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.11978469 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.098923852 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120241162 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.088686528 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111050656 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.094709465 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.110945771 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.093911302 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.118044155 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.093226317 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.109507651 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119267747 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.102812755 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139363546 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091732069 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.118162434 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.09707364 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.119706058 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.116909352 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091177752 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119264232 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.086013677 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.137872459 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.095857168 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11594013 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.093775256 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.117765054 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.10947323 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095517113 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119377898 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.099328436 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.122180959 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.086138683 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.121649419 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.091722742 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.110648942 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120174855 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090637229 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110500476 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096682603 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.120825857 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086034688 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117418439 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.093178591 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.115476476 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.086593149 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112627662 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.088841685 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.117447972 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090027783 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.093735655 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.091684114 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.117389924 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.086994536 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.121032219 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.093815973 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.11724594 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.088813428 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.123518222 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.086751033 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.110246586 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111601894 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086897761 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113427916 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091743876 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111177078 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089768334 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119421642 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089565908 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.116920485 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.099415951 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.110477313 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.093774106 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.110714778 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.086469005 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.126763169 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.097575855 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.110946831 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116625684 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086407216 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.112547262 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086168153 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.1100729 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087116469 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.11091701 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093618538 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.11110344 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08941122 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.112198804 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.102216275 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.110554281 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.091533066 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.11319523 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.086675323 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.11668999 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.087152532 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.1113921 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.089544752 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.102044807 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090562011 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.110668273 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.089333107 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113099134 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.096904385 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.112938669 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120583506 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092839421 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.118332457 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.087379699 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110383475 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074404446 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092770896 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113632961 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.089872265 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.110979149 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.088774784 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.111825729 seconds)
done (took 16.895133175 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087251637 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.18340512 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151938042 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142102625 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106925146 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112006559 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122404309 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118329812 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11345018 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142366278 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110372197 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131103009 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.146988547 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087112093 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112137815 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091189128 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113864329 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101514148 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145265136 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133599841 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.16369042 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086422313 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.14610527 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135226191 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120681767 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104471842 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113030297 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092235764 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.11511634 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112783858 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132114848 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115351339 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087700816 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134167118 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104548559 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.11945818 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087748142 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119138406 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087484669 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.11196469 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140008083 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133328275 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092901877 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117757814 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091700248 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114213309 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088936431 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121422675 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097587374 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116523977 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125790482 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157545848 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090563338 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122379509 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086800961 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122569312 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121181946 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090077395 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.11107173 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090776161 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111020583 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.09177916 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126633584 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141532143 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091825728 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121572418 seconds)
  done (took 8.597396504 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104937371 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139960231 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105678935 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131178276 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.11159299 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088196604 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112587722 seconds)
  done (took 1.743858347 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.087654221 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135264155 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111579004 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135302006 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131539344 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112740937 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123059954 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089469151 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132847601 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089155709 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134193777 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.14996599 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089607344 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121489916 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138128401 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089128409 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137247916 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089166959 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116321275 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112157788 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116030797 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135849155 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090751502 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113093622 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102729663 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114530553 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.16152946 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094555835 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115170198 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091795677 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111823319 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.151065128 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102814652 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124700838 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089266211 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130127819 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128807502 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08667199 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.12624858 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093914686 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127947386 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089924234 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115446445 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087475323 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118840321 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099209449 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.118063052 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.131219555 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092582907 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134153342 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089396494 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.1278497 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089229634 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117735027 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090245434 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119981896 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.098186733 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115240259 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133237864 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089985755 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13050352 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105272104 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.127477332 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130485725 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091075807 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128274966 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.10417667 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116634553 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091479527 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.11810156 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.105660764 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112205362 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115739935 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099421381 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115734889 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112038902 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136979269 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09149976 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124801127 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114115856 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089275448 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114964936 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.11199133 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118329447 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089735537 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118552525 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092189636 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.11276286 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.089249554 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.11761323 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.08671556 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116163948 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.092323111 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114057707 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09209191 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.130367594 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115396443 seconds)
  done (took 11.819686944 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090843865 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114393754 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091905346 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114092888 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090630651 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115248625 seconds)
  done (took 1.576485257 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.11670799 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117218477 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104802405 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120911625 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155880889 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103591728 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.129005169 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123878255 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108980098 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12727697 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129909503 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104865176 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136313743 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120904165 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104814333 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.12056165 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.1043101 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124548987 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.12783597 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096906359 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136262495 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121638937 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096474735 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131610062 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118709909 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096642565 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12603321 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102674197 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128246006 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122830624 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096002013 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117683332 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096380315 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123644427 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129305041 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095101915 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120119532 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119527137 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099952558 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117854331 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104309205 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120842828 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127604937 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094216345 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123737796 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121089065 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093475908 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125825655 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103238368 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119491044 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118293316 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09586679 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120868679 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094602988 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122804681 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126579412 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094943639 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130219324 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121642191 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096876651 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118214732 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093999859 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123820848 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118517807 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104289745 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119657591 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121162709 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096552818 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122182597 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096386326 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118905763 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093275804 seconds)
  done (took 9.221673102 seconds)
done (took 33.905446264 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.686122904 seconds)
  done (took 1.644670801 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.82112818 seconds)
  done (took 1.782371407 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.107930184 seconds)
  done (took 18.098697018 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.491475163 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.577251156 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.974863775 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.178281068 seconds)
  done (took 3.185080258 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.948780027 seconds)
  done (took 1.932991694 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.285580019 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.239294096 seconds)
  done (took 1.495534051 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.773393971 seconds)
  done (took 1.752842861 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.392847356 seconds)
  done (took 2.361394232 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.318500145 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18427205 seconds)
  done (took 1.481714042 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.545774935 seconds)
  done (took 1.52218639 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.958179696 seconds)
  done (took 10.940180722 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.265766446 seconds)
  done (took 1.257069187 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.299686017 seconds)
  done (took 1.281773583 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.477727156 seconds)
  done (took 4.458627302 seconds)
done (took 54.16831365 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098976169 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126416368 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102484987 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124437791 seconds)
  done (took 1.426820205 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101121375 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120679259 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101176285 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.12046425 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126236973 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095779519 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123337521 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101060927 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120210642 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096962548 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.12145942 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.121058851 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099018282 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122951581 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094210335 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123563907 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124609931 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.095690313 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125266728 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096268165 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.11866974 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.09786335 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124883306 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094995867 seconds)
  done (took 3.65131779 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.099951641 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.11938887 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097099875 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118194218 seconds)
  done (took 1.424209846 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100560644 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131686957 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105428271 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125174103 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130905807 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105382174 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117316681 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092373 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119468973 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.099311449 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116322954 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.138377481 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.106162991 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124933518 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101886755 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114105781 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.09051426 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.132099319 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125359268 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.10101378 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.11848159 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099758842 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.115063736 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.108844405 seconds)
  done (took 3.705236899 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170401869 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127298281 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.137990387 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095712381 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160082051 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140618625 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089124778 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.1403687 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087945895 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131383501 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118806793 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132720581 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129834616 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088476847 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114522985 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088034041 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128640403 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128376232 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.09130213 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127654016 seconds)
  done (took 3.421832778 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097963853 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117877757 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088246434 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116465334 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099718483 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121567594 seconds)
  done (took 1.632953089 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090489189 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114173839 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090225471 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.11478497 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093786053 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115253185 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089237204 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114731633 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089550537 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114649532 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089752279 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113184149 seconds)
  done (took 2.221626089 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.50381453 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.120534691 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119823048 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088429154 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122129099 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089817628 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129466434 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092803746 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141552169 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088806932 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116179012 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.093125598 seconds)
  done (took 2.699407611 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237863459 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126111096 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281278146 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.36328147 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155113901 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161403287 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.278183685 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163341381 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.196349923 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150995475 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229638667 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199647377 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152339443 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192153528 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137552524 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.143244851 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190709161 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250297114 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152642791 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212486722 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206100206 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166742741 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17910606 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152028951 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11215216 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192835201 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.09508564 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130160102 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206433385 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205366273 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189319344 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16130047 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146556681 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236200608 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24675207 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196217018 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276853641 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133792682 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.139734382 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.164580426 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264531512 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13855858 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23297124 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155432207 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104370235 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220606793 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166428843 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.172652586 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.147051759 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111980098 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225912655 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242084373 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.194245822 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138372751 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299126075 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148934717 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.156875288 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189007503 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253772357 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226139987 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189761843 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.093897576 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212642285 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192286147 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184631628 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.152790741 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.208120682 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147055898 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185577665 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188575702 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166425462 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177754839 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.207531513 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137664439 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172023513 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172636868 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174744628 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259629608 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186456711 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122309102 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172159202 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147819548 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104280958 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.195269815 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125032227 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214744026 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144069707 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.160927614 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208514007 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159429568 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161993774 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217920854 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1858517 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14983717 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083494827 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153670679 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154831268 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179234186 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139550141 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158750922 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158376531 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.102711138 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197198407 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.098093826 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184725044 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.116562519 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174597059 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183415331 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127751058 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161395603 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152859531 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.148261256 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177929455 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200071286 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140285851 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133510388 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210435149 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17991211 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142063387 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177729151 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.194729574 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.143265912 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148863071 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224663221 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217729617 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13971149 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203297993 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153381295 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135571228 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.132919635 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182858892 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155676428 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160874139 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105710145 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.203352625 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207869836 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125582218 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112271526 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222862685 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133433108 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105674163 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155409105 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147129576 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138617089 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.141531271 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.117945896 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203791055 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180583304 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155194096 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166465403 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150354167 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247253216 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113277649 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150638318 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150860032 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120417492 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.1933913 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19878454 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131807285 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206446577 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.197255037 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198759956 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169855159 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134742844 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17887696 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129601438 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.094737073 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218477427 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162737217 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133543292 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.219676152 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19587647 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.207171067 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.18021512 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169800488 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174149562 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.16641134 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157172377 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.137368276 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159932046 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160183219 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.097349716 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.143145005 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134801512 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148584935 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115559651 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135181281 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196534123 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197879739 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189230436 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159343662 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149016199 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181401204 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128900755 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177326831 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.174294379 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145921346 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.193614443 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193925889 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211963731 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116908835 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228615191 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120315769 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098737096 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142854465 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169994063 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134311241 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108003376 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188425247 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180592799 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182474681 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173915833 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231610173 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177009372 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189654826 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.122253568 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.140717184 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21020379 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176937714 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.153019559 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138619971 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151696408 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176910631 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155097897 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256128816 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169650019 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177354222 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234302415 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.123554325 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132554491 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151188154 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179586109 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153126587 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177351956 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147674735 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139218626 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160815709 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.100179783 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15517198 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213603524 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165973875 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187651134 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149844307 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183128349 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128814632 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161829825 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160494501 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167875287 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.108267609 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175187251 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203281762 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146854117 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166305408 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216918762 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104259933 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.306643569 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235261583 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194037274 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139111783 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155265722 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160269609 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162223805 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171488527 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179965331 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157876127 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189068642 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159768329 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136109334 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111350707 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151142862 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153018517 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133184098 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.142277098 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.173089232 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138348929 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189259988 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155152008 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157429228 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174164907 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149651337 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.116337823 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151735839 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244576959 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185814182 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238604338 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.123257872 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.206197835 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208116957 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126076427 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103787134 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.13485243 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17794309 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135844954 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192914618 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.186481647 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225617407 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181123343 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179136664 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140780418 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120607872 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156712852 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170183113 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202653112 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149409942 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.148440196 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228538687 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.109252979 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131497864 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162622763 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28515498 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145911144 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195357707 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079266709 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.304512352 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100954188 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133686037 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163503339 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205982135 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136638231 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.176042231 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173083244 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162764082 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164237744 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150082899 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191638508 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237014098 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200509397 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181854176 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.133952109 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157681767 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175809978 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191180698 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155613955 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.140372301 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232295412 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196311919 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.195609077 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142505332 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170047281 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169839608 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159883784 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212660303 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108202047 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234067602 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107775807 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219432845 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153772117 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138965764 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179516205 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.188128126 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140553412 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186982832 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211604659 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108753177 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134356844 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165334546 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179740364 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153811397 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128171904 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182275226 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.125196011 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195258991 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263847393 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13276084 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12867445 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147246211 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136912195 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154011323 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158964695 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139035868 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.138361534 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227809595 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.107437662 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2197509 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201465728 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170480369 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200640433 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11730564 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.720078222 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.102954599 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19529794 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150156332 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23577116 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151291887 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173883704 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158312684 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172016225 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194724915 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160264411 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.232335677 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218073582 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.175974396 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10485724 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156953885 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156046693 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.143723029 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153254611 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169934333 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162417866 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.145094605 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.173506356 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164621568 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.136561994 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140749126 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199861741 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149607897 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185662088 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180094357 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138943632 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17479678 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185624962 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133968075 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179213693 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237616769 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142595285 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149004806 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.106865882 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.150956031 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264289758 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.12458767 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19031895 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183677201 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160150487 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169140183 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146568753 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220044137 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157377101 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185986735 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145407571 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158325124 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156528799 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109833453 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.131552855 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157737746 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168571252 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150687963 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15547619 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.13949122 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21829082 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.096456707 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145239443 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28513729 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177379721 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243850416 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.135698987 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107330381 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164934572 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152599708 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.170990697 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206352208 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.109204269 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135342597 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.131448765 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.12391751 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138291919 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129109712 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218864898 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165327019 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209092586 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.13701981 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277904789 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112593506 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156701076 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.114890624 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.104277788 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149827357 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145366283 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156328005 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193276339 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262141648 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147293656 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.132737386 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148815621 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098714409 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137258718 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16273807 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16537621 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181806066 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143918628 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081234761 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156073186 seconds)
  done (took 82.308253121 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164464953 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.1322042 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147057466 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201302516 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176561135 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269725332 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210716446 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252691399 seconds)
  done (took 2.63834104 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093726525 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.14593526 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157614768 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133408817 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091833632 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119569085 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.340618279 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132608284 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116684668 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121914416 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.174230602 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094330146 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.545027127 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090656421 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119505264 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.106816905 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091630917 seconds)
  done (took 3.753206476 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.12242006 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.488102672 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.995653438 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.194157059 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.158608759 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.11753826 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.70720678 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094343468 seconds)
  done (took 11.963426827 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.115335691 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136705621 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123908974 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.152834901 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.141197656 seconds)
  done (took 1.76516237 seconds)
done (took 123.59014841 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097813593 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127341105 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097837975 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129739079 seconds)
  done (took 1.527697037 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095216202 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.07119197 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100568461 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074611933 seconds)
  done (took 1.426271318 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.189915949 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.167479626 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.382832091 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071750647 seconds)
  done (took 1.570654829 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.115038061 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132457529 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103777067 seconds)
  done (took 1.444935269 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106029642 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129142865 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102702829 seconds)
  done (took 1.428058379 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105638616 seconds)
  done (took 1.196820517 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107567238 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136553822 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109569035 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135976455 seconds)
  done (took 1.57983549 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098435053 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126504892 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108617408 seconds)
  done (took 1.422564432 seconds)
done (took 13.041243308 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103177726 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.415135029 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413704109 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11085156 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722798186 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381870929 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.075741252 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145834394 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164042359 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093073552 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138536343 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674957028 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.028225604 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.370145734 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.981154318 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.372474467 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.679410828 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120939774 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091442202 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122087439 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.058796825 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092171265 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121100106 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093505091 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701384181 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.398583373 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122417107 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.37126351 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093126881 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125984124 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.38408984 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122862128 seconds)
  done (took 16.969067808 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095288696 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172290469 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098497269 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123749557 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122851883 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094454608 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123218166 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093096107 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179312148 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122492465 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110425851 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121785469 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124999991 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095036153 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140730053 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094688669 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125225853 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092679321 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122194586 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09332404 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139685257 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120055818 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094301383 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.1215365 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.0941315 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135010993 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094031766 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120927368 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119040425 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09962719 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126865975 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093853409 seconds)
  done (took 4.797393139 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139472216 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181421656 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128107399 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125971377 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168004405 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124308307 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198216833 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.11729925 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181044395 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122650419 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139100095 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093045211 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156114085 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.121961785 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11444223 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121009907 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096654553 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12216294 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092449575 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123161222 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138630183 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09334113 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12146641 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093160423 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122572126 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107714014 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123884969 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120365443 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093453696 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125548571 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099625735 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122995031 seconds)
  done (took 5.126347593 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096314356 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125560979 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108642263 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137539357 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094569607 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125053292 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097247023 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123772586 seconds)
  done (took 2.00253461 seconds)
done (took 29.988262568 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111404887 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126924608 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107653897 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134355013 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103009055 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132207854 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092002071 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133632636 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133756951 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102684375 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.13658128 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092303173 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123390036 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.093093052 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135246708 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097905906 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132246832 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101460379 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133652201 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132054402 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095074897 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133786034 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102351133 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132797205 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104566724 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133379727 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.135994159 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.09967402 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122707966 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094157904 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124091767 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103474502 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123734843 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104837488 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126482007 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096754027 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.122917913 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093432033 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132924541 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.131838637 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099228535 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132420611 seconds)
  done (took 5.989075072 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.106976348 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.138947245 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104176181 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080824351 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116976157 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080264509 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137061266 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078431933 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110315906 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.106764454 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074276962 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105599096 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078458531 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.100774879 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077274773 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074910858 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.107670681 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076120383 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075300443 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105300207 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080452341 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073407838 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107812096 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078438819 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07470869 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109693544 seconds)
  done (took 3.560737411 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100946912 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133566147 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113483197 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183342249 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161532923 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099422668 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132389645 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140059645 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109430778 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.11991844 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096611176 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149592072 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109972789 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129877422 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.093323073 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137523992 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135556667 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094581557 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128006218 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111337763 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138548057 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102842705 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.140695286 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.13309397 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093267741 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122677147 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097484584 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134224086 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096929877 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131545777 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096252631 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125684687 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122689929 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104306644 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125087203 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.09358055 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141280512 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102335072 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.130693526 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.120563098 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.100739857 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.12182167 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113586306 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161332683 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09111339 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129168076 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.123576726 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103010817 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121487337 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.11119364 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131212479 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092281043 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125208596 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091638662 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121782374 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106085367 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123430836 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094726995 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130771056 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126267972 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105454031 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125632925 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109098446 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121894646 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100679663 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.12111594 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.091909497 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121311988 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143390446 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094228811 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.16082384 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093428138 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123681046 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101452967 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130121152 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127444516 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093537706 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137695809 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102842506 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125245906 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101783978 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125952934 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095234937 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.13974883 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124545214 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095229685 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.121612072 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100399228 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123425253 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094245767 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136377356 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091208808 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125449222 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109541201 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122129602 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.121843414 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100072779 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125519028 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.09232912 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135288469 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097970413 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122467454 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.131932562 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093630355 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.123734397 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.102904828 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127035639 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091750852 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.12747584 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099825547 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.12238075 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093368514 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125780484 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094268475 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132923289 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.12886485 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.09805279 seconds)
  done (took 14.791464699 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.227221593 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214885778 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.205560548 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.291169188 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135143144 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114252455 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.241574529 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.125251313 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123531163 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160037065 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.170962309 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.180839215 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.169087443 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180413441 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.169833135 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093606963 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142544289 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.163667613 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.213686965 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.256762031 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.14495052 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.100719446 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162905136 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.159977695 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137101297 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.131962026 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.109872944 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134210383 seconds)
  done (took 5.780927016 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108379117 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155817426 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098797467 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144739605 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148727262 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093249917 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127206624 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093745933 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136491353 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134686232 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092814049 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129493383 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100728478 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132127739 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123023088 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102935222 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132079945 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.09594495 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126358811 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097776359 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134171264 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101727431 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127335537 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121760798 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103811594 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121899274 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086477805 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143270746 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122690083 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115511072 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121204951 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101456066 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.137037975 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093831699 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123372815 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095570808 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125424986 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095188545 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125451622 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091764825 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123431978 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077119824 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122424565 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136259856 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.09968937 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.081411463 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.12913608 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128308765 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094666604 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120817655 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096283669 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.124832429 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096567113 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130670084 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096289363 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124155289 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096451548 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115506171 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099677588 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125436598 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085008636 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121195934 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.09927494 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117606785 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101778161 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128089587 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091446359 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125919189 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097247313 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129917906 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095582085 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130379532 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091311263 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.12592192 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095262237 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128408301 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.126029548 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.092209726 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122755148 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094180894 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075141513 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123855133 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.07325546 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127479575 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091299003 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122570268 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095607455 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129875767 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137516063 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.09524447 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132584702 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093718199 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122477296 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096314268 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113405711 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096387982 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140206935 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141237914 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093853352 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122421511 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108280629 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125910327 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092208607 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106445621 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102194716 seconds)
  done (took 12.96460199 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130290009 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154548512 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.124635304 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.111968248 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155918714 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157649927 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101456097 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130442753 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095397135 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142936662 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093185116 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131818304 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.092967488 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137493076 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156845257 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103758333 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125631327 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107792856 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128698039 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.167862005 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111919628 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142135012 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.109597723 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124624742 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.12865015 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110494673 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.160711702 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106689811 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.13653691 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142113434 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108409934 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161346277 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143666882 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099294398 seconds)
  done (took 5.469588071 seconds)
done (took 49.652153268 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.238103758 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.413721316 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.187960011 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.120247435 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.228042522 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.214816624 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.204872847 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.188574898 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.19229634 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.195875415 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.44961181 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.718008289 seconds)
done (took 58.471933142 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.295227708 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.346633203 seconds)
    (2/2) benchmarking "String"...
    done (took 1.518084493 seconds)
  done (took 3.981533399 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.764002362 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.138276866 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.456298278 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.197738761 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.195491225 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.481014898 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.925123352 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.572374461 seconds)
  done (took 28.083943291 seconds)
done (took 42.243770613 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.197272972 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.268143836 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.235444061 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.170711612 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.308097283 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.228257758 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.602144566 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.238694551 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.207272803 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.175828662 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.218055562 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.19110493 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.197656959 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.566212996 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.207076855 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.203211808 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.241201692 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.730285531 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.59597772 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.19381462 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.219867848 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.222052392 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.211801988 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.208675107 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.220164706 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.202860806 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.198214823 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.210721913 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.791585732 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.202015697 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.203650534 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.737019073 seconds)
  done (took 190.722908666 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.192908777 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.189774018 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.299492041 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.233493172 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.644246336 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.39861882 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.343030942 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.700470576 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.217200594 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.225358178 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.441971941 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.200209415 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.498266604 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.221484073 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.222447859 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.25805882 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.543252617 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.499234622 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.238520077 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.357189599 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.202111042 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.524184325 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.537199277 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.38401905 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.231015581 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.235548498 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.221259188 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.222713772 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.386458867 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.482271365 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.253112766 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.233538976 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.82269589 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.051770211 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.220762172 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.242844648 seconds)
  done (took 150.295921545 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.193255633 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.195168341 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.194756926 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.227199345 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.194003463 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.75846656 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.773408999 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.708002134 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.709548632 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.200672479 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.610780524 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.466394343 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.194481802 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.194633327 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.289571508 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.209382168 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.19584412 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.210920061 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.240012596 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.195204026 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.196763998 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.779986843 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.214075471 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.272264717 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.372105282 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.211385502 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.229190422 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.585846081 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.196304577 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.228343884 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.528816773 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.24569318 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.195955452 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.599377765 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.062002818 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.315991952 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.199419656 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.228765794 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.197749567 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.477913367 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.196974458 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.197220199 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.199188357 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.90788019 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.202129864 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.761324396 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.196691137 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.154362315 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.197338282 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.19638549 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.661954753 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.940756544 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.220852062 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.196710471 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.199677425 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.1974698 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.199159385 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.231000029 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.732885454 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.29734725 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.215809776 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.201474573 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.230427169 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.197742328 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.249998715 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.19921135 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.525781757 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.272498886 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.424108054 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.783142564 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.20466863 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298488678 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.320620491 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.200081257 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.198954632 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.200218627 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.199457641 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.310990596 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.199258981 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.611501899 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.198797337 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.375050943 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.21662824 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.624054179 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.206615535 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.296386061 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.20024911 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.625771235 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.205247955 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.199577654 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.951100337 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.296899314 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.199865156 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.199542304 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.19933198 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.614480158 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.76660998 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.481141893 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.20791556 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.662004749 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.206747461 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.631164079 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.75727946 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.898423312 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.207975834 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313255444 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.377772338 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.2177965 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.200886413 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.629901158 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.208417717 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.260143915 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.200997441 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.599750609 seconds)
  done (took 366.998020192 seconds)
done (took 709.140370469 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.803633658 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.796184251 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.909606084 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.789512098 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.753976365 seconds)
  done (took 10.180256832 seconds)
done (took 11.309664319 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.387582507 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.386511902 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.260859877 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.389028373 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.232856118 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.406060901 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.366458486 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.220694777 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.301846365 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.282049366 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.301141339 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.254527218 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.236012414 seconds)
  done (took 18.152294025 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.522297962 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.526864807 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.265411733 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.520499535 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.241997675 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.548544068 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.403786441 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.413768402 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.418424504 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.236434917 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.216212932 seconds)
  done (took 16.442383491 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.539195283 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.530942696 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.269370484 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.532492082 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.242270862 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.530265575 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.407433608 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.420236199 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.450074618 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.235204595 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.217430844 seconds)
  done (took 16.502381288 seconds)
done (took 52.225545786 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.212150029 seconds)
  done (took 2.341111309 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.246116707 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.410811356 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.23437055 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.217247567 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.212221715 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.215432792 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.217178257 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.213290957 seconds)
  done (took 11.096408859 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.212895295 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.210269751 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.209721541 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.210362793 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.209243466 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.211079611 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.212289385 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.211959718 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.209302949 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.212408792 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.210855438 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.213323039 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.21036113 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.209556408 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.213465924 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.213245326 seconds)
  done (took 20.510364747 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.212514049 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.211535793 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.210459898 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.211334041 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.210591475 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.211767145 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.212919784 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.210744577 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.210692496 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.211815142 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.211225801 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.210289506 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.212175522 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.211772274 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.211649196 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.213544142 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.211282836 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.211889798 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.215351992 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.211920208 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.211926738 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.211284043 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.212281493 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.211651052 seconds)
  done (took 30.214729662 seconds)
done (took 65.294021745 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.844819725 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.93350853 seconds)
  done (took 6.910188495 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.213941912 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.213377957 seconds)
  done (took 3.563589659 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.21434953 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.214903151 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.213736291 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.214558364 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.214878604 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.214858936 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.214177737 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.213680212 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.214382092 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.214444077 seconds)
  done (took 13.275209887 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.214818991 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.214011348 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.21154112 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.215425118 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.214903583 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.212060307 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.214337574 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.214986855 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.21598624 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.21312882 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.214979662 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.212773039 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.216037976 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.21364333 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.215870546 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.213275544 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.212844162 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.213786706 seconds)
  done (took 22.987378114 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.216352986 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.216014943 seconds)
  done (took 3.566374103 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.213727405 seconds)
    (2/7) benchmarking "second"...
    done (took 1.21230911 seconds)
    (3/7) benchmarking "month"...
    done (took 1.214276058 seconds)
    (4/7) benchmarking "year"...
    done (took 1.213752644 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.213889297 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.214076485 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.213534209 seconds)
  done (took 9.628880147 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.217846848 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.390428152 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.471654912 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.840003403 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.218258839 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.220916084 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.090645347 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.220666704 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.223122406 seconds)
  done (took 14.028565308 seconds)
done (took 75.094049698 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.23921646 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.2268649 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.485206404 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.218997938 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.231804931 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.553501269 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.223730057 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.345266887 seconds)
done (took 37.661156246 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.211502255 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.203148503 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.040628277 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.197711205 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.284449087 seconds)
  done (took 18.860314756 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.282371121 seconds)
    (2/2) benchmarking "read"...
    done (took 1.553120306 seconds)
  done (took 4.971653276 seconds)
done (took 31.181434269 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.217796385 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.218443662 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.215901518 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.218049978 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.215704238 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.215382214 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.21951954 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.219000812 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.216152613 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.216513525 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.219511456 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.219749459 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219082488 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217151765 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21799376 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219613292 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.216723618 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217416979 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.219747151 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217429376 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.219442058 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221491545 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.218215686 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.216937455 seconds)
  done (took 30.369772046 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.219477303 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.219541488 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.221161165 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.220855781 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.217631193 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.220768465 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.219542435 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.218211747 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.220461572 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.220993802 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217361656 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.217603426 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.221894374 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.219059278 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220889552 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.220292709 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.221200213 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21817612 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22018148 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.219345271 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.220867443 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219086254 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.220246809 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220293095 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.219321445 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.219143435 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.221107483 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.219827648 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.221296729 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.218809575 seconds)
  done (took 37.733096045 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.226991401 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.229034122 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.221454005 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.22210289 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.222849735 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.221579536 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.22228003 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.221842352 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.222272976 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.221893082 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.222354966 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.222687285 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.222661744 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.222610019 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.223241882 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.221757103 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.22163283 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.221774873 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.223524254 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.222693403 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.222867281 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.223322888 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.222729785 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.223211369 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.222726359 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.22428654 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.222871234 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.224112554 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.222808494 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.223341196 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.224054897 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.223608875 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.222308221 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.224224077 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.224252299 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.223441201 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.229090001 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.230961033 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.224616052 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.224504887 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.224920859 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.224788555 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.224534898 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.223841485 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.224181937 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.224410119 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.224070486 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.224661871 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.224890191 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.224533709 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.224193194 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.225601868 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.225269895 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.225959901 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.22517683 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.226536557 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.225558864 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.225328805 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.225814574 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.224374629 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.225108617 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.224164881 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.224728022 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.225736667 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.225152193 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.225518617 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.226344703 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.225126427 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.224968959 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.225883276 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.225873975 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.225339055 seconds)
  done (took 89.284724454 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.225709918 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.222706615 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.223427082 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.223292039 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223714947 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.226947633 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.223087557 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225967915 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225171321 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.226108627 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227658298 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.224831789 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224190721 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.227840316 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227631846 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.224384373 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.227577002 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.223961608 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.22720799 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.227954168 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228332467 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.22487873 seconds)
  done (took 28.105459799 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227359774 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.229010033 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.225588444 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.228370221 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.223709497 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.228022463 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.228921813 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.229318657 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228264422 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.225473448 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223678822 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228210817 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.225309537 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224584335 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226239696 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.226203316 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228158913 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.22774745 seconds)
  done (took 23.228691487 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.227727993 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.22661625 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.231155295 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.226042396 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.225515311 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.230381121 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.226527975 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.229017727 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.228930629 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.226873016 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.231412853 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229876882 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.229066921 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228476342 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229768591 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.227530308 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.229388561 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228398847 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230863207 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.228307193 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.228845326 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.230907944 seconds)
  done (took 28.177986968 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230791977 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.230402592 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.226901861 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.227726748 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.226983547 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.230031122 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.230165513 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.227879822 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.232148876 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.231299317 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22924985 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.231674434 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.229804677 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.229076857 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.230088432 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227885534 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.230821789 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.229057158 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.23075294 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.228526689 seconds)
  done (took 25.738611473 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.231512369 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.231830761 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.232970701 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.232370251 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.232549467 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.232029055 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.231520266 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.231740338 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.233487489 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.232776991 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.232103873 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.232969381 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.231945194 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.233031031 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.232809308 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.232502453 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.233362168 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.23225911 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.232423682 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.233103902 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.233323563 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.234104325 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.233327339 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.232803086 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.232559306 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.232265488 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.232741776 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.233205059 seconds)
  done (took 35.662202586 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.23320223 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.232826396 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.229865212 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.23066197 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.23157272 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.231192916 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.231519763 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.231300226 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.233188112 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.230947202 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.234795045 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.233633586 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.233584194 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.233222003 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.23378823 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.235438361 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234663992 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.231607857 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231893687 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231367912 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.234536343 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233581746 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.234798419 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.232178581 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233005028 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.235022162 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232660596 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.233264661 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234855636 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.232316493 seconds)
  done (took 38.136961239 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.25395633 seconds)
    (2/2) benchmarking "in"...
    done (took 1.253733671 seconds)
  done (took 3.659384189 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.233892528 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.235462783 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.235502359 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.232597627 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.232657547 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.23466599 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.236223143 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233923549 seconds)
  done (took 11.026578426 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.23598362 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.236011905 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.237066407 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.236122492 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.237051067 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.235921941 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242152222 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.256374547 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.237176951 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.237108885 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.243041086 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.242830032 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.239391767 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.236603558 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.236244787 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.238892431 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.236840389 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.237269636 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.238055974 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.237576849 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.236632501 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.238849859 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.239497954 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.234977564 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.238856849 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.248674242 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.260573524 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.236975744 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.237685521 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.240356014 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.237702337 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.235385217 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.237621553 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.237778405 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.238335259 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.238117399 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.246185855 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.258219235 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.245079185 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.258496267 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.240291669 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.235840843 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.239586884 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.240650884 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.239874807 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.238537875 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.239634117 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.236351114 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.238971942 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.24161144 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.245254055 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.237745339 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.236767891 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242016385 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.239846679 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24555997 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.257589449 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.242034279 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.249000637 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.25008834 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.271697602 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.264797162 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.241201039 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.239631714 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.250688576 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.264347779 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246912461 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.258277094 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.238621435 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.241116862 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.2484153 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.273281892 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.266035611 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.241996821 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.241433285 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.241173933 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241873997 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.240828222 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24865217 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.263736933 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.241658326 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.241667088 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.251896927 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.264427949 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.241090064 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.241300431 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.241441272 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.241496298 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.242993717 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257888843 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.26155551 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.241524602 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.241160757 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.242211557 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.242118305 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.241833492 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.240921369 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242104113 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.239881356 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.243166722 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.241839489 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.245158375 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.251157644 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.243499901 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.242972938 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.249553787 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.264865124 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.242524457 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.248772235 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.242664425 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.242961531 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.245275282 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.249056733 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.241371107 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.245784109 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.252151813 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.243477178 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.244556658 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.243592489 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.245053036 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.254000404 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.270350136 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.244665042 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.243474494 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.248974021 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.255884509 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.245160659 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.246177432 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.244213149 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.243141308 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.242511505 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.245060589 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.244838821 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.244380116 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.244511861 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.246044063 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.241872991 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.244673871 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.244762063 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.246252622 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.247393847 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.2462309 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.246502041 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.247837396 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.246464755 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.247323987 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.251403694 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.265189218 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.248225598 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.245973193 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.243821511 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.246818994 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.245965529 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.246793356 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.246115824 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.247561322 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.247531897 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.246130699 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.247751001 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.249152507 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247380001 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.247115852 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.2525237 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.247663956 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.251874522 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.246250779 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.244698939 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.247587984 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.247656123 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.247018038 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.248488947 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.24674353 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.251453939 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.255089054 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.247162454 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.247576762 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.249759306 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.248339859 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.24874627 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247319614 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.250573434 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.256357165 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.246696515 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.255690835 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.268742358 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249668069 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.249586576 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.249123325 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.24832161 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24797687 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.251188865 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.256076855 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.260124467 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.27569237 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.251143424 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.254442615 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.250922226 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.255485069 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.253760275 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.249488384 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.249023319 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.249780426 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250225362 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.250272291 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.253562132 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.251412905 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.24940425 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.251803894 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.251148016 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.249436098 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252124158 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.252361157 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.25122119 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.249956938 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.251049269 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251096362 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.252896216 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.248825281 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.250971101 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.251021086 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.251641908 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.251391524 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.258734017 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.249416716 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.251781779 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252287858 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.252507731 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.251077252 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.251800364 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.252605219 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.252007305 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258056043 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.270845504 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.252627145 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259081304 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.271904069 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.253164789 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.254905416 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.253035317 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.249598607 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.255502301 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.261690116 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.252685693 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.253138587 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.253652493 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252364452 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253846574 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.259394129 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.271491024 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.253290672 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.25436708 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.255130407 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.251297756 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.25500904 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.255248056 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.253881138 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.254822456 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254191989 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.254555188 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.255424491 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.253491981 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.253849888 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.252849053 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25664987 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.261811908 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.260109824 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.253720188 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.257275438 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.255493673 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.258237067 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.254373419 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.255090052 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.255120929 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266530571 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.280286532 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.261716026 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.276607501 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.257235985 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.260509785 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.27761944 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.258562454 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256292082 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.256442793 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.257068967 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.255487349 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.254089008 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258047288 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.256290315 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.257363072 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.25797727 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.260908067 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.257758253 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.256003024 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.256334431 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.258845474 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.259064983 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.255662195 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.257096135 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.259972598 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259947516 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.257569142 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.257462867 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.263620968 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.279019136 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.258383564 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.258615941 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.258328197 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.257540931 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.259799366 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.25857346 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.259747325 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.265238419 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.260831772 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.264681723 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.259878124 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.267368921 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.257504277 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.262681894 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.265684389 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.256357632 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.256364531 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.259166163 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.258988615 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.265356299 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.279282488 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.26035942 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.262321048 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.257375143 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.259064309 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.258692647 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.258091937 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.259727899 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.258789374 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.267260498 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.279048924 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.262769105 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261110331 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.257566164 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.258740964 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.261014672 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.258549302 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.263233281 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.258895712 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.261512823 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.259860401 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.259762379 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.261205241 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.260508402 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.260816317 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.255582608 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.260424543 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.265330159 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.281975157 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.264357614 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.261329384 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.267405511 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.279572552 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265926901 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.279381336 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.261195772 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.26010341 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.259955134 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.261617682 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.260592076 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.262355553 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.259851329 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.261188753 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.264438538 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.260779269 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.261664236 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.261267279 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.26150238 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.259663332 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.271637104 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.284162339 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.261768748 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.265402691 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.258402324 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.263195418 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.266567361 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.262368175 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.259942986 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.264690384 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.272266418 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.270361284 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.261398831 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.263287631 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.264033963 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262429182 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.263354793 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.26243207 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.264083792 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.262535766 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.263019934 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.264263157 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.264886219 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.263783555 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.263451794 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.264242312 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.264604134 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.274171702 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.283497194 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.263912675 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262954645 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.264245879 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.262876856 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.263705264 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.263085419 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264404997 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265321258 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.265926145 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271821749 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.271069848 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.266347659 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.264030882 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.265366946 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.264152678 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.264443061 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.264708529 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.264582016 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.264345516 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.265195791 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.264493705 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.265488533 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.264153498 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.265281808 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.264090288 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265124889 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270589289 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.272965582 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.266428195 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.263100223 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.26544609 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.265200219 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.26409264 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.266096307 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.272390759 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.288380086 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.276707794 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.274438561 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.269808834 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.266991517 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.269258783 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.274466361 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.264087593 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.265575695 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.265528224 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.266266388 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.265863917 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.270326569 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266009549 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.27404965 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.286351378 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.266593194 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.274037003 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.287576309 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.266574423 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.267890313 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.272003655 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.267092549 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.264605303 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.26645909 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.266940628 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.273261038 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.287917567 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.26842668 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269036606 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.265555893 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.269538787 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.271907586 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.269493219 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.269005738 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.266094734 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.26913027 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.269137367 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.270128147 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.266004325 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.268635207 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.268791413 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.273286942 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.275617733 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.267441197 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269488333 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.269611326 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.270413236 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.269962342 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.269797054 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.267625903 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.266477222 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.269797984 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.270113963 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.26870767 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.272560255 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.268034367 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.272249099 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.271934085 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269347627 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27184791 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.278541674 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.276518686 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.267282849 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.268797396 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.270125926 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.272879496 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.269730567 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.270026949 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.270351345 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.271768067 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.269533417 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.270194084 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.270093099 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.273693289 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.286039352 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.289890562 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.271696781 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.271615017 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274287599 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.271464253 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.268347918 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.271718096 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.273589671 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.275481435 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.279218811 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.271590752 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.278236884 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.293080656 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.273092902 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.276259529 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.274263828 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.279066819 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.274852184 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.271037826 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.271316292 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.276790761 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.287913566 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.271922433 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.282874628 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.303053491 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.292667482 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.273387081 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.273961927 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.272851736 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.274152818 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.274881355 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.274025363 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.274935821 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274090284 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.273471623 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.275483307 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.27958152 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.27624623 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.276027633 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.274721781 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.273843291 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.27583518 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.271299172 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.274904659 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.275255973 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.276050847 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.274545616 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.275166019 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.276164932 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.287573597 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.306494046 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.277264227 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.276349551 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.272920458 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.279288114 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.278369332 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.285466105 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.282887514 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.274474424 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.275597649 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.276625505 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.276400134 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.274558296 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.276654829 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.277101515 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.274637945 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.27334264 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.287436979 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.303186077 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.281265441 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.276240596 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.277177717 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.276260966 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27685088 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.277098948 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.277507805 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.277416092 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.278842597 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.281175315 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.277020645 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.277038525 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.280871789 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.285811643 seconds)
  done (took 751.834323954 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.275787296 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276044586 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.275948833 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.275106199 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274916894 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275530421 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275242415 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.274367289 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.273950639 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.275794933 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.274325 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275519159 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.276218603 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.275260888 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27559181 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.27586633 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275670639 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.276709836 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.275183806 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275658062 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.277256847 seconds)
  done (took 27.976775102 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.278788931 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.276794327 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.275665853 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.280335508 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.277911736 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.280395244 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.277913776 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279103644 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.278860076 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277480607 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.279036097 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279890356 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.277693699 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.278300723 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276669396 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.279379635 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.280827401 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.27808659 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.279693526 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.27804335 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.280951046 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.278739373 seconds)
  done (took 29.322674767 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.279974449 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.281031985 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.280818625 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.278684589 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.28220015 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.278936809 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.280767666 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.279831978 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.281160386 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.27855055 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.279538246 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.282419684 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.287845167 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.286866128 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.282147001 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.281945099 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.426527335 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.280936815 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.281586052 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.2814944 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.278875043 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.285834392 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.299711844 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.278002796 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.279964683 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.281243719 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.280911805 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.281692553 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.281221638 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.282001858 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.284894099 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.281106064 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.280877168 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.283537369 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.281575314 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.284057453 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.28762442 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.282150906 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.27905484 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.282793749 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.29273914 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.304744204 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.283397998 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.288129612 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.303721352 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.283508668 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.286885999 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.291261393 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.280759317 seconds)
  done (took 64.240389266 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.283417308 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.284382127 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.281592526 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.282445061 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.283612643 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.283542592 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.284649249 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.283955393 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.281317398 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.280581373 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.284624107 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.282924449 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.281253136 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.284195807 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.284821182 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.280799764 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.28204629 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.28238526 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.282079416 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.281856737 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.282773725 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.28544548 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.285021054 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.283085562 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.284761425 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.28336917 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.28258547 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.28603669 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.282827523 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.281899742 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.286163858 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.284593826 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.286014745 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.283079121 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.282196792 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.286435323 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.285669285 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.282897648 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.285649434 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.283263203 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.28660777 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.286863864 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.287065687 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.286403335 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.283124141 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.283148572 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.284627712 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.284332533 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.284648915 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.287325038 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.286511629 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.284372216 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.287160556 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.284344613 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.287946124 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.286754974 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.28525306 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.283790891 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.285929644 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.28372921 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.284258402 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.286273214 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.284503662 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.287482159 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.286886704 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.284563978 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.284178451 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.286964258 seconds)
  done (took 88.533074662 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.287340688 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.28769673 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288233143 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286738766 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.287192273 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.288601187 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.286043902 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.285712505 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.285632383 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.286799352 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.286523174 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.28763385 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.287000432 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.28834233 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.286042535 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.287109407 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.286567784 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.287076135 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.287347661 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286986361 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.287110895 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.286834379 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.283649391 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.283099927 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.283504514 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.283797801 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.284287615 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.284782528 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.283391537 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.283908385 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.284240249 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.284524678 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.283316145 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.283595045 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.284289886 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.284358735 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.285858734 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.304453152 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.283896266 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.28351311 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.283898376 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.283828518 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.284143343 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.282850834 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.285037091 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.28443132 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.283311863 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.283380828 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.284204769 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.284764568 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.284299991 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.282906049 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2836786 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.283141817 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.283444602 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.283297244 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.28411588 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.283251618 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.283517084 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.283896316 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.284650654 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.283008494 seconds)
  done (took 80.890368505 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.283611 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.283460144 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.282534323 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.281004719 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.282574928 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.281706097 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.282836722 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.283549152 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.283515939 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.283514308 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283844 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.280993744 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2814175 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284599962 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.280936387 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281455056 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.281507505 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.280948917 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.284483638 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.280951266 seconds)
  done (took 26.846119106 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.281693521 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.283865068 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.281420273 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.282445614 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.284953397 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.282481055 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.283862101 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285064641 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28348668 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284689159 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.285756132 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.285755302 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282855532 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.283359403 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.285639196 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.283005271 seconds)
  done (took 21.736888378 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.282844117 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.284546561 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.285165868 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.284981866 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.281553982 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.283618715 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.28611318 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.282818507 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.28273137 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.285583556 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.28586295 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.285882718 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.286484215 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.284966958 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.283478288 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.285577825 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.283784989 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.28440674 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.286604986 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.286465174 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.285521194 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.285793465 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.288879614 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.28638666 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.284252446 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.284959133 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.283883232 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.283917231 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.284446794 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.286599778 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.284085288 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.284150557 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.284704469 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.284428176 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.286880916 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.284103231 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.288008046 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.287320739 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.287652899 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.287741875 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.286725596 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.285527939 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.28795346 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.287865952 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.285091977 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.28715844 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.285118652 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.286024775 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.285709199 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.285688605 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.288345772 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.288331973 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.288351998 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.289608543 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.288595422 seconds)
  done (took 71.912399655 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.28912725 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.288727111 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.286938486 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.289294144 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.288794641 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.286171683 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.289970244 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.288049535 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.287566046 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.288926827 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.288371468 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.290315876 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.287224169 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.290102079 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.28901524 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.290123398 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.286535422 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.287747299 seconds)
  done (took 24.393671439 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.288016527 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.287974178 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.289518337 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.288391828 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.288177651 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.291586956 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.289128671 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.290219679 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291392428 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.287545424 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287747072 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.290304767 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290413812 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.291034547 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.288773704 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288085646 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.291328588 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.290908982 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.2893049 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.288689905 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.291711332 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.291320277 seconds)
  done (took 29.573501452 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.290313412 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.289976496 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.28964139 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.30615025 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.310175812 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.313756863 seconds)
  done (took 9.003028139 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297521218 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291978389 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.289618742 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292228407 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292238862 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289058969 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289896991 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290381416 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292149614 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290449487 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290819694 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291679158 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292246716 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289493126 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292210915 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293480863 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289472942 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289839801 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291598277 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292262626 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289820739 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292659072 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290489625 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290638148 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289877212 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29122782 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293350085 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290152808 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290436892 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29351785 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292726179 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290526017 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29391008 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291845799 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294388418 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293759283 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290918427 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294247179 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293608023 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291510259 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.294132417 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294267923 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29419046 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292170885 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293892869 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291862161 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29216669 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291253913 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292327784 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294747754 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293797155 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291650254 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294255226 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294781559 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29485969 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295113407 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292912498 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292089673 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294634868 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292343262 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29203627 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294395753 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292441394 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292229953 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294710659 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291510284 seconds)
  done (took 86.523394502 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292530072 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.291878206 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292803047 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29242644 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290969945 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29248875 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291148425 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291576382 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291388281 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292439843 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29457406 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29187588 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291934111 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291348021 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291474171 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291289798 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29188111 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29205215 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292815478 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295276253 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29253326 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290897751 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291662871 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291804398 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291444948 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293641118 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291001466 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292617467 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292649439 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292105606 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291807671 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292464339 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291854362 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.291825895 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292220593 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292409248 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293069873 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29274292 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292160634 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294796117 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292168785 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294538356 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292492937 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292960304 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292765821 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292653366 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292408327 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293426936 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292375138 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293832603 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29331898 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294196539 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293915706 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293206021 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293276689 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294204627 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293611897 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293655426 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294325332 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297931137 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293205998 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293774852 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296138562 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29476077 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294115673 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294333756 seconds)
  done (took 86.535573117 seconds)
done (took 1751.584366332 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.458411659 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.414188472 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.294603944 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.296588267 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.295592212 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.28918699 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.318054707 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.295585817 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.295267665 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.294569672 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.296428668 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.48157036 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.29055718 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.294787106 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.295531942 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.388647832 seconds)
  done (took 42.509306776 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.324239743 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.30390192 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.413402657 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.317919867 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.324574676 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.488515646 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.352463581 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.302095541 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.473157383 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.343396605 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.880411723 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.326067817 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.302000636 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.418029871 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.318877121 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.49045352 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.553016393 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.876418905 seconds)
  done (took 30.016886941 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.753195072 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.313435196 seconds)
  done (took 9.273688084 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.317440227 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.299840737 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.299411603 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.298006724 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.290506975 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.291440891 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.295804511 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.288596226 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.974822506 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.428838555 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.300792356 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.308496024 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.317454402 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.298281191 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.295132471 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.335486269 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.519922673 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.29683526 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.294965273 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.302818063 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.297149239 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.380014206 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.337479155 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.294176677 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.421873657 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.964049368 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.29970217 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.303233543 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.448241463 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.297801352 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.298153522 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.297794958 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.298752345 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.192096009 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.836014888 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.306206548 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.340000121 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.306775476 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.294628403 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.442452726 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.29927054 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.304543086 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.290086157 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.823170097 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.430726391 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.414055666 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.543198102 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.317525079 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.299951512 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.359871844 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.299318325 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.299159385 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.343138552 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.071663435 seconds)
  done (took 110.017703455 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.350729474 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.681879539 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.45881957 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.310729675 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.994590737 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.03448996 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.30802985 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.577208872 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.364333979 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.293489099 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.584915908 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.794332917 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.316617921 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.299760639 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.640879084 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.333951459 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.289231608 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.064094532 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.307608305 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.294395374 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.785162388 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.29132157 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.305876507 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.446977965 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.331345605 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.729950946 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.634930539 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.760065066 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.303413169 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.287498404 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.747006366 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.305321088 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.334935711 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.291382695 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.547677391 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.630007886 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.622682663 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.312026142 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.302966395 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.290347241 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.315239513 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.720188839 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.625953195 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.303500731 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.301368837 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.738046225 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.302554223 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.29143755 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.285960828 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.48645856 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.222155165 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.286729016 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.562148216 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.286552455 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.571359817 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.288773095 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.368981551 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.750078629 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.302518275 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.415720998 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.353850584 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.293610823 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.296039853 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.291063657 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.287776936 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.611604927 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.370009621 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.289020098 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.608586885 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.74012742 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.300748034 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.784246811 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.172894564 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.30292458 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.331337577 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.288530927 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.87261835 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.752183267 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.322249677 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.287347025 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.596723039 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.302078861 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.555203505 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.301393827 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.287036813 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.798433759 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.289289184 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.336952859 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.300037464 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.286359774 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.957394765 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.286400123 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.542965011 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.32984767 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.288092978 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.285731982 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.326911095 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.287355022 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.301612198 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.292769535 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.785848489 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.308832198 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.404394501 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.30296428 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.299029048 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.287654374 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.291572225 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.286786835 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.501200975 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.761668416 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.311144274 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.289961766 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.287872089 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.293425615 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.43067008 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.298083379 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.569932427 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.304801234 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.2875714 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.290999806 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.036565258 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.34464932 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.287998517 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.289481023 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.158546605 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.49219347 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.318112475 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.287544286 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.288876981 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.306136342 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.431607085 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.304808494 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.326429916 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.294567585 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.959289233 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.339780561 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.289557711 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.906544415 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.289565855 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.123679507 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.313383374 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.289744046 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.573291055 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.544860258 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.920772859 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.29167289 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.304239921 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.950745743 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.318208257 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.425975079 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.30829474 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.325618523 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.485512214 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.873516586 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.291297546 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.888328998 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.290963717 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.501019131 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.291127067 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.588406419 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.754603066 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.306197635 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.297898205 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.960721925 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.010087947 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.906903791 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.295736031 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.557075951 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.246012898 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.774048534 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.290541139 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.290948659 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.775314435 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.294052585 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.29348989 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.28999752 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.290993778 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.445908646 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.463659116 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.899045709 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.294260124 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.717184097 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.322723012 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.291391763 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.295589348 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.294310216 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.642773277 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.331285264 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.298462215 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.296415503 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.292263461 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.29362956 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.739462399 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.197722019 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.292914707 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.441627724 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.887701921 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.307549443 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.292816035 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.908519242 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.760106191 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.779544884 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.37607395 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.575997928 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.316423664 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.329098237 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.924230395 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.379924279 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.741161335 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.310849625 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.294339646 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.859328008 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.309784687 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.350582083 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.29477448 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.293101632 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.799176808 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.308720819 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.298433224 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.440768752 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.31072663 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.553245211 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.295014449 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.306427441 seconds)
  done (took 1101.251571932 seconds)
done (took 1294.279008893 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.293488567 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.299389725 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.281992664 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.306547545 seconds)
  done (took 26.393295277 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.304359487 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.300239549 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.302341607 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.300410693 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.303821481 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.300519072 seconds)
  done (took 9.022404717 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.369815317 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.302015925 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.301041668 seconds)
  done (took 19.184999854 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.491861939 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.514574492 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.613540388 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.323063416 seconds)
  done (took 10.15471706 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.301942662 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.302201675 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.302623744 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.304400612 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.30443035 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.306958293 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.304447841 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.304743458 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.306486903 seconds)
  done (took 12.949592005 seconds)
done (took 78.918467362 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.275766597 seconds)
    (2/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.423471067 seconds)
    (3/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.296162297 seconds)
    (4/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.749567465 seconds)
    (5/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.539719665 seconds)
    (6/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.545325994 seconds)
    (7/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.353438921 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.687025243 seconds)
    (9/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.342547997 seconds)
    (10/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.039702293 seconds)
    (11/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.308065067 seconds)
    (12/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.390974114 seconds)
    (13/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.028936858 seconds)
    (14/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.847699812 seconds)
    (15/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.381893139 seconds)
    (16/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.289251912 seconds)
    (17/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.631898001 seconds)
    (18/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.568572672 seconds)
    (19/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.400789196 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.114480656 seconds)
    (21/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.644337013 seconds)
    (22/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.06518157 seconds)
    (23/286) benchmarking ("sort", Int64, true)...
    done (took 6.297196708 seconds)
    (24/286) benchmarking ("sort", BigInt, false)...
    done (took 6.296585225 seconds)
    (25/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.770180519 seconds)
    (26/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.330407463 seconds)
    (27/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.380387502 seconds)
    (28/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.427107853 seconds)
    (29/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.327444102 seconds)
    (30/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.280133905 seconds)
    (31/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.283639949 seconds)
    (32/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.703970195 seconds)
    (33/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.418765401 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.699994176 seconds)
    (35/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.778708692 seconds)
    (36/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.284696438 seconds)
    (37/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.285159079 seconds)
    (38/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.348212209 seconds)
    (39/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.314679657 seconds)
    (40/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.306330958 seconds)
    (41/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.416143378 seconds)
    (42/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.538164958 seconds)
    (43/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.580480072 seconds)
    (44/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.265387315 seconds)
    (45/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.278106506 seconds)
    (46/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.638725058 seconds)
    (47/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.678290213 seconds)
    (48/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.312901915 seconds)
    (49/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.094672787 seconds)
    (50/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.908212111 seconds)
    (51/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.499217419 seconds)
    (52/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.373438493 seconds)
    (53/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.437581709 seconds)
    (54/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.306971762 seconds)
    (55/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.300088308 seconds)
    (56/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.413391154 seconds)
    (57/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.279953477 seconds)
    (58/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.340922522 seconds)
    (59/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.409912983 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.170260726 seconds)
    (61/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.220677401 seconds)
    (62/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.37061796 seconds)
    (63/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.291290493 seconds)
    (64/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.291680789 seconds)
    (65/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.300988872 seconds)
    (66/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.541235305 seconds)
    (67/286) benchmarking ("sort", Int8, false)...
    done (took 4.353141605 seconds)
    (68/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.493284274 seconds)
    (69/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.292826055 seconds)
    (70/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.12030381 seconds)
    (71/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.742298204 seconds)
    (72/286) benchmarking ("sort", Int64, false)...
    done (took 5.46265882 seconds)
    (73/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.650570272 seconds)
    (74/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.552316763 seconds)
    (75/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.013141741 seconds)
    (76/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.327498942 seconds)
    (77/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.882809267 seconds)
    (78/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.3015142 seconds)
    (79/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.395977166 seconds)
    (80/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.318478436 seconds)
    (81/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.310457068 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.650332919 seconds)
    (83/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.168139173 seconds)
    (84/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.327652199 seconds)
    (85/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.994267129 seconds)
    (86/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.318987417 seconds)
    (87/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.139394808 seconds)
    (88/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.345601099 seconds)
    (89/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.397936114 seconds)
    (90/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.127697037 seconds)
    (91/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.342900759 seconds)
    (92/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.010064993 seconds)
    (93/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.281875732 seconds)
    (94/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.401354452 seconds)
    (95/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.281066132 seconds)
    (96/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.451226349 seconds)
    (97/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.513489514 seconds)
    (98/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.88485312 seconds)
    (99/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.795438297 seconds)
    (100/286) benchmarking ("sort", Float32, false)...
    done (took 5.300503463 seconds)
    (101/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.788441066 seconds)
    (102/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.317473801 seconds)
    (103/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.327351095 seconds)
    (104/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.281684303 seconds)
    (105/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.285063568 seconds)
    (106/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.9509127 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.201156476 seconds)
    (108/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.41224599 seconds)
    (109/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.763310286 seconds)
    (110/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.36685165 seconds)
    (111/286) benchmarking ("sort", Bool, false)...
    done (took 1.812313499 seconds)
    (112/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.347766396 seconds)
    (113/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.33467934 seconds)
    (114/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.699026616 seconds)
    (115/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.559209294 seconds)
    (116/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.388488376 seconds)
    (117/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.349494574 seconds)
    (118/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.322131603 seconds)
    (119/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.333139963 seconds)
    (120/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.013593578 seconds)
    (121/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.564328847 seconds)
    (122/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.811167595 seconds)
    (123/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.491690393 seconds)
    (124/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.432549806 seconds)
    (125/286) benchmarking ("sort", Float32, true)...
    done (took 6.304872201 seconds)
    (126/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.331679374 seconds)
    (127/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.284328476 seconds)
    (128/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.295482422 seconds)
    (129/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.284342194 seconds)
    (130/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.286937767 seconds)
    (131/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.567041756 seconds)
    (132/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.291538687 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.017606147 seconds)
    (134/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.332046178 seconds)
    (135/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.776923516 seconds)
    (136/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.177780877 seconds)
    (137/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.310255943 seconds)
    (138/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.285386771 seconds)
    (139/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.285017103 seconds)
    (140/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.347271427 seconds)
    (141/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.912438996 seconds)
    (142/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.286714478 seconds)
    (143/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.306279735 seconds)
    (144/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.488771747 seconds)
    (145/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.35043094 seconds)
    (146/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.998202591 seconds)
    (147/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.670774996 seconds)
    (148/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.73105996 seconds)
    (149/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.104521296 seconds)
    (150/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.388052901 seconds)
    (151/286) benchmarking ("sort", Float64, false)...
    done (took 5.577174987 seconds)
    (152/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.73381257 seconds)
    (153/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.008388279 seconds)
    (154/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.321418215 seconds)
    (155/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.367614303 seconds)
    (156/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.275913466 seconds)
    (157/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.096877796 seconds)
    (158/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.305293791 seconds)
    (159/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.642648178 seconds)
    (160/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.28675575 seconds)
    (161/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.306680994 seconds)
    (162/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.289444541 seconds)
    (163/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.923890888 seconds)
    (164/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.336502412 seconds)
    (165/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.072717896 seconds)
    (166/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.414821819 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.708968206 seconds)
    (168/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.032655232 seconds)
    (169/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.917579849 seconds)
    (170/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.258413532 seconds)
    (171/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.84778747 seconds)
    (172/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.341203019 seconds)
    (173/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.389380897 seconds)
    (174/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.862396264 seconds)
    (175/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.315674616 seconds)
    (176/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.560754733 seconds)
    (177/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.061171396 seconds)
    (178/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.762966819 seconds)
    (179/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.771258832 seconds)
    (180/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.333045408 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.122385877 seconds)
    (182/286) benchmarking ("sort", Int8, true)...
    done (took 6.308049816 seconds)
    (183/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.409976146 seconds)
    (184/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.613459994 seconds)
    (185/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.35549233 seconds)
    (186/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.185547164 seconds)
    (187/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.307412178 seconds)
    (188/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.679834699 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.934436223 seconds)
    (190/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.307451653 seconds)
    (191/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.630870463 seconds)
    (192/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.463648267 seconds)
    (193/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.485751874 seconds)
    (194/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.296519614 seconds)
    (195/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.306476415 seconds)
    (196/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.32837551 seconds)
    (197/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.114724812 seconds)
    (198/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.573295094 seconds)
    (199/286) benchmarking ("sort", Bool, true)...
    done (took 5.394847567 seconds)
    (200/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.381046256 seconds)
    (201/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.288435518 seconds)
    (202/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.388050869 seconds)
    (203/286) benchmarking ("sort", Float64, true)...
    done (took 6.308962284 seconds)
    (204/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.411147639 seconds)
    (205/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.645933538 seconds)
    (206/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.415807183 seconds)
    (207/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.384052184 seconds)
    (208/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.034371643 seconds)
    (209/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.372467463 seconds)
    (210/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.373323172 seconds)
    (211/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.487216859 seconds)
    (212/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.509848976 seconds)
    (213/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.527289818 seconds)
    (214/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.409450922 seconds)
    (215/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.934612167 seconds)
    (216/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.28922156 seconds)
    (217/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.90542872 seconds)
    (218/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.395962537 seconds)
    (219/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.289976289 seconds)
    (220/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.347618472 seconds)
    (221/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.290144873 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.725901588 seconds)
    (223/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.364189439 seconds)
    (224/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.294843282 seconds)
    (225/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.291407279 seconds)
    (226/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.576344421 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.89226983 seconds)
    (228/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.525689351 seconds)
    (229/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.291056625 seconds)
    (230/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.311255394 seconds)
    (231/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.645980064 seconds)
    (232/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.417566896 seconds)
    (233/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.630045808 seconds)
    (234/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.320543709 seconds)
    (235/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.338748918 seconds)
    (236/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.328621104 seconds)
    (237/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.404192962 seconds)
    (238/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.313911125 seconds)
    (239/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.416219548 seconds)
    (240/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.358152647 seconds)
    (241/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.311012155 seconds)
    (242/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.520178187 seconds)
    (243/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.292546145 seconds)
    (244/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.328151811 seconds)
    (245/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.100533571 seconds)
    (246/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.277113531 seconds)
    (247/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.530594374 seconds)
    (248/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.31701584 seconds)
    (249/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.323087909 seconds)
    (250/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.665105837 seconds)
    (251/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.354056068 seconds)
    (252/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.655710926 seconds)
    (253/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.091835753 seconds)
    (254/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.514535776 seconds)
    (255/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.425170898 seconds)
    (256/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.695451528 seconds)
    (257/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.334617085 seconds)
    (258/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.342014081 seconds)
    (259/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.300984327 seconds)
    (260/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.675276922 seconds)
    (261/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.408377507 seconds)
    (262/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.328008069 seconds)
    (263/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.292375511 seconds)
    (264/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.332845627 seconds)
    (265/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.398225327 seconds)
    (266/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.337972991 seconds)
    (267/286) benchmarking ("sort", BigInt, true)...
    done (took 6.313272981 seconds)
    (268/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.293263001 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.395522663 seconds)
    (270/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.339314309 seconds)
    (271/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.396365632 seconds)
    (272/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.425082251 seconds)
    (273/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.065494958 seconds)
    (274/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.16419454 seconds)
    (275/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.363402043 seconds)
    (276/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.493360476 seconds)
    (277/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.294085917 seconds)
    (278/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.356012017 seconds)
    (279/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.508788298 seconds)
    (280/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.438197669 seconds)
    (281/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.293673965 seconds)
    (282/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.397893182 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.350299082 seconds)
    (284/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.187863459 seconds)
    (285/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.324059305 seconds)
    (286/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.502199565 seconds)
  done (took 924.308266097 seconds)
done (took 925.523170956 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.347205014 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.342099926 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.325313612 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.34730184 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.43585494 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.350737329 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.335479598 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.326854502 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.372659517 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.374880009 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.324635995 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.349124543 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.326857953 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.325752247 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.326597485 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.343023685 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.319455269 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.326896589 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.342416268 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.335383187 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.34217 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.324729601 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.375708499 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.350729119 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.330645461 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.330042748 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.330712454 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.34557557 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.439508638 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.328315135 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.329709004 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.337593642 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.319323561 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.325460928 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.322534523 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.34673478 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.338305324 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.33673236 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.33127577 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.359193698 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.697505459 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.34188807 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.328896004 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.328205414 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.328273299 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.331760871 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.329257937 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.334883601 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.342253172 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.343863932 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.683435246 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.357190596 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.33033932 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.329570616 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.339256595 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.328629155 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.332646701 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.345520565 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.348131154 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.347062517 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.304810099 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.333405455 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.331103007 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.346419783 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.337133656 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.720857695 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.340395305 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.333868749 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.696674254 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.350882614 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.722853554 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.353798859 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.332275561 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.343841274 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.361119225 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.317688985 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.324721614 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.329643866 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.337336605 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.329057199 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.340303379 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.343797115 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.335905537 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.331871742 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.345950354 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.354644683 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.340860587 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.331922368 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.340352246 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.349545724 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.337574195 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.341654588 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.334677968 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.326574202 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.340812399 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.33454014 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.334207022 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.334079626 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.336256238 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.343215323 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.698261839 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.368346772 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.328634365 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.328598662 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.331333993 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.345286343 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.698315486 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.347781039 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.353271431 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.380900722 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.334676026 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.309726969 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.335207934 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.350606819 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.341905795 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.336014599 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.328475146 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.31128884 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.689041645 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.363412311 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.334791204 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.331000998 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.351173302 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.335310246 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.329156712 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.325191882 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.335345948 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.348656501 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.454119662 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.345505983 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.364209158 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.331179089 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.336784685 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.359179567 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.35000776 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.36481481 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.337448276 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.350913933 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.349270568 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.330088429 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.345045177 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.345934892 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.334785858 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.340367708 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.328674535 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.359748806 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.348341933 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.348050773 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.356829656 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.455548031 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.333136876 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.314498307 seconds)
done (took 224.093546704 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.39575898 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.332247638 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.416351685 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.331609328 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.435772419 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.434007119 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.32892605 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.329940888 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.329871341 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.710431955 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.328367689 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.329512423 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.322579316 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.329952847 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.419021684 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.332177581 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.329407936 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.672895527 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.333352864 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.411926498 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.333281112 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.329747316 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.332820685 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.712260271 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.330230459 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.329658728 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.405798322 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.333213864 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.677295172 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.326849815 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.330719446 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.678670321 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.425318521 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.351515032 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.343504639 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.340477375 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.437254408 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.351474594 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.41673269 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.417174646 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.420035918 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.372915875 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.328101668 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.334373693 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.335693038 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.335602182 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.331448967 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.360407117 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.332084032 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.332157197 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.674903436 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.344567017 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.333756151 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.332484767 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.332094251 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.364998047 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.332538249 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.334616659 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.434669071 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.336121587 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.400601826 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.714830939 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.714761825 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.334956467 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.33230238 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.332779783 seconds)
  done (took 148.433737688 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.402287887 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.411529926 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.446800198 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.353495495 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.387440316 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.448823798 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.352685441 seconds)
  done (took 11.045269442 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.340834655 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.335302064 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.385520569 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.384777854 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.337567876 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.519132178 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.336728246 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.348130843 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.333742028 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.389511234 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.33787587 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.336332025 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.343351183 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.329408086 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.385640428 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.348509517 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.458749566 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.33738356 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.336720914 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.488007107 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.334747457 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.343517471 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.389639319 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.350103332 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.340037178 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.343024588 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.146257693 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.337994913 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.335134886 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.337823473 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.334741624 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.416427574 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.339044802 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.336992143 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.335378402 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.454847043 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.337481326 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.334638878 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.337260253 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.337683144 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.338055881 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.33872951 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.339052283 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.336680317 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.339139147 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.362314395 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.33832382 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.338465207 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.33935771 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.339043024 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.389614904 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.339396721 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.337069951 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.337071842 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.394297943 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.34579648 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.341972418 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.336619309 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.340539037 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.336956502 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.490867479 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.386269911 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.339964027 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.388629889 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.340083476 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.340812131 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.338831938 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.341200213 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.393877617 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.340731044 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.388113436 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.337977278 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.527603584 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.363630475 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.341763189 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.342386564 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.343637742 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.341435327 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.338156575 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.34618026 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.338162285 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.342739195 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.348122072 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.339815064 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.338767905 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.528725298 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.475657965 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.338482252 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.354512768 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.348074152 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.339126046 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.394398907 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.342267718 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.339510086 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.392828154 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.463615259 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.395359938 seconds)
  done (took 154.183465559 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.346925302 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.350637595 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.343256162 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.359516157 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.342507762 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.342313375 seconds)
  done (took 9.334027725 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.343875378 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.343021564 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.342528075 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.343168376 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.343125943 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.343851003 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.342576629 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.345200647 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.346360598 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.34298667 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.343855344 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.344456038 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.344975374 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.343832752 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.343206588 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.343957677 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.344127204 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.341756633 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.344275087 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.344804771 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.448765995 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.343515275 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.345068748 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.344900777 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.34855201 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.343628726 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.351240691 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.343130599 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.345117701 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.349376897 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.362390645 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.346957001 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.344873372 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.349988307 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.348063134 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.345673456 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.349390095 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.347445124 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.342460476 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.346081384 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.347035213 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.345033306 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.345688799 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.347425192 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.346404624 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.34941214 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.351961335 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.35522674 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.346227205 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.348661427 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.348020061 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.344942938 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.347537363 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.348015849 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.348313147 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.368672785 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.351290588 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.346939812 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.34690394 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.3482304 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.348147577 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.34911631 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.348513718 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.350430584 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.345424669 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.348321068 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.348351551 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.35154309 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.347035266 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.347369515 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.349006121 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.345280974 seconds)
  done (took 99.335104133 seconds)
done (took 423.57348863 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.628541593 seconds)
  done (took 7.882417848 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.514031577 seconds)
  done (took 7.770326212 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.258437057 seconds)
  done (took 21.51810301 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.359123566 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.458722554 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.364215444 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.34852324 seconds)
  done (took 26.785023713 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.530795536 seconds)
  done (took 7.786103251 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.352710092 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.341121145 seconds)
  done (took 13.951835625 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.404723251 seconds)
  done (took 7.660628073 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.433628228 seconds)
  done (took 7.696116997 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.344271913 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.364819989 seconds)
  done (took 13.97873395 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.338600022 seconds)
  done (took 7.594073935 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.812391976 seconds)
  done (took 12.069092887 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.351068309 seconds)
  done (took 7.608210089 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.411571227 seconds)
  done (took 7.666485405 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.085547997 seconds)
  done (took 9.341478596 seconds)
done (took 160.564999818 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.342229109 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.350144078 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.341806732 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.342042524 seconds)
  done (took 26.632444228 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.382581419 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.384133736 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.386194226 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.394269093 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.387626256 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.384979981 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.375449858 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.376841261 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.393818387 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.386300262 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.38602815 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.38485051 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.383675604 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.377063619 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.38577433 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.385234603 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.395588253 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.385625524 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.376361993 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.386903676 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.352094507 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.39492084 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.38655166 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.35099372 seconds)
  done (took 34.440938104 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.872667559 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.422464361 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.503983167 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.402662307 seconds)
  done (took 7.45929695 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.403072927 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.404247428 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.415824111 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.454942578 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.481369793 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.415203249 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.378950686 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.372448614 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.359848438 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.406440738 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.480528891 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.420839509 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.489540259 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.351329005 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.539721513 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.352017603 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.352437578 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.404356915 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.455443895 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.470494099 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.353416756 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.40464539 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.407843635 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.422877018 seconds)
  done (took 35.256271323 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.352544334 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.371543336 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.351938251 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.351116958 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.360128084 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.352601343 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.352979329 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.353714434 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.352574625 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.359460002 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.352269972 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.365321266 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.352681682 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.351830125 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.358772833 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.354503439 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.36008405 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.35278165 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.353022333 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.3586238 seconds)
  done (took 28.378481277 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.347670512 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.294812119 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.699252904 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.602740591 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.347612394 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.353565438 seconds)
  done (took 28.905411874 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.421014405 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.565768853 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.353614462 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.691999779 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.783873996 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.371096617 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.354833209 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.587129061 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.889715019 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.879399357 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.41063958 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.420428787 seconds)
  done (took 19.991618469 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.351383685 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.35665705 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.354991149 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.371760287 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.407916659 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.374362203 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.36213209 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.348492364 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.414532307 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.428488 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.375710523 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.409709461 seconds)
  done (took 37.818449363 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43287199 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.39323203 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.261023885 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.433761828 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.095690291 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.562394769 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.42849367 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.086284017 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.380284608 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625524116 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356071836 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44198916 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.599716491 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35184494 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.359161999 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.29869367 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.600222182 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816601738 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354753738 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.226971525 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383226191 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.350903068 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.313661941 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.580877381 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587860747 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.329722523 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.613474522 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.131418418 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.627861653 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.373165514 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363153408 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352555369 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62635726 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993583158 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473573525 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.555885736 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388282483 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.900295284 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.339432361 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.247531201 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.357318934 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.361390203 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36402693 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352610461 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.287578436 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352892576 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.097166518 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.384311302 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.046864015 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.353369464 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.604582494 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442131369 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.35774665 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.345145753 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.432136069 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.36639285 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.357544104 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446500055 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944866376 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.479469951 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.368122377 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.294860695 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.355733169 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.231141361 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960459358 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.377218061 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.35773029 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.358253758 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.289481252 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.235734443 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.378352643 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458388994 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.38055331 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.005497851 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016625549 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.386465569 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.291539285 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891065914 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.36595749 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.295302895 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.582943488 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.133792867 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.291570292 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.298153257 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.290543307 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.032496785 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37125355 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.887949004 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.384114859 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.086683885 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.58674338 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401322933 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379026967 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.579826734 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.235062959 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355802813 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.357141402 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38579931 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377088535 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.071499859 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31619217 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.362021103 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.605349136 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.567320363 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366257913 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.312752732 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.852588399 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391127747 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.377567967 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.364741302 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.569075342 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.934534674 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.390032081 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.503574705 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382127234 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.134414703 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106280925 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366911341 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.386551159 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.35761355 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6261718 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.090128574 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.247360805 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426071126 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.358124943 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.358065257 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.26185908 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.216044978 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.252881958 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.548114571 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384556362 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.376203874 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.359606779 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30780541 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.357230615 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359516655 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.145554915 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.582335721 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.363189563 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64150069 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295771916 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48967151 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.369945029 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.582440024 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.530354613 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.381329974 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.609779096 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372071532 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.36662159 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.379055367 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380521117 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46196296 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384393857 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.364781225 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.616040005 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.365020185 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.365135734 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.260634047 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.148427895 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370693786 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.365931636 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361580098 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939256009 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360096224 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.365568122 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.249315874 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.376157926 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428973631 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.367552051 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.566951308 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.557924015 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383299878 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.367392744 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.371123278 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.589433805 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.372396222 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.248796948 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.446224579 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.825429874 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.941426288 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.400043201 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.297902932 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.055105966 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.057007007 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364279625 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.55805583 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.362578326 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.567433752 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.400834056 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.377378028 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.928357035 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388888296 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.258331387 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.376189752 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.375950109 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.368096976 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364034419 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.520334112 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.510458662 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383956209 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.374582248 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506751469 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.378943251 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.299191652 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.880661736 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.370311961 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.365171173 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.143245579 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399300868 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.261347073 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158051495 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.63148583 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369214266 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.637148582 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.345932551 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.40315266 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.388167723 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365042823 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37375218 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.390915388 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372559326 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.37597669 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.267709894 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.811431135 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93284467 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.080939851 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897767444 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.677792992 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.395005481 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.281703059 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.087237065 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326150629 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.022813009 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597489828 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.101022534 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336137154 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.8387121 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.563959701 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.122951967 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622932703 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.601318997 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.658965878 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.39445367 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.62594265 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.58190667 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401339422 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.37342272 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.294031943 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.665483876 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.910749237 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38496615 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.465808911 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089877593 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406279309 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.15270349 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.406986395 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.047371232 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.768916444 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.937812367 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.755399124 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.367459044 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.368270606 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220554822 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.39591844 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.898214651 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979904741 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.404592356 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.83773724 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326923651 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.57498575 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.401876986 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.366009796 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.853469211 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.366373294 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.634736386 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621793225 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305202461 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.37374422 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881520457 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.240627188 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.37438486 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370198556 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085148862 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.8422799 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.649745975 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.375148844 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.549085381 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387572402 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.30519327 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307805035 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.063584078 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.376048616 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346454654 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838603176 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.379204967 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378931566 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385021301 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344695716 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.620315066 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.384833462 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.926403222 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.620635399 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386163492 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39354222 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.373367515 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371462422 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.359486696 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.253162864 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.605525816 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.376880497 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.600811074 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.308647674 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.278327214 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.431194503 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.590101625 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.274965399 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.375181395 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.616559177 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.106841632 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.387974333 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079420661 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419311447 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.373503504 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.390844081 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.380858824 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392401744 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459907078 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.579370153 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.408407322 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.383009306 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767212381 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408138147 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381587391 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.386869737 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458215299 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.533157152 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.5470076 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.153453309 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936419065 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099540144 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.9630878 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.650207337 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.382093711 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379896106 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307367641 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522852235 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.900306785 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648765135 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381702823 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.376917124 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397727757 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374293782 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393484638 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592025878 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648872167 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.245858455 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37472592 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.042158322 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.256737093 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.385289682 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.586268809 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845652105 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908813776 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.713835667 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.375958485 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.106081179 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675199032 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.46702893 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377028194 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.964947856 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.38290594 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.060782586 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.388321853 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375537492 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531272926 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.624325711 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034370066 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.412224635 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.535626969 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.149303237 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.294015912 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.635668458 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.813597159 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.585464631 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.964184385 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.072119517 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.640171303 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447061448 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.583705462 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.50694902 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525217503 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.383656694 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.265613572 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378152748 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345083042 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.087805195 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.386385163 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.952486423 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65101846 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.379935772 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.385487955 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407550578 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.387283664 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.600872093 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073773394 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.60229942 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.38874787 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.38517341 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.94978938 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.946578118 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648742614 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32244894 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.383027118 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613906927 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.637153028 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40255756 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.831426373 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.072087104 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918985305 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.351335924 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400616916 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377489271 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.079605599 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957719201 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.57109278 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877431433 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.037172569 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385472491 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662182312 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.385138018 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.390010277 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662973939 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.382404043 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.384679851 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596652975 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.967737012 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.142698597 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.388633644 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.333381082 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.316491367 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.605618136 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.456164571 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334905195 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388589966 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.781207958 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.408027143 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397240222 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391514867 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.38528431 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394255215 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.121271311 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.665873759 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.386707855 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.377904264 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.363238316 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.395646585 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.472694641 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932091914 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408738294 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.054563541 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.729752826 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.63011758 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.381873582 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.368611545 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.386099221 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381957766 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.09933238 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.353615203 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.389463575 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920321267 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.397524043 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.39139069 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.385686612 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.597608986 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.593760781 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.393249491 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.598868493 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410007095 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402112585 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.29643635 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.150932064 seconds)
  done (took 1670.31265945 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.386316322 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.415940536 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.40239975 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.482630475 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.446659884 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.469535178 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.460969242 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.487677858 seconds)
  done (took 52.845178173 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.387334896 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.541905237 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.413284735 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.384252029 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.392377775 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.384809973 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.840459471 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.410761218 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.393721386 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.393551944 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.383500026 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.397057128 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.037210746 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.395467245 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.393279202 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.374387906 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.39230171 seconds)
  done (took 66.216286229 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.196496604 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.554819872 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.970873255 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.427136208 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.416997482 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.385605845 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.843634192 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.39967949 seconds)
  done (took 58.489548809 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.402399744 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.402316725 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.402062599 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.403219987 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.402671561 seconds)
  done (took 8.308028654 seconds)
done (took 2076.31405718 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.390309478 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.391503307 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.389653599 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.390433978 seconds)
  done (took 6.856495266 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.364670487 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.108600909 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.374716282 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.389226299 seconds)
  done (took 18.532357466 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.398263828 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.403033794 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.053743168 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.001066003 seconds)
  done (took 5.352450666 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.13977504 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.154573277 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.136613149 seconds)
  done (took 7.731013437 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.390370818 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.398113447 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.398269287 seconds)
  done (took 20.48665341 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.679375242 seconds)
  done (took 2.979412338 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.537884266 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.587048704 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.708373908 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.712055591 seconds)
  done (took 7.845245818 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.785861558 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.770349827 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.58372555 seconds)
  done (took 6.439945425 seconds)
done (took 90.321928102 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.102441982 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.39376471 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.599159944 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.073222815 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.620524371 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.60142534 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.803643292 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.040423789 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.580826334 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.573481943 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.074462015 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.621738508 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.527360791 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.395099204 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.528421883 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.398829541 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.619353804 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.152559505 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.790658563 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.956958751 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.809859515 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.711724346 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.904114063 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.732055665 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.616881168 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.544334899 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.290998573 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.398711706 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.965206606 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.311642991 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.547599366 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.130711857 seconds)
  done (took 189.720107018 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.391163131 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.40719321 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.409575806 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.402104855 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.392050322 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.393533525 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.392668965 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.40812506 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.392625243 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.397134172 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.397237313 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.39427443 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.394263538 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.422281013 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.395378721 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.407562459 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.409324755 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.409769867 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.411467167 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.392870401 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.396290783 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.401985827 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.402233848 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.404674488 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.3933215 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.393077453 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.406816359 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.401696381 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.393897731 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.41205035 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.395497407 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.393070552 seconds)
  done (took 206.117858458 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.394648579 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.394860761 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.412757701 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.410582934 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.410090664 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.395658291 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.412758114 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.399304928 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.394623267 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.395224951 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.395028408 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.409592843 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.411997422 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.39661535 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.397963407 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.395527758 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.39550149 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.39566542 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.3963432 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.411642669 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.397432723 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.41314996 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.412259829 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.412948216 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.398895937 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.396291731 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.424679719 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.396068127 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.396695859 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.413266583 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.397569345 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.412347481 seconds)
  done (took 206.202545961 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.596517692 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.402419403 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.403454196 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.356817283 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.404010756 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.401974011 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.398765955 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.597077625 seconds)
  done (took 14.867008341 seconds)
done (took 618.210284397 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.695418508 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.405694728 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.60167575 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.431285156 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.182779684 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.44031381 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.423855472 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.590538437 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.317544036 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.594612155 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.610849993 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.439055477 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.750283679 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.422240164 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.674958431 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.525815831 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.309600886 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.440913428 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.735424719 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.954786947 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.680245566 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.84405187 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.607999825 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.303188034 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.767019029 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.843329179 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.11181149 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.301883482 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.439776604 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.744395774 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.002242835 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.356827529 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.482810739 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.483891801 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.540283864 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.521725395 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.335472532 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.480027948 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.624970202 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.609482782 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.950803288 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.135797096 seconds)
  done (took 94.024036602 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.388242549 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.387903239 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.387705963 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.389126091 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.388832014 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.387228094 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.38809372 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.387564002 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.388382373 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.387074456 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.388270925 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.389502006 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.387060371 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.389893512 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.388430936 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.38820183 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.388544837 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.391187839 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.3887653 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.388637939 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.389779554 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.389817091 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.390356567 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.389957587 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.39069244 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.389463179 seconds)
  done (took 37.419031423 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.408343252 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.652029208 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.815135845 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.41567133 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.408668062 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.413036104 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.485150693 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.409653274 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.412402382 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.412993934 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.564829478 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.411835534 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.44385877 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.842667518 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.412052097 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.409879045 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.409301017 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.410158083 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.661479372 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.419489058 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.508035316 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.410529138 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.486327052 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.420733543 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.432697563 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.410379698 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.415101096 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.992350252 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.437463569 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.564980866 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.183243972 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.490208019 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.931375004 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.853143972 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.192995063 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.419591264 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.41105506 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.570219219 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.42142497 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.411214961 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.487402565 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.415125332 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.82395486 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.081902855 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.429282451 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.41198641 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.013164491 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.593637325 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.652923328 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.421916376 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.846652976 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.422452173 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.413665229 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.413097848 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.645979996 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.419354568 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.411509668 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.008925486 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.442650655 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.48861455 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.416591528 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.412208855 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.67082653 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.421856902 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.656696545 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.421780421 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.420420354 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.431474878 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.829129059 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.424182906 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.102933613 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.439750375 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.414636234 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.572923899 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.661080547 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.051952494 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.442866848 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.676393187 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.957302593 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.512393976 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.418838044 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.985441915 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.517138532 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.420120654 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.416251567 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.415822381 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.414780543 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.459943431 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.487479093 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.038712443 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.118570519 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.042958973 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.509012234 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.42803184 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.416031958 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.013227337 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.434107827 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.414296944 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.822606987 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.108301758 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.439877629 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.423275573 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.101614239 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.441964536 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.492929202 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.422274102 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.834832192 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.424577177 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.462656489 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.415622672 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.424022506 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.438249408 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.492277239 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.422528678 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.416209896 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.071609576 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.601289779 seconds)
  done (took 186.085041386 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.411337378 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.410506767 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.41062051 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.409425075 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.410317912 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.418530895 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.409980715 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.410692221 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.416443243 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.410310937 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.409250958 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.412692256 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.412163689 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.415207519 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.442088587 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.418103851 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.02218529 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.411250822 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.411093771 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.426109671 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.199637133 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.420717862 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.414144525 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.412827906 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.413019301 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.411616121 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.416409297 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.433108852 seconds)
  done (took 154.339312415 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.419055727 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.959174367 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.437576962 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.5459926 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.438506711 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.415542167 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.542865691 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.473786676 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.444196698 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.416639125 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.41613574 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.708372822 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.420059862 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.912783472 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.605009657 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.561448706 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.914832643 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.436535428 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.416953608 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.416224198 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.547017054 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.42323456 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.711539492 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.969246897 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.43698172 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.960276425 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.403716697 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.420121903 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.418491333 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.961981681 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.435150829 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.70990371 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.493536424 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.486228765 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.987356584 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.929533716 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.929741939 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.56226802 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.427056316 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.419223216 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.417542836 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.403338895 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.967542651 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.447158185 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.420751215 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.95920247 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.445890093 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.420958979 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.426029504 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.419862752 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.478456046 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.503213447 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.74183961 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.98355073 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.519698339 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.44169376 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.547184556 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.803900879 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.42325007 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.916106818 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.402489035 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.976259165 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.448849117 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.404161035 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.421153441 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.426671774 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.565501193 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.55534092 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.924437221 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.439065413 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.916246736 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.582474654 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.427893796 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.41995357 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.423430723 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.974486724 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.942754031 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.581922544 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.560162469 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.614784026 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.414070024 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.421454293 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.406449967 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.497566947 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.429946193 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.976310479 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.943439216 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.441394811 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.422438629 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.423434966 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.424208341 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.591778593 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.001933761 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.523632557 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.913285266 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.736491667 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.729061975 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.432492864 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.480700611 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.443408163 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.722679382 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.433377269 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.478082476 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.864299967 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.72180961 seconds)
  done (took 168.427270064 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.653367302 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.610226341 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.513881277 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.567076382 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.012352567 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.988969015 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.733084696 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.566747528 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.541732827 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.681542704 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.55716005 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.518691904 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.63602078 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.506257715 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.153221378 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.516607321 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.530458416 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.572856042 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.588585157 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.432444965 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.09457969 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.708888836 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.618286828 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.299922219 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.521725746 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.175336957 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.975036268 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.003100629 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.591782271 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.710342048 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.973269563 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.531098509 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.373258845 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.118987664 seconds)
  done (took 67.904514364 seconds)
done (took 709.507613339 seconds)
SAVING RESULT...
DONE!
