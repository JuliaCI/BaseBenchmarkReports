cset: moving following pidspec: 8437
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.236002798 seconds)
loading group "string"... done (took 0.464892627 seconds)
loading group "linalg"... done (took 7.618386419 seconds)
loading group "parallel"... done (took 0.174546629 seconds)
loading group "find"... done (took 1.174168202 seconds)
loading group "tuple"... done (took 2.108187241 seconds)
loading group "dates"... done (took 1.343348445 seconds)
loading group "micro"... done (took 0.250699117 seconds)
loading group "io"... done (took 0.663865474 seconds)
loading group "scalar"... done (took 42.270651671 seconds)
loading group "sparse"... done (took 12.963786638 seconds)
loading group "broadcast"... done (took 1.116230801 seconds)
loading group "union"... done (took 13.857073125 seconds)
loading group "simd"... done (took 4.777128552 seconds)
loading group "random"... done (took 9.671964363 seconds)
loading group "problem"... done (took 1.982582076 seconds)
loading group "array"... done (took 22.523558921 seconds)
loading group "misc"... done (took 1.422596581 seconds)
loading group "sort"... done (took 3.592681052 seconds)
loading group "collection"... done (took 19.457355266 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.53285359 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.137524741 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.133382531 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.148002864 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203136435 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.145280356 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156214507 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.113891513 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.970896019 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.185486189 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153848745 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.514776298 seconds)
done (took 5.128333674 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.22431915 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093943593 seconds)
    (2/2) benchmarking "String"...
    done (took 0.102983084 seconds)
  done (took 0.869650088 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077244194 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145668059 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093810654 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078366411 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095364766 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078055793 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09514024 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077633465 seconds)
  done (took 1.343024143 seconds)
done (took 3.201211461 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.730501223 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.279713936 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203437177 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.461677262 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.193316677 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.213463051 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.677328793 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.341156807 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.254315183 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099335285 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143592736 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.38978151 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135814002 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.671577288 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092853806 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124531655 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.176906217 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.441857599 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08245606 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110123367 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116270303 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141330378 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128935592 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090506171 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184222335 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.084332219 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.19442897 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108487801 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080876023 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.289678199 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201186035 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.679700645 seconds)
  done (took 10.838528122 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110854835 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133842249 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09717163 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138225849 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134316404 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098626166 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083911571 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.09705252 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121234761 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.175727909 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.129742949 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121048559 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094129874 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081953412 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114748228 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243754593 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121935281 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104840112 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101019974 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103709285 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121959386 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112347597 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109265539 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093662546 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166586345 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.219903358 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110264137 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12687299 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097449746 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114875767 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144144745 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142961744 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09455122 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080214026 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.17269138 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12464572 seconds)
  done (took 5.135071952 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.18757593 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120828517 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167745693 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.163898168 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.140160099 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.158783413 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112615058 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244088995 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.109802898 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.165446832 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142940963 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.153064326 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.1170342 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096593176 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08228273 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096501224 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.631250736 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.163377932 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134622959 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.11483145 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102307421 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083505197 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.094220469 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087413624 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096202421 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081604548 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.124959881 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.325350741 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16028453 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082850116 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.143564358 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122591938 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098966341 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117379683 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.210140039 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.128069721 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119545021 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097787213 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078149892 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.194808784 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088112214 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097060455 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103473142 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135614121 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133579764 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097267388 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08154546 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.21856953 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079996932 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114054435 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.930126676 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181378188 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090677074 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095272829 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.320647043 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.100572451 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098291297 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077303849 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.261898096 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.184119007 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097959743 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079322395 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096694443 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081815599 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.399273532 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080702956 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.747413518 seconds)
    (68/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.080368334 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106966115 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081214824 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098714016 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08117606 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103460696 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103350333 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.097247184 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.097192857 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081064213 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.096588532 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.07792621 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094217456 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081052618 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.10788634 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102214566 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080279493 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163902427 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.079144793 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.11454322 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126929763 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.084181022 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094743091 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129565019 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083527313 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097773978 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132731208 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080499675 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108987088 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098538514 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141480688 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080818587 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.170229872 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.0809236 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127518455 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099001145 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114503692 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111712334 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098892524 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084373888 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096236165 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078255033 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164002143 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080692325 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097292456 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081415598 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110256232 seconds)
  done (took 22.528091135 seconds)
done (took 39.180944061 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.332829734 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103903621 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102896091 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10231128 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099458502 seconds)
  done (took 1.494743632 seconds)
done (took 2.225032277 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.29011925 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.173316718 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094473813 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166931085 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092798535 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.174169623 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159128371 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.112184606 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.219279381 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.077435861 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.16382147 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093514825 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076262266 seconds)
  done (took 2.646860456 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094984711 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114072306 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082460496 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110592889 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077247941 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110354959 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092586451 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116843023 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108762861 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084906179 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093323872 seconds)
  done (took 1.812725781 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093589408 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112500338 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082550185 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11007293 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076054348 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110132877 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092567642 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115630374 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109083449 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085505308 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09355201 seconds)
  done (took 1.806770867 seconds)
done (took 6.985181983 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090890593 seconds)
  done (took 0.812568568 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.926747333 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.998610453 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113754906 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149678642 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.299955077 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.192695437 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.479378564 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125364624 seconds)
  done (took 11.217984052 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.144222412 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.084549073 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.099408425 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.085281306 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.102155416 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086021712 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101811876 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.09941512 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086245684 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.09927132 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086469112 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.101427385 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101485741 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.083029185 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.100300022 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083957175 seconds)
  done (took 2.330732478 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120220552 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118802189 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10564172 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109075414 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.08701629 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104591889 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106764332 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089744248 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102089906 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103883495 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091408726 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105306239 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103344504 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079991078 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.10559814 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107796971 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085959016 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105640691 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.10693145 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091524417 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107552475 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096170064 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087743772 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106444518 seconds)
  done (took 3.260109316 seconds)
done (took 18.349160709 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.161124204 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108696822 seconds)
  done (took 0.997233495 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096085954 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113500039 seconds)
  done (took 0.941652829 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097829991 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095164937 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122784744 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.11050457 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08110628 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095735624 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120368165 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080817385 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.09529164 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080469995 seconds)
  done (took 1.714762359 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082946102 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110179482 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102187456 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095282392 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105180794 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094871223 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088043799 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098894087 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110079395 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077238554 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10273672 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114276212 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086023805 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.11654725 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105018902 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082782906 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101672141 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098286334 seconds)
  done (took 2.5101194 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079068029 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.0968538 seconds)
  done (took 0.912052358 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081495931 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094136217 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082239915 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096745994 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093750204 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078052673 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.09498041 seconds)
  done (took 1.358246246 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.47095208 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135614378 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.253335853 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085790356 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120307299 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.30307695 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097585119 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085301008 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103078138 seconds)
  done (took 2.448354308 seconds)
done (took 11.615446716 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093521423 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117396969 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112809788 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.46642464 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108510332 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.098305012 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.160807765 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.250623043 seconds)
done (took 2.151784102 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.149054077 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.325740906 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.113798169 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067131437 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.095021992 seconds)
  done (took 1.347483294 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079394767 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100046714 seconds)
  done (took 0.924553876 seconds)
done (took 3.169434399 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081004852 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.09731734 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.114843036 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.096610885 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.078461778 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.098713713 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.078501895 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.096570435 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.080302377 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.096663567 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.096131671 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.08093318 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.09739176 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080285866 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094531966 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077194568 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096069129 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077248432 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094905715 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077779679 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.094222619 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080138333 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094553101 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077512186 seconds)
  done (took 2.917786647 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100353724 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099257703 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102614511 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085875618 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101961125 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086145741 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103288023 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098577524 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08636819 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099435461 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100497113 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083962229 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099615873 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084321605 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099080031 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101329313 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08679175 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097975071 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082444624 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100669732 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.10347175 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081172041 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102089809 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102442257 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.085204647 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101072304 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083582854 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.0978731 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10295361 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084122292 seconds)
  done (took 3.593805329 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08460644 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094175828 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078694792 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101912476 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078093674 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097908421 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077736828 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095092979 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078988293 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095644426 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079563179 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093815023 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077788462 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.0969825 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079589938 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098622725 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107826676 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078502462 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095993681 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078602513 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098611589 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077323088 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095013925 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077649396 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094457904 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078244069 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095062108 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.07776967 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095874614 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077755418 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098715559 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081234209 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095192457 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085006859 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098671118 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078632527 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098122127 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.093926466 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.079496132 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094140057 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078650604 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094808921 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.07838026 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101114549 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078042742 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097584556 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078535162 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097156639 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078669817 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098086013 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077397859 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.09498101 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.08101747 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096270728 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098981261 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077594932 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096457634 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077110726 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095696268 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.07865244 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094712404 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077868674 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097130267 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079735691 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.11100175 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085356788 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09517004 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079602261 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096840346 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081402364 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096572178 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109449986 seconds)
  done (took 7.154665752 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084066563 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106114474 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080005646 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097012568 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0766088 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096161447 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098711956 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078435117 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097614355 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085438281 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095873501 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080355005 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096403404 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108133642 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078986319 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097476952 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085533323 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093709084 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078848882 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100321988 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079733816 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099107574 seconds)
  done (took 2.751292567 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.210203298 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10573933 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143100241 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10800996 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08410667 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107292893 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102328383 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087496497 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102330546 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083945082 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100457585 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102328097 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083407427 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100823515 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100428897 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084583786 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10264703 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085017599 seconds)
  done (took 2.653013042 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092987344 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098787402 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102675128 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098325662 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098780591 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083096535 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104355681 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108461077 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083545882 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099009255 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090816835 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100961981 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100985061 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082312377 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100932453 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081630815 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100790603 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081995051 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107958565 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104728737 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103421494 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091131523 seconds)
  done (took 2.878623236 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096556146 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100772854 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116794861 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084055229 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094296374 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080491785 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106048328 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081969168 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107258847 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100933572 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081655502 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097091337 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088060354 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098132481 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103335093 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081329991 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100641026 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081107062 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100517831 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076751492 seconds)
  done (took 2.63708785 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103557928 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099995132 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099879491 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092075578 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099270681 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082731504 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108793498 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100008691 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082710026 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124104986 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100204011 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082842777 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10969488 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.10628299 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099571214 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093066374 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109532512 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109840723 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083022563 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099892406 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126268578 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083100153 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109869486 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.209643313 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082972071 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100149304 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100154974 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089239144 seconds)
  done (took 3.650153851 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080712371 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098441159 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079346245 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096786038 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079643757 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097058859 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.07951394 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.09577301 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081346286 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095707584 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081470217 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098041769 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081369411 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098792385 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081987484 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098957604 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083698672 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096819991 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079839607 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095946841 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080858281 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099383272 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.08118475 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09587854 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079316128 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098903961 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078288183 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096726354 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081838044 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095396355 seconds)
  done (took 3.432093991 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090611692 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10671947 seconds)
  done (took 0.961251848 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079648803 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114497151 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078459238 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102801362 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08714703 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09899051 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108018126 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085657377 seconds)
  done (took 1.518075491 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096764774 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110554452 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08355445 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112215216 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109377096 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.096187969 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.16076145 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101050867 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087043428 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.097670522 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113100952 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081273901 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105572957 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082255188 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10560566 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088275793 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098194392 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087805564 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102518308 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098230443 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083405042 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110933574 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084334736 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.096457151 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083822015 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.110101402 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.109094862 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083409637 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102438737 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109484731 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087806844 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093725836 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082719408 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100821262 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080596604 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.109103801 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112483014 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084562331 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108399876 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084252834 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.11182662 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094528184 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086953293 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105937997 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092419387 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100412854 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083411022 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094641402 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097558746 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08390158 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095233107 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082206455 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094578925 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088935283 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103552679 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112141899 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081391635 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100786903 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085248327 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103429076 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089009888 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102282125 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084598106 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099221271 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107044684 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085846154 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107353977 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077750665 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.09356516 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079631538 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107628789 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122664886 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089930968 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101339608 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083741979 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097522725 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103758779 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083338254 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107482154 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090513444 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100504294 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107257792 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090040302 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099886575 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084526961 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.108595023 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.09838432 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085170331 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097567294 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09807036 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.099444816 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098243136 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.079890423 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109033617 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085666189 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100768451 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080120047 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108207132 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079580394 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100806204 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102897397 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083707384 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109232597 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088217609 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106512764 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.106834151 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.090052711 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099989471 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084992092 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.097031742 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084006042 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.103443303 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106999742 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076867511 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103299624 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08419321 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101021816 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.089504344 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.098599608 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.100460759 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09037124 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107015279 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082315067 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.097106757 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086132151 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100515311 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104746192 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.089062236 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099146957 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078065273 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096421793 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086238632 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100824892 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087511479 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106301181 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103675433 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.07747261 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098624696 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.087762714 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.108312451 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100848175 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082692071 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104498099 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.084017393 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099992433 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.088824573 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.103049547 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081888074 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.104542001 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101974892 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.07867194 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104527801 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085849823 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099218611 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086273106 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104310834 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103329432 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083372686 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099395882 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088933314 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101892899 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081302678 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100251103 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100306818 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.091387993 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.103224937 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078594106 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097383659 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090745179 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.099067033 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.099889483 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081192333 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102692573 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083702096 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.097990151 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.08197872 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101816801 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114191953 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08831568 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101822498 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088427593 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.110822825 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100465568 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.085009234 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100956532 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084181299 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102178607 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089740259 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105711644 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106913784 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.085122979 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097388289 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088318044 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108491928 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081973099 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098404192 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081678922 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103978649 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.108291587 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.08710202 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101047844 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08156949 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101046739 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10460821 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085674624 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099862905 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081634222 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105409127 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082016608 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107960396 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101591642 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.091277869 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104704096 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078461513 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104598056 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098613913 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.089209711 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096343167 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081024575 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099904395 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084483051 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099645123 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085289431 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095277175 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107418759 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090483939 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100761412 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.08224058 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101708829 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090630599 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102586658 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103922884 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.08708875 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106177698 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095962836 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.100309215 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085863623 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.11065925 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101290523 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.077026563 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107012525 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081963773 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100864384 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.08261503 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099499709 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085494041 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110225735 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.10600614 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076857314 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103209702 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081385516 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099624629 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078780982 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.108083426 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104419268 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084862652 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110069856 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084684107 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102296096 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104686918 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.083189235 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102630233 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084779688 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104116368 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084511227 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.10339512 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081962703 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102821881 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100716979 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081534824 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102786741 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.083887741 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.101649078 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089040985 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.102975757 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083681096 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103809675 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103578845 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084090474 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102182246 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08211352 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104243628 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084367972 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101581461 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085335223 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096752709 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108601508 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082955135 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109032048 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083121534 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.09877176 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088590138 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.105286404 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106911032 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084302439 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102669155 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084690706 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100941086 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085683298 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109492565 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098852101 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09153817 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107044295 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084146611 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.104771609 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.101600293 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.085218623 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100243414 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084483177 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102511334 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.084082343 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101808886 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087877876 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.104200299 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.101943869 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085248827 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.10304819 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082771134 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10220877 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077364609 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.101322102 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082850348 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101541061 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10862162 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.084174174 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.104010986 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.082049371 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102870329 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082264079 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.09798808 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.109759412 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.093145678 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102709059 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092741418 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100837868 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.10283399 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093427962 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09559542 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081377482 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.09981376 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080575485 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10965333 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084536936 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.110160968 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.100917634 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082868491 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098855163 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084872708 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100310966 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.0783289 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099670508 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087132288 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104299419 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082307064 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101990422 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.104804029 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08507128 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109838195 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.082479085 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.103314184 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.084135345 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.09883783 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081620218 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100325184 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.10445297 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.084619394 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099502406 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081354121 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101015592 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084753351 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.110884519 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.084161184 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103767497 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108493335 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084214474 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.103982294 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087365404 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096664709 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.087265507 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102774198 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.083203771 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.100886149 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.106684796 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087860458 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103431284 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090290377 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.102466892 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084312037 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103684756 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100241128 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083811457 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101358046 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083964031 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.101434639 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084333531 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109792265 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.09992746 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.085101788 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101302826 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083900124 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.107211568 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.085383978 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103721839 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110022136 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.08666142 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.102840517 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089410811 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.10664462 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087284643 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103825078 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.103610279 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090157779 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.101366527 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092215279 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.102279846 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.085239274 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.104155869 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080102341 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102191391 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.10325272 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082653546 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.107340939 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.085339355 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.101752371 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082438146 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100529206 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085053474 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107649839 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110451993 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.08595638 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10511476 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.07869222 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.099327284 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085081137 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.100993503 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.103140907 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.08628299 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108264594 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085602844 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.102364578 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082450703 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109354201 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108887166 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088553677 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.100856859 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088479242 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.10368005 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.08514032 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103432657 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083621061 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103924408 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107842453 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085813762 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101859357 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091954799 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.105681167 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104389795 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.08490607 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.102124463 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.084475658 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097593787 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084575691 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.104357917 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090426883 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.105057184 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102398025 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093778103 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101812907 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.084346122 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107040774 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083397647 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.109148626 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097576397 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.085139718 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103831704 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085651849 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097649281 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082943656 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.100432364 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085941467 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.102266102 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079051683 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112093652 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.110386334 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.08674597 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100838336 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081893781 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.098138408 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.079156636 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101339576 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103585201 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.086234877 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.111476442 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083061607 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101855403 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.080052347 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103032759 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086572343 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105845609 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.100080638 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.079846565 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.101390736 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.086800363 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.110343011 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083308701 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101962753 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087326093 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105148162 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.101455797 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088335821 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099309142 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087532133 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112882993 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085053365 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104482645 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.106886973 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091695567 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103840334 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.08006111 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103122453 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085905882 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103721592 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104436067 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.085478607 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116632021 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087096438 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.102257914 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082547259 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.10537052 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.102203561 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.091704875 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104145585 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.08528313 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.108187878 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086010301 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112572876 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105429893 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089589237 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.10505688 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086215774 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102311162 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10244287 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.082515465 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.101596668 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084890725 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104400875 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089667382 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110947116 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.101718889 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093394245 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110667429 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.089210912 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099409793 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083340248 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102822455 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098731035 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.086476405 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101266512 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.082927363 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101705877 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082713216 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102812571 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09073396 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.105418869 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085011906 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102856758 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096820388 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.086241181 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.104918278 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085779825 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.09922162 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084634482 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104555231 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089688021 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110777283 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103149972 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085916869 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104914526 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085203877 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099178528 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.089969131 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103121029 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086676564 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.101819073 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103733846 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.085750534 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106299294 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090304288 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105034558 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086283918 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116410565 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106110784 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081987493 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100638639 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090383719 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101373106 seconds)
  done (took 57.81735458 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147687592 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080685974 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099367321 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079933888 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113266833 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099834484 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079586092 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099825778 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081640041 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101975032 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079525421 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098629548 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109576317 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125339679 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094133955 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104262777 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098070523 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081230732 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09885469 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080993719 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109227232 seconds)
  done (took 2.878249381 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104410092 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118494426 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115428013 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120283561 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08969801 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115466595 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11562462 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116388191 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099779925 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111342868 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119380926 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115913544 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091554221 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112531338 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110264772 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094087737 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119353039 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110223375 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.117583865 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096218662 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113897626 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114874365 seconds)
  done (took 3.236585781 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085199884 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102182055 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085637462 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098436643 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084332966 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097840753 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088737914 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100451367 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087630883 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102601331 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081722516 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101945105 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10481906 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079826196 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102360112 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082162073 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151890646 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107238821 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083857984 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105423205 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.09880626 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085882748 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.099218007 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.0808891 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101967642 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.089355057 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104280413 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081752784 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103177127 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08325962 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10364643 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080845359 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104702588 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.10378745 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082516738 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102008153 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084747163 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103240086 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079215323 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100657962 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.085199909 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099904086 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084374574 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104177853 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081592251 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101666283 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084652023 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102619992 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098560596 seconds)
  done (took 5.467203869 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104204471 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161043612 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085927623 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143376554 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121329523 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114201736 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088199793 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142092416 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102377382 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082647254 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124303807 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120277745 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103667409 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089812066 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.11081276 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103735923 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086195122 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102675599 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108094834 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084654208 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109006641 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090750874 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120167632 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117832129 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10718132 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083613396 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103939732 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108270266 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.09807232 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110191355 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110224473 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090359097 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120862064 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.109174747 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103869365 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.087106726 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122270444 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104138671 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087914093 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.10111734 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087450698 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110038485 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109967651 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.122096629 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085438867 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108126891 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08534152 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101361828 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117407125 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.08723379 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114783012 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120907091 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107677861 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.0863876 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108901321 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.121763421 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085735515 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102190493 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.107273175 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.097945231 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.10215684 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108655424 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.099439117 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106812083 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.113354868 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099731229 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109629036 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109066446 seconds)
  done (took 8.143402698 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094182173 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111965709 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121812052 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122165601 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092057065 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111829289 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112025768 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091276162 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112282123 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117164506 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111421737 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134396901 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087725706 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115260629 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111828927 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092384486 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111850964 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111756736 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092157056 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112732408 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.112249629 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121505428 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091478762 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121134595 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.143362137 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107027308 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091929781 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11190921 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122590937 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11181407 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124559381 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092760606 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112252005 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121625278 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124982427 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091544105 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104751766 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110227573 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.09322931 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112060151 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106346411 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123091177 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.092106252 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106392948 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.112215635 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.093415114 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121488777 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125786066 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11596949 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097868356 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111733942 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122298102 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112523521 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092524648 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.12277056 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.148239618 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122070937 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12213404 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111461543 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.121146554 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101504833 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129518277 seconds)
  done (took 7.734480376 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109244236 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.117502813 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118466858 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100461423 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083009967 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109884523 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083403146 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103030502 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115358651 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096117065 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117910791 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110661443 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112234514 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097600383 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110061824 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112929728 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090211466 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110701941 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115626397 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.110381515 seconds)
  done (took 2.95811494 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093887772 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124537076 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085408648 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113340068 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108958885 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092647576 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107927411 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108798465 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085937179 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108429792 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097936391 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11738997 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106273331 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092506894 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117790399 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111837448 seconds)
  done (took 2.505569687 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096347143 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11811414 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120789892 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085364148 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104723121 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081196884 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106684003 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100866566 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081932883 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.122086993 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085435629 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109609201 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104993382 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083762825 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.10194276 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.089003564 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101405717 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083005541 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106629013 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.121709687 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.097309964 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104833162 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105555683 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.08766354 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105039833 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090847315 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107455687 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10421015 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084826309 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106063475 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085762321 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.11371373 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101348861 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084878474 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103309065 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082879474 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105594335 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085697106 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109759016 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105077423 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084273388 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105163907 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086663184 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106909216 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080777077 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105957356 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.10148014 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092183266 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102998889 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08587286 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106354784 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107756482 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.087679983 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116913789 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089620987 seconds)
  done (took 6.274039202 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100343155 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108924023 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080778024 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103797369 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088451643 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108262464 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10919201 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088433617 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107445851 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083661703 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107437973 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089391177 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107852462 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10930394 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08817604 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109052588 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080904632 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107582232 seconds)
  done (took 2.621515097 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091408855 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105422368 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09466222 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106753343 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085705648 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109242659 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081102088 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105073219 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104774656 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086047997 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105377965 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088323086 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103672888 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088145183 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105538797 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085985638 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108740631 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103717441 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086700192 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101457242 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088716559 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105186085 seconds)
  done (took 2.982172337 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119303192 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125953306 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092806469 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.230443996 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104674863 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132695219 seconds)
  done (took 1.647330632 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109331781 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121850986 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105953226 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106708699 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116441261 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10783926 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088633372 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108086771 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119110796 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102865431 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109178303 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118693172 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118823624 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098134469 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116224201 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115276269 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108307581 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088768928 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106545269 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129534321 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088375465 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118941569 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108958163 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088049976 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108660456 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11951113 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119131047 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123385515 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087560819 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11893099 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114870838 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089298952 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120269053 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123837421 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110083264 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09956739 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109470402 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129692182 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115131427 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098580491 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109986237 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11590285 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098530908 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11410464 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118740066 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108187089 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095345565 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10850229 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108774867 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137128393 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09553408 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119617608 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116295753 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119042721 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119598812 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136519607 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102372213 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119103488 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115655073 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12370497 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117839559 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095758359 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118504062 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122821443 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115421735 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118592823 seconds)
  done (took 8.20631993 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103635663 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126708857 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109100015 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123409921 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098184954 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108925158 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108900839 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089077496 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109551223 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108095557 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153082961 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088636489 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11921142 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118154389 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108859589 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089504174 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109934926 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119084187 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08825623 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136532605 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109199451 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119111244 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11905247 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098029382 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123461813 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115872432 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109214156 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089109725 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108975622 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108027785 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094825196 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109332609 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118188502 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087505495 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119335368 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10936389 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089840017 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117033319 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109888148 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115599763 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098109931 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131177567 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109383086 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108999575 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123137685 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089334109 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109167842 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087305469 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110182758 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108154976 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125139859 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104507091 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123998214 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119075543 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108975462 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088231742 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110543937 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10880504 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089693783 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116297249 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11879666 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108604982 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136723974 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089494835 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109307034 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118582801 seconds)
  done (took 8.089316768 seconds)
done (took 155.454222626 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.09944893 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136515935 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096080699 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169489728 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106690776 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119998142 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138564869 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098173972 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106575395 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087035813 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107757497 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088245983 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171733128 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085277342 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108008018 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108605055 seconds)
  done (took 2.677098918 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.200343057 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.255304625 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102840724 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105855213 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089356421 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111026811 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.10541569 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091475483 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110152041 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086796304 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109326001 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087109518 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105616379 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.087330109 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111431895 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088621319 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106601164 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088321193 seconds)
  done (took 2.896984493 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112636439 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.162031113 seconds)
  done (took 1.133701224 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119049012 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180741785 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.297056467 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156191238 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119746036 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.12770955 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157370117 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131047519 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197131743 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.124329936 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123863747 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098118426 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140952202 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115923659 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094840817 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118852644 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.143382125 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093733117 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116427653 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116975464 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117182779 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107497837 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116646389 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094380455 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181446962 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.12036096 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.085775682 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.107117837 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117322026 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095787382 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.11423626 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125534701 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.099165544 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.176511165 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102412019 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177720609 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098127294 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112398965 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115491768 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.09214704 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119096461 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118518233 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.106182694 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118741669 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.088180409 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119386278 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106609293 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085662602 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116121008 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.098312358 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115608929 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113705779 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.157985386 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.11994274 seconds)
  done (took 7.569519679 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.797069801 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.165039526 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091644046 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.884131384 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139318419 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104819764 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.783134831 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134351077 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234152486 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.760841918 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13513663 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123590045 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228865807 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.237787126 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.927656499 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.308264704 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.673977029 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102745591 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.15023554 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153428261 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120287211 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137774447 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130885682 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.453303872 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.096826523 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113137952 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117655062 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.099570225 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.16025973 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.127012728 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114702983 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179981217 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.267457837 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.185346459 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116642039 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089805999 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113621747 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170219322 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268236587 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215760143 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181840961 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088346554 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113058645 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122274405 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111415189 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109895981 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165240156 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.196375512 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.173307811 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09322348 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121764706 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120830323 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121358573 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165805297 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121330018 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.289985086 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.324745285 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11280036 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121506087 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106028911 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263741387 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123476045 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224597782 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11812477 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21182524 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112262563 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778834394 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.190841664 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090974178 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118729286 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120342497 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095521382 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122691251 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170959234 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.393617781 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12581959 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093829957 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112785423 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.204643735 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.126674263 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111716917 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164043992 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116837665 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100190051 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126478647 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123438375 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.171479423 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.230420035 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126526856 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120312481 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094825038 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12631776 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116867216 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.215639823 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220845023 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.16338294 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.208447567 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124332183 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.186232022 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.170205127 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098281593 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.194384773 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098808338 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127258549 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12465769 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217843274 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146667234 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123469534 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094893295 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120092638 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149954169 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127422287 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098535755 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.192122156 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.483775848 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168359535 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.110278479 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128156345 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100148405 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183438449 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098339787 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260492476 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122941396 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.170746381 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120946567 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088396378 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121859194 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.16552671 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123665663 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121755927 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102001121 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120506943 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235302692 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219479396 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124360439 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.221787082 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185607035 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120053355 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173481969 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122158505 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167952128 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121591263 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121832946 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095845378 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.791240577 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124192914 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099337647 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117380196 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.196658615 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111906371 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103206416 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.126565636 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108881823 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.755405549 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128602394 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.12166258 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101908805 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119127345 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121676795 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118353978 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.096015801 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16354913 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.234109163 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12210945 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121201997 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103951851 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183954803 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.096011133 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126993292 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125966702 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125826335 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.102108253 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115764878 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124361822 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171778601 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163949686 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.22277498 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.597088376 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090938533 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.126460279 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231481271 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090524312 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.290970902 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121220691 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.224942604 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.167620187 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120898441 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.31682497 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.168032677 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.198953209 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127902906 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.174897566 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087258472 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119773375 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.191968124 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091362879 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11826617 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.164274221 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126203807 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102923835 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.94184461 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113766911 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227182337 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109642882 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172614785 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117803899 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100193084 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.290947402 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112913895 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107705624 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.187449215 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094208638 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.127678034 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.722941729 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.105766007 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123000405 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119542777 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222926409 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.166156165 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119716405 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098276353 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122865852 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163624546 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207959813 seconds)
  done (took 44.254425942 seconds)
done (took 59.385806914 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.277355505 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.215930733 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.259938784 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169268094 seconds)
  done (took 1.882144885 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171103653 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.151052105 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121602046 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107620928 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150862635 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085537226 seconds)
  done (took 1.673288117 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.35404007 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.273280066 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239728059 seconds)
  done (took 1.754137254 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.293108446 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.254937127 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.356486657 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.420630548 seconds)
  done (took 2.331610228 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.209888445 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132929274 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.11207881 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105363441 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.198650386 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.25098188 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141707213 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.204372455 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.122759515 seconds)
  done (took 2.412754623 seconds)
done (took 10.943823946 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.25561742 seconds)
    (2/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.289579535 seconds)
    (3/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.186145135 seconds)
    (4/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.166736407 seconds)
    (5/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.145146924 seconds)
    (6/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.213352929 seconds)
    (7/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.230278002 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.126595 seconds)
    (9/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.254922339 seconds)
    (10/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.101079739 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.12378873 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.09440136 seconds)
    (13/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.251524144 seconds)
    (14/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.229076426 seconds)
    (15/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.10288204 seconds)
    (16/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.157437684 seconds)
    (17/286) benchmarking ("sort", Float32, true)...
    done (took 0.234336914 seconds)
    (18/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.198283152 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.139106153 seconds)
    (20/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.217817065 seconds)
    (21/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.110551441 seconds)
    (22/286) benchmarking ("sort", Int8, true)...
    done (took 0.224451609 seconds)
    (23/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.169046261 seconds)
    (24/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.172891782 seconds)
    (25/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.126259214 seconds)
    (26/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.174506061 seconds)
    (27/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.112653406 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 0.250110455 seconds)
    (29/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.095396567 seconds)
    (30/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.142489828 seconds)
    (31/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.096635272 seconds)
    (32/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.151556257 seconds)
    (33/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.092433801 seconds)
    (34/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.093185983 seconds)
    (35/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.17121952 seconds)
    (36/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.13665267 seconds)
    (37/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.207938572 seconds)
    (38/286) benchmarking ("sort", Float64, true)...
    done (took 0.232878277 seconds)
    (39/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.094666513 seconds)
    (40/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113866442 seconds)
    (41/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.109526475 seconds)
    (42/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.153527094 seconds)
    (43/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.118651414 seconds)
    (44/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.163299016 seconds)
    (45/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.123349158 seconds)
    (46/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.2162369 seconds)
    (47/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.174948795 seconds)
    (48/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.088152463 seconds)
    (49/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.091357198 seconds)
    (50/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.088176542 seconds)
    (51/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.089686449 seconds)
    (52/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.147618282 seconds)
    (53/286) benchmarking ("sort", BigInt, true)...
    done (took 0.234920609 seconds)
    (54/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.191297064 seconds)
    (55/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.158467029 seconds)
    (56/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.08811277 seconds)
    (57/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.11675261 seconds)
    (58/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.099618088 seconds)
    (59/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.110499314 seconds)
    (60/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.095727525 seconds)
    (61/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.252000474 seconds)
    (62/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.174179992 seconds)
    (63/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.093093205 seconds)
    (64/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.136475235 seconds)
    (65/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.116242376 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.11388938 seconds)
    (67/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.200839646 seconds)
    (68/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.089838731 seconds)
    (69/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.161940164 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109374014 seconds)
    (71/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.200458671 seconds)
    (72/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.096295955 seconds)
    (73/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.183961154 seconds)
    (74/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.145548996 seconds)
    (75/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.099396267 seconds)
    (76/286) benchmarking ("sort", Int64, false)...
    done (took 0.110368517 seconds)
    (77/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.130705664 seconds)
    (78/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.121372443 seconds)
    (79/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.188970294 seconds)
    (80/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.100945177 seconds)
    (81/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.099941057 seconds)
    (82/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.093168313 seconds)
    (83/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.108934243 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.087175275 seconds)
    (85/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.125021517 seconds)
    (86/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.098387276 seconds)
    (87/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.136155444 seconds)
    (88/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.175252353 seconds)
    (89/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.08779368 seconds)
    (90/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.117601349 seconds)
    (91/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.06856783 seconds)
    (92/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.138002498 seconds)
    (93/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.088902028 seconds)
    (94/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.117737547 seconds)
    (95/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.175930581 seconds)
    (96/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.089046253 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.119117774 seconds)
    (98/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.222742283 seconds)
    (99/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.100258906 seconds)
    (100/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.116296522 seconds)
    (101/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066579665 seconds)
    (102/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.117943666 seconds)
    (103/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.116995193 seconds)
    (104/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.13521421 seconds)
    (105/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.094093055 seconds)
    (106/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.118229404 seconds)
    (107/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.087473114 seconds)
    (108/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.092011115 seconds)
    (109/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.078559129 seconds)
    (110/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.118024528 seconds)
    (111/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067530059 seconds)
    (112/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.144131427 seconds)
    (113/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.09616908 seconds)
    (114/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.143362733 seconds)
    (115/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.097168605 seconds)
    (116/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.090121992 seconds)
    (117/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.116130326 seconds)
    (118/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.191699805 seconds)
    (119/286) benchmarking ("sort", Float32, false)...
    done (took 0.173500014 seconds)
    (120/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.067082258 seconds)
    (121/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.123394227 seconds)
    (122/286) benchmarking ("sort", Bool, false)...
    done (took 0.181508001 seconds)
    (123/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.120133218 seconds)
    (124/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.116057078 seconds)
    (125/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.117396321 seconds)
    (126/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.093749555 seconds)
    (127/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.098975418 seconds)
    (128/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.09494246 seconds)
    (129/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.171670896 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092729545 seconds)
    (131/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.145145299 seconds)
    (132/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.11387106 seconds)
    (133/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.10962078 seconds)
    (134/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.109282647 seconds)
    (135/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.092535984 seconds)
    (136/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.123029497 seconds)
    (137/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.119218368 seconds)
    (138/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.134036716 seconds)
    (139/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.140706937 seconds)
    (140/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.096464304 seconds)
    (141/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.176186207 seconds)
    (142/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.096595258 seconds)
    (143/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.113605923 seconds)
    (144/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.12958741 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.087221565 seconds)
    (146/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.089789774 seconds)
    (147/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.095796544 seconds)
    (148/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.1160491 seconds)
    (149/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.113825037 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.109972273 seconds)
    (151/286) benchmarking ("sort", BigInt, false)...
    done (took 0.222583358 seconds)
    (152/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.084575293 seconds)
    (153/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.120207877 seconds)
    (154/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.06800972 seconds)
    (155/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.170714185 seconds)
    (156/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.138774682 seconds)
    (157/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.088162969 seconds)
    (158/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.092199812 seconds)
    (159/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.06814939 seconds)
    (160/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.125059284 seconds)
    (161/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.078985041 seconds)
    (162/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.06732299 seconds)
    (163/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.12353656 seconds)
    (164/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.068337528 seconds)
    (165/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.100694217 seconds)
    (166/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.163902804 seconds)
    (167/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.092247711 seconds)
    (168/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.098257694 seconds)
    (169/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.092180653 seconds)
    (170/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.087177623 seconds)
    (171/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.099142877 seconds)
    (172/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.094151708 seconds)
    (173/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.173825472 seconds)
    (174/286) benchmarking ("sort", Float64, false)...
    done (took 0.149255711 seconds)
    (175/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.125696548 seconds)
    (176/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.110498641 seconds)
    (177/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.088380341 seconds)
    (178/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.163501969 seconds)
    (179/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.09759795 seconds)
    (180/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.110090246 seconds)
    (181/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.094367775 seconds)
    (182/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.144166193 seconds)
    (183/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.06727141 seconds)
    (184/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.090776709 seconds)
    (185/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.091979083 seconds)
    (186/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.09452255 seconds)
    (187/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.124827022 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.109501218 seconds)
    (189/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.09637948 seconds)
    (190/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.110086503 seconds)
    (191/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.094737154 seconds)
    (192/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.090543627 seconds)
    (193/286) benchmarking ("sort", Bool, true)...
    done (took 0.224753772 seconds)
    (194/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.077309835 seconds)
    (195/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.17645572 seconds)
    (196/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.086377388 seconds)
    (197/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.119744676 seconds)
    (198/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.15805649 seconds)
    (199/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.10672282 seconds)
    (200/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.067076105 seconds)
    (201/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066152508 seconds)
    (202/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.117422227 seconds)
    (203/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.138023846 seconds)
    (204/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.11913906 seconds)
    (205/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.119040442 seconds)
    (206/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.09645202 seconds)
    (207/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.11935605 seconds)
    (208/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069467796 seconds)
    (209/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.100638726 seconds)
    (210/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.16950161 seconds)
    (211/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.111713169 seconds)
    (212/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.087751125 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.111654249 seconds)
    (214/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.093610941 seconds)
    (215/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.341521927 seconds)
    (216/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.067049342 seconds)
    (217/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.102737765 seconds)
    (218/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.067494489 seconds)
    (219/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.068079559 seconds)
    (220/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.12413808 seconds)
    (221/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.109582867 seconds)
    (222/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086378559 seconds)
    (223/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067175562 seconds)
    (224/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.111690421 seconds)
    (225/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067264064 seconds)
    (226/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.090892223 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.08762379 seconds)
    (228/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.099766302 seconds)
    (229/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.093913436 seconds)
    (230/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066862907 seconds)
    (231/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.109958249 seconds)
    (232/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.15660876 seconds)
    (233/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.077339423 seconds)
    (234/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.112893629 seconds)
    (235/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078598893 seconds)
    (236/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.076436568 seconds)
    (237/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.140268457 seconds)
    (238/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.06788898 seconds)
    (239/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.091992587 seconds)
    (240/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.139744691 seconds)
    (241/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.11309508 seconds)
    (242/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086583861 seconds)
    (243/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.120878512 seconds)
    (244/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.181195571 seconds)
    (245/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089865928 seconds)
    (246/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.091316469 seconds)
    (247/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.086638144 seconds)
    (248/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.165173424 seconds)
    (249/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.086869766 seconds)
    (250/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.119001214 seconds)
    (251/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.087106978 seconds)
    (252/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.117282139 seconds)
    (253/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.126909364 seconds)
    (254/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.092087843 seconds)
    (255/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095823442 seconds)
    (256/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.090745417 seconds)
    (257/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066672158 seconds)
    (258/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.108591013 seconds)
    (259/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067762561 seconds)
    (260/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.06757227 seconds)
    (261/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.109670853 seconds)
    (262/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.078148066 seconds)
    (263/286) benchmarking ("sort", Int8, false)...
    done (took 0.18857825 seconds)
    (264/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.124604893 seconds)
    (265/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.087516619 seconds)
    (266/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.110402416 seconds)
    (267/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089749642 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.119005326 seconds)
    (269/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.124510137 seconds)
    (270/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.067004599 seconds)
    (271/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.086283439 seconds)
    (272/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.110066126 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095045145 seconds)
    (274/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.090756902 seconds)
    (275/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.068695961 seconds)
    (276/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.112872076 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.093302906 seconds)
    (278/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.233219491 seconds)
    (279/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067861936 seconds)
    (280/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.09250183 seconds)
    (281/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093686823 seconds)
    (282/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136515359 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.11707096 seconds)
    (284/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.157811965 seconds)
    (285/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.091037714 seconds)
    (286/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.077700358 seconds)
  done (took 36.230237669 seconds)
done (took 37.123081046 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100985721 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148611527 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096510641 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136438795 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123783205 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09154566 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119311876 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098289003 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124164038 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125083613 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098520565 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094026178 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097696375 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120657964 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097457687 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139119766 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123456765 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093979852 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119790406 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086057965 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119293934 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086661953 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112514376 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070159598 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121802752 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094574869 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117925322 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120033527 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087908463 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110289929 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.092724023 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117411124 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086517072 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124089697 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09366576 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119682213 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096806747 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121323464 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.11220533 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086735838 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119030888 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087583863 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116449651 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.096026727 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117175941 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092717602 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119928987 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099074778 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140197346 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116191673 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.09592285 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.124861834 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097152438 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118050062 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090880162 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120568901 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092514359 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.140498312 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119961054 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092200511 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118384379 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095496634 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117158696 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095553196 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119837073 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121769047 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098759826 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116215785 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096842438 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116911408 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086763822 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119579553 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090886943 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110950326 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09572115 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121840292 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109662208 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092608636 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117581707 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091954751 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.11029173 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09032312 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112560245 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094199816 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113701829 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070238588 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.115648059 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093265319 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110355656 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096809327 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117019168 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094389745 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112700206 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099090644 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111507011 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092935587 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111874638 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.088277479 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.11379117 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091760411 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110719088 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090460348 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120958149 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.112543442 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.093264769 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124491393 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087789028 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117617645 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087581935 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110520466 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102473566 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122453563 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087213409 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117129617 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086439228 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119328501 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086272096 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111202852 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.110693021 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.088141211 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.117243425 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087781038 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11454165 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094787299 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126051326 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087163667 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.116098559 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090417896 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111729926 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093437284 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111891777 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088039746 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.114007627 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078483696 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114888464 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087626101 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119328728 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090689266 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120719919 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.090345214 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120613216 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091683806 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117835151 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.11697223 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.086594645 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075478802 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117072512 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090620807 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113852359 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088144604 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114431964 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087855998 seconds)
done (took 17.01179898 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087232176 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185217495 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.15206752 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143626367 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.1081235 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112464277 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122991846 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119326651 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113722043 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143373441 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110849974 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132586842 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148401236 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087993802 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112509679 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.09220953 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114250116 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.10281185 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146731535 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133024109 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.16510334 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087449072 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147093076 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136395508 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121512567 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105861834 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112249172 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092017125 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116048921 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112946618 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133889688 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115532895 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.089070278 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135341169 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104957814 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120617258 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088422063 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119430553 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087732695 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.113707513 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142398165 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133737009 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092835331 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.119104084 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092053821 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115127169 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090404456 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122256534 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.099368682 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116528178 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126834009 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158357448 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091897361 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123602946 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087288081 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123160502 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122418306 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091871651 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112563642 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090735093 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112130886 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.09234074 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127608702 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142530011 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.09262075 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121995433 seconds)
  done (took 8.658127873 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104406162 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140117091 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106316231 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.130977794 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112390919 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089523725 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113051836 seconds)
  done (took 1.750146441 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089037792 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135757495 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11093099 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136464493 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133156385 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112885974 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124312942 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089800779 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133630739 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.090068322 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13491426 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151146332 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.091364484 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121927946 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.139091202 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.08927817 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138320978 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089680448 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117096536 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.113262668 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117824736 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136072904 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.092498778 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114076477 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103563749 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115437908 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162759573 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095274405 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115992531 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.09387072 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113754642 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.151637598 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104034356 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125584403 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089491737 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130778109 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128877706 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087902095 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.127324518 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095652598 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128041586 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090451091 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114832249 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.088135289 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119001108 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099951736 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.118254445 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.132432376 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.09262867 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133920497 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.091157214 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128175833 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089853619 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118061198 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090908973 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120543078 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.099498787 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115173059 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134319993 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091154277 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131224973 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105866101 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128590862 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13114796 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092355422 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128484695 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103818417 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117411001 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091523682 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118074458 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.106251428 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112313547 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116111048 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100342917 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116464494 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113697505 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138243228 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090699597 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125517312 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.116037964 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090314882 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.11492696 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113683263 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118245239 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090343866 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118679719 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09269585 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113043659 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088706757 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117899004 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087924635 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116054425 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.093632236 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115100237 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092471963 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.130584489 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115040119 seconds)
  done (took 11.891826858 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090393694 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115103669 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09188612 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115632585 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091149685 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115416335 seconds)
  done (took 1.585152331 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.117356729 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118290125 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104650535 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121984104 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156735046 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104084371 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.131191642 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124923128 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.109250171 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128421849 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129635107 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105530812 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.13645545 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122682912 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105755838 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121465421 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.130481794 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100868704 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.12768874 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09774136 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137432743 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122301314 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097860044 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132348331 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118794107 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096631088 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127488961 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.10511589 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127778365 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123463442 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097307737 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118937925 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096584447 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123532053 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130805343 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096151925 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12123452 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120019352 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101198041 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118870363 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105321361 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122466749 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127124565 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094721396 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125128938 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121398891 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095179345 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126150049 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104524724 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.122137887 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122199906 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096056877 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121111504 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.09467359 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122454261 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12594331 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095335982 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130334243 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.12183852 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096602913 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119419119 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094416293 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125776765 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118900051 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104931601 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119761304 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096295969 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122639413 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123037532 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096651544 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120001742 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.094296004 seconds)
  done (took 9.28454379 seconds)
done (took 34.121410792 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.685775485 seconds)
  done (took 1.65096888 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.831002991 seconds)
  done (took 1.798034512 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.97622665 seconds)
  done (took 17.972965511 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.492495719 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.57963039 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.98210517 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179383097 seconds)
  done (took 3.20146181 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.94324345 seconds)
  done (took 1.930662369 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.283420346 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.234639687 seconds)
  done (took 1.489073064 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.780065623 seconds)
  done (took 1.761347991 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.361522493 seconds)
  done (took 2.333290177 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.326135131 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.1850907 seconds)
  done (took 1.490004151 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.549380683 seconds)
  done (took 1.528192659 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.026987835 seconds)
  done (took 11.011116593 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.268302086 seconds)
  done (took 1.262228501 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.301065081 seconds)
  done (took 1.288455226 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.465643567 seconds)
  done (took 4.452166325 seconds)
done (took 54.148293583 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.100006937 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127111527 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102530691 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125079216 seconds)
  done (took 1.434446333 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.10146744 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121741786 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101531621 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121050522 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126592368 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.09654317 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124178864 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101350725 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121336083 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096710542 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122184917 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120875008 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099490244 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123577414 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094149081 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124728341 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124904441 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.096376977 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125844371 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.09800433 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119491051 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.09849533 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125546038 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.09507805 seconds)
  done (took 3.669903072 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101176192 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119196666 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097631205 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.11881445 seconds)
  done (took 1.431940268 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100958203 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.1312604 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.1071662 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126120671 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131574214 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106632255 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118553822 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092952727 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.120166087 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.101083574 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116296123 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.139752162 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.106736073 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.125178878 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102228878 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114504985 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.092601026 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.131490339 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124768252 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100975591 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.119242315 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.101081599 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.115443021 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.109068948 seconds)
  done (took 3.72692715 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171356733 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129515865 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.13908401 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095975459 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161134526 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141211307 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088992237 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.14156948 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088438304 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131458317 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118808865 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.135340425 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130080199 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088709008 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113796966 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088295543 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129241909 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129863537 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090763833 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128264413 seconds)
  done (took 3.440132411 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098243925 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118334708 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088203966 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116685341 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099565247 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121783559 seconds)
  done (took 1.63843996 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091798944 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115626605 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090872564 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115701784 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.09486564 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115053162 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089011378 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115096737 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090394119 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115539926 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090078399 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113684154 seconds)
  done (took 2.233730008 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.50830891 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.121167328 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121344973 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090269455 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122990434 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090227267 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129969836 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.093328234 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142105941 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089054914 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116739217 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.09427107 seconds)
  done (took 2.714859969 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238687518 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12698175 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285121107 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.367085326 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156442178 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165279956 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.282074691 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161934112 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.199985774 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152160235 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231722714 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200461856 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153740933 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192692454 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13824901 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.146286149 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191567965 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251294055 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153880089 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211776883 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208585392 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16731249 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180481417 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152598688 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113132366 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193845832 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.096488365 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131341464 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234875553 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180906098 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191152942 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161601942 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14805879 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238501585 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250410375 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19705671 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27981238 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135240585 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.167247136 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.144111347 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265795744 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139834063 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236125236 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156910231 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105774654 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221877456 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167444452 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177229172 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.147550251 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139162387 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200026575 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244743865 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.194156577 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139919789 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29894893 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148759731 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.160128515 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190103759 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253504936 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226926367 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190821988 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121854309 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189443195 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193240278 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212978558 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.153161394 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.183817555 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148453337 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184928025 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190714139 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167464324 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206090119 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.181171581 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139791001 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172154999 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173720832 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174598716 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260538876 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185439197 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123416533 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170777051 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149552745 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131627413 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.16931481 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126146126 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217030206 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144236058 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.165060844 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209958673 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160184245 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162397268 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223398474 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185961167 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149508362 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084573076 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153591715 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15640973 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178210529 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140816387 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159496168 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157981037 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130539781 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172249231 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097928836 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212464458 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092214208 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174965188 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211603824 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100916607 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161678875 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154152246 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151914242 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178829181 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199879837 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140941448 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134731054 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210579166 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180694136 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142938213 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178327666 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230090842 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117809406 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149498498 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228418547 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246450181 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113709303 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228849114 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154473951 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108318646 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134065066 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182957877 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156589641 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162334708 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132709841 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.185203848 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234531536 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099296203 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1399548 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196148805 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135603041 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132612199 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155771148 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148350376 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.112420705 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.143841411 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.145287339 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177545531 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179852897 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156236552 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167391166 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150746345 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250648829 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14031803 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.151408621 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122148291 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121584642 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.195358706 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228152899 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10369697 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234306867 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172983755 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226047427 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17170983 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108019006 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179061804 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130538373 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120072645 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194458639 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168576349 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163706023 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.197210637 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223424455 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.181086409 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.211874004 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167492935 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176522273 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.166468986 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155989316 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111373646 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161440572 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159131169 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124768717 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.141408935 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.109528606 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150424296 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14401702 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133330296 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199172952 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170749538 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217755204 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159801943 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148948501 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181717644 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102340276 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20448322 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.179885139 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146457205 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.199734284 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194470591 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214933934 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117698713 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229524718 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093843594 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127522406 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142618505 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172172119 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134794336 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10940549 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163388515 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207901698 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183004753 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175445037 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233405905 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177994024 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193476456 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094918165 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168897418 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185341645 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204403184 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.155907065 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140220857 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152261077 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17924087 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156167741 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257632443 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168880887 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176682883 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235384623 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.123668445 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133989963 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151442435 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178886455 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154634007 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176592101 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148058127 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139529295 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162331904 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.103709688 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188357508 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187057435 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165386375 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188426044 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150304711 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214086864 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101390812 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162320788 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161897332 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167800402 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.109433041 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177101646 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203789199 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148347544 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169149902 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217603403 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105156237 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.31046333 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236082616 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196858917 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139522551 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156027408 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162227385 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16379447 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171282119 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179753478 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159588548 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188690125 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160232466 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.13733997 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139824299 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12332682 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152942331 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133690554 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149108738 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178162089 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139658689 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188970554 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157016747 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160699476 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17382224 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.15052683 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144587637 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123471919 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246516956 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184801744 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240566802 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.1506474 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179597713 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208080406 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127608641 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132058237 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.107709364 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179014428 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137136845 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192087017 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.215838696 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199724101 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209129914 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179914404 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13967821 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.093788282 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15870989 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17051664 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230977411 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149303193 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.12150279 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233051419 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.110553957 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134171066 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167822565 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289189597 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145212952 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221594374 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081662176 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.283353881 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125860868 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106265825 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164044318 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237115282 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135828866 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.152361113 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168354393 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162109034 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163453204 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149657593 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218563535 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212740259 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227712892 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185261324 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105237291 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156547231 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204676126 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194259122 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156183268 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.138023328 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207198595 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195838944 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.223554424 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.115725611 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195736144 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168678102 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158792729 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188109442 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136440393 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209228911 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135779184 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193485294 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153040981 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139623663 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177735486 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.215320186 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114317743 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215160807 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184100735 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136324342 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106410612 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167040626 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206676585 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15518654 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100669242 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210377226 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.09858723 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193858203 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263522997 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134474078 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157141832 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146620586 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108712305 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156112316 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158698623 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139559152 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.163881344 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204760569 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.1358595 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191860861 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231033766 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172943037 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174009432 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14687706 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.6947705 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130925078 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196497584 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148895846 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206719555 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152540788 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174206908 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160614724 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170540061 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223556573 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16227402 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231216777 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192255153 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179910665 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133713828 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159152916 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1560116 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.146906407 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154076013 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168569847 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162265796 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.146668598 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.179250736 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165448468 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.134252998 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114021958 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227640046 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120744867 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215912249 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181098166 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112126001 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20080751 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188207705 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133316326 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.181801392 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236709596 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114301487 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149486013 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.136186566 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.152601285 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263603865 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.098502472 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21938128 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186659296 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160622488 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169918147 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148815229 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194837845 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158548559 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214133674 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117046718 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159788266 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157743435 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139911537 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.132195022 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156913968 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170688838 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.122647278 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187974639 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.139619672 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1958355 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.125677649 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145974972 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284912214 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178021814 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245932263 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.108649891 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136710422 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165375406 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15067355 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.179277247 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179162568 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136555116 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135701736 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.109296842 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.156365099 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112074366 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156929525 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191998512 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19245608 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208556638 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136606903 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279438192 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114427729 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155835731 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115562189 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105096574 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150939613 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145735912 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155975612 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193823134 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263277452 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147655977 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.13308295 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12188672 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127616955 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135564081 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163940858 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16531153 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18071512 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144193316 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081744042 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156241561 seconds)
  done (took 82.875961263 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173380484 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.133869803 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147667535 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202035979 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176936178 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.27020471 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210408785 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253351764 seconds)
  done (took 2.653969761 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093640548 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.14657429 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157423283 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132162098 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091410721 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120356544 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.343463574 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.131430318 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116095495 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120408281 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.174343629 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093501008 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.551339908 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091449736 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119815019 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107477503 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092273179 seconds)
  done (took 3.762663313 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.230571891 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.498098342 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.043299724 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195013269 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159838669 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.117719421 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.707651804 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.096329913 seconds)
  done (took 12.137923625 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.115718332 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136047646 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123578826 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.153537267 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.141296531 seconds)
  done (took 1.77055509 seconds)
done (took 124.473065878 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098321553 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127947814 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098407849 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130516797 seconds)
  done (took 1.535736091 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094935604 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071041721 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101213009 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075416629 seconds)
  done (took 1.431623667 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.190765543 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.167626844 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.381993828 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072678268 seconds)
  done (took 1.575667471 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.11473177 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132233245 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104391143 seconds)
  done (took 1.4528964 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106409502 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129514234 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103428125 seconds)
  done (took 1.4373966 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106727079 seconds)
  done (took 1.203519241 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107515083 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.13773389 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109267931 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136643495 seconds)
  done (took 1.589306793 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.099544939 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127308463 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109132408 seconds)
  done (took 1.432798564 seconds)
done (took 13.108659439 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103992303 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.41929312 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413149452 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110558478 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.720897223 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381218248 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.04723406 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145455205 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165777073 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094480287 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139074126 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672071677 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.075824068 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.374280855 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.033753514 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.372260996 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.68972028 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121802161 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09170136 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121568382 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.03081698 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092152199 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121605185 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093341791 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.70669093 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.397527649 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123428803 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.371825655 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092964428 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126464386 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383744691 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123300951 seconds)
  done (took 17.040498501 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095895319 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174152672 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098912446 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123729456 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123316145 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09450995 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12452183 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094237417 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179879108 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123046174 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111314124 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121959788 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126129935 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094987787 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141291668 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096315177 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124674766 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093432409 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121373387 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094010403 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139503067 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120055642 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094679208 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121403987 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094285614 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135873739 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094956839 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122023864 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119626042 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09870908 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127045194 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095667357 seconds)
  done (took 4.820602745 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140540212 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182233336 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128289602 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126463279 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168960732 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123653623 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199549762 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.11796218 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182483849 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123269478 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139986186 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093125262 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.15693974 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122373618 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115002346 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121558495 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097505439 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122112634 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092398359 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12342772 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139796315 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093470789 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121497499 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093997315 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12264397 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108819429 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124523144 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120828845 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094019287 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12603293 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099443003 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123482885 seconds)
  done (took 5.152275692 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097644026 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126290614 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109407528 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138143248 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095241839 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125808655 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.098574469 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124957237 seconds)
  done (took 2.018711189 seconds)
done (took 30.12855125 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.11257563 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127182059 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106758721 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135021039 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103038864 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132471514 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091834749 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134710638 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133747476 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102307896 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137761419 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092744924 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122766367 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091783873 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134907503 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097923887 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133189136 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102450322 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133605661 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132495231 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095211946 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133421248 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104242134 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133705117 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104732786 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133891889 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137200455 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100583201 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122297333 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094825443 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123763166 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103816555 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.127617353 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105781276 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12675181 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097753408 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123874935 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094839324 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133500832 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133462832 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100328516 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133971945 seconds)
  done (took 6.020894808 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108008467 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140027166 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105305756 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081806849 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116682868 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080551149 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137489214 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080274408 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110452231 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108094922 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.076260918 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106375527 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078457361 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101725054 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077425323 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075893425 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108531842 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076478418 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076909052 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105657407 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08034974 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072985852 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107690208 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078612378 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074883186 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.10974998 seconds)
  done (took 3.582835084 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100599185 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133887328 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113607471 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183649315 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161196174 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100832319 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.13143849 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139475814 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109310929 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120345706 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096220041 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149076692 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110804255 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129615201 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091965137 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137942842 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135759859 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094888471 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128508914 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112860642 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139638705 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103388214 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.14117179 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133843768 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092457291 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123164529 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097246194 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135869074 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098203865 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131751157 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097602994 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.126075533 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123088095 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105087216 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125644941 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095551884 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142962974 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.104294665 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.130760981 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.122280261 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101451188 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122459483 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114148177 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.16953705 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092547092 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130169445 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124768502 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.10453417 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121891988 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.113038418 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131942485 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092967902 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126129905 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092283326 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121967311 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108228521 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124342493 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095534527 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132519316 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.127697069 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.107268838 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125670906 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109880011 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.128237721 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100181737 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121730088 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093454535 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122367512 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143805735 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094686125 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162419842 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093163441 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.12405594 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102465601 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.131077925 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128839957 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094109211 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137679803 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103546609 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125752021 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102205564 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.127011325 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094757299 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.141496566 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124941601 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095243722 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123122766 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100487965 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123800227 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094285762 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136528952 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.093002145 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125862195 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110720053 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.121910151 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123171449 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100094049 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126826949 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093142351 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136015268 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.099565445 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123859836 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.132755652 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.094161133 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125060502 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103468815 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126610553 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.09236421 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127914813 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099643215 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.125522005 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094151961 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126767818 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.095324307 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132914815 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129330758 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.099362865 seconds)
  done (took 14.889244238 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.227554651 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216073698 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.207123367 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.292963615 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136358822 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.11510231 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212674494 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155926411 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124466237 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.161774201 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.171789834 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.183572812 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.140897865 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.215076944 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.17178899 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.09435021 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143281952 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.134987915 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.245418552 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.258932851 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144651809 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.101062991 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.165038869 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160377701 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.1379396 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.102377847 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.140528927 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134520963 seconds)
  done (took 5.824138271 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108843132 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155766778 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098256906 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146052395 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.150182443 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093266601 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128182498 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093820872 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136287306 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136795861 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093080938 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129941366 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.101001282 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.13291729 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123656429 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104088548 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132304392 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095368579 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12653252 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097801294 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133662292 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102493961 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127589964 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.12237708 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104134351 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122672903 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087093456 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143623502 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122148805 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115567693 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121242945 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102878044 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.139978989 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094451833 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123506988 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096256711 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126116433 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.096511701 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125700387 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092069285 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123938993 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078736392 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123139365 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.138953133 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100246943 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.08046657 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129909652 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128640968 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095325204 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.12096204 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096029189 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.12556817 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.0973898 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.13128085 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096544118 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125375913 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097402792 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115941656 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100036608 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125693272 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084872753 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121785751 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099335937 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118724057 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101843359 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.12827226 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092302268 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125565669 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097886337 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129881824 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095760078 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130148596 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091729408 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126184563 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096409686 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129141336 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.126912284 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.092873529 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123242666 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094407627 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075364469 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124079214 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073579564 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.1260425 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091965278 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123017918 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095953448 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129992021 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.139703449 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096047409 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132609793 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094951385 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.125498458 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097347747 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113346704 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096527643 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.142801174 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142937705 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094716945 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.123071629 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108536118 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127494728 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093267861 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107409995 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.103600329 seconds)
  done (took 13.032940264 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130833414 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.16036731 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125554291 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.112671192 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.15734575 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.159886452 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101676209 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131194449 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096207475 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142817456 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.095367678 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132909961 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.0944531 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.139416658 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.15770856 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.10488515 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12691898 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.109071594 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.134585415 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169950231 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112422515 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.150226674 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.111327849 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125122985 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129109441 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.11137045 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161961451 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108937284 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.138111774 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142847123 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108702937 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161329314 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.144443174 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099120492 seconds)
  done (took 5.533269582 seconds)
done (took 49.988234248 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.208002493 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.424511149 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.199165428 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.134218874 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.24265826 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.242132542 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.213144694 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.19666102 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.849604878 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.204580661 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.463686171 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.815238821 seconds)
done (took 60.321500947 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.283179481 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.359316139 seconds)
    (2/2) benchmarking "String"...
    done (took 1.494692947 seconds)
  done (took 3.980387729 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.808768351 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.144404082 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.462164358 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.199368733 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.199542661 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.487819777 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.913500887 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.587699679 seconds)
  done (took 28.121223188 seconds)
done (took 42.323693967 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.209864069 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.263251319 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.230437662 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.179296069 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.311712214 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.248617162 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.509272771 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.205445782 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.217856625 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.196148878 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.220897936 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.206936729 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.211382671 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.575008067 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.218141524 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.205344312 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.240177957 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.688181548 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.622504357 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.218377435 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.234567479 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.26200709 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.222611694 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.20297743 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.249564071 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.206052559 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.226834538 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.209773557 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.760756455 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.20244973 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.21626747 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.714288984 seconds)
  done (took 190.814090747 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.202293178 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.256508931 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.335774166 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.24865254 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.78376542 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.399329198 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.354774368 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.847264004 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.219327364 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.205114191 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.451702934 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.206834633 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.526640786 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.176334327 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.232540981 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.266345458 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.5321106 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.531698186 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.242272703 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.359006354 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.214813868 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.606210921 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.531835781 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.410397858 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.255019649 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.228696623 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.22198853 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.226273833 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.398519456 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.468661481 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.256390446 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.21472831 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.826013086 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.059879974 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.213237425 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.234496271 seconds)
  done (took 150.873238004 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.204071305 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.202578507 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.204423751 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.235886672 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.204228334 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.787999893 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.79004241 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.716415204 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.498241423 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.595521951 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.464266671 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.205465418 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.203489016 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299310775 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.216525412 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.204832322 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.21984932 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.247463493 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.209330146 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.206860728 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.785022296 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.223230135 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.204353226 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.381839921 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.220560132 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.237950493 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.594466181 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.325007002 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.22613276 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.238781095 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.537022211 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.253950161 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.204749793 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.596268709 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.824674716 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.322725115 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.207564095 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.238579435 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.206042504 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.486497416 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.206942358 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.206666729 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.208173936 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.898895001 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.210300757 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.791333687 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.210030225 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.17549425 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.210400117 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.206592256 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.213422937 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.903695549 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.226419762 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.206464331 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.209357889 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.207117091 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.206672348 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.238958413 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.22582257 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.305029175 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.224084584 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.209992569 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.239803967 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.207898825 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.356542564 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.227715421 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.590070749 seconds)
    (68/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.211495976 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.320348583 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.260697205 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.789368635 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.211541259 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306735281 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.329779024 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.207687262 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.207135704 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.207537748 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.208501225 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.319732576 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.20732249 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.208176556 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.621163911 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.385638267 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.226033018 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.605097672 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.3099371 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.208475197 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.624645957 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.213079156 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.208659181 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.958365451 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305747071 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.207841643 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.207925924 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.20865171 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.620725012 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.792357481 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.487695552 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.213873027 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.27118319 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.212322141 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.640680396 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.761998037 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.9034508 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.211679711 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.320621562 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.384616471 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.223192709 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.207246395 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.599025954 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.211586803 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.266397509 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.207157189 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.605111215 seconds)
  done (took 366.119353894 seconds)
done (took 708.936265018 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.795480525 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.792850388 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.902277285 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.780493701 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.748812081 seconds)
  done (took 10.15213387 seconds)
done (took 11.285380972 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.391602748 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.391091688 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.265755687 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.394073741 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.238644009 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.408485194 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.370494134 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.227416671 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.306273813 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.286797616 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.306048386 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.258601356 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.240591273 seconds)
  done (took 18.218405644 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.526549871 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.519772377 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.269658887 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.523875529 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.246384995 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.52697771 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.413937103 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.430333427 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.432546642 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.237943569 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.218922009 seconds)
  done (took 16.479897977 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.534261845 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.538466139 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.27240319 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.534849704 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.247505863 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.535087086 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.409098918 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.421409898 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.421049656 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.239341342 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.217852448 seconds)
  done (took 16.502447609 seconds)
done (took 52.334839422 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.214593163 seconds)
  done (took 2.346023602 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.248217289 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.410479152 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.235493572 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.218819448 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.215486257 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.219174086 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.21940041 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.217283027 seconds)
  done (took 11.117313662 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.21490072 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.212698295 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.212385901 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.214968155 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.21272665 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.216063483 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.215430497 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.212502862 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.215254491 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.213242719 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.215492251 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.215888914 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.215677694 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.212042758 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.214193452 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.213486088 seconds)
  done (took 20.559769212 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.21552368 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.213433126 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.212996747 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.214821849 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.213101365 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.213469965 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.21470405 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.214279259 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.213532051 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.213860571 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.214368986 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.213328052 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.214341931 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.213819037 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.214594343 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.215169101 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.214029533 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.214807802 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.218002108 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.215278798 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.215755755 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.215003566 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.215070694 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.214582148 seconds)
  done (took 30.28406559 seconds)
done (took 65.440793722 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.837360136 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.880532261 seconds)
  done (took 6.852221422 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.217885747 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.21491141 seconds)
  done (took 3.569045699 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.217231265 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.216524766 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.216545288 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.217124605 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.217078123 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.217500154 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.216484832 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.217091486 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.217765798 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.216341705 seconds)
  done (took 13.304125392 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.217301786 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.217703841 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.215012047 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.21771078 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.216751226 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.215338347 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.217144024 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.21909384 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.218160133 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.214353026 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.218376906 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.216329612 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.21847234 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.214868362 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.21799434 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.21631357 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.216083244 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.216066832 seconds)
  done (took 23.039140497 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.218735581 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.2181955 seconds)
  done (took 3.572965307 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.215535886 seconds)
    (2/7) benchmarking "second"...
    done (took 1.216138066 seconds)
    (3/7) benchmarking "month"...
    done (took 1.216418569 seconds)
    (4/7) benchmarking "year"...
    done (took 1.216266396 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.217132028 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.217378505 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.216817998 seconds)
  done (took 9.651729783 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.219936397 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.393035531 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.477483685 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.811167269 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.220775064 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.223165981 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.088437872 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.224281606 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.225825069 seconds)
  done (took 14.02098901 seconds)
done (took 75.146180012 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.232775877 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.229317755 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.478264724 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.232775165 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.233960537 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.556284089 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.23593309 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.334822751 seconds)
done (took 37.674298761 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.218969696 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.203622101 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.974739697 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.20054836 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.264253099 seconds)
  done (took 18.780897619 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.304342527 seconds)
    (2/2) benchmarking "read"...
    done (took 1.552769776 seconds)
  done (took 4.995163508 seconds)
done (took 31.134253099 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221947734 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.220529324 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.220137026 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.218308622 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.21776467 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.221026077 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.219662315 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.218068387 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.222108699 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.221399437 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.221331691 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.221808451 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.221486387 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220735675 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218649465 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220504665 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22141294 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.217871743 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219023566 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218028812 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.218265016 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221310048 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.218685531 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.22009357 seconds)
  done (took 30.4184245 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.221499421 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.220862457 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.221712 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.221661172 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.219741213 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.222080506 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.222829876 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.218257593 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.221193437 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.221048901 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.218369143 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.217988534 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.22138451 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.218678095 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222409877 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.218386628 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.221420154 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218087428 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220969508 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.218345972 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.220599341 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218241966 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.218990355 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220966796 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.218454147 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.218470664 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.220859286 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.21857876 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.221125676 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.219327628 seconds)
  done (took 37.742390498 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.226856073 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.228063865 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.220453891 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.220948535 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.222297819 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.221475798 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.221215427 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.221368032 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.223882723 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.220243133 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.220797643 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.220861232 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.221829546 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.221135494 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.221331272 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.221766949 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.222420572 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.222425719 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.222689036 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.221196162 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.222048687 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.22186261 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.222183651 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.222037132 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.222759951 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.221962335 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.221351809 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.221907379 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.222336131 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.221655298 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.222006639 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.221821422 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.223039279 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.223146617 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.220520893 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.221977729 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.227573403 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.230001557 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.222471896 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.222583776 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.2221246 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.223477563 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.22296976 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.223622522 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.223182246 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.223393736 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.222166987 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.223084819 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.223278172 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.223801879 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.222857981 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.224442657 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.224300852 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.223110342 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.223647509 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.223059041 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.223659652 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.223901955 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.223505686 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.223771208 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.224976429 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.224518325 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.224925567 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.224079768 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.225647194 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.225605101 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.224816464 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.22401953 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.224371677 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.225889047 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.225022405 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.224505201 seconds)
  done (took 89.205153403 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.226724622 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.222710935 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.222009586 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.221414715 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221905292 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.224534069 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.221819994 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224703068 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221463227 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.224780391 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225007296 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.222665768 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222623262 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.224396027 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226131517 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.222571724 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.225524253 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221784851 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.225704738 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.225981622 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224360744 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.22319005 seconds)
  done (took 28.064078271 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.226029226 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.2284761 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.223507621 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.225800032 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.222838574 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.226721884 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.225087618 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.229086801 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225927818 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224449555 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223502515 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225858467 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.223357147 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22366075 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223527748 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.226020858 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225528844 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.225737136 seconds)
  done (took 23.197848253 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.224362901 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.224857018 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.226675984 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.223743233 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.224437479 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.227373952 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224298747 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.226422263 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.226478256 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.224016384 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.22737488 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227725895 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.227655419 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225196077 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228005319 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.225030011 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.22751507 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225658118 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227710757 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.22560449 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.224559053 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228917804 seconds)
  done (took 28.117826585 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227913417 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.228469445 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.225157748 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.226193264 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.226318824 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.228773796 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.228750801 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.226382837 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.230655641 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.229434339 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226688309 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.230150546 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.227194231 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.22795702 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.227167872 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226667174 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.229113842 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.227781525 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229362373 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.226896279 seconds)
  done (took 25.702609594 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.231010171 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.229338321 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.230075524 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.230688216 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.230499919 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.230300463 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.230860626 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.229889733 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.230956883 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.231151542 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.230538841 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.231738123 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.230515039 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.231198519 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.230388904 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.230705233 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.232222506 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.232357696 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.232228722 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.231444779 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.231053854 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.2315305 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.231691687 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.231702632 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.231609639 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.231546573 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.231639254 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.230639429 seconds)
  done (took 35.616727105 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.231025721 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.231482729 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.228581828 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.228409738 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.228994655 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.229430206 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.228935531 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.22942321 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.232035134 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.229499384 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.231479725 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.232376745 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.233486872 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.233977547 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.233837202 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.233570525 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232807478 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.230286819 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230456361 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230761392 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.233316987 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232911399 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.234128822 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.23060773 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229255122 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.232680794 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229417892 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.230603987 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233271997 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.231114081 seconds)
  done (took 38.086776993 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.252156807 seconds)
    (2/2) benchmarking "in"...
    done (took 1.251229134 seconds)
  done (took 3.652325174 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.230860406 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233509858 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.233786827 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.232232949 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.230652224 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.233885052 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.234135813 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.231427347 seconds)
  done (took 11.01062954 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.234717681 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.234386239 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.23491126 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.235170799 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.234493772 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.234316293 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242201138 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.253485975 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.235429491 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.235042719 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.241900628 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.242305199 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.2377398 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.235196939 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.234944889 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.237386019 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.23596161 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.235391685 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.236003448 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.236665053 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.235341331 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237828281 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.239897392 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.233241377 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.236689056 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.246067793 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.257576232 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.234809801 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.236173091 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.240034517 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.235947092 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.233270988 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.236205687 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.2354833 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.235970003 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.235546703 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.244132534 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.253688785 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.243560107 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.254788444 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.23648986 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.233277929 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.237073662 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.236968582 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.238535092 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.236252855 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.237063817 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.233690398 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.236684443 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.240356372 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.242346849 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.236105734 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.234244388 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239940381 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.237647312 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24374428 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.254703176 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.240739629 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.245980071 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.248784473 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.269018577 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.260967524 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.238612226 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.237402752 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.248491538 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.261765513 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.245256849 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.255265808 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.235649953 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.238757897 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.244934204 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.270476552 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.263289287 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.23820698 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.238220812 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.238759204 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.238636118 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.239800841 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.246153476 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.259579102 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.238887718 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.239318739 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.249096476 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.266245136 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.238450376 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.239500866 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.240429203 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.239433489 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.241053728 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.251296179 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.258808217 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.239187156 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.239402979 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.24002396 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.240760943 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.240102691 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.239739559 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239779675 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.238451884 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.24044125 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.239871872 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.243321163 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.24931011 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.239527921 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.240354184 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.246961192 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.259308728 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240486308 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.246648879 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.240643461 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.24023309 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.241948704 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.247088659 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.237251163 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.243465581 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.24879797 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.241301583 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.24169426 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.241218861 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.241994319 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250613982 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.266560275 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.241551928 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.241073196 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.245576225 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.252178689 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242047438 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.243951488 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.24274191 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.238113463 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.239914208 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.24351724 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.241984126 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.243624022 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.242795074 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243604622 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.24115563 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.241671527 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.243142914 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.243415233 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.243548432 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.243474796 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.243132325 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.245177416 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.243896606 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.244653208 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.250318366 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.263357021 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.244092422 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.244585335 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.241444034 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.244779119 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.244599737 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.243050262 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.244350732 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.244100244 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.244190926 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.244665882 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.245384898 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.245439311 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.245152045 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.244727476 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249245342 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.24509949 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.248027844 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.244054281 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.241718676 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.245574612 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.244660978 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.243606129 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.245499748 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.243403184 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.248899088 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.253408919 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.245786963 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.244865599 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.247173347 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244808888 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.24695615 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.245611346 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.248499997 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.25409678 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.245268917 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.252323917 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.265607178 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.246143811 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.246092512 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.246374507 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.247120203 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.246864686 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.249142219 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.253218064 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.258732741 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.270957782 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.246694016 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.250716403 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.247308606 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.250886279 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.250405369 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.247711616 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.247830797 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.246346011 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.24723769 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.247157521 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.248622456 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.246987449 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.246170337 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.247479429 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.246475146 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.246841008 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.248562034 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.248244198 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.247323964 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.24537041 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.248153835 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.247298994 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.2482788 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.24516343 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.247483654 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.247690873 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.247860425 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.248328775 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.254086007 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.246052015 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25014138 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.249443912 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.248773742 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.247561869 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.248810392 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.250502453 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.249307329 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.256574413 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.26824048 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.250336208 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.256781616 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.267239983 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.247981979 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.251504654 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.249850125 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.247017414 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.252267089 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.256752507 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.248451908 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.249345999 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.250488346 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249406273 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250786221 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.255256083 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.266045607 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.249714823 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.249888671 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.251740708 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.247613205 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.251445447 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.251438369 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.25163311 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.25246318 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250211741 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.251787424 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.251503196 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.251036421 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.250179645 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.250745676 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.253707813 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.257822061 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.256482903 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.249816198 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.253358845 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.250874914 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.254940168 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.250900021 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.251545295 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.251287049 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263022371 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.275185066 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.257732223 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.270572817 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.251882976 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.257498877 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.271929907 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.254714409 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251408984 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.252087107 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.251319693 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.251823307 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.249522334 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.252285217 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.252550346 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.253414908 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.254378172 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.256686024 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.253124105 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.252476854 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.252482626 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.252730961 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.252900724 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.252613856 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.254159747 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.254997526 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254101813 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.252025651 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.253861974 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.259906755 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.272700198 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.254744961 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.253128692 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.253747587 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.25320717 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.255392082 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.252768255 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.257589895 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.261299851 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.256671563 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.263443216 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.255358603 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.262942813 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.254053088 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.258445537 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.264911612 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.251038725 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.252612483 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.253778581 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.254439776 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.261321402 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.273498815 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.25527021 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.260758656 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.254046389 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.254232033 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.25372583 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.253171419 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.254313506 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.253618988 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.261501983 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.272098962 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.257812085 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.255004915 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.250905506 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.254927889 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.253571998 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.253875346 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.257165125 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.254018952 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.254688214 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.25522614 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.254537174 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.254682201 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.254655708 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.25588968 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.252446747 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.254409942 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261721693 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.275052817 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.259687062 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.255119507 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.261801728 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.274709023 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.262385509 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.274795956 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.255374087 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.256472569 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.255737046 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.257575541 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.255197532 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.256640987 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.256407487 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.257081579 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.259720529 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.256955928 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.257040451 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.256719894 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.255529474 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.255860578 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.266517475 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282334643 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.258279728 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260407933 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.253696824 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.257108881 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.260895251 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.256608854 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.255660326 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.261089071 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.266415964 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.265420145 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.256798716 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.258019895 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.257768559 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258253695 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.258054048 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.258072745 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.257705419 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.258324581 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.257556513 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.257770136 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.261230244 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.257210378 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.258300685 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.259121073 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.259886578 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.268093914 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.277586487 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.258680308 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.25748747 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.259213631 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.258856226 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.259467837 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.257698174 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.257566755 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.259597841 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.259680647 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.265527313 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.264734218 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.261100293 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.258370353 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.259159945 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.257519773 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.259217261 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.259731747 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.258693199 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.258743768 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.259223907 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.259722469 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.259424277 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.25807595 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.260120467 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.259495059 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.260275189 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.262804792 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.266214629 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.259103536 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.256890852 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.259759533 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.259866136 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.258282233 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.258854095 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.26759927 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.281799226 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.269990931 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.268453349 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.26378821 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.260540032 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.263331052 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.267255835 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.259716416 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.261467973 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.261048238 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.260800255 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.260912236 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.2639616 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262651105 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.266540327 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.279996526 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.259658545 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.27003188 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.279858352 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.261278216 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.261918275 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.266131807 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.260807325 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.258372229 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.261243764 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.261257467 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.268326354 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.28114376 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.261480111 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.263048969 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.260919081 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.264837811 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.266577257 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.262529236 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.263186305 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.259591949 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.262566247 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.262008003 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.263032177 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.260361108 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.261678486 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.262713139 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.266201179 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.269382909 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.261337147 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.264722104 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.262966953 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.263525244 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.262324851 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.263259776 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.261133386 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.260103447 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.262106607 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.263933578 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.262928607 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.26560246 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.262251447 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.265411617 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.26385308 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264150105 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266150888 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.273891979 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.272833568 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.260170174 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.262934258 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.263548064 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.265943572 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.264437696 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.26406425 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.264080063 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.26548513 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.264553941 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.264033106 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.264812126 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.267241086 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279084498 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.283096649 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.264039195 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.264648283 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.26693519 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.265218357 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.261772333 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.26486519 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.267163269 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.267191651 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.272690687 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.265446052 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.271819373 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.284100642 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.266529784 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.269049862 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.268545629 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.272248675 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.267939703 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.265738816 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.265860248 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.271084418 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.281860492 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.265793657 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.276013271 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.298605725 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.285521745 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.267510079 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.266840423 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.264991743 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.267056645 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.267170201 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.267058419 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.267686128 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.267110911 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.266593134 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.269045404 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.272766986 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.268551396 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.267791706 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.266842755 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.2665196 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.268452177 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.265088351 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.26654058 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.267813277 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.268205408 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.267748247 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.2665607 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.267100979 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.280227828 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.294227433 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.270582102 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.268479917 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.265225306 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.269408686 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.270547313 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.278819417 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.276299225 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.268711482 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.270797963 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.269045818 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.268198955 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.267106728 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.268627202 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.267442218 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.267949833 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.265394839 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.281093207 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.293593266 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.272408064 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.266885985 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.268316343 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.268719914 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.269510799 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268797292 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.267902676 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.268202279 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.271816864 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.272079196 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.267981271 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.268547352 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.272120027 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.275908214 seconds)
  done (took 749.206584416 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.267338961 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266257741 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.26667034 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.266430137 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.267098414 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.267053851 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.267944827 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.26885714 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.266407275 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.268095216 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.267088397 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267463917 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.26767255 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.267525326 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.2676813 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.267134 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267598133 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.268238079 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.26713459 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.267500163 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.267594009 seconds)
  done (took 27.796988714 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.270901188 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.268376204 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.268595398 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.271309771 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.268253581 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.271140374 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.268722736 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27135231 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.271676216 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268069725 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.271174767 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272441501 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.267939747 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.26936092 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270080331 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.271700438 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.27312524 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.269739743 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.271664277 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.269445489 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.272370565 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.270570144 seconds)
  done (took 29.13186093 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.273255152 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.272130792 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.272882014 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.271028121 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.272961679 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.269476 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.271894588 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.271609661 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.272585023 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.271523885 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.272397045 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.273442085 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.280415362 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.277458081 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.275041764 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.27227425 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.416803307 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.272014262 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.272546949 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.273170674 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.270810595 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.279235631 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.290189179 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.271294574 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.27155167 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.273569551 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.27343749 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.27338934 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.274553705 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.274830415 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.277166714 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.273329455 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.273633222 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.276166487 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.273279068 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.275447703 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.277975745 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.273964357 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.270157539 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.274816756 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.284215408 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.296675672 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.274570174 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.280664775 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.294374283 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.275057656 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.27812218 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.2824601 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.272306132 seconds)
  done (took 63.829281904 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.274359921 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.275185342 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.272261527 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.274564415 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.274494543 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.275827077 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.275957472 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.275149058 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.273713478 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.273326685 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.276002825 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.272980979 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.273155719 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.275404803 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.277109315 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.273409587 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.273580402 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.273786698 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.274063268 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.273468096 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.273513843 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.276736848 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.276946812 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.273828596 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.276102482 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.273774325 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.273849243 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.276908632 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.274656282 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.274820035 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.276625164 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.276303668 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.276920926 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.273905331 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.274686266 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.277164666 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.276858821 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.27443424 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.277573498 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.274810726 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.277089729 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.277899185 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.277758582 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.277229962 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.275096576 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.279552332 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.27523901 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.274446166 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.275051593 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.276800302 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.277622221 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.27480373 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.276335057 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.274857333 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.27793575 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.278009513 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.274560653 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.276109442 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.278561491 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.275956457 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.274804999 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.278794209 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.276361507 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.278211636 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.277783286 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.276214217 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.27667602 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.279509239 seconds)
  done (took 87.936867515 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.278570565 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.277288531 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.278531568 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277837788 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.277891241 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.278194499 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.278367579 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.278965289 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.27914419 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.278309274 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.279073541 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.278864882 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.278849572 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.278520316 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.279258204 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.278925372 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.27887832 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.279692245 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.279140306 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279420671 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.280500634 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.279546266 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.279971045 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.279304669 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.280649081 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.280153315 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.27976458 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.279708328 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280408806 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.279880505 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.280271295 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.280840307 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.280127512 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.280125237 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.280549899 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.279635616 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.281310618 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280534319 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.280471206 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.280922405 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.281554697 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.281205951 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.282253833 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.281076537 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.280921143 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.280832761 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.281086725 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.281141255 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.282266349 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.280764697 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.281603781 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.281184916 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281772444 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.280444919 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.28203564 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.281860072 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282199754 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.281197903 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282064055 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.281761 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.281940104 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.282606883 seconds)
  done (took 80.566434492 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.28171735 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.283649507 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.280499996 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.280824977 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.282297133 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.279448162 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.28355139 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.283917894 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.282701636 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.283492556 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283680221 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.280399661 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28080573 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28384629 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.281200595 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281468643 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.281775142 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.281123924 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.28387119 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.282032439 seconds)
  done (took 26.837020016 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.28098587 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.285593715 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.28149694 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.282765731 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.284736302 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.28227433 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.286048489 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285707613 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283261524 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285498423 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.28449474 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.285014294 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283025663 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.282615942 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.285907138 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.283987786 seconds)
  done (took 21.739686216 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.28287559 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.284824296 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.285411544 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.284890243 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.282667087 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.283241713 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.286109289 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.282772713 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.283895486 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.286662756 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.285818373 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.286697841 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.285973428 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.284716125 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.28365741 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.286717466 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.283450785 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.284347016 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.285974551 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.286809365 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.283804563 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.284538849 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.285868768 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.285639292 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.283782283 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.284511004 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.282996134 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.284200185 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.283814413 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.287850123 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.283864673 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.284352115 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.284132355 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.285096235 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.286018191 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.284704805 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.287357758 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.286832813 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.287183027 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.287687416 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.289097835 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.284599682 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.287999262 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.2868337 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.285704912 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.287086271 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.284911126 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.285451177 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.285134014 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.28498762 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.288751201 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.286561249 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.288321176 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.289286963 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.289121439 seconds)
  done (took 71.903988229 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.288394036 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.288415282 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.286459579 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.288814947 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.288643844 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.286648124 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.289002701 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.287227764 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.286278517 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.288783304 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.287272888 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.29077061 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.285930755 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.289843944 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.287686609 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.289535156 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.286659772 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.288089552 seconds)
  done (took 24.384242234 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.287971632 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.288081211 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.290421016 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.288631944 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.287342269 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.29096131 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.288761642 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.2911881 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290615787 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.288800766 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287581771 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.291851145 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290569549 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.291413122 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.289621298 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288706377 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.291083096 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.291200004 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.288764371 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.288742583 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.291118227 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.291940909 seconds)
  done (took 29.576906905 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.289973779 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.290835822 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.289183628 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.306856852 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.309781427 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.312473074 seconds)
  done (took 9.001710558 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298457791 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291082064 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.28818879 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292920871 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291537309 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290075963 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288653716 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290338448 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291721581 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289631711 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289773863 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293129433 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292130082 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290055823 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291861206 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29230961 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289420266 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288962809 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289969702 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293974722 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289620654 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293997116 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291037516 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290084896 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290413543 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291808954 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293610475 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292447381 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291441494 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293507134 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293786985 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291282099 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293524223 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292045593 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295550073 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294295796 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290703493 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294391819 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293936155 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290239223 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.29484359 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293926961 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294475678 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291287916 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29383539 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292295913 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291753342 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291830465 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292182839 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29570957 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29583214 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29329211 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295119601 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295849836 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295538973 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296086787 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293513952 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293274026 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294368161 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292581774 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293933833 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294027718 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292700049 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29368787 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295482649 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292680218 seconds)
  done (took 86.540433674 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293514528 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.294349073 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293511427 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294324915 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293411246 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292429864 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293012978 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293377904 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293455334 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293655424 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296542844 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293739618 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29424355 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293595635 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294745384 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293777307 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295019023 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294450746 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294040294 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298046811 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29460603 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293282818 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29438438 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295040168 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295787935 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297392576 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294425132 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294745524 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295167335 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294560206 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295247852 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294526837 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295006889 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.295545438 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295338057 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294232325 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295201565 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295091447 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294715833 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2980192 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294231173 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298438479 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295825534 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295277891 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295996743 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296768226 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296182703 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295694639 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295723829 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296291164 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297139843 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296907144 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296971234 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29623161 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297346666 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296397403 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297717467 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297372976 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296991832 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298415694 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296467882 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296476207 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299895221 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296954285 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297402787 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297858348 seconds)
  done (took 86.711552864 seconds)
done (took 1747.119228167 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.463774728 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.414745198 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.298578209 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.308850572 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.298936435 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.311436046 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.292535753 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.298906612 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.29738911 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.298336912 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.298311431 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.483321082 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.292728335 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.299181614 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.298116354 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.393606995 seconds)
  done (took 42.560905893 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.328180948 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.304908098 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.41486132 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.32273065 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.327035361 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.486256445 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.36087207 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.305093447 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.47215497 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.350170413 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.836926877 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.32906089 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.303470464 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.397511285 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.321638157 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.486690976 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.548750257 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.842087868 seconds)
  done (took 29.950086197 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.745245787 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.30410363 seconds)
  done (took 9.261885979 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.323142155 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.303441914 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.304839785 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.303267757 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.296288733 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.296667928 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.302881497 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.302366734 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.888538571 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.425343822 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.309426622 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.314186927 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.322509888 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.304110359 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.299908667 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.342466432 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.500385026 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.300945375 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.299429462 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.309298814 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.303223114 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.386958387 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.342919641 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.303720956 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.424634145 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.873683463 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.305145509 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.309982052 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.492142401 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.301182993 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.301107575 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.302748769 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.303029108 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.206558573 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.733748246 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.319261317 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.325909662 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.311029937 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.300656551 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.447283022 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.304559072 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.308926204 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.295231901 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.723484069 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.432697282 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.415146151 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.453470646 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.320344445 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.303938205 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.363490767 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.303600383 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.30454875 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.349512089 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.066496865 seconds)
  done (took 109.813185072 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.310109842 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.685166374 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.462972228 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.315736635 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.910862956 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.967491479 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.314314783 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.574101232 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.337470742 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.29703315 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.583940063 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.792366961 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.31565338 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.316807067 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.933462249 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.36670006 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.299188565 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.052621761 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.314976681 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.301607886 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.790178084 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.29820783 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.298961071 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.556206146 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.336815689 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.742254162 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.68481768 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.742010649 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.317823176 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.298401906 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.753038346 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.325541394 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.304670428 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.301570793 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.554385769 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.646259565 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.641473667 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.318685896 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.314517149 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.2985839 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.331612696 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.734162411 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.642040197 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.313736919 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.311582155 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.741099714 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.312742952 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.301653447 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.304424967 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.498595657 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.934162633 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.298261168 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.604266219 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.297396572 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.576972824 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.36385346 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.340868859 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.761920297 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.313010211 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.368825207 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.317136018 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.296575959 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.300708921 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.300582313 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.300678243 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.628242471 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.571479311 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.300253286 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.626847058 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.755323092 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.316089854 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.810305363 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.179698807 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.317320127 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.368732985 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.296802496 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.84521592 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.769904943 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.334929837 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.297502548 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.612658561 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.315601648 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.56980238 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.312775532 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.298974812 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.809331303 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.307015673 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.345899782 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.297895406 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.314941457 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.917065511 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.310004742 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.556491016 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.366506276 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.299654477 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.29680577 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.315286694 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.297572366 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.315703397 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.299402508 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.810784943 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.321599051 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.402795992 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.315793666 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.300339873 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.299145083 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.301279792 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.299258034 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.513976644 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.73137182 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.320670626 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.300790973 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.301368357 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.299498661 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.56542678 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.300473723 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.587807141 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.317630283 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.298925026 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.300802121 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.962709326 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.367779108 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.300170921 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.304224067 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.172105786 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.503831867 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.317511552 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.300795788 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.300617226 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.316249413 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.475020324 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.318144462 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.349412136 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.305067628 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.987646495 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.347432745 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.326168356 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.59164865 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.310295941 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.08416514 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.324123469 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.303842367 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.596599537 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.561146738 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.473045796 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.301134805 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.317660249 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.980100304 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.371766206 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.437410377 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.319211992 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.386836032 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.497673877 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.529208722 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.303808945 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.908700205 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.301530258 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.513090733 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.302838047 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.608417026 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.770823962 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.31884852 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.303687976 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.984196567 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.021026402 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.104215401 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.305743182 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.570739598 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.246196143 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.766474145 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.303233017 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.303683012 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.742953635 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.304858396 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.302400761 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.30342879 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.303689837 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.452924031 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.475084241 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.952305728 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.311085975 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.735837334 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.336354636 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.303984382 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.312230224 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.303888253 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.651302442 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.375535502 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.308297208 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.313829076 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.305784159 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.309119301 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.760608125 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.208106923 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.311065339 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.454887768 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.918674199 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.321397513 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.304482312 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.880377063 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.536118864 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.795802781 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.366613977 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.595712762 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.324944965 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.341312288 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.864190793 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.378661687 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.758446265 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.324536848 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.311344739 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.881127207 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.320443488 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.37388601 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.305952337 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.304928925 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.821348021 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.322140498 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.309741572 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.468615843 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.323703075 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.567050189 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.306152877 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.312356455 seconds)
  done (took 1102.591281434 seconds)
done (took 1295.389899887 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.306660923 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.306216629 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.290980265 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.311396394 seconds)
  done (took 26.438880576 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.316984998 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.313088389 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.315367372 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.313324787 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.317088759 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.313605718 seconds)
  done (took 9.112971075 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.351488537 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.308032246 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.313232974 seconds)
  done (took 19.197346412 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.508217624 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.533153039 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.627472104 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.485314489 seconds)
  done (took 10.37812463 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.316252458 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.315775127 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.315918569 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.318567545 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.319091491 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.32083076 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.318664917 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.318403587 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.319883748 seconds)
  done (took 13.087930927 seconds)
done (took 79.439969071 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.027534002 seconds)
    (2/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.3020061 seconds)
    (3/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.208232599 seconds)
    (4/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.408347914 seconds)
    (5/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.29045084 seconds)
    (6/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.305060797 seconds)
    (7/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.710257908 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.592922402 seconds)
    (9/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.795722803 seconds)
    (10/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.464446682 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.350951061 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.336348591 seconds)
    (13/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.290549864 seconds)
    (14/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.307677989 seconds)
    (15/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.316622732 seconds)
    (16/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.904088735 seconds)
    (17/286) benchmarking ("sort", Float32, true)...
    done (took 6.310587665 seconds)
    (18/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.310200334 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.916054176 seconds)
    (20/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.810135496 seconds)
    (21/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.310647652 seconds)
    (22/286) benchmarking ("sort", Int8, true)...
    done (took 6.319218845 seconds)
    (23/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.34547281 seconds)
    (24/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.710047348 seconds)
    (25/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.320721987 seconds)
    (26/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.659330891 seconds)
    (27/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.187659258 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 6.311745419 seconds)
    (29/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.345306695 seconds)
    (30/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.62337055 seconds)
    (31/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.426865959 seconds)
    (32/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.311832228 seconds)
    (33/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.292616574 seconds)
    (34/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.651388655 seconds)
    (35/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.291069389 seconds)
    (36/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.873709112 seconds)
    (37/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.291601812 seconds)
    (38/286) benchmarking ("sort", Float64, true)...
    done (took 6.328605227 seconds)
    (39/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.423061246 seconds)
    (40/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.37596925 seconds)
    (41/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.5762552 seconds)
    (42/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.034576742 seconds)
    (43/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.320032764 seconds)
    (44/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.292858105 seconds)
    (45/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.366132851 seconds)
    (46/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.302388314 seconds)
    (47/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.292306339 seconds)
    (48/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.343685831 seconds)
    (49/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.303355777 seconds)
    (50/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.126455874 seconds)
    (51/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.388740586 seconds)
    (52/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.40907189 seconds)
    (53/286) benchmarking ("sort", BigInt, true)...
    done (took 6.327442136 seconds)
    (54/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.240974743 seconds)
    (55/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.500503446 seconds)
    (56/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.313976331 seconds)
    (57/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.341703934 seconds)
    (58/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.418732506 seconds)
    (59/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.398848283 seconds)
    (60/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.322496955 seconds)
    (61/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.799675999 seconds)
    (62/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.293934373 seconds)
    (63/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.553446286 seconds)
    (64/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.729728114 seconds)
    (65/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.336432437 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.195749921 seconds)
    (67/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.75212358 seconds)
    (68/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.801762125 seconds)
    (69/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.513293108 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.933465359 seconds)
    (71/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.293784411 seconds)
    (72/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.432145538 seconds)
    (73/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.294072821 seconds)
    (74/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.091878836 seconds)
    (75/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.323867378 seconds)
    (76/286) benchmarking ("sort", Int64, false)...
    done (took 5.479626912 seconds)
    (77/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.107985213 seconds)
    (78/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.36597271 seconds)
    (79/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.332995443 seconds)
    (80/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.501517024 seconds)
    (81/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.73502433 seconds)
    (82/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.066429154 seconds)
    (83/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.525015665 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.16425447 seconds)
    (85/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.444622064 seconds)
    (86/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.329131811 seconds)
    (87/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.331231582 seconds)
    (88/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.294544404 seconds)
    (89/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.33512696 seconds)
    (90/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.357948997 seconds)
    (91/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.81120426 seconds)
    (92/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.34475261 seconds)
    (93/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.373360268 seconds)
    (94/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.02797124 seconds)
    (95/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.2953499 seconds)
    (96/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.420620116 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.662350723 seconds)
    (98/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.830640284 seconds)
    (99/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.337743416 seconds)
    (100/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.346966643 seconds)
    (101/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.477912931 seconds)
    (102/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.518989662 seconds)
    (103/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.599913457 seconds)
    (104/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.022024298 seconds)
    (105/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.418698181 seconds)
    (106/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.343186232 seconds)
    (107/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.328650461 seconds)
    (108/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.299794492 seconds)
    (109/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.587436606 seconds)
    (110/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.459869368 seconds)
    (111/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.306442569 seconds)
    (112/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.49398466 seconds)
    (113/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.343382292 seconds)
    (114/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.494069624 seconds)
    (115/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.360081168 seconds)
    (116/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.296233337 seconds)
    (117/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.773714583 seconds)
    (118/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.303326134 seconds)
    (119/286) benchmarking ("sort", Float32, false)...
    done (took 5.297614561 seconds)
    (120/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.308515583 seconds)
    (121/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.404350846 seconds)
    (122/286) benchmarking ("sort", Bool, false)...
    done (took 1.826563053 seconds)
    (123/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.356837304 seconds)
    (124/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.608531378 seconds)
    (125/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.599040339 seconds)
    (126/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.130021124 seconds)
    (127/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.658335874 seconds)
    (128/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.345106927 seconds)
    (129/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.091622835 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.05939226 seconds)
    (131/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.926497698 seconds)
    (132/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.388077226 seconds)
    (133/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.598845409 seconds)
    (134/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.211203294 seconds)
    (135/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.336803809 seconds)
    (136/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.342647067 seconds)
    (137/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.902308102 seconds)
    (138/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.712513066 seconds)
    (139/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.495793002 seconds)
    (140/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.436804055 seconds)
    (141/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.299088306 seconds)
    (142/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.722089955 seconds)
    (143/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.458575699 seconds)
    (144/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.148128044 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.04881568 seconds)
    (146/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.306086961 seconds)
    (147/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.346128246 seconds)
    (148/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.778624367 seconds)
    (149/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.402795052 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.856768114 seconds)
    (151/286) benchmarking ("sort", BigInt, false)...
    done (took 6.320236023 seconds)
    (152/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.034779319 seconds)
    (153/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.356751459 seconds)
    (154/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.128399082 seconds)
    (155/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.320015299 seconds)
    (156/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.341384679 seconds)
    (157/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.336567941 seconds)
    (158/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.316104914 seconds)
    (159/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.317396457 seconds)
    (160/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.427512955 seconds)
    (161/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.299792554 seconds)
    (162/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.678721998 seconds)
    (163/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.502774655 seconds)
    (164/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.300723302 seconds)
    (165/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.059148031 seconds)
    (166/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.42909087 seconds)
    (167/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.30273343 seconds)
    (168/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.350145186 seconds)
    (169/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.581991787 seconds)
    (170/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.772260289 seconds)
    (171/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.661787713 seconds)
    (172/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.348172991 seconds)
    (173/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.301391118 seconds)
    (174/286) benchmarking ("sort", Float64, false)...
    done (took 5.595117521 seconds)
    (175/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.649815247 seconds)
    (176/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.324535788 seconds)
    (177/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.950283781 seconds)
    (178/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.322867842 seconds)
    (179/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.379965417 seconds)
    (180/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.056337961 seconds)
    (181/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.348464893 seconds)
    (182/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.90959528 seconds)
    (183/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.306912683 seconds)
    (184/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.302246161 seconds)
    (185/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.373049025 seconds)
    (186/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.889849553 seconds)
    (187/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.305553072 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.941627024 seconds)
    (189/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.404837224 seconds)
    (190/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.721789992 seconds)
    (191/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.445231013 seconds)
    (192/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.301809858 seconds)
    (193/286) benchmarking ("sort", Bool, true)...
    done (took 5.437647611 seconds)
    (194/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.560105834 seconds)
    (195/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.565852686 seconds)
    (196/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.381570979 seconds)
    (197/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.347410889 seconds)
    (198/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.423463952 seconds)
    (199/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.324573775 seconds)
    (200/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.683054983 seconds)
    (201/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.096279303 seconds)
    (202/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.424311801 seconds)
    (203/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.16815186 seconds)
    (204/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.124449231 seconds)
    (205/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.447226997 seconds)
    (206/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.963291986 seconds)
    (207/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.52514155 seconds)
    (208/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.31949526 seconds)
    (209/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.72126149 seconds)
    (210/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.358326037 seconds)
    (211/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.323207083 seconds)
    (212/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.324593724 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.696318386 seconds)
    (214/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.362032797 seconds)
    (215/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.332252568 seconds)
    (216/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.403278979 seconds)
    (217/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.325406686 seconds)
    (218/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.154904575 seconds)
    (219/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.320712405 seconds)
    (220/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.342860103 seconds)
    (221/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.670899456 seconds)
    (222/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.365127439 seconds)
    (223/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.304435944 seconds)
    (224/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.341038968 seconds)
    (225/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.305399283 seconds)
    (226/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.509702631 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.733307884 seconds)
    (228/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.588240652 seconds)
    (229/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.350514775 seconds)
    (230/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.304616562 seconds)
    (231/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.223823224 seconds)
    (232/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.43879799 seconds)
    (233/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.554259037 seconds)
    (234/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.40685998 seconds)
    (235/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.304894979 seconds)
    (236/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.687903446 seconds)
    (237/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.164703881 seconds)
    (238/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.322733858 seconds)
    (239/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.320795245 seconds)
    (240/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.346341073 seconds)
    (241/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.410649599 seconds)
    (242/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.528556192 seconds)
    (243/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.425936295 seconds)
    (244/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.304847703 seconds)
    (245/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.40432033 seconds)
    (246/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.332842275 seconds)
    (247/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.413523237 seconds)
    (248/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.305501296 seconds)
    (249/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.19700843 seconds)
    (250/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.352627508 seconds)
    (251/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.057497467 seconds)
    (252/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.353323856 seconds)
    (253/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.691735932 seconds)
    (254/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.839098556 seconds)
    (255/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.710797484 seconds)
    (256/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.011795137 seconds)
    (257/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.297221185 seconds)
    (258/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.44166308 seconds)
    (259/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.835244708 seconds)
    (260/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.537626422 seconds)
    (261/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.743660489 seconds)
    (262/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.700012779 seconds)
    (263/286) benchmarking ("sort", Int8, false)...
    done (took 4.385928187 seconds)
    (264/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.664351465 seconds)
    (265/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.332708405 seconds)
    (266/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.17141443 seconds)
    (267/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.393207162 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.420160331 seconds)
    (269/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.02977289 seconds)
    (270/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.031869682 seconds)
    (271/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.425427508 seconds)
    (272/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.442961481 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.160713067 seconds)
    (274/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.526149911 seconds)
    (275/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.322462321 seconds)
    (276/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.455412849 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.369687188 seconds)
    (278/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.327272321 seconds)
    (279/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.307275844 seconds)
    (280/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.131379188 seconds)
    (281/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.35374122 seconds)
    (282/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.328150737 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.368938402 seconds)
    (284/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.419893639 seconds)
    (285/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.686464043 seconds)
    (286/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.559224154 seconds)
  done (took 930.457869069 seconds)
done (took 931.685982429 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.359872667 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.355760683 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.339007667 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.360456217 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.449720478 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.365468617 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.34877608 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.342110442 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.386464831 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.388832055 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.337913923 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.363643064 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.341453038 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.33949728 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.339347328 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.354065029 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.343615984 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.340496745 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.355824597 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.350063349 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.355824434 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.338269371 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.388788808 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.364321116 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.342369023 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.343475462 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.342504073 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.359561193 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.451438154 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.343004703 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.342634753 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.351584403 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.343396025 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.338410172 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.335835436 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.35932681 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.351494213 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.350890426 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.344876753 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.373004626 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.73099558 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.356429922 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.341746965 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.342121841 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.341642847 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.34636498 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.344137201 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.348293802 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.355497743 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.356178849 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.717967813 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.372494951 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.344208822 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.343606112 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.352900487 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.341355718 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.346377422 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.360084443 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.362210376 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.359551954 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.332661898 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.348068727 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.345647817 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.359169782 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.349962113 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.75703436 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.354286614 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.348660158 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.733617852 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.365539127 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.758451619 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.368587332 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.345298492 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.358109726 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.375678372 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.346367182 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.33934199 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.34303857 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.350969411 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.341123971 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.353998688 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.356832269 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.348989656 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.345485262 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.359236616 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.370328548 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.35358672 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.345401389 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.353559344 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.363227769 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.35199422 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.355352562 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.348002225 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.33936381 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.35487741 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.348176885 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.347220461 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.347011033 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.349304441 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.355715577 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.734662065 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.379171574 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.341568875 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.341377258 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.344963633 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.358103576 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.736920783 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.362376587 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.368353203 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.394004019 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.346913554 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.336820906 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.348767484 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364298919 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.356771855 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.349587108 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.342830837 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.34000114 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.727485521 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.375734068 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.348563837 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.343828442 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.364514403 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.347557558 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.344734418 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.354386105 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.347500303 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.361227886 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.467772053 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.357820169 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.377950981 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.345192283 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.351516242 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.37369555 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.366236567 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.378881136 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.350933237 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.364522878 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.363759319 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.344183881 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.358354032 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.358523302 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.348952862 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.354920642 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.342366763 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.372542359 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.361247411 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.360887626 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.368660642 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.468729312 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.344269578 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.342285076 seconds)
done (took 226.456607709 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.410948084 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.345457385 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.430007383 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.345036117 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.44790671 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.447500943 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.343570259 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.342859669 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.343396178 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.723827644 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.343032487 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.343753157 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.33946366 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.342631825 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.430473309 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.346219593 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.344003772 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.688177159 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.34623394 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.420476957 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.348364049 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.343409065 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.347000146 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.732711352 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.34345091 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.343257341 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.422002088 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.347080604 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.694443546 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.343546827 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.34833469 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.695907535 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.441098134 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.36526794 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.357464169 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.35400571 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.451236894 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.366299505 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.430567967 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.431762323 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.43305113 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.386146132 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.346451283 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.340666042 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.349412935 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.347784901 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.347156499 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.374414463 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.346229456 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.344811561 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.689507069 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.358444382 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.346248302 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.34666211 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.347481612 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.377849706 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.345588959 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.348473718 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.443008303 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.350598333 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.414786081 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.734575081 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.728388751 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.349393582 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.348929791 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.347794896 seconds)
  done (took 149.380232729 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.415804716 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.422343547 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.459759973 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.366169401 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.401743277 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.463573408 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.366306953 seconds)
  done (took 11.151473929 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.355991695 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.350256491 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.399495066 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.398788103 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.349298451 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.528383559 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.350795143 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.362032926 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.348467614 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.402611824 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.353399411 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.35155501 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.358233146 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.345816938 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.398956724 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.363942814 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.469023901 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.351611425 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.351027438 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.501861756 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.349619175 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.357418 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.403280139 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.362725673 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.353044465 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.357630808 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.170637697 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.3517373 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.349316674 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.352096255 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.349310781 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.427458213 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.3512429 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.352141795 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.349609297 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.467169152 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.352245395 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.350337587 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.352287092 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.351885058 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.352218573 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.353108765 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.353193822 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.349669436 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.351760123 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.375226515 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.353910513 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.35358728 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.353719891 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.354455174 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.401981726 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.353840872 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.351126122 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.350564243 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.408446019 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.360970657 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.354268651 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.350497071 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.354245139 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.351176516 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.504392434 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.401182266 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.353627024 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.401390667 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.355016479 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.354678991 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.353408267 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.353634178 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.408738647 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.354020417 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.401656005 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.35146969 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.541498073 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.378491642 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.356725132 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.356512683 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.357419639 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.354344811 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.351345211 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.360307285 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.352873453 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.355535389 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.360192052 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.352146168 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.352620486 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.521568382 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.463497023 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.352419745 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.367738113 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.361965326 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.353106977 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.408440917 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.356642528 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.353721345 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.406989304 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.474631569 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.408938423 seconds)
  done (took 155.50380115 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.360401604 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.36377634 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.357048994 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.372311739 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.356394906 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.355635128 seconds)
  done (took 9.42728284 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.358814629 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.357464342 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.356595374 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.357259627 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.355396173 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.357768126 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.356960013 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.357315323 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.359972056 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.357385559 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.358482775 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.358500359 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.359072444 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.357355606 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.35793125 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.357121428 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.357151107 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.355149595 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.357839442 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.357978953 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.462665944 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.357301862 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.35715906 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.358558983 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.363284527 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.35763024 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.365538216 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.359229701 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.359158512 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.365825849 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.378399763 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.359694765 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.358908989 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.365307016 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.362869478 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.36015153 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.363250118 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.36041947 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.357819769 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.360039289 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.36163175 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.360073395 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.359885132 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.361376312 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.362445322 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.363328879 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.366609371 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.367715278 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.359907717 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.362122547 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.362124676 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.359168052 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.361478137 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.362107097 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.361857304 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.381911856 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.36582172 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.361577438 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.360778342 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.361823393 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.362548311 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.362416215 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.362741485 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.364013024 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.358284789 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.363004814 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.361979243 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.365744214 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.360422285 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.361254109 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.363096971 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.358203522 seconds)
  done (took 100.357524085 seconds)
done (took 427.07370526 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.673925932 seconds)
  done (took 7.941772342 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.419727072 seconds)
  done (took 7.689618465 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.606235737 seconds)
  done (took 21.881540408 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.394549587 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.382090625 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.396827509 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.361871655 seconds)
  done (took 26.804218044 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.60471266 seconds)
  done (took 7.873285555 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.355180099 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.381517397 seconds)
  done (took 14.007211878 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.976882378 seconds)
  done (took 8.245796557 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.035149601 seconds)
  done (took 8.308973948 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.373169333 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.374783847 seconds)
  done (took 14.285747061 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.336038954 seconds)
  done (took 7.604922858 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.26100609 seconds)
  done (took 11.528702644 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.364517192 seconds)
  done (took 7.633491914 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.439516676 seconds)
  done (took 7.707153963 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.194907294 seconds)
  done (took 9.462930195 seconds)
done (took 162.245194874 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.355127875 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.361264704 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.361433162 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.362433175 seconds)
  done (took 26.709294124 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.395177533 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.399186456 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.411502669 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.406859735 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.398797965 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.395735938 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.388938368 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.388452965 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.406904176 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.40064343 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.398347167 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.399275561 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.396183045 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.388675393 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.400161161 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.399222689 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.407625058 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.397303284 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.389280521 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.400125904 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.363950334 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.40852504 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.399610991 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.365592178 seconds)
  done (took 34.775498754 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.885211911 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.435835409 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.517019119 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.415282241 seconds)
  done (took 7.522672605 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.415660561 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.416996253 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.428309641 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.468845803 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.493654225 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.426518895 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.390486787 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.386210469 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.37314474 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.418339198 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.49376097 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.433787461 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.503100076 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.364931479 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.581427359 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.365273367 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.365139683 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.417421132 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.470180581 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.482284793 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.365554005 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.417551714 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.421273867 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.444024794 seconds)
  done (took 35.615432878 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.365078694 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.384301344 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.365475103 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.364328434 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.373223051 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.364643053 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.365552558 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.365881073 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.365705061 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.370787333 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.364273505 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.378202468 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.365408722 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.36664052 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.373068198 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.369721652 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.373107134 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.366782552 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.365544252 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.370446624 seconds)
  done (took 28.650551589 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.360265432 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.21303313 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.71090043 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.615487119 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.358904464 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.359844517 seconds)
  done (took 27.891348783 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.43559509 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.580997084 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.366878986 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.714976299 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.805217331 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.384078776 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.367771876 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.602832278 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.913576037 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.90510083 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.425940833 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.433439404 seconds)
  done (took 20.210445542 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.368293214 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.364266032 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.369041739 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.380296671 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.421375983 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.387947246 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.375498494 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.360758132 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.427359787 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.441893514 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.388252582 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.422453259 seconds)
  done (took 37.982169711 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448488629 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.407586509 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.301840624 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.37551651 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.104783737 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.574288192 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.374042826 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.06524293 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.388095599 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639477757 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365101781 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454444155 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.619710308 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365018039 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.374296258 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.333533728 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.615356053 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839509802 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36790745 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.352054657 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394624883 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.367154543 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.402331705 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.600340759 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.595704137 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.345654415 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.626587979 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.141404256 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.647275808 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.379414706 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376847266 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.365478801 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641084268 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025765917 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481676802 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.57541605 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395498621 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.913570166 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.361770498 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.320976078 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375841037 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.387926988 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379459955 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369368552 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.303287991 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369986577 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.081190201 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.391702076 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.080578324 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.367906188 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.624241907 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464454104 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.372632764 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.939405831 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.452153554 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.380942208 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.372618339 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46006527 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955384061 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.583380631 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377938621 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.31064152 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.378720443 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.323316763 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986777478 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.391832497 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.373250053 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.37301775 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.304512758 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.329329639 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.392635641 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517095006 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.395334844 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.020310114 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048401119 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.390074929 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.316801174 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905229752 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380263529 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.307935558 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.597940744 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.147007234 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30625693 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.316698509 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.305536651 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.059840965 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379961703 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.763477567 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391729875 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.086725369 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.601001745 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408946095 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394141578 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.593875025 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.404088082 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371145301 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.380054084 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498970118 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392905286 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.070031219 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32427612 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.374812432 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62657833 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.583774571 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380969346 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.334762817 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.868854434 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390554454 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.385961851 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.372178209 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.583834167 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.96201412 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.404349414 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.58737804 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399006071 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.157023738 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094782576 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377361596 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.382963975 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.385438946 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635153203 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.109937779 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.276726582 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440483917 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374739262 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.374549646 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.496299168 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.226991984 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.255957259 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.568727616 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394717386 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.389491001 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.37486181 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323491559 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.383974101 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374246715 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.171587128 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.597892004 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385720827 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651293312 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.309700485 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530486423 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.400807599 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.597161265 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.550927591 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.396006622 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633905743 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378542103 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.385138119 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.388057417 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394389112 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475237169 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396716865 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.386297673 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.634127581 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.378759012 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.380141394 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.397419915 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.159765573 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379322494 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.380967961 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381220493 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94824678 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371947094 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.385617275 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.266743709 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.390443478 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444737642 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.38268323 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.590058388 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.588462652 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405975841 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.382525092 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.37601794 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598805418 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.388293852 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.34905944 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.459471285 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.845384752 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.966882676 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407524871 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.311719639 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.089168721 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.071206813 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378009858 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.574632708 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.378850203 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.588806469 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.410851406 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.395414308 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.95711704 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397131491 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.35188237 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.390472614 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.390971674 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.384584617 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381307878 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.588839164 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.621417804 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398764747 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.395640748 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522890928 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.39231482 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.314458437 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.896464893 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.386817042 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.38102151 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.153135002 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414232068 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.363072693 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176912756 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.659118904 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382610194 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.637377735 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.42651388 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.411679799 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.384417807 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388391467 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384765232 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.392020096 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388152283 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.39055313 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.361326347 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.818004886 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946692339 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.114739839 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918461329 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.668342589 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.409506656 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.28397102 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.095388205 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334453878 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.038632226 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616201419 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.103031238 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344264578 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.855864639 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.582120179 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.157424828 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640029563 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611316615 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.644964261 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.411848874 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642034409 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.59450652 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416637736 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.393303576 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.318657446 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.66264477 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933454707 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.415141656 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.463341963 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088376909 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399719596 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.164273265 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.386496696 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.083144053 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.785977056 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.030963539 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.769794084 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.38280922 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.406173964 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.178620492 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.411966998 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.909574218 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995157472 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.401415758 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.87753104 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339992608 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.597606959 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.412991827 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.382339048 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.908150026 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.384927228 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.638786357 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.643658487 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319562806 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.384542571 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916910095 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.257847767 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.39169779 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385950652 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116178937 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389394968 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.673830763 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.396102297 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.602051959 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410735922 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.32027711 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322137036 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.080028532 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.392355467 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362621909 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86402555 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.407547008 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392918458 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.419758034 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.23815288 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.643314258 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.39972249 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.959808862 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.628167975 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389781899 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411027851 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.388958589 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387484653 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.386062984 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.286679926 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.622929319 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418603003 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.614815246 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.378363363 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.287181065 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.433604937 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.054973562 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.269611409 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.397730978 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.629204111 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.116293078 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.406131287 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073405245 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430719744 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.399281817 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.400971208 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.403417568 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410295979 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476647554 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601689189 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.417624777 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.39867008 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791255943 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407395887 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407108498 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.401133315 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482110079 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.638847219 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.612725978 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.162221513 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96496405 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120095817 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.9843902 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667855287 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.390755142 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390399907 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324327456 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537214394 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.916193548 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66392553 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519386496 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.392853352 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428475955 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389687771 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391744235 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623421793 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667919872 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.26343634 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394732123 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.054741178 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.270711294 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.401036958 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.601451548 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873607334 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940040783 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508774418 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.401257898 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.110621774 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683836718 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.481108612 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391026365 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.979195896 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.398252125 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.092909215 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.397601873 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39458992 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537672962 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65067318 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046335028 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.419420516 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.547464805 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.164568411 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.377906504 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.646630542 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.844842403 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.607048743 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.985810732 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.100970562 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.655449503 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463327417 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.606777286 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.513695291 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539540327 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.391108087 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.275414215 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394225115 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.237051337 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.104020516 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.402716941 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.978788301 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.672459473 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.396372747 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.39349296 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416820283 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.402017325 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.61581072 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.092137826 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.617619056 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.402206491 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.39821186 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.384130949 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.974468671 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.671586607 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330154725 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.396745133 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632645235 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.648186034 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419431305 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.846312603 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.105858817 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937872783 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.366849189 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414017846 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397655155 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.096234119 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978925987 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.6361961 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892133761 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.055163916 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399449838 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672866751 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.400448478 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.396344966 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678735972 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.400012105 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.398751845 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614728881 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.989717006 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178794642 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.401539353 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.408966183 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.333106309 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.620541185 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.471330913 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335068199 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.404207513 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.807812478 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.415829766 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.525634665 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407847673 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.402193317 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402162812 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.158974738 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.681571902 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.402386521 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.393693962 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.390060067 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.4113595 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.496292914 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955883564 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416383208 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.074144683 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.746143434 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.65309306 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.399738742 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.380404199 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.401304545 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399415881 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.115673892 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.367673863 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.416161616 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946561397 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.398692 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.41197576 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.403812829 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.614023953 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609227571 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.396875841 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.630878006 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430262375 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418858985 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.299046299 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.165191002 seconds)
  done (took 1679.571734196 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.445065297 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.430273355 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.436665633 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.444197277 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.44968512 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.504100486 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.479085486 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.514559888 seconds)
  done (took 53.012780821 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.402029092 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.5552787 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.428993466 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.402238084 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.40940575 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.400816925 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.849907136 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.414797917 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.408697086 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.409498483 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.405848089 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.399565449 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.055150251 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.409927455 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.405750666 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.378984393 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.407984674 seconds)
  done (took 66.460603705 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.457616034 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.415278072 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.210709342 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.465982746 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.424507931 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.411929075 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.966024213 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.417722762 seconds)
  done (took 59.081228408 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.41683145 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.417538569 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.417573592 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.41738557 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.418058167 seconds)
  done (took 8.397532039 seconds)
done (took 2087.15255269 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.405369342 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.40780578 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.405335539 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.407063412 seconds)
  done (took 6.934954393 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.379869257 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.118678433 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.385306835 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.398970544 seconds)
  done (took 18.592997566 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.405361253 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.40092098 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.093506283 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.015205623 seconds)
  done (took 5.421644923 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.148999111 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.162087784 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.144247207 seconds)
  done (took 7.762849498 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.39821379 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.400677545 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.403578975 seconds)
  done (took 20.510666127 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.685718283 seconds)
  done (took 2.994076656 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.545646379 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.596624852 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.714460732 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.721785512 seconds)
  done (took 7.887052244 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.788586471 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.780565701 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.585653997 seconds)
  done (took 6.463857366 seconds)
done (took 90.687847031 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.180552174 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.405655423 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.615280493 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.152959232 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.636183254 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.617596853 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.589544822 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.121765156 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.662872693 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.652798285 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.154686133 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.634526564 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.756384327 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.404338429 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.756193851 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.403161797 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.656989535 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.232442525 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.837867685 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.075577761 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.595825583 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.794649405 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.987026037 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.81784939 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.650277008 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.563517968 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.389647968 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.404097324 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.014201068 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.408513706 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.563584913 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.250758082 seconds)
  done (took 191.296631278 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.405960999 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.4047266 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.401531119 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.418929689 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.410551496 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.402697051 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.419228177 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.416931622 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.411099701 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.401909513 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.40209611 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.40228403 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.402485367 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.402603989 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.40446609 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.411723329 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.402180614 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.41828649 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.401871781 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.42344518 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.403189465 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.42902636 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.402549089 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.403184093 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.403308453 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.419272505 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.417572212 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.403039173 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.403013272 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.403197349 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.41927139 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.40252735 seconds)
  done (took 206.386347652 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.405898096 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.41775568 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.403844972 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.403211865 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.420474138 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.420401189 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.403263971 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.412978408 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.404102172 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.416295616 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.404003161 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.417432521 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.404260177 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.420269964 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.40469118 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.427175882 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.413483032 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.404010987 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.403864204 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.42200477 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.405133919 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.418200682 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.405790707 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.40441461 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.411232798 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.406263742 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.405465154 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.406315077 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.411318145 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.418767857 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.406143001 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.405314924 seconds)
  done (took 206.447135188 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.599876804 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.410927425 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.41218168 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.34486129 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.413132541 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.411789407 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.406179503 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.608942058 seconds)
  done (took 14.92188969 seconds)
done (took 620.362772932 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.702767295 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.420511482 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.611016076 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.431535777 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.201160097 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.451211421 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.432137604 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.601781046 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.329003953 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.607612685 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.681678238 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.448415584 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.830771388 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.431310531 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.68711718 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.533409903 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.279299529 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.398288694 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.745957541 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.965949745 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.693831434 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.86366579 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.620195261 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.319984592 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.839705089 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.865331624 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.148059292 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.268849884 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.448321072 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.754222686 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.040923711 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.383620228 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.493284115 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.492650423 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.550004846 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.53017474 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.378667132 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.491581745 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.636614652 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.631416871 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.961603193 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.147158337 seconds)
  done (took 94.667272204 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.397351537 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.396883685 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.397233639 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.398479993 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.399103944 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.397449383 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.397293536 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.397189514 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.398250117 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.397299649 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.397517014 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.399279804 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.397214295 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.398130497 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.39760512 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.397224414 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.397652969 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.399782199 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.397095358 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.39685682 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.398568552 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.397208108 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.398768526 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.397779775 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.399125367 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.398884446 seconds)
  done (took 37.664013219 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.417344875 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.662437231 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.819410988 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.423959343 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.419086825 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.421586133 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.496015189 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.419103548 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.420457485 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.420242607 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.588489534 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.421163857 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.454338713 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.847261298 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.421356585 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.417797654 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.41936046 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.41861563 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.671378134 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.42901067 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.517432385 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.419309083 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.497060208 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.427838985 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.442477397 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.419068126 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.423162621 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.980425964 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.437886351 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.588423376 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.205731959 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.498829943 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.933207403 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.849946668 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.208989927 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.428963988 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.420570561 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.593924156 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.422409128 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.420448502 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.497995858 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.421358347 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.830718069 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.072151546 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.438950512 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.420016895 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.000906815 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.613338414 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.663405673 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.428704265 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.853029647 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.424310316 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.423053896 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.423215033 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.662721278 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.427743374 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.421971312 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.988046868 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.446165416 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.4999662 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.42320131 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.42194538 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.679251817 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.422477294 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.668592438 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.424011962 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.429323369 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.442203762 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.836124588 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.425015854 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.095979789 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.439983692 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.422337033 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.590366833 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.669883144 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.035794698 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.445383387 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.683930202 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.960063732 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.515144905 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.426419565 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.972215086 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.519226013 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.427332518 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.425491728 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.425562024 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.423688812 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.468459553 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.49741625 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.032147087 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.102387505 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.011274382 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.521194889 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.436265692 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.424438751 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.989597163 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.443837212 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.424772029 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.829534226 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.094947149 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.441784302 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.432212629 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.097825347 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.444173921 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.503583896 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.429646345 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.84101457 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.425264546 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.517156766 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.424321573 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.431261456 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.447262778 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.504197797 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.429533568 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.426604301 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.071779028 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.61887626 seconds)
  done (took 186.840037679 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.420439633 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.419971105 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.419713284 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.419326097 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.419068453 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.428249461 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.419711756 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.420728775 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.425726556 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.419990656 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.421453772 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.420508724 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.42116855 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.422424719 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.450738514 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.427632284 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.076132319 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.421448808 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.419422081 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.420607835 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.221615847 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.424210755 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.423969262 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.421257048 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.421684892 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.420320006 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.446976773 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.423246321 seconds)
  done (took 154.645192146 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.428352398 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.981443864 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.445072235 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.557591423 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.449159897 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.425582134 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.554488033 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.485457409 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.446295717 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.42674645 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.425865341 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.725495164 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.430142494 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.934895769 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.619202908 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.574572152 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.932925263 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.446843485 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.426984996 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.426633351 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.560862172 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.431939884 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.725421873 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.983403415 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.448342522 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.983359454 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.412977794 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.429831403 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.428465896 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.987573504 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.446437183 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.728349085 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.506520929 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.488599957 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.004680763 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.955425616 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.953179893 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.575957191 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.429669596 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.428311876 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.427831362 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.413752109 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.987504506 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.449511652 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.431160237 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.976083549 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.449763598 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.431443889 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.436889829 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.429204697 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.490135373 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.507443112 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.748850286 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.993285011 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.523731999 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.443512505 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.560564257 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.801566518 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.433065835 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.938355187 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.413345496 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.993345787 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.450531236 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.414374452 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.431223232 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.436479108 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.578832702 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.561504578 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.940330398 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.449652037 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.937414482 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.596630866 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.43038279 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.431187813 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.433306642 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.993486216 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.956866316 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.596842614 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.565933798 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.625370632 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.41690174 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.431890333 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.415766703 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.509154672 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.431532949 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.995039696 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.956819838 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.451003201 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.433276053 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.434074181 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.433461076 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.607867835 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.021846763 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.530625111 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.928870919 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.756136047 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.741053133 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.438305134 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.492594153 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.449502745 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.739822112 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.43804963 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.490837629 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.867453665 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.738299502 seconds)
  done (took 169.647234804 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.667798954 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.615307596 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.526550304 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.575492586 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.026051516 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.989750625 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.742663797 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.570419724 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.54249891 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.691762329 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.596417066 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.527249591 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.644330568 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.509127876 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.171867109 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.520326211 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.543878964 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.578666332 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.588536243 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.439369252 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.097991298 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.719817435 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.617515252 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.326247763 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.530150234 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.222793013 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.992997356 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.992543278 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.611365228 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.737689991 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.974581258 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.546340458 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.38618148 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.142544058 seconds)
  done (took 68.302611354 seconds)
done (took 713.083095291 seconds)
SAVING RESULT...
DONE!
