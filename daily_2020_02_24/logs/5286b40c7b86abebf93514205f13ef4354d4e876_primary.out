cset: moving following pidspec: 5227
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.303774263 seconds)
loading group "string"... done (took 0.720533153 seconds)
loading group "linalg"... done (took 7.8959864 seconds)
loading group "parallel"... done (took 0.168391358 seconds)
loading group "find"... done (took 1.186021334 seconds)
loading group "tuple"... done (took 1.821951564 seconds)
loading group "dates"... done (took 1.405367146 seconds)
loading group "micro"... done (took 0.233257229 seconds)
loading group "io"... done (took 0.994205311 seconds)
loading group "scalar"... done (took 39.299533529 seconds)
loading group "sparse"... done (took 12.386899346 seconds)
loading group "broadcast"... done (took 1.000753867 seconds)
loading group "union"... done (took 12.802518287 seconds)
loading group "simd"... done (took 4.71383503 seconds)
loading group "random"... done (took 9.48495017 seconds)
loading group "problem"... done (took 1.86279023 seconds)
loading group "array"... done (took 21.872034831 seconds)
loading group "misc"... done (took 1.782851335 seconds)
loading group "sort"... done (took 3.447485114 seconds)
loading group "collection"... done (took 18.104248919 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.566406214 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.134974721 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.136959116 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.12966801 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.157207484 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.124792182 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.137082728 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.095424359 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.862329417 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.161824021 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.12725663 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.447474483 seconds)
done (took 5.598738616 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.181817571 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.09059433 seconds)
    (2/2) benchmarking "String"...
    done (took 0.092285115 seconds)
  done (took 1.339226552 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.074144043 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.137610861 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.075730426 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.075671418 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.075503262 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.075114917 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.075074399 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.075333047 seconds)
  done (took 1.746078631 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.082169956 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.077047419 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.073999692 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.076719622 seconds)
  done (took 1.467116489 seconds)
done (took 5.97473077 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.815040738 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.222368461 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.198830368 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.425050451 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.138793895 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.1832847 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.653690499 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.36764527 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.200073821 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.084504787 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.118059356 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.355649746 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131984261 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.649399207 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.084947951 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.099901905 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.145120101 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.435660531 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.075627583 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.089919892 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.097397349 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.136810626 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.095103356 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.082236693 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.152645292 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.075575542 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.145236263 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.088273775 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.074596164 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.229229631 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.180893988 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.676780326 seconds)
  done (took 10.706496995 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.10864073 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.109578118 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076356175 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.134606687 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.107881564 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.077616127 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083387857 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.076222837 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.098870456 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.142637302 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.100716343 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.112454774 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.074581689 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.077272287 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.093517479 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.214649167 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.088872964 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.090590224 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.079044459 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087306535 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116945045 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.086375786 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.088785613 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.089308811 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.137462082 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.188581955 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.104451196 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.105707389 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.074558237 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.092334041 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.123324622 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.138084269 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.074780425 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.074133624 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.136414026 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.102322789 seconds)
  done (took 4.960779006 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.05869042 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.154894696 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09895779 seconds)
    (3/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094144907 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.14488177 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.100703709 seconds)
    (6/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.073041737 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.120963034 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.074266969 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.089815561 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.220306286 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.365534148 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.074017393 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.639285924 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119823134 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115121107 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076133003 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.076780573 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075153338 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.579154965 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.106513152 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.116991878 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091027704 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.079322412 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.078494869 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364027142 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.076935916 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.072074791 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07708731 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065126348 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.134409423 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076797144 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.985636321 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.170414218 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07442501 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.239010629 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.172243303 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100148549 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.153375189 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078205026 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.073849896 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.165373961 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.079353398 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.074175786 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.093880509 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112066807 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.127456642 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.074443354 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.075153348 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.174821837 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.07391073 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.088800414 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.13708959 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.159626026 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.085724546 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.073400797 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.290597827 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098428725 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.078967788 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.073490906 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.193347963 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134513157 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.076519892 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07525134 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077315578 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077908508 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.373463361 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.076523679 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.901634365 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.078031691 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.084931111 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.07240208 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.077276455 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.078114736 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08176064 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081133386 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.096611938 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.075048956 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.083462221 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.074492258 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.074753949 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.078481441 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.09158588 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.408518417 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.074961856 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.1791949 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.073710392 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098879597 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105437725 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.07618551 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.074661241 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107978304 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076879551 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.075205181 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.120226536 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.075848258 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.091542103 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.078542598 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.121160487 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.074504757 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.097635876 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.075877397 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.105205427 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.078955407 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110925722 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.089003369 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076560604 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.457071906 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.073745958 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.074254166 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.076534161 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.074142069 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.075981395 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.075683475 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.087556288 seconds)
  done (took 22.803782154 seconds)
done (took 40.68660894 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.265146871 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.084017232 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081634103 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.081575318 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081315447 seconds)
  done (took 1.846344205 seconds)
done (took 3.080996538 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.133174296 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108553032 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072754397 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106994616 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072725512 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111356825 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.110027872 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.085908475 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109381722 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.07247371 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106805538 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072692191 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07262344 seconds)
  done (took 2.488993756 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09203473 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.093293538 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079197892 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.092787515 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072638528 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091923812 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.090624533 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098604176 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090630605 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081741848 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07201468 seconds)
  done (took 2.181904482 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090988648 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09318742 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077954698 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.091349347 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071962533 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091070245 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093702722 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.094902509 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091250427 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083273791 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072337322 seconds)
  done (took 2.175196843 seconds)
done (took 8.066820722 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.08610616 seconds)
  done (took 1.302134182 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.605992679 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.131429669 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.091040784 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.11956503 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.202562074 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.126158774 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.27703957 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.095903486 seconds)
  done (took 9.05055985 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.113296412 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.07634788 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.0791156 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.076017474 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.079451661 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.080533311 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.077392779 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.076411437 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.080347368 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.078968841 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.079797508 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.079752967 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.07770922 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.077558428 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.077844814 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.079770295 seconds)
  done (took 2.576925878 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.100867749 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.100041711 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.081487628 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.083083759 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.080157571 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.080101975 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.082028646 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.08163057 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.078498381 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.080770975 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.082150385 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.081128888 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.079111956 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.072556295 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.081683482 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.082888509 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.078571279 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.081715137 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.082487625 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.083313102 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.083004621 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.072028637 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.079602738 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.081721035 seconds)
  done (took 3.293750131 seconds)
done (took 17.447731212 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114826938 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076033841 seconds)
  done (took 1.413228029 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.090040179 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.091159337 seconds)
  done (took 1.410893618 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.090532066 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.072911925 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.096872929 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.085699817 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.074604922 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.074113129 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.095401787 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.074427407 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.074280187 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.073994355 seconds)
  done (took 2.043391719 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.075955968 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.085960637 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.078315737 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.089537381 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.081228927 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.071772342 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.080352632 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.07551706 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.084527918 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.071599271 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.079419856 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.090414223 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.079063758 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.092923663 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.079644609 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.07664375 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.07834149 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.075340915 seconds)
  done (took 2.680010186 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.073242008 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.075122251 seconds)
  done (took 1.382387512 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.073983217 seconds)
    (2/7) benchmarking "second"...
    done (took 0.072471815 seconds)
    (3/7) benchmarking "month"...
    done (took 0.074914135 seconds)
    (4/7) benchmarking "year"...
    done (took 0.074109148 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.071345457 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.070508837 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.071183987 seconds)
  done (took 1.739684813 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.395476641 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.126746879 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.328822735 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07939974 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.089896085 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.272843614 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.074472246 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.079027941 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.079297711 seconds)
  done (took 2.800309657 seconds)
done (took 14.707448266 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.089074345 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.095559179 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.105719851 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.394470609 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.099422517 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.074627837 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.121522594 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.196208234 seconds)
done (took 2.421200084 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.22154662 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.707824079 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.451902044 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.222943981 seconds)
  done (took 2.617633746 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.36203753 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.097121047 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066912532 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.075364491 seconds)
  done (took 1.844958047 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.074877283 seconds)
    (2/2) benchmarking "read"...
    done (took 0.076942076 seconds)
  done (took 1.392072208 seconds)
done (took 7.317884123 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074272972 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.095717828 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.072840322 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.07456428 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.07216151 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.073877463 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.07156021 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.071721348 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.074774044 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.074018208 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.071234664 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.07417641 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.074075534 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07424385 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071772528 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071201583 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.074282151 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07444982 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.071578759 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071712251 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.184767537 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073897718 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.070943783 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.071641295 seconds)
  done (took 3.161319591 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.09366845 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.074067464 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.080456375 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.078987374 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.076918071 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.079252736 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.079255367 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.073758583 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.078514139 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.076577984 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077214591 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.076444686 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.075502762 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.077117451 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075805318 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.076868455 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.079540509 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073272 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076005702 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.076980166 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07866061 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074102916 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.077201141 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07883447 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.077048045 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076972184 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.076200281 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.073750598 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079011267 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.07709231 seconds)
  done (took 3.575077146 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.077596642 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071106631 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.071990291 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.079084254 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.071417609 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.072063796 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.070933889 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.072522773 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.072458492 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.071406283 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.072359935 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.071744713 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.071255308 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.072187481 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.071972678 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.074894618 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.087583583 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.071920723 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.071615635 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.072066856 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.075144535 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.073585807 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.07153437 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.071243475 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.071789026 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.071063049 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.072153807 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.071192607 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.072440259 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.07149733 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.075273427 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.074907934 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.07154075 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.078581915 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.075965188 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.071723683 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.078467269 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.071370717 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.071873917 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.071550342 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.071171296 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.07137955 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.071828372 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.078816421 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.071692924 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.073031759 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.072003403 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.072556709 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.071861846 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.074074384 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.071224846 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.072109815 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.073483702 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.072760706 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.075335975 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.07106795 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.072267401 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.071749503 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.07277586 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.07165411 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.07137605 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.071563748 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.074486141 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.072241225 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.087473661 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.078760958 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.071296079 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.073306552 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.072022363 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.074681768 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.073169916 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.086113254 seconds)
  done (took 6.543801457 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.09839802 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095572474 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.073379543 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.073115731 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069809057 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072259805 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077667268 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072132015 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073408875 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090103071 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072837344 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073204928 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073030284 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075770431 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072281795 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.073330054 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.080369476 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069767523 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.071895655 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075662941 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072852895 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077489858 seconds)
  done (took 2.949667047 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.162619578 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078381176 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.114469107 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083869953 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077598823 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083267554 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.077846034 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07765243 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077622677 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07520068 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075208737 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077500501 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07768578 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075376478 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075263655 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075467702 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077482617 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076096435 seconds)
  done (took 2.77776976 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.085411581 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.074132205 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.095880683 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.073587695 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.07378735 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.076407217 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078370112 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.082683282 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.076137825 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.073912363 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.08158102 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076806342 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.076570637 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073585639 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076798286 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073902085 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.076068636 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0736106 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081557424 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077836158 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.078382087 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081613189 seconds)
  done (took 2.978992405 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08852028 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075849989 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089587958 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.076460766 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.069587688 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.073189843 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.077889324 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.07367246 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.078254296 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.075985784 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073408511 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.072266349 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.076456485 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073449132 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.077168092 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073439416 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076161576 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073530486 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075815161 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.069560623 seconds)
  done (took 2.77939797 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094571162 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076098173 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076808156 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083361433 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075914545 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075825396 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083215799 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075876341 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075829342 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096561398 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075839197 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076413978 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083391036 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080206763 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078285077 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082655244 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082567565 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082710959 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076018412 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076722491 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.096619252 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075923537 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082839794 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075945111 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076064289 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075719465 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076027945 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.080869853 seconds)
  done (took 3.509108516 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074880445 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074642564 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.071561427 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.072172576 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.072040773 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.071550507 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.071371315 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.072211829 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074963466 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071229357 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.07519825 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.074568293 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074018662 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.074609445 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074392987 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.074989312 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074734017 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.072029092 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071892875 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071419797 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.074295237 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074114749 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.074444843 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071754822 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0717886 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.074724762 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071765081 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071702757 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074626833 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072147624 seconds)
  done (took 3.459628991 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.083077204 seconds)
    (2/2) benchmarking "in"...
    done (took 0.081720436 seconds)
  done (took 1.42944521 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.070904497 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088802494 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.071181759 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.078229434 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.077863611 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.075485818 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.081920395 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077395572 seconds)
  done (took 1.883300423 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.091058502 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.086192652 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.076182755 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.08699661 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.085906787 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.092381289 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.145956548 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.075213811 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.08113083 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.073089072 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.089179336 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.073822362 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.081131322 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074998101 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.081177057 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.081557716 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.072896582 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.080207584 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.076548979 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.072820004 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07582946 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.084153056 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.077441564 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06987001 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.076454858 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097765434 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.086161592 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.073543734 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077806269 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.081841362 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.080428638 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.068416183 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.074355809 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.074719587 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.072277977 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.084650925 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089375498 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077497745 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.083762377 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074950808 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083541945 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06970789 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.079005367 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.081094385 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085471847 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.075321008 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.075341822 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.069336829 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.072433802 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.078259394 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.069874736 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074957263 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.069081501 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.082033512 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.078587673 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.085970092 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.073848073 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.077451602 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.078159691 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.078122415 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.082233628 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.076541234 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077571449 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.074468757 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085034959 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.080259533 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083452867 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.069823147 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.068638647 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.072350849 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.084776334 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098862319 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.080476669 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.0752839 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075907495 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.072139904 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078292387 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075415208 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079849798 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.081417703 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.07470874 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08082593 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.082591884 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.075366481 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.077693979 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.082581563 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.073158826 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.07738845 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.072494549 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090991068 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.073847625 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.071871843 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.072053568 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.087074463 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.077458583 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.074399972 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.072711161 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.081069518 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.068022178 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.074185916 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074635957 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074578534 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.083991077 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.078258196 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.0778539 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.081919108 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.081294348 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074124334 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.077243782 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.194110474 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.077642663 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.075289062 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.082517918 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.069214275 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080363749 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.076204015 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.075861802 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.083754722 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.073617129 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.074813017 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083801737 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.082823545 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.073717122 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.071122553 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.077884895 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.075488309 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.077334177 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.083316336 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.073456965 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.071052853 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.070713677 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.078828532 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.074726171 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.079034654 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.079331971 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078361952 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.069271894 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.073198111 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.079605995 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.083342592 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.074887451 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.076283912 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.082376624 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.076423781 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.07457436 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.081701614 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.076856924 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.073551019 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.080359248 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.075265855 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06997811 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077333242 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.077020329 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.073474485 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.079527929 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.078010836 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.077922077 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.076078916 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073865816 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.081920795 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075348582 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.074421773 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.075267429 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.074229179 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.08603577 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.078143585 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.069564261 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.071431543 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.082746388 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.073117015 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.073994563 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.074768963 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.077384201 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.075461803 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.072208086 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.074005254 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.077933423 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084650895 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07890906 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.075620452 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.079501122 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.086577638 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.074419711 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.077332974 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.074745457 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075633676 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.075291974 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.0844285 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.080750285 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.079337326 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.077387607 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.071315944 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08022689 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08363837 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.074427512 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.072325638 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.074025535 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.07831623 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.080411661 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.078668808 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.075256426 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.073630527 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075513477 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07808232 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.076970745 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.073600202 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.073782342 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07955982 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.072278076 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.080527286 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074368046 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.084019188 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076855781 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.068841996 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075711717 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072033856 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.079518956 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06851081 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.071891358 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.072780157 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.073912551 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.072538128 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.076030028 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.19439418 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084375358 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085163301 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.076612986 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.075620667 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.075775398 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.083029496 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.077899892 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.078597203 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.079387253 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.081522614 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.086893651 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.074645264 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.078853241 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.085747093 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.07511473 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.068994068 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.083375023 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.073857235 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.073369357 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.074111245 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.073708798 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078256628 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082743655 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.081681556 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.069094122 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.078897989 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.073611984 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.074238574 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.070687359 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.079744866 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.078827658 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.075894099 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082076235 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075303655 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.075178611 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080030818 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.075655907 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.076136399 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.076567957 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077861324 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.076126787 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.077165499 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.073990635 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.078558475 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.073740147 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.072657148 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.076749701 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.076217807 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.075671476 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081282448 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.074626068 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075577441 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.077317083 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.075331194 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076301173 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.07508274 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.074716921 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078723199 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076439617 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.07504425 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.077734457 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.069756919 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.082543037 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.073929253 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.082905021 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.075570911 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.071068359 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.081133132 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.077268065 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.080354142 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.0754988 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.075261423 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.076872759 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.07381567 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.077175927 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082086161 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.073275449 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.086220485 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.082545361 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075962674 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.078000683 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.07517857 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.076573112 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.074001123 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.075624876 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.075465475 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.075581514 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.074462878 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.079844763 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.077746488 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.074910854 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.076432403 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.075745659 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.075007208 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.07614148 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06872715 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.073929125 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.073982347 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.073626356 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.083572163 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.074747693 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.074528515 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.073636005 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075283286 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.073277319 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.070396924 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.080719341 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.080833654 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.073832247 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080100287 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.072511852 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.074944055 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084253499 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.067809639 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.202262355 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.07333552 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.07420404 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083307379 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.077112044 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.084617587 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.076349522 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.074882264 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.071981142 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.076102301 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.07349389 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.069517861 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.072873433 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078500862 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.074338694 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.074460322 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.074876698 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.07773048 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075675509 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085238241 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.075626516 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.075486405 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.076643836 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.072347994 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.075062982 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.075510463 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.078205519 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.075931737 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.07241322 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.072436222 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.074709781 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.076340505 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.076209149 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.075094867 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.076571448 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.082857734 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.074436892 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.078370599 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077652581 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.070273235 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.079277023 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.074338984 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.074893194 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.07447184 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07883712 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078434756 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075705807 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.084368677 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.074991562 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.078565742 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07537866 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.073080803 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.073998238 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.075068634 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.074483204 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.074399623 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.076417378 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.083323824 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.072818922 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.078041329 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.075393214 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.075739027 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.081937682 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.076556498 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.078406428 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.080597835 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.076377267 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.076984403 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.083097653 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.078660325 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077935197 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074894576 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.076567084 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080931727 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.073680283 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.081097135 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.07499012 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.075424356 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.076855977 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.072525428 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074832541 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.074442749 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073968495 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.080882616 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.075188294 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.074175933 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.073864223 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.072406623 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.076336887 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077587034 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08254384 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.077303721 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078072017 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.069831002 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.071765064 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075307147 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.072511765 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.076386866 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.07741866 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.080917627 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.077128991 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.074452557 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.073591787 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.083579724 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.080010498 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.077936423 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.072638886 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.077593181 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.0751475 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.075959137 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.074726526 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.073914362 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074610513 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.077459548 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.075592126 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.072814612 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080049568 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.208403408 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.076676166 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.078205456 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.077380172 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.076132774 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.070420886 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.075760555 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.077435252 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.080339403 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.077446638 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075725748 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086961385 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.072642786 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.07567659 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.077762958 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073872598 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.079868129 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.069719705 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.076643076 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.076087262 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076385369 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.070155394 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.074257375 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.07328231 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.077028253 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.073891991 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.070246172 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085511989 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.084459456 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.079494813 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074320822 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073676178 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.070592226 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.069454312 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.073581636 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.076356738 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.076946781 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.085472812 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.074562247 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.074396803 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06923868 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074661617 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078331916 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.078248785 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.07148471 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.069415186 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.075333989 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.078392843 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.080743066 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.074014971 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.074972549 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077269619 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.076823982 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.073326658 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.078536988 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.070635646 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.078471521 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.088463077 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.074684427 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075109273 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.081256034 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08274824 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.074235533 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06950746 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.075179243 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.077264584 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.074735362 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.075554669 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.075941396 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.089786597 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07832127 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.074159137 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.073119129 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.077250042 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.074085912 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.083361257 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.076507594 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.076397931 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.080464113 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.079535472 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.082339022 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.077866058 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.082585758 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.078656834 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.077946767 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.074225326 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.075360956 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.07365337 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.07403971 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.076735576 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.075607087 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.078995069 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.083095833 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.074429393 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085333174 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.083920154 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.07662457 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.071275149 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.074434205 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.074177901 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.069076791 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.075171602 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.072117474 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.072729304 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.072187789 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.073607818 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.075511718 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079362688 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.074938325 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.074966938 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.073185148 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.067455432 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.075948142 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.076083308 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074867122 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.070021001 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.073429096 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.204953554 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.079871963 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.078889127 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.073534056 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.077937635 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.076520647 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07603161 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.069638133 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.081848569 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074131762 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.076983477 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.075604772 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075825141 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.075571985 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078535079 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.080510068 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.07649304 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.076734385 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078480721 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.077286709 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.072355025 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.071587791 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.081111419 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.072553762 seconds)
  done (took 47.763342583 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108292867 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07127211 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069525537 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07009766 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080207075 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071251242 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069528241 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07042403 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070209353 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072609727 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069692313 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07008823 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077366893 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088703652 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080433825 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074459277 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069442967 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070700636 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069459848 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070613323 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077658918 seconds)
  done (took 2.924150368 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.080771316 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.085509338 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.082713892 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089325974 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078711477 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.078021701 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.082678432 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078366923 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.085562146 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079884287 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085439637 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077776092 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.079731222 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.079937977 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079433669 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078129693 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085606029 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.078496167 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.0777662 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082836219 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078052164 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082438335 seconds)
  done (took 3.130041109 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.075682151 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.073482244 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.075236708 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06946605 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.073613955 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.068329048 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.077464122 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.072016822 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.076891792 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.072816355 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.072851164 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.072618935 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.076204923 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.069254883 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.073794689 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.071694871 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.114639449 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.077269296 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.073752161 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.075041239 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.068833031 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.075603264 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.068896154 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.069564819 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.073053822 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.07694829 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.074046392 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.071784451 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.073618866 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.073970235 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.073632057 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.071560228 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.075564898 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.074656213 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.072855693 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.072938444 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.073950592 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.073772896 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.069130985 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.072146455 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.074706666 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.071899202 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.074316325 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.075412811 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.07228385 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.071444334 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.075380815 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.074810043 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.068783706 seconds)
  done (took 4.975103802 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.085942072 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.11901532 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.074515236 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.097532422 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.087130329 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.080128602 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.077562594 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.098594287 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.070646847 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.071519549 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.088801252 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.085968221 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.073176169 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.077269886 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.080701062 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.072917678 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.073706191 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.071649481 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.077021878 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.073150322 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.07657869 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.080299178 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.086792478 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.085630801 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.076766941 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.072028252 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.072596442 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.078436929 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.085140814 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.07718729 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.077791929 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.078528975 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.087957237 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.078571129 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.073017567 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.075476687 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08888228 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.073100702 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.075549804 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.071372114 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.07582231 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.077597533 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.079949765 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.089645741 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.073446149 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.078366049 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.074018542 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.070798633 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.085108607 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.075428318 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.080691367 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.086407547 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.077042777 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.073800217 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.077620553 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.08794508 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.072839375 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.071736716 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.075967645 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.084875575 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.071009442 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.076753533 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.086674451 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.075305762 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.080520362 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.085995056 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.078547174 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.076950029 seconds)
  done (took 6.898817903 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.084169974 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.104194527 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09010481 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.090481903 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083064955 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.083405397 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.083423917 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.084054728 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.09123877 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.087868359 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083108882 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.123711997 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.078735956 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.085306259 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082863598 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083068898 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.083488344 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083727938 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08388535 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082996327 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.083156571 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090052935 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08352683 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.090440301 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086626122 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.078627642 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083088563 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.083311864 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090232856 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08325376 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08698169 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.083838068 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083024966 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.090429075 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.087079266 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.083449623 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073341021 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083120871 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.083279094 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.083041689 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078881688 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090713901 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083015824 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.078898479 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083491875 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083310774 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.090051423 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.086892046 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.085215898 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087515296 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.083217747 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090896171 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083139505 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083351911 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.089819721 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.093335593 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090129647 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090328849 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083371894 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.090384436 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090592932 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.092803719 seconds)
  done (took 6.72231944 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090733454 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.08114894 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.09015466 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.069486567 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072154042 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.080128714 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072196509 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.07231642 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081506532 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.084180357 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083818015 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079362542 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081989481 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083350835 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07951485 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081824488 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079149725 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.078974633 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081474915 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.079276128 seconds)
  done (took 2.975600228 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.081919763 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091173592 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.074529608 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.078938361 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.076626116 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.079478837 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.076689476 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077419577 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07487487 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076912756 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.083932563 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.083034228 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074393632 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.079425729 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.083307816 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.079633862 seconds)
  done (took 2.638021558 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.092502219 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.08121798 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.088277254 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.074446729 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.074823352 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.070232853 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.072961495 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.069415897 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.069429653 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.086116566 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.073108737 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.085174688 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.073444389 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.073107871 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.070498885 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.078615194 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.069742369 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.070674363 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.073917892 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.086276957 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077364013 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.072237885 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.077211805 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.073667804 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.075976633 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.077680823 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.072327471 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.073928854 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.070763888 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.073792523 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.077055391 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.077110641 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.071299647 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.071587212 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.07302915 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.070952969 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.072995181 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.074215947 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.078738703 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.073622655 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.072078584 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.075703146 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.073992342 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.074627897 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.069966368 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.074197943 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.069921677 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.07595403 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.071146051 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.076254072 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.07316412 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.075923462 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.074294478 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.080451362 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.076557491 seconds)
  done (took 5.500855139 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087021001 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077866398 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.070605413 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.07175911 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.07683989 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.074702026 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.077711688 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075228035 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074765288 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.071875036 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074795667 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076932698 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075245192 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077285971 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07519376 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077377144 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.069274871 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074829258 seconds)
  done (took 2.735386818 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.079603875 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074175015 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.080749182 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.073812389 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.073872067 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076186107 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069957124 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.072243908 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07249108 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.073644752 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073399013 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.076227078 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072396531 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.07593117 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073646746 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073387094 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.075668765 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072423639 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.07378701 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069518097 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076163558 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072825521 seconds)
  done (took 3.003242276 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.101954393 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.091340016 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.146555924 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.086702183 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.094001923 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.079556968 seconds)
  done (took 1.972850428 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099921901 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108681162 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074652217 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077628235 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083351445 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077729416 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077666556 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077560938 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086079802 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083428865 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077433569 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086346662 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085444017 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08460284 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083555902 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083289563 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077618016 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080228441 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074628463 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091185413 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077936335 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085892547 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078058189 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07763928 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078120771 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084942942 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085919392 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083278172 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077714731 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085828685 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083234105 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077878324 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086188172 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083158903 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077094701 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08608049 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077792093 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09119697 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08423943 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085541211 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.077790312 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083459825 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086242527 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08224426 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085699542 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077979873 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082049239 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07817958 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078044911 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09320939 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083857659 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084650032 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084129363 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086405891 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086188686 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092689155 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083166005 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084972419 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083441295 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083132484 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084891163 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083135835 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085028584 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083512972 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083445329 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085382561 seconds)
  done (took 6.877635378 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112651671 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075550667 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078762166 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083294375 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085371631 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078149224 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077778376 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078242391 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077913856 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074820357 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116690132 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07760205 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085017241 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085835377 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078256655 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077927632 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077933984 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085002164 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074824074 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092960158 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077611588 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085121091 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084809368 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084934179 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082863084 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083067716 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077990699 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078422242 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078088903 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077774911 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082181517 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078201 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085062289 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074847834 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085371118 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077968705 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077827551 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08230382 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077515683 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083906887 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0857627 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090838817 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077816257 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078015845 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083255679 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078016265 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078459987 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074967749 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077808335 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074901196 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083041794 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083679306 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083242377 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084982844 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07775252 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077857562 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078530135 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077834079 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077956896 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083224403 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085000525 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077706064 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092813351 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077764528 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078300189 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085028702 seconds)
  done (took 6.784908093 seconds)
done (took 141.193512772 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.197762794 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.17704676 seconds)
  done (took 1.742505655 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.075815532 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.107365695 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.084834291 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.135615122 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.074551233 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.107788089 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.10691659 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.085848535 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.074044416 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.07366566 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.074162931 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.076456499 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13875551 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.073746701 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.074710237 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.076870488 seconds)
  done (took 2.821723432 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.107371373 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.172251495 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110954263 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.072412235 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.108044089 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080144183 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.072626648 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.083124658 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.079750108 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.073134058 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080457866 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078684807 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.072782813 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.078258571 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.081407236 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.080722352 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.07267764 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.080096296 seconds)
  done (took 2.966770998 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.107152323 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.098455454 seconds)
  done (took 1.585806758 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.162979629 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.139989481 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.211870557 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.362004019 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167523489 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.156281683 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.15123972 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.149240616 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.120700684 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.145649906 seconds)
  done (took 3.144681921 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.107808741 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.163138457 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.28183307 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.126262732 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.081080487 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.100958514 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.127856151 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.086424378 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.087864689 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.087614056 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.087408284 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.084581044 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.108986131 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.081547559 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.082007442 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.083861005 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.112060654 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.081491157 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.083121276 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.083508146 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.109191763 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.074073552 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.080761461 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.081147016 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.084862677 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.085046599 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.073489846 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.073884557 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.083702348 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.082647482 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.084156845 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.100182403 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.084858329 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.113788626 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.079253466 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.115015572 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.08461417 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.081344243 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.08348634 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.081335153 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.085937615 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.085541987 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.08150932 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.084223341 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.074811321 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.085481783 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.07387116 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.073760328 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.085862863 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.076477841 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.085300122 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.083881051 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.113563301 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.075265916 seconds)
  done (took 6.447148618 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.113832741 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.115983341 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.079223522 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.122796496 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113328573 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.080318529 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.113112946 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106351648 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.114261463 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.078244262 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076277327 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.078933725 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.090003325 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.090175854 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.125938116 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.117016967 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.081881314 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.079230859 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.115954787 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.115251897 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076595015 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108128666 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.10228507 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.113709641 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.075704347 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07827634 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.075982075 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.078714002 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.084592732 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085926191 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.077735667 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.0883793 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.092352999 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.085942414 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07470023 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.076424114 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076286315 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.08691823 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.087320507 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.086789571 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.085172011 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075855725 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.076428369 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.077992481 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07830189 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075908221 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.086853274 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.088329049 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.086979134 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.078352944 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.078322482 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.076817019 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.078011647 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.088308416 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.085128761 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.088199056 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.087657684 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.076751867 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077024911 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.080679999 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.088311457 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087545601 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.088090314 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.078433438 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.08691061 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.076754079 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.088014175 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.092847043 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.076964808 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.078006097 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.077264266 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077344035 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.080198412 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.085655114 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.085701486 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.078691299 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.077532938 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076318124 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.087614726 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086410161 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076323687 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.084686209 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075225544 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.0765881 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.077670247 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.077362168 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.084517177 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.086950916 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.077166554 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.076094237 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.077154369 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075777229 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.07401078 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.082583288 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.085979229 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.085208154 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.084345932 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075918713 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.085226522 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.21493783 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07993397 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.088829221 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.077158198 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078300509 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07854632 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.087234238 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.08659795 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.089480053 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.077676546 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.077150929 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.085184024 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089293269 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.076225674 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.086580334 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.088931247 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.086801615 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.076258158 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.089844652 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077872414 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.087990332 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077530543 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.087731223 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07682411 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.087079356 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076873924 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.076585631 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.076494796 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.087134774 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078423764 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07754178 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.078255493 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077563938 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.087011957 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.090898277 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078088495 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.086097764 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.087220592 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077980882 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.086772274 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.077856941 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.087621797 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078636545 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.078688532 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075808484 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.089859497 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076845903 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.075797084 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076714866 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.087276723 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076117888 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08813572 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.08565543 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076444338 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.088827858 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.0874024 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.085275524 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.087456896 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078701392 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.077173984 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.077273655 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.077200428 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.085281591 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.086589693 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.078359009 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076489075 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.085381182 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.086978238 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.075545454 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.086349439 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085650563 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.086086165 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.077503412 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.078631572 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.088042551 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.087969144 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.086175152 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.086299481 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.086479439 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.076786207 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.085200818 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085831705 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07636316 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.092447248 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076166525 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.090725767 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.086202581 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.084087285 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08599403 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.08749134 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.087602898 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.08702165 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.088327485 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.075040949 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.075867843 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.086263076 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.075155726 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076099903 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.083124062 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.076090039 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.208494104 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.092069529 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.077998129 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.08845897 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.076758896 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.087282934 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075644004 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.079150984 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.091808088 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.077725403 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.078751349 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.087440511 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.078143435 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.086588751 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.089370485 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.087121789 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076835008 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07850359 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.08821417 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.086592735 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.079083062 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07747095 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078200802 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.086692816 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.084727734 seconds)
  done (took 20.508075153 seconds)
done (took 40.611831038 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.219396151 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.162452752 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.181096785 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.126517068 seconds)
  done (took 2.170915517 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.12379494 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.111046602 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.100237845 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.072921239 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10707669 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.073462527 seconds)
  done (took 2.003656195 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.319951697 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.219803007 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.196199631 seconds)
  done (took 2.148408762 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.217753047 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.202397634 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.458103957 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.284492989 seconds)
  done (took 2.690474034 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.153056111 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.096675611 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.07578115 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.09256096 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.140812978 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.168479492 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.108199915 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.139784324 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.087514601 seconds)
  done (took 2.526245018 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.156943316 seconds)
done (took 13.117269391 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.23427727 seconds)
    (2/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.119245728 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.131598135 seconds)
    (4/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.112394114 seconds)
    (5/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.218777168 seconds)
    (6/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.207617643 seconds)
    (7/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.220940235 seconds)
    (8/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.178543882 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.115232101 seconds)
    (10/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.168433986 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.080447385 seconds)
    (12/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.230389778 seconds)
    (13/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.110075765 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.110069211 seconds)
    (15/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.175489411 seconds)
    (16/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.222542248 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.08700854 seconds)
    (18/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.122053983 seconds)
    (19/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.092326175 seconds)
    (20/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.078150459 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.110236173 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.082686114 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.112789906 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.100596208 seconds)
    (25/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.178994718 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.073360086 seconds)
    (27/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.15089563 seconds)
    (28/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.242217839 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.176213469 seconds)
    (30/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.169699985 seconds)
    (31/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.172387912 seconds)
    (32/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.241887377 seconds)
    (33/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.089182041 seconds)
    (34/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.356889769 seconds)
    (35/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.086736251 seconds)
    (36/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.091617627 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.099179769 seconds)
    (38/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.078033612 seconds)
    (39/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.216186 seconds)
    (40/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.175252935 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.126408127 seconds)
    (42/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.087843821 seconds)
    (43/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.080946766 seconds)
    (44/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.183967336 seconds)
    (45/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.079768908 seconds)
    (46/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.086083645 seconds)
    (47/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.192037465 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.111070803 seconds)
    (49/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.080965411 seconds)
    (50/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.083979062 seconds)
    (51/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.08433955 seconds)
    (52/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.058313281 seconds)
    (53/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.229705512 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.097362984 seconds)
    (55/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.079842619 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.105309961 seconds)
    (57/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.059737469 seconds)
    (58/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.059794187 seconds)
    (59/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.202891732 seconds)
    (60/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.194865038 seconds)
    (61/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.081849001 seconds)
    (62/309) benchmarking ("sort", BigInt, false)...
    done (took 0.212643295 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.081410552 seconds)
    (64/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.151036175 seconds)
    (65/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.080881083 seconds)
    (66/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.164350095 seconds)
    (67/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.070027468 seconds)
    (68/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.081009408 seconds)
    (69/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.058749485 seconds)
    (70/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.190152868 seconds)
    (71/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.186796156 seconds)
    (72/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.07526811 seconds)
    (73/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.163958492 seconds)
    (74/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.187884201 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.11604698 seconds)
    (76/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.080161011 seconds)
    (77/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.120082196 seconds)
    (78/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.058072803 seconds)
    (79/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.337841953 seconds)
    (80/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.08631992 seconds)
    (81/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.08108294 seconds)
    (82/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.072705602 seconds)
    (83/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.061370256 seconds)
    (84/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.122524647 seconds)
    (85/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.082864428 seconds)
    (86/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.12776276 seconds)
    (87/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.205698661 seconds)
    (88/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.072665427 seconds)
    (89/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.084068821 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.103880336 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 0.07437233 seconds)
    (92/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.18605821 seconds)
    (93/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.122802349 seconds)
    (94/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08995372 seconds)
    (95/309) benchmarking ("sort", Float32, false)...
    done (took 0.14291409 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.098313058 seconds)
    (97/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.16569937 seconds)
    (98/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.204555136 seconds)
    (99/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.12356398 seconds)
    (100/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.15920193 seconds)
    (101/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.093498542 seconds)
    (102/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.059704354 seconds)
    (103/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.176264019 seconds)
    (104/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.073460264 seconds)
    (105/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.085594767 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.098940363 seconds)
    (107/309) benchmarking ("sort", Int8, false)...
    done (took 0.153140522 seconds)
    (108/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.073457833 seconds)
    (109/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.115934248 seconds)
    (110/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.208854911 seconds)
    (111/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.080629381 seconds)
    (112/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.083116526 seconds)
    (113/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.059137671 seconds)
    (114/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.211053908 seconds)
    (115/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.058857478 seconds)
    (116/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.097835279 seconds)
    (117/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.080285291 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.094447382 seconds)
    (119/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.208323094 seconds)
    (120/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.058833568 seconds)
    (121/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.166715152 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.15720196 seconds)
    (123/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.101649847 seconds)
    (124/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.058092994 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.073735284 seconds)
    (126/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.07461101 seconds)
    (127/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.111112337 seconds)
    (128/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.175012171 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.097854642 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.156162211 seconds)
    (131/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.074825638 seconds)
    (132/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.081526102 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 0.147452174 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.081624691 seconds)
    (135/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.08380729 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.093782813 seconds)
    (137/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.079054653 seconds)
    (138/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.076501071 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07973018 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.080892834 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.095696876 seconds)
    (142/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.084344901 seconds)
    (143/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.156701073 seconds)
    (144/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.164737545 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.080688294 seconds)
    (146/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.059937183 seconds)
    (147/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.058109251 seconds)
    (148/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.076658198 seconds)
    (149/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072912591 seconds)
    (150/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.071293624 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.073161224 seconds)
    (152/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.100121364 seconds)
    (153/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.058519084 seconds)
    (154/309) benchmarking ("sort", Float64, false)...
    done (took 0.141182054 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.096455765 seconds)
    (156/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.080212961 seconds)
    (157/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.075857853 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.073909358 seconds)
    (159/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.081787318 seconds)
    (160/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.085159482 seconds)
    (161/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073689698 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.08525409 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.081892117 seconds)
    (164/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.058205915 seconds)
    (165/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.085156474 seconds)
    (166/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.059576444 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.130464598 seconds)
    (168/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.059301338 seconds)
    (169/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.087658223 seconds)
    (170/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.058411264 seconds)
    (171/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.089553592 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.058296862 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.102211835 seconds)
    (174/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.121692825 seconds)
    (175/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.06018396 seconds)
    (176/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.08799177 seconds)
    (177/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.058992869 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.073881542 seconds)
    (179/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.082064672 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.096359686 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.150477238 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.25542526 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.088142794 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.083394128 seconds)
    (185/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.060816408 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.075470045 seconds)
    (187/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.062835065 seconds)
    (188/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.082008512 seconds)
    (189/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.085513766 seconds)
    (190/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.087344981 seconds)
    (191/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.167559737 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.083421247 seconds)
    (193/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.076433612 seconds)
    (194/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.059628352 seconds)
    (195/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075555057 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.100204715 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.075021932 seconds)
    (198/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.16137237 seconds)
    (199/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.082463759 seconds)
    (200/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.075388896 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.110395612 seconds)
    (202/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.082938165 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.100107555 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.149519902 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072040649 seconds)
    (206/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.074107397 seconds)
    (207/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.059911751 seconds)
    (208/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.108430132 seconds)
    (209/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.073854096 seconds)
    (210/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.059330679 seconds)
    (211/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.070445142 seconds)
    (212/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072515926 seconds)
    (213/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.081220136 seconds)
    (214/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.058677835 seconds)
    (215/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.059858079 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.082997451 seconds)
    (217/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.080028504 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.081716695 seconds)
    (219/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.076449551 seconds)
    (220/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.081105258 seconds)
    (221/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.082321672 seconds)
    (222/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.114413082 seconds)
    (223/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.081113595 seconds)
    (224/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.08259725 seconds)
    (225/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.087450353 seconds)
    (226/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.079307378 seconds)
    (227/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.071822847 seconds)
    (228/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.058558325 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.074463755 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.079689448 seconds)
    (231/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.130530639 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.071778403 seconds)
    (233/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074739221 seconds)
    (234/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.060954583 seconds)
    (235/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.082601337 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.101234412 seconds)
    (237/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.071819477 seconds)
    (238/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.207278254 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.073198104 seconds)
    (240/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.165876604 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.150652296 seconds)
    (242/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.059807777 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.123307615 seconds)
    (244/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.088520215 seconds)
    (245/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.059715165 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.10069051 seconds)
    (247/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074723382 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.075669197 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.118748 seconds)
    (250/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.098152911 seconds)
    (251/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.05927524 seconds)
    (252/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.060294371 seconds)
    (253/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073600395 seconds)
    (254/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.074272038 seconds)
    (255/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076663495 seconds)
    (256/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076472738 seconds)
    (257/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073189899 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.07328089 seconds)
    (259/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.058739231 seconds)
    (260/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.05849841 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.073330832 seconds)
    (262/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.078484973 seconds)
    (263/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072617248 seconds)
    (264/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.058828589 seconds)
    (265/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.059265244 seconds)
    (266/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.098009876 seconds)
    (267/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.059850029 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.080381636 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.13526414 seconds)
    (270/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.071171475 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.081780662 seconds)
    (272/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.058484513 seconds)
    (273/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.071161164 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.073121832 seconds)
    (275/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.059694961 seconds)
    (276/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.073915815 seconds)
    (277/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.069433832 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.073237602 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.073703324 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.151803504 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.118594378 seconds)
    (282/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.059256609 seconds)
    (283/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073225496 seconds)
    (284/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.058600371 seconds)
    (285/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.058448134 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.0816842 seconds)
    (287/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.072306528 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.071831705 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.07222937 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.08166456 seconds)
    (291/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.077863795 seconds)
    (292/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.058940217 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.099040379 seconds)
    (294/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.058086241 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.079820598 seconds)
    (296/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.081171359 seconds)
    (297/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.073942232 seconds)
    (298/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.058036839 seconds)
    (299/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093925755 seconds)
    (300/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074883034 seconds)
    (301/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.078718818 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.110938053 seconds)
    (303/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.060438968 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.078255282 seconds)
    (305/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.057471489 seconds)
    (306/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.059122117 seconds)
    (307/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.371922524 seconds)
    (308/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.083195871 seconds)
    (309/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.06012562 seconds)
  done (took 33.943422942 seconds)
done (took 35.366413215 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.090783669 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102191117 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.08429675 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.103240127 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.089803384 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.08424878 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.081862082 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.087211818 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.089025215 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.090370944 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.086368659 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.06288381 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.083189237 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.082740632 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.084008541 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100011227 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.08840058 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.081989022 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.082203326 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.073002699 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.081801581 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.074265962 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.076330034 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.062128373 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.087896073 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.079809239 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.080866893 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.082488021 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.073609205 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.073690979 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.077446074 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.082010299 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.073798348 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.086635847 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.080955213 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.081524388 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.082995119 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.08577879 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.075455916 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.073690398 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.08237595 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.074387758 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.081690683 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.082145766 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.080752952 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.079269299 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.081489454 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.085228425 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100235712 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.075761485 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.083013333 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.084101705 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.083485153 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.081202697 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.077832215 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.08096801 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.078709057 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099983837 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.081944181 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076273736 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.082981852 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.08283506 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.079373664 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.08092429 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.081099 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.083356845 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.084015906 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.079329621 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.083068693 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07972296 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.073291849 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.081435514 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07774699 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.073588701 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.084124783 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.085709126 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.072202121 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07957142 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.080818796 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.079189099 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.072979162 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.075507393 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.075780435 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.080841048 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075255083 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.064020176 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.077838046 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.080655809 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.072221076 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.081963461 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.080484121 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.081293256 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.075147954 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.084423923 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.072640952 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.078930259 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.074234861 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.074251631 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.075268873 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07789651 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.073051419 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.075379787 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.083223697 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.074923724 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.079641911 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.086384367 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.073830666 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.080135905 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.072519861 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.072317085 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.087056494 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.082862798 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.073302131 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075844365 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.072009403 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.079507207 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.0718549 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.072763167 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.071791998 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.072184946 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07878319 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.071788913 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.074475638 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.079524575 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.22294556 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.076460856 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07796535 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07659376 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.074259559 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.080798523 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.074371888 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.073306855 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.075284536 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.069862674 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.076734548 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.074326276 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.081097047 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.075707981 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.081516169 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.075635844 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.081735947 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.079686349 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.080772795 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.078899518 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.072677256 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.067071942 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07611812 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07506619 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.076124236 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.073454189 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.075901274 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.073076369 seconds)
done (took 13.711818489 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.075020327 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.149230653 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.106484388 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.104191935 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.09420152 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.07502761 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.083719138 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.107948829 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.076209222 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.109617388 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.096544026 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.094883648 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.123412598 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.072743246 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.074096424 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.078433228 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.075992785 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.09011045 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.108232542 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.095856067 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.123673544 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.073539902 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.100901584 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.098784963 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.096887035 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.1029765 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.075710781 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.078638772 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.077884168 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.110893873 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.097598862 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.078851483 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.07532751 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.106570815 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.101930956 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.092532496 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.075352568 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.091235765 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.075327476 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.074218475 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.076785186 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.107426916 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.088848968 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.089339272 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.079327582 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.085135753 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.075697051 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.091709445 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.099283888 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.087397373 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.09463075 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.109102985 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.076753704 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.092506669 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.076640547 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.094855158 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.085161389 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.076859789 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.075574866 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.082590318 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.074749714 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.077748934 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.089782435 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.088742556 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.078423232 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.093344981 seconds)
  done (took 7.435525098 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.092990822 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.102026177 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.092810649 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.093739055 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.073591335 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.075591383 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.074978266 seconds)
  done (took 2.122268621 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.074968995 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.096741044 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.098447006 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.098427591 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.090299708 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.097479745 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086754123 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.075167402 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.097742451 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.075837082 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.096945639 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109756017 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.078367664 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.083169959 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.100370659 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.074900005 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.100248525 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.075230634 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.078787608 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.099774209 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07707092 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.105442907 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078481059 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.075513402 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089921882 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.07536082 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123835401 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.079574937 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.077091167 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.078330804 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072805063 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.117121906 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089202612 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.082630631 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.075543244 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09003342 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.090480272 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07345845 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.09256091 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.084765667 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.089782467 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.075483993 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.076773085 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.073266012 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.079876897 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.086205921 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.076107518 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.075732797 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.077683335 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.095975398 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.075996057 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089846951 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.078345525 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.081594817 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.076875088 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.081855394 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086493017 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.076084214 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.096427733 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.076837592 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092825853 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091716302 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.090618286 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091812291 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077821797 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089775242 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08945781 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.078126369 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077774526 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.078835996 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091693751 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.073419587 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.076475401 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.08602171 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.077643784 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.098938864 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.098850003 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07840537 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.088861318 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.076081897 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.075333538 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.075461417 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.099257882 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.080409943 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.075546673 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.079193726 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.078019502 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.074016078 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.074359327 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.079134178 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.073368909 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.077413246 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.078598284 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.078246681 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.078367439 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.0927208 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.077888548 seconds)
  done (took 9.704609523 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.076973643 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.076453348 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.077909923 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.076693963 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.076434017 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.076877899 seconds)
  done (took 2.000586761 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.102550246 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.077217117 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.089213024 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.080380088 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.114409763 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.095858502 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.096002035 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.086592731 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.092537225 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.08697273 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.095418776 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.097060263 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.101422773 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.080283176 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.095459262 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.079803304 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.096267045 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.082924378 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.087009314 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081059106 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.095019526 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.080454651 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080911784 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.091193387 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.084125318 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.080476275 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.086457825 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.087191326 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.086575652 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.086428504 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.079894148 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.083731698 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.078740682 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.085819048 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.096052054 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.078859458 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079926259 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.085590671 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080422332 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.084178773 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.096592042 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081088051 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.082669385 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.085325392 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.085829993 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.079108626 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.085438423 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.087936339 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.095458559 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.084996708 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.08807192 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.079108974 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.08363993 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.085442409 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.078919037 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.086632867 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.085323889 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.096060753 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.080498734 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07894325 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.076605189 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.084297497 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.085421339 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.083768023 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.086015538 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.085082897 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.078728356 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080616035 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081088775 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.080229534 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.084754825 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.076853473 seconds)
  done (took 7.71803167 seconds)
done (took 30.496729488 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.549252384 seconds)
  done (took 2.056073977 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.641103776 seconds)
  done (took 2.171573774 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.52006438 seconds)
  done (took 8.04687698 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.406307904 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.514357786 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.757017707 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.143568932 seconds)
  done (took 3.387362608 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.731484423 seconds)
  done (took 2.270575323 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.237566319 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225231123 seconds)
  done (took 2.01133999 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.389580014 seconds)
  done (took 1.917907073 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.160159303 seconds)
  done (took 2.691163559 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.269437937 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.188492609 seconds)
  done (took 1.992493064 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.497139881 seconds)
  done (took 2.029003457 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.905753773 seconds)
  done (took 6.439946915 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.224736626 seconds)
  done (took 1.804433381 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.247163542 seconds)
  done (took 1.781040595 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.762780592 seconds)
  done (took 3.299210128 seconds)
done (took 43.43643629 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.092176856 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.094408312 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.093967098 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.090676594 seconds)
  done (took 1.894689899 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.08674478 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.083060907 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.085038733 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.081643963 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.085788532 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.081700231 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.083325303 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.084478805 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.081406259 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.081747931 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.082012061 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.082315906 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.084098298 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.083564966 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.080831338 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.0841169 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.084851851 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.081534363 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.084412245 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.081730369 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.079806223 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.083808544 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.084553497 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.080718449 seconds)
  done (took 3.533524241 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.088266012 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.08257802 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.084666769 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.081313063 seconds)
  done (took 1.882716382 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.087530517 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.101898464 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.099401874 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.087622382 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.10191907 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.09602807 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.078165895 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.077687456 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.079437976 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.086650492 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.077129624 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.105729436 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.097792491 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.086876251 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.089516725 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.074435921 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.077430461 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.097189349 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.08750491 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.088094603 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.079160953 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.086926687 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.077350525 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.097679776 seconds)
  done (took 3.661318399 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.094936816 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.110867628 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.089930559 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.097405513 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.100125058 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.074355346 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.096800104 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.100514909 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.13702619 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.07394572 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.079910126 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.074715449 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.082527229 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.074183679 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.089957755 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.11857648 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.121702954 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.077781138 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.106378295 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.074515024 seconds)
  done (took 3.425949306 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.082530193 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.078414666 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.076470763 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.073966993 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.08634219 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.082080649 seconds)
  done (took 2.029863763 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.076861251 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.07930085 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.076311594 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.075697193 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.081834277 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.076087142 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.074438484 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.076489445 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.076434626 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.07584162 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.075866253 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.0750351 seconds)
  done (took 2.465734188 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.208554446 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.077564991 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.077752798 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.074439338 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.079674982 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.075706372 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.09068995 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.077119531 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.102230369 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.075673709 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.075911238 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.077685487 seconds)
  done (took 2.640453469 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217570481 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085025091 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248760889 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162539083 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120292107 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125035872 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122611207 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123305931 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.151625559 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109697036 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176647553 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177007826 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117714307 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147146184 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102573642 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.1082029 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164194894 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173639144 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115853161 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175291306 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155211972 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136010954 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157274834 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111629529 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115529644 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131900571 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.080304611 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090285528 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180259813 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142934338 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153724918 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121131641 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100992409 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186025628 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181640646 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150427048 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157995718 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093591409 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.111658431 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.142080273 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208066107 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097702605 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.312805402 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121677738 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.091670696 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143100352 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127618204 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.129848436 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.113984083 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099598641 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155694035 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194910496 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.148203671 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097865704 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135018481 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124008876 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.124339744 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122919744 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191338216 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170427794 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13717204 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.08137824 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118428814 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161700243 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142954646 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.117734656 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.135079167 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100964176 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144878435 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164513365 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131624896 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153231541 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.127146315 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09830656 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127348041 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151667095 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136206551 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169468258 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133100069 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.081520225 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132234326 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110437568 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089691929 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.159287792 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084253069 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183094826 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107654978 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.11658411 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135197951 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11829818 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118111041 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166074674 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.29773866 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115304776 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.075438723 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115539266 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.130748937 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154770515 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097079167 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117484908 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126406224 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.086478694 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147021005 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.084419109 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132237158 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.08390852 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133707526 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138827529 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.087939371 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130874942 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113848893 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.110860622 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142295133 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1676527 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097575487 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091679411 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178351539 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130487449 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.112689229 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153877343 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165304747 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.10777316 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110267752 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159150473 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181999753 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099304257 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172171489 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115814332 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092833565 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.096761849 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131830878 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121005344 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.133095661 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090936194 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.127161463 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177896636 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.084568509 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103861667 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141981423 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086949667 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089190943 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113315087 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113165751 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.104623376 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.108240811 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.112345536 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143926143 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277692579 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11606028 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135431772 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109140317 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182448229 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09724307 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.110955104 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11405904 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.079279977 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.144505094 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169232092 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088462542 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173910641 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.132766966 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125531072 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127298127 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091897063 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149700912 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088784309 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.079017938 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15447271 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118328384 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119215127 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.159932253 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126324259 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.133835366 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.126828947 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142729209 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139578447 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.139124373 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114569533 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.096819713 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120082235 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136244432 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.082433812 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.099510823 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.088605526 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11361123 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104630481 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092707641 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150466179 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133317313 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119344113 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120587564 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105734936 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15584582 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.084561431 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13625924 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.126901817 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104055961 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.15970534 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162437495 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142073319 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107502708 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.293064871 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.081101776 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084414414 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.097207557 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133024808 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09309459 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092548486 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12505385 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156128067 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139628021 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146393192 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133861154 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131238016 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164804318 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.07892467 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.12962752 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15648422 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130143256 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.113622721 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099605843 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.108591713 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152648278 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116712036 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192141687 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121805541 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132591993 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162058981 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.110040522 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089122083 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111911284 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143882691 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112842266 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151877855 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108308549 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097452016 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117914761 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.083693451 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107196396 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136209977 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127379345 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143372215 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.124341409 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142032031 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086327793 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123885261 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132165686 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129031364 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.072223525 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128634327 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167849239 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103702296 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125228717 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.3076123 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08983831 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.147213043 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183710776 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155794314 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09532879 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118629949 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130842978 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137067591 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129997339 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148796319 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116682775 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146154165 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118203281 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.094934174 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097460525 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106343368 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113666014 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.103614255 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.115055199 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.122965488 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.104787082 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141631794 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112237314 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119693504 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124789366 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.108510448 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.101170405 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106655505 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186041288 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126359766 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179816128 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.108428862 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.151964897 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174042137 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085329756 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087832652 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.086571234 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149269237 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093562524 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13861956 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.11683834 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126920633 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132350854 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151372166 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104282576 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.077059771 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11662243 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140872375 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133983499 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110477921 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.111573055 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170888729 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.107839656 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086644007 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.26851676 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127213878 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113621284 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180700661 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.071181753 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115884885 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085401767 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09053682 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137739195 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162724424 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.089049048 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.109008466 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128598295 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120946536 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137665036 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111449754 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118567296 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139343459 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160660393 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137494027 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.098273748 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120381515 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136288755 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165761901 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111051044 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.106514832 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181554279 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16007133 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.167020541 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.096333494 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121499364 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121636281 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119039142 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146693086 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092512096 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171267502 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090833536 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145497901 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112514002 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097260466 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138281104 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.118051882 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097117694 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155500923 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125051172 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090936554 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08563834 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125946208 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127263059 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11424856 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.083900447 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294474374 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.083657882 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142034 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17022332 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091082668 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114845584 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105760105 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089059334 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116965622 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111690343 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096614003 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.107821855 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181554129 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.095541736 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159551307 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143247792 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122448284 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143506307 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111192835 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.648524639 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.086560721 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159983799 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125714414 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185124024 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110162771 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125782218 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117633788 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132062662 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155064066 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112508607 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.195900288 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140228599 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.124445708 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088393267 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110526734 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113014466 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.095976504 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116768905 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121838767 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123642915 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.101393142 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.124907417 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132433592 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.0912505 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104726488 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164218243 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124463127 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151895479 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148438019 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094010903 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12477896 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144336693 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235201984 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.130807765 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162644271 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116601989 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109766063 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.090639801 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.110654956 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171508083 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.083089437 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169256085 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129847357 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119002221 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1224624 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.120699017 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140786929 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115726207 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130717036 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101330657 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.118607535 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123430163 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090577971 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.085492267 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114057886 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119236566 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.106348945 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105930089 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.107220789 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159451844 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.080880079 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107787855 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12416934 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152804809 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182320533 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.097260166 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092068947 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126706725 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123628258 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.121151829 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129801525 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.08777657 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090823995 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.088460504 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.087784969 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.118350023 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122412084 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123807343 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119430766 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171970855 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.093086625 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.245473046 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103120985 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112538904 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.078121128 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.08562935 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103333189 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104750742 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262537152 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122737909 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170691627 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.105738309 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.099643533 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101057936 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.083338985 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09335494 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137904933 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118541003 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127327434 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111733264 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.071279001 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118269472 seconds)
  done (took 63.500648714 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.117339203 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.090612103 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.105699195 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.154164097 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.132001963 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211426907 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.162856493 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198305818 seconds)
  done (took 2.836305797 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.076550438 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.106588516 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.113343343 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.092519172 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.07585371 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.078169159 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.242571524 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.090768459 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.075448196 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.105791542 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.087664827 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.077650173 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.447990839 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.074963341 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.076138003 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.070028734 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.075851151 seconds)
  done (took 3.622123526 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.420354091 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.626996814 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.368699055 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.085273717 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.971973325 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.09950436 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.160320096 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.143518765 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.087528601 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.546877135 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.4190664 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.138243943 seconds)
  done (took 18.734081114 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.091657988 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.084002266 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.099171924 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.099612819 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.086766072 seconds)
  done (took 2.122898866 seconds)
done (took 113.944452396 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.091231856 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.628685282 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.061679143 seconds)
  done (took 2.37646502 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.093914952 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.095354346 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.095102295 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.093237759 seconds)
  done (took 2.038864348 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.082968641 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.085187142 seconds)
  done (took 1.822757922 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.246006691 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.178452014 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.106328665 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.092422534 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.089416349 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.088667264 seconds)
  done (took 1.934159586 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.080782616 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.084440417 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.081018709 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.086101048 seconds)
  done (took 1.990696824 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.086911929 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.060520402 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.062370449 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.065853505 seconds)
  done (took 1.934763713 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.097172162 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.088649039 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.087844528 seconds)
  done (took 1.933039048 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.111371639 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.09492164 seconds)
  done (took 1.865721679 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.090482133 seconds)
  done (took 1.749725512 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.104100981 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.109747673 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.141256706 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.12109102 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.149126147 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.120728271 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.093584832 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.094647277 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.085641323 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.095274121 seconds)
  done (took 2.77395301 seconds)
done (took 22.701564422 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.087992495 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.378014139 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.369442347 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.100578489 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.678687172 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.365108292 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.980196591 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.102130599 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126745621 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.076469306 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.093398998 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.657517842 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.969827639 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.329661908 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.956208545 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.332110925 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.659367349 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.077821306 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.076309788 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.076735265 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.964581312 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.076399282 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.076433585 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.077210975 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.658626401 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.382220599 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.076934682 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.348230455 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.077341459 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.0784012 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.363784757 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.077245503 seconds)
  done (took 16.395126191 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079141492 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.130347077 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.082574639 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.093203414 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.078428865 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.078057628 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.080361609 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.077340353 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.131273414 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.076229407 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.094842555 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.076207578 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.080643982 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.077941669 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.09687303 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.076841608 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.077145558 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.077416353 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.077296558 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.077000907 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.096145582 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.077134608 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.076949233 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.077174844 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.076685688 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.090013803 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.077822967 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.077001971 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.077349283 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.079046023 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.079684007 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.077858373 seconds)
  done (took 4.349962398 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.127070324 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.13829664 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.082395521 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114206698 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.121055596 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.078801595 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.153956619 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.103773218 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.137132242 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.076918098 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.094713369 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.076998315 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.112124888 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07811375 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.097325808 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.077739192 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.077772436 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.077391903 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07694877 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.077424591 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.097012546 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.077929464 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07745264 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.078078203 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.077250367 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.091943969 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.078243266 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.077766403 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.077773105 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.079305355 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.080411015 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.078028169 seconds)
  done (took 4.619343783 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.081396761 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.08399893 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.091800821 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.09329767 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.07854989 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.082035341 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.08253338 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.078248886 seconds)
  done (took 2.346510512 seconds)
done (took 29.374532258 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.087787723 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.078350558 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.080598226 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.091604276 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.082745591 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.087659112 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.075224362 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.0848303 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.081359912 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.082302946 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.083910655 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.075738142 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.080208472 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.07557467 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.083146245 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.077002804 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.089031822 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.081005469 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.088149832 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.089330567 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.078998487 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.08231662 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.084148193 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.088125906 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.089060557 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.088459386 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.086331327 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.082096942 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.077273557 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.079200713 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.0859874 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.092918869 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.077576844 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.088692035 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.076442067 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.076122744 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.080754827 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.07625999 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.088469365 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.085517628 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.078764264 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.084772893 seconds)
  done (took 5.137370987 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.097124132 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.10219115 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.094585361 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.070034567 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.075681718 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.07406626 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.098091862 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.068345368 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.06783999 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.097845474 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.064225225 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.068333133 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.071796495 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.062099137 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.069613032 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.065300965 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.070646094 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.063726733 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.069243624 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.068443082 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.099410713 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.062297195 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.086849562 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.071764354 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.064655819 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.070450812 seconds)
  done (took 3.658681352 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.082908267 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.094342472 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.100075287 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140790676 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.115133572 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.089398216 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.088425034 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.104718431 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.098172845 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.075770607 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.081012428 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.102725131 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.099653557 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.083377031 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.076172642 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.095360512 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.093073319 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.078486506 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.08224967 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.104210266 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.097029133 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.095535053 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.105775746 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.092253833 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.075555885 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078859544 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.080218647 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.090771726 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.080083173 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.085779448 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.079481661 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.080159864 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.078314172 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.088527077 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07956036 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.078092132 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.104322981 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.087074977 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.090510899 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.077375616 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.084983728 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.077554807 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.102310417 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.137216146 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.075752245 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.082329425 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.079968879 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.086752473 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.075872809 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09699815 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.088480536 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.075901862 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.079236247 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.075675064 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.075781244 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079491347 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.078080315 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.078857224 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.085184045 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.082793845 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.101906351 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.081620214 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.094252946 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.075848373 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.085057569 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.075567926 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.078561075 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.07571437 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.10556609 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077902944 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.121083471 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.077017706 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.077098829 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.085861602 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.084706016 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.083116566 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.077158928 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.093194139 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.087274131 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.080011995 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.085168981 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.079642331 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.079753826 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.100382328 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.078962978 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.077954672 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.077369485 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.082166417 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.079150461 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.078170532 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089766452 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.076207254 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.079082262 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.093809253 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.075918811 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.077706604 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.082733194 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.081038865 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.076517559 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088188995 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.080503203 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.077362871 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.087080038 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.076414835 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.078836137 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.088713553 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.082997905 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.075742972 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.080154769 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.08186888 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.076562061 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.078059903 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07897721 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.078682438 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.085388151 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.082671319 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.080079741 seconds)
  done (took 11.725446342 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.177476007 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.170314169 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.080335163 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.161194907 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.085706055 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.089110741 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.16242731 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.106345212 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.076968979 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.078074758 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.078422372 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.120483092 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.116725813 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.126402863 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.087987265 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.077697616 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093862496 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.125407152 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.164356624 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.170450032 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093947389 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.086644479 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.079488707 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.078341637 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.079603465 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.087744706 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.095202068 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.086443095 seconds)
  done (took 4.752929216 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.089096752 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.114399184 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.084205399 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.1002508 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.100234616 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.076802515 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.079220536 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.078693741 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.091413939 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.087007247 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.076619043 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.082137681 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.083317072 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.080012292 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.077656247 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.083476347 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.084081097 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.078085557 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.079966383 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.082360227 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.087834607 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101482568 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.081112004 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.075915491 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.08165232 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.07664233 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.072356244 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.093033346 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.077530777 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.105507774 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.075016945 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.081926212 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.092154688 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.078435783 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.076538283 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.076899759 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.076574228 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.076557758 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07843523 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.077031068 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.074886682 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.066699925 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.075712323 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.088130676 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.084557008 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.064558043 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.082200256 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.082273138 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.082136653 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.073964877 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.080394448 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07959937 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.079883859 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.08440706 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.080905853 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.082664657 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07817256 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.083524053 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.086583235 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.077097296 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.074079828 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.07487734 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.082096516 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.074002371 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085717571 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.081633516 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.075468759 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.076602289 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.078504862 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.084081203 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.076477497 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.081379032 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.074159895 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07902934 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.081670583 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.078838051 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.078095969 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.075178798 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.07595514 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.07709077 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.063840359 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.076618434 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.061587526 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.079745538 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.07491761 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.075007685 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.076806649 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.081586014 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.088188237 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.078359742 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.08250133 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.077481481 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.075492256 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07968874 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.068870441 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.079345448 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.088562922 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.091831035 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.076797244 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.074160069 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.090792448 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.082190736 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.075304717 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.064349619 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.081130415 seconds)
  done (took 10.157750569 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.099895799 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.078694366 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.094529999 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.099753117 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.096849815 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.083790466 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.087438506 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.078650312 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.094119911 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.083375447 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.08697587 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.077099667 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.087374467 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.08699004 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.078715434 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.087530697 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.08083826 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.094650862 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.093095473 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.077759559 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.085469127 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.090551886 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.100963343 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.091182308 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.090276908 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.091522655 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.100267581 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.086715219 seconds)
  done (took 4.205159091 seconds)
done (took 41.308638109 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.779760122 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.938461894 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.760687013 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.078448319 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.837285771 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.994079967 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.941564981 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.754869549 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.00801856 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.794106262 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.055113245 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.959504819 seconds)
done (took 65.730660215 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.856322709 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.890884975 seconds)
    (2/2) benchmarking "String"...
    done (took 1.980315415 seconds)
  done (took 5.552822847 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.023469299 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.323331743 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.997005769 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.747646509 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.752301737 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.064295909 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.555174345 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.265987 seconds)
  done (took 30.390119031 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.89895476 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.972909268 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.461434414 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.476174297 seconds)
  done (took 15.54625711 seconds)
done (took 63.146432015 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.75749349 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.79414222 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.75566139 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.730503678 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.806615802 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.752304496 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.124950608 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.810837533 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.745243929 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.731546727 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.746740915 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.215014598 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.751966443 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.071466655 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.747206616 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.756886005 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.784834372 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.316759467 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.901892175 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.764469959 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.745456277 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.810915819 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.746624393 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.755725948 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.752902178 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.745240062 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.137960093 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.744626365 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.362551143 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.742418061 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.770358252 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.357885152 seconds)
  done (took 203.41849691 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.739775538 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.603801785 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.690347154 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.775074015 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.064353181 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.913011752 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.837686085 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.144387089 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.743004208 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.763976928 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.91633307 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.740053816 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.944896011 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.753963625 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.76825154 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.850925026 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.898062458 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.950247442 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.773128481 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.935504893 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.750044152 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.746959511 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.696135148 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.89636025 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.774940434 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.837180605 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.74643023 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.928991439 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.946921187 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.878039 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.782323381 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.747274945 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.967652392 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.62131004 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.763810612 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.771250222 seconds)
  done (took 168.341800156 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.910069269 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.745253716 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.745427518 seconds)
    (3/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.744786989 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.744841436 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.745695147 seconds)
    (6/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.758924014 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.745801258 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.867249007 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.872667396 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.381930205 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.247168766 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.748419203 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.795847171 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.543338989 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.746971546 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.812659925 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.756280899 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.746683496 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.760316117 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.771428524 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.748696325 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.748866245 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.869038055 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.757668633 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.779198451 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.753678068 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.746745119 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.751504372 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.117608154 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.745901474 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.7518959 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.001782754 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.747615982 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.746860128 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.599627348 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.309177971 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.835266155 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.748167398 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.752414793 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.746241694 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.964103402 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.74838945 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.747682884 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.749988599 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.886666374 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.747309548 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.870433452 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.746923533 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.239534498 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.747374623 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.748378325 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.440234636 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.347621179 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.749406652 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.746972489 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.750429114 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.747669493 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.748074025 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.754013063 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.392722984 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.827517377 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.750041795 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.751411583 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.753733084 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.747873322 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.812826667 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.749227447 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.980721123 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.808626231 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.871464745 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.749559128 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.867973379 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.750411884 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.814752218 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.841073768 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.747803949 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.751384979 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.74777738 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.748103187 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.828224746 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.748933915 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.875363116 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.7570467 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.749041577 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.799393025 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.817137181 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.750688503 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.601914149 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.749655961 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.75018241 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.029756177 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.814502338 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.750124246 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.748969355 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.751103236 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.883962218 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.870560877 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.468345781 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.751216891 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.394921036 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.755881057 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.898476461 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.750202954 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.881762832 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.753029867 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.831496223 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.754237003 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.751817112 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.748758246 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.783997919 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.750611235 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.805141607 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.750513431 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.124247788 seconds)
  done (took 398.413321065 seconds)
done (took 773.822014854 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.410572439 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.379133172 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.479892315 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.397252171 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.373621847 seconds)
  done (took 13.726057508 seconds)
done (took 15.411067292 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.840413074 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.845400107 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.774540717 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.843102356 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.772386042 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.841733648 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.825532113 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.777526593 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.812048337 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.775545603 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.810806804 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.775689621 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.764911049 seconds)
  done (took 25.144410491 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.991642495 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.99339333 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.823868981 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.993530112 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.799671516 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.990277818 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.924560985 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.907138091 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.906706274 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.769216133 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.764649477 seconds)
  done (took 22.551279899 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.993494664 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.002102385 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.83017982 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.00568052 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.802744001 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.996016891 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.919186754 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.910585366 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.914393757 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.769013851 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.765172915 seconds)
  done (took 22.594847893 seconds)
done (took 71.975833694 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.762482546 seconds)
  done (took 3.449215903 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.78873648 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.955802348 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.767838196 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.764768968 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.761434326 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.761871373 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.764403146 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.760846666 seconds)
  done (took 16.013112236 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.760554925 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.759591305 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.760285812 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.757998299 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.760671952 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.762120359 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.759382681 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.758674005 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.760961848 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.75794612 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.761207793 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.760948353 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.760147439 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.758478411 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.759323447 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.760974122 seconds)
  done (took 29.84716797 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.76155642 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.758619392 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.758012917 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.758471129 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.758284228 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.758438193 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.760026227 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.758379435 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.760343896 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.758309109 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.760489125 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.758254622 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.759899503 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.758498959 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.759271932 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.759289246 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.759622349 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.758796858 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.764671511 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.758878326 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.759747895 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.758858136 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.758750923 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.760390287 seconds)
  done (took 43.917768446 seconds)
done (took 94.91489208 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.54100935 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.418956813 seconds)
  done (took 9.648478269 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.765166734 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.763929434 seconds)
  done (took 5.278029722 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.763151026 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.762466882 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.762667152 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.763291197 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.762612567 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.763341691 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.764502093 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.763460804 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.763324528 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.7626615 seconds)
  done (took 19.320780002 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.763480372 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.764227871 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.761436603 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.763780152 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.764219769 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.76257997 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.765347299 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.764265419 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.765920908 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.761180587 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.764455648 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.762942176 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.766055403 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.762654762 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.766003928 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.761863629 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.762014408 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.762598367 seconds)
  done (took 33.434953016 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.765768915 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.764682503 seconds)
  done (took 5.222450173 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.76257679 seconds)
    (2/7) benchmarking "second"...
    done (took 1.763508655 seconds)
    (3/7) benchmarking "month"...
    done (took 1.764577234 seconds)
    (4/7) benchmarking "year"...
    done (took 1.7606362 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.761423954 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.761779787 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.760680025 seconds)
  done (took 14.026069097 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.764580005 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.917317884 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.988310114 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.393466637 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.765868893 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.767124747 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.726419489 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.767978448 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.769208071 seconds)
  done (took 19.552125357 seconds)
done (took 108.172469141 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.568352497 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.761736973 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.997725329 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.879547701 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.779716575 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.058075347 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.791073769 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.068357796 seconds)
done (took 42.597594544 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.761084877 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 4.006531234 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.99544882 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.785798673 seconds)
  done (took 16.481337998 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.757471329 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.281300678 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.801799155 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.343399634 seconds)
  done (took 19.908137404 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.131152763 seconds)
    (2/2) benchmarking "read"...
    done (took 2.114411132 seconds)
  done (took 5.942204019 seconds)
done (took 50.787030144 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.76588253 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.766694465 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.765327961 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.766235642 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.763254168 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.765636143 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.763145991 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.763270413 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.765980602 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.765628424 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.762853151 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.765414305 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.766580675 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.766759293 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.76461857 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.763876978 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.766775822 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.767028262 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.764252706 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.765229379 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.764334265 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.767575342 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.764339277 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.766444008 seconds)
  done (took 44.060426446 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.767766404 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.764789608 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.766620899 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.767705757 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.764985785 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.767547258 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.768275105 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.764272719 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.767580496 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.767649464 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.765268316 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.765934272 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.767028611 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.765202529 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.767884822 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.765899112 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.767603692 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.766722983 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.768112792 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.764751942 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.767363367 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.765182683 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.765278776 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.768704994 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.76502536 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.765759526 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.768114243 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.766293145 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.770082712 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.765584139 seconds)
  done (took 54.693482099 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.772925124 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.775758811 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.768968265 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.769155449 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.768598762 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.767725827 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.76805537 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.769073247 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.769193818 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.770553915 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.769837455 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.769303967 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.76877445 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.768623848 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.770172835 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.768730458 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.769997765 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.769833122 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.772889894 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.773015015 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.770929623 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.769341108 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.770156928 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.770009221 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.770305692 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.770050953 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.771711823 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.770613309 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.770020191 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.771170409 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.770145233 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.771494212 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.770640553 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.771134752 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.770802872 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.77285783 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.776357266 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.778099107 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.771120282 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.77061442 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.770348618 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.7716091 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.771829031 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.770878643 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.772357241 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.770766508 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.77092796 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.771385619 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.771911279 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.773558971 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.771821631 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.771166976 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.772519021 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.772463011 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.773207926 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.771665414 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.772102077 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.771268214 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.771671086 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.772920652 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.772628327 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.77186172 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.772267545 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.771184399 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.77167899 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.772503474 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.772264257 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.773131558 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.773134202 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.773063376 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.772548234 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.773777328 seconds)
  done (took 129.233432901 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.772638383 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.770417157 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.769549288 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.770127756 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.769758699 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.773894875 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.770218832 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771201187 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.770253205 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.773935271 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.773134805 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.770976314 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.770595282 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.773482458 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.774144 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.7704848 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.773751006 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.770482147 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.773642006 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.773911767 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.773880015 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.770827668 seconds)
  done (took 40.680907239 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.773838261 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.774469125 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.770502724 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.775510244 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.771123998 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.773539086 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.774985143 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.773975395 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773824863 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.772032201 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.771637118 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.774015665 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.772176086 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.772896508 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.772663818 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.772192975 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.775129857 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.771861042 seconds)
  done (took 33.617348936 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.773059813 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.773168369 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.775582908 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.77424069 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.773396671 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.77560154 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.773450221 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.777599608 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.775788608 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.774219445 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.776282407 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.776172828 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.775551446 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.772769525 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.775885248 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.774258199 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.777268247 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.773131666 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.776924974 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.774406426 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.774001249 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.777387394 seconds)
  done (took 40.752051558 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.776387854 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.778699945 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.773892844 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.775592805 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.774201023 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.777494453 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.776331881 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.775119964 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.776204807 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.776591243 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.775719465 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.77675468 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.775891991 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.775568135 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.77440342 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.773874694 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.778774452 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.775465608 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.777430434 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.775121986 seconds)
  done (took 37.223897152 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.779370297 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.778371208 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.780135786 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.779118471 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.778642598 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.778240648 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.779009041 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.779635956 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.779641999 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.78051904 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.778401587 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.779950469 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.780222349 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.780454344 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.779187672 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.779788455 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.780349866 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.779744874 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.779376286 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.78005466 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.780044937 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.779618272 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.780834545 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.780562953 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.78030517 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.783562123 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.781261274 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.780990054 seconds)
  done (took 51.541464026 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.779472355 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.778998498 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.778050383 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.777302425 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.778181643 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.776361138 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.776858096 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.777107425 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.779048863 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.777557296 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.778881592 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.780875038 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.779295566 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.781180127 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.78112292 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.780168667 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.779747512 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.776380353 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.778148461 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.777127447 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.780341255 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.779561735 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.780812426 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.777510357 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.777976888 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.779657661 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.776636669 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.778297641 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.779996487 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.777850771 seconds)
  done (took 55.066782773 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.797746042 seconds)
    (2/2) benchmarking "in"...
    done (took 1.798237356 seconds)
  done (took 5.301523562 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.778659852 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.781823361 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.780306719 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.778919331 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.777650595 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.781165412 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.781226064 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.778182051 seconds)
  done (took 15.944622245 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.781493809 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.780440742 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.781188622 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.78308087 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.782582948 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.781414612 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.786662115 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.782051544 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.783974284 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.783856429 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.788906191 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.789567897 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.784806688 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.783298346 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.78205859 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.783930435 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.781591142 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.783201114 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.783752032 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.78248369 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.785447694 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.785510518 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.783923936 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.780820602 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.785082547 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.79112466 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.785659474 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.781973194 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.784234607 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.786260327 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.782313848 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.77968569 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.783259746 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.784635781 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.782709024 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.783766612 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.790483496 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.784503201 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.788479835 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.784449306 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.7832663 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.779487326 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.785596276 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.784862668 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.784550841 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.784691402 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.783610396 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.779852794 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.783602861 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.786269837 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.786585607 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.783331859 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.779848873 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.788518153 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.786528475 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.790297602 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.785183563 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.786279367 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.792029332 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.793863303 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.795814349 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.790332375 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.784956864 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.78514769 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.792734627 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.806108721 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.792107013 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.782096314 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.781784306 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.783951604 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.791579382 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.796977077 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.794349327 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.784941604 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.78632864 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.785221662 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.786946293 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.784710711 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.791138984 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.788921621 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.785392795 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.786700719 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.794623229 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.806511616 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.786213522 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.78577273 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.786346147 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.786761257 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.787698172 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.795149696 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.787368768 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.787012033 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.784892686 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.786645287 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.786947223 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.786415384 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.786527101 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.785495191 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.782400558 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.787484093 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.786051756 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.789727097 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.795257617 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.788784645 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.787966246 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.792458436 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.787544769 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.787670599 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.792785646 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.786934812 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.788740553 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.787016251 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.7929822 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.782976457 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.790182467 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.796964766 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.787746149 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.788923825 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.788434989 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.787199192 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.797298804 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.811212318 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.787573977 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.787283063 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.792293364 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.798687512 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.788906251 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.792463472 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.789025962 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.7849597 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.785083304 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.789508526 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.789130018 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.789082752 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.789695511 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.788681633 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.784935525 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.787791207 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.790735781 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.789940357 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.789781195 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.787643233 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.789559701 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.790777406 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.789922177 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.7902597 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.793393798 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.789726974 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.790220484 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.792257396 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.785750125 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.789437792 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.790684672 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.790628132 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.79005547 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.790223727 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.789257156 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.789611196 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.78923848 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.788592196 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.789169544 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.789975612 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.791410873 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.789533743 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.793959061 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.78889213 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.786442879 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.789251944 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.78937671 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.788423503 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.790593139 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.788689897 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.793045276 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.797213807 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.790528408 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.790795204 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.793526184 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.791308473 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.791901637 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.791979884 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.797262773 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.797996746 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.791892994 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.796420718 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.792803012 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.791580697 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.790710228 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.791398727 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.791969247 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.792003788 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.794856515 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.797979839 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.803585599 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.799264239 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.792378437 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.794958395 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.792640833 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.79606703 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.795354364 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.792710781 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.791725844 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.791964087 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.791547718 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.793197376 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.79272205 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.793137327 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.791875606 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.792200898 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.791876728 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.793487227 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.794253197 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.793208417 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.793710426 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.79011793 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.792619643 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.792224352 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.792920102 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.789322595 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.79227417 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.793368177 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.792740945 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.79471395 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.799585405 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.789867386 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.79307147 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.793982973 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.79331552 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.792367119 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.793752766 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.796667601 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.792215079 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.799451141 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.793028855 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.795316592 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.799278839 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.793629499 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.793156798 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.797100172 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.793744565 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.792313847 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.797076083 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.80081015 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.793217923 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.795857419 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.795561138 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.795122906 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.793687191 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.800549306 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.792213464 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.794265654 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.795727506 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.795815882 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.792109192 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.79555251 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.795534923 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.797076145 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.797803833 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.795310686 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.795043862 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.796375172 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.796991239 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.795879105 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.796166704 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.797551843 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.80265681 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.798994873 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.795739196 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.7979065 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.796030291 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.798087239 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.795986602 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.795730758 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.794815355 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.806734865 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.803126652 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.799638231 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.797290828 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.794607555 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.80031256 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.795495216 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.798965162 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.795170286 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.796303517 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.795729874 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.794462101 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.792494176 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.7961936 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.796304067 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.796141174 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.797626179 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.800094924 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.795796967 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.795417337 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.797371995 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.797107432 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.797214266 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.79670704 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.795940659 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.797631597 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.798006581 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.795424372 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.796262701 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.802093989 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.796839596 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.798395988 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.796447162 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.796400527 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.796550859 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.79882366 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.798136799 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.800782423 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.804505528 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.800284786 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.804980504 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.797809176 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.806221893 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.799267775 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.799762786 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.804496308 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.794175269 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.796904933 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.798218691 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.798993228 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.802087132 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.79853224 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.798887769 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.802213008 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.798194334 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.796990162 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.799057903 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.798284593 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.797402613 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.798635696 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.806288335 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.800470921 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.800808535 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.800371492 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.795266891 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.800157326 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.798769066 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.797473541 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.802814099 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.799375062 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.799398668 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.799374562 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.798866576 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.800174965 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.799151613 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.798205354 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.796043754 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.798241801 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.806396118 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.799707473 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.804379706 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.7994687 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.80804673 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.801640145 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.805098771 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.801988783 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.800958902 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.800587547 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.800125515 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.802236772 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.799795055 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.801406813 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.800756981 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.801876809 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.803075101 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.800619909 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.802435929 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.80072798 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.80128428 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.800842956 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.80907622 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.822633339 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.802784289 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.803441927 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.797710722 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.801290761 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.806081412 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.801037034 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.799758612 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.804524409 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.810071756 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.808512459 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.801026783 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.801903289 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.801655978 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.802340103 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.801218049 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.800891455 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.802041403 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.801657321 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.801442222 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.802253059 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.805856756 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.801261797 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.803978152 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.802319142 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.803717971 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.811032124 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.801877322 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.802985256 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.80305544 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.801066583 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.803694647 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.80378013 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.803280495 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.803744499 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.802110131 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.803616979 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.80922154 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.808972263 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.805541308 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.802723275 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.803311449 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.803379254 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.803990534 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.804180559 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.80309951 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.804134065 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.804323026 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.802678934 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.803792122 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.804013689 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.802339842 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.803335932 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.803617335 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.806190387 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.809843996 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.803364961 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.800261813 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.802427901 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.802940939 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.801810321 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.803333268 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.810872613 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.806689377 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.814056414 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.810847378 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.808694746 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.804065295 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.806405385 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.811516377 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.802913558 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.804726444 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.804640028 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.807395146 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.805464043 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.807673333 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.80505978 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.80939816 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.804578238 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.805421094 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.811927236 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.805880574 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.804985312 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.806125736 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.808289137 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.804405902 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.801636557 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.805500113 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.803729339 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.811332666 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.806962046 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.806259858 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.807611313 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.804483235 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.806444274 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.809299478 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.805608769 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.806522596 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.802231267 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.80602197 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.807104642 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.805441693 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.803332098 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.804944366 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.805247916 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.809271219 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.814131538 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.802053057 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.807203087 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.806487654 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.807066319 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.807389413 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.805162889 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.801758151 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.803526747 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.805914809 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.80720464 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.806596948 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.810196092 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.805981415 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.807426325 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.807184951 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.808652524 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.809697861 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.816364202 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.813135278 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.803138304 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.806158757 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.810130255 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.810666535 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.808535686 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.807371971 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.806818353 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.808435588 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.806315712 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.807593392 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.808000853 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.809729947 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.821207011 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.807105598 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.807195516 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.807772347 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.811544221 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.808420602 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.804355503 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.808332246 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.810213621 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.812041536 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.815597533 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.810026938 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.815633094 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.80823139 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.809580754 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.811443866 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.812054664 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.815611794 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.812064712 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.809177922 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.8094695 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.814400307 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.823329405 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.808732574 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.817577323 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.83711286 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.80999629 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.811011228 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.810229291 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.808903151 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.809642944 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.811899477 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.810458372 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.808234568 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.808570822 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.809000333 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.810526378 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.814964344 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.810357201 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.809190128 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.808579817 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.8085804 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.811329089 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.805915141 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.809339257 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.808953231 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.810352091 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.810128946 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.811973747 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.809905463 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.823411361 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.81914351 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.810409862 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.811085438 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.806840999 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.813629927 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.813678184 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.821020639 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.816530645 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.810966477 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.810551584 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.811053939 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.811107945 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.808085398 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.811583614 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.810663569 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.809751625 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.808397637 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.824230542 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.820450223 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.815577743 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.811382321 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.812252695 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.81149297 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.813174451 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.812823072 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.812899133 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.814033782 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.813201774 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.815678987 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.810208128 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.81120893 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.814492471 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.817811527 seconds)
  done (took 1073.615142553 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.8093268 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.808325587 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.808812284 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.808318363 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.808817161 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.808696591 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.80845691 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.808643167 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.809926904 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.808567518 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.808587025 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.808983109 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.809111146 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.812661851 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.80895361 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.808939886 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.809580551 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.809287994 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.809754564 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.809770987 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.808666752 seconds)
  done (took 39.72991596 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.811764743 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.8091236 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.809714969 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.812514347 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.809294352 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.812744603 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.810017762 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.813193066 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.813021345 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.811493614 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.812898341 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.813317371 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.811034531 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.810857655 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.811135769 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.813646942 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.812817166 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.811285863 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.813128591 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.811527844 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.813677494 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.811925827 seconds)
  done (took 41.597945815 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.814808469 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.815039231 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.814236145 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.810651824 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.814116703 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.811957077 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.814795988 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.813504308 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.814681766 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.814247635 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.813590151 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.815082657 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.821724749 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.819031838 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.817039117 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.814034307 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.957771301 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.815220101 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.815543795 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.814490957 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.811113319 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.820088277 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.812070025 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.811502748 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.812891503 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.815771372 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.814865977 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.815315136 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.81500427 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.816021589 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.819807455 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.815095489 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.815050399 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.81665751 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.814754658 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.816107889 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.818563646 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.81620356 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.811844515 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.814420663 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.824497045 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.833706401 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.815896066 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.821675472 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.816178256 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.815721781 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.820149149 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.824510283 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.812339559 seconds)
  done (took 90.869748574 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.815503014 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.81496132 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.812702032 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.815525481 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.815996395 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.816131176 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.815260043 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.816249102 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.813004942 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.812632893 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.816954741 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.814116283 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.813842382 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.81616187 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.815432094 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.814175237 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.812949375 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.814271602 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.813998694 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.812572786 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.81405049 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.816921984 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.81695511 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.814845278 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.816183576 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.814759931 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.813361654 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.816436348 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.81516637 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.813596967 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.817453054 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.81653552 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.817562407 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.814734515 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.814346821 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.818414728 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.817750431 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.81466737 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.816724749 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.814500243 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.817107683 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.818850873 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.817641701 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.818086034 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.815854263 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.814678592 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.814810777 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.815254196 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.815626157 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.818093814 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.818484969 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.816741237 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.818273016 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.815552049 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.819435696 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.819565559 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.815294238 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.815989483 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.818824537 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.816153652 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.815794443 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.819789543 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.816221556 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.820045167 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.819260949 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.816008292 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.816653853 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.818025282 seconds)
  done (took 125.233368059 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.819369712 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.821072175 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.822269672 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.821049203 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.820129346 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.820480984 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.821025746 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.821321036 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.82096912 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.820369139 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.821070016 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.820643626 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.821845578 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.819843791 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.821065449 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.820924464 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.821427581 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.820344721 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.821445618 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.821731283 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.820861899 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.821847201 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.821014958 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.822207378 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.821609181 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.821835849 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.821626652 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.822000003 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.821986373 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.820630369 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.82382334 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.822014832 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.82227497 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.822632969 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.823345582 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.822307922 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.822823448 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.822385796 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.822097772 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.823211503 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.822611494 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.823065225 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.82268554 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.822986302 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.82444639 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.823029974 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.823663845 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.823300784 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.821914812 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.822389569 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.822432458 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.823051363 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.824860775 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.823369344 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.822443424 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.822036913 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.82310751 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.823306303 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.824264078 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.824620363 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.823562384 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.823264271 seconds)
  done (took 114.71811703 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.822182983 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.823107085 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.819392426 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.819506065 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.822535671 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.820856867 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.821919006 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.821957375 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.821004634 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.822849906 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.823042204 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.820563371 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.821264415 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.822291859 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.819965438 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.821891671 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.821139038 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.820469394 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.822396749 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.819931354 seconds)
  done (took 38.175898258 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.819508218 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.824010303 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.82066532 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.819468393 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.822857721 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.820365528 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.822908696 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.823598724 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.821685673 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.823615494 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.824981914 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.823835983 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.822430066 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.821672531 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.825047771 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.820844214 seconds)
  done (took 30.905656787 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.82198721 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.825228292 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.824698155 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.824783159 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.822367211 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.821437249 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.824503243 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.821357885 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.82147121 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.824886245 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.824517959 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.825546516 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.825382063 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.825126331 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.820846553 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.824845162 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.822050891 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.822759704 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.825509901 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.826627093 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.822158582 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.822463447 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.826337173 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.824700148 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.82205573 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.821936824 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.822169305 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.822808206 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.821943476 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.824463083 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.822918815 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.822517642 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.824880568 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.822974012 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.825677464 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.822514729 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.825580193 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.825831206 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.825602199 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.826055248 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.825688533 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.822796665 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.826445939 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.826518875 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.823626265 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.826667148 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.823752038 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.82503867 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.824138655 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.823147619 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.827030636 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.827967444 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.827686128 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.8284808 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.826866441 seconds)
  done (took 102.088512593 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.826428216 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.828175725 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.824816728 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.82640933 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.827290465 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.824912248 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.827100335 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.823969525 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.823904755 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.826814566 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.824525763 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.826812075 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.823739647 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.826837879 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.825584175 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.827665148 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.824860607 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.824418244 seconds)
  done (took 34.617391665 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.825628462 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.825215456 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.829267128 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.825025932 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.82584673 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.828417045 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.825328781 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.827819253 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.82836589 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.825924743 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.824852405 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.828249234 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.827901986 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.828735096 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.825770444 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.826830827 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.82785425 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.827947898 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.825495778 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.826379438 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.829195991 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.829209324 seconds)
  done (took 41.94886524 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.82806482 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.829111865 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.844448243 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.848678377 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.850250133 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.862610742 seconds)
  done (took 12.817408533 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826322945 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829858788 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.825796824 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829829735 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829754417 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82681886 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827252248 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827851247 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830430256 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827154823 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828549726 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831454274 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830518958 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827169242 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829794435 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830851496 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82736088 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828144182 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827181988 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830501589 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828328014 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830104137 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828473626 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827139014 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827911892 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827948611 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830828024 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828520733 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828771494 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83081094 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831946053 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827537058 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831275901 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82925058 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833198019 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830937093 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828201958 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831436836 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83128795 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829062463 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.83059594 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831152417 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831775016 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828984439 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831725581 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828691398 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830172269 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829177822 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829624516 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832371042 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833017558 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829622823 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832518937 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832067577 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833939075 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832587598 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831075089 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829735923 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833309547 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831849739 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830200788 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832838839 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830153509 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830388339 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833353711 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830578382 seconds)
  done (took 122.533396474 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830051923 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.830689668 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829713796 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830260558 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830825339 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830071761 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829991111 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830410461 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830133797 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830571385 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834841597 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83053235 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830018075 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830887778 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829750156 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831112326 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831145939 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832345097 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830380481 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834249481 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831418635 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830179011 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832061535 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831167185 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83199463 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834477885 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832339155 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832184892 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831483767 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831991475 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832616864 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831631984 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831681418 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.832048092 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83153085 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831117142 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832622936 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832651082 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832328379 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835410284 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832007892 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835824866 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833688665 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833642033 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832469607 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831611038 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832891119 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831439766 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831872845 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831981638 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834268569 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83212672 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832901679 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832587228 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832375896 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833217626 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832357467 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831871378 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831951108 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836297717 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833112081 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833415737 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836983821 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833430816 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833388611 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833138508 seconds)
  done (took 122.681525849 seconds)
done (took 2501.34618763 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.864632368 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.016180816 seconds)
  done (took 15.641571625 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.999042413 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.95491965 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.836966935 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.877306 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.835950566 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.860819561 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.830353667 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.836199247 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.836444441 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.835996682 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.836043502 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.024184982 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.892228277 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.838007609 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.836099605 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.928275102 seconds)
  done (took 51.824943865 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.84003768 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.840833276 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.851929532 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.842885136 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.840254807 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.856478762 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.874567506 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.843502388 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.902320397 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.855352575 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.958981796 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.851234604 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.838617486 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.90466718 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.854252639 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.855720397 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.936556054 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.919144738 seconds)
  done (took 35.430752747 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.921625084 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.843265461 seconds)
  done (took 10.535944225 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.867141287 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.845942604 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.867804286 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.838122927 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.847916135 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.858530498 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.850664527 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.85457532 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.859362669 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.859343443 seconds)
  done (took 70.318332322 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.846801274 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.842401212 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.843135401 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.839748727 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.834708782 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.838130688 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.841156531 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.835781713 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.518113004 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.877852695 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.848722073 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.848811013 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.840825676 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.842796385 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.838982781 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.867635807 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.936279488 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.839977195 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.837808892 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.847407992 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.841263652 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.897962582 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.856307304 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.844733414 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.87239316 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.519611344 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.852872005 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.847174619 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.934298692 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.839004731 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.841580119 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.843151042 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.844824197 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.237904011 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.115638066 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.843343994 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.860004518 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.849962399 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.839384027 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.939721463 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.843057045 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.848375814 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.442999556 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.094419483 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.938591707 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.886380533 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.165816267 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.861982006 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.844543894 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.871368827 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.84711033 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.843575044 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.858338556 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.319066234 seconds)
  done (took 130.624416898 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.839525846 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.210136995 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.008873369 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.839415672 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.130256807 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.052871591 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.841121239 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.890254452 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.839878424 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.072514557 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.098875151 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.951641312 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.841100383 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.839252328 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.840933837 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.836080774 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.998865481 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.916575784 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.841604911 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.836786833 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.871457876 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.087664232 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.969373755 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.840938087 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.870408577 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.056843659 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.96768192 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.950992418 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.643912117 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.836820253 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.905904291 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.840311113 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.839590624 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.839330991 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.000640595 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.939690838 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.927100304 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.841054639 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.838677499 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.837355165 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.512216932 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.044718121 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.940418061 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.985608471 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.041517128 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.052562198 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.627038926 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.838079993 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.582548941 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.007408038 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.076288418 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.073602475 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.968038095 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.84250234 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.164746794 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.838100343 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.838640835 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.094274806 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.987315194 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.946015448 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.842494797 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.841144804 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.840028941 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.092531019 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.843238038 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.940581323 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.843834522 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.841059645 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.941751193 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.947550263 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.985486047 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.06044072 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.875379671 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.747671294 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.376480123 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.092258294 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.912806741 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.097563119 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.843016044 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.839146037 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.923692688 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.688710103 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.099654062 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.095747016 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.100485459 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.881333885 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.566812722 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.841178999 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.072757973 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.068680643 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.097778633 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.051751971 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.083284754 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.178982463 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.840422563 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.840704509 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.062239988 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.982095683 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.844414278 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.194385644 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.0802521 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.411317985 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.866110177 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.154747184 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.97911358 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.845585561 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.487200454 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.842435605 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.069127107 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.887793469 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.844219757 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.843193052 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.065895131 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.821931784 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.842160936 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.70528208 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.909151918 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.847645586 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.08124213 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.846069607 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.108490251 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.844608694 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.085448545 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.942560025 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.879459553 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.023088346 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.053531272 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.846523787 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.093981829 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.093794769 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.964244938 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.121627036 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.748604897 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.842510512 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.136943887 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.846774295 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.843090482 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.018690563 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.845399614 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.995663525 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.847303298 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.133031549 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.873093876 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.081805018 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.848381835 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.103615277 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.885872829 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.900014827 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.848023664 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.981821798 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.846726896 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.679440049 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.007197911 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.847356378 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.845447599 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.39676436 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.844070124 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.99888155 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.083378917 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.872894826 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.922841468 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.517439918 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.844289149 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.938017104 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.876246266 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.24076718 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.844308427 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.104118578 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.848156699 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.845404088 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.845109197 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.090866203 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.087978333 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.846691258 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.844150461 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.744503237 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.844609131 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.844705102 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.03181761 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.18069676 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.844912452 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.054116396 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.847863471 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.980400232 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.850005138 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.92758947 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.185746197 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.845304126 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.845845427 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.845190126 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.847462299 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.847000078 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.060024155 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.878718494 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.384318709 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.988422322 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.121149403 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.162472355 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.099855955 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.896978635 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.850459796 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.108336559 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.850201068 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.913950345 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.849587667 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.87174656 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.086112099 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.849878212 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.055187063 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.12533361 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.884121771 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.893488454 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.843137467 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.842269838 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.838570358 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.986540458 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.932599291 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.841101931 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.834676435 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.954050892 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.96267593 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.049985749 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.836692332 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.878976356 seconds)
  done (took 897.879972392 seconds)
done (took 1214.019070664 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.831225307 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.831464582 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.816914287 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.829914954 seconds)
  done (took 29.074165333 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.836868611 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.832419488 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.835095132 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.831700514 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.834444441 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.834290272 seconds)
  done (took 12.762830741 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.867655614 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.82538716 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.825388219 seconds)
  done (took 21.27902858 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.898859805 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.219022942 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.938109925 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.70180772 seconds)
  done (took 10.510564615 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.83104242 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.82957064 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.828239023 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.830192571 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.830905531 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.830912484 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.830417782 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.831648446 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.832301389 seconds)
  done (took 18.230233224 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.191628366 seconds)
done (took 97.811987792 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.061097439 seconds)
    (2/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.025367502 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.765439366 seconds)
    (4/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.697686539 seconds)
    (5/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.110879639 seconds)
    (6/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.974393247 seconds)
    (7/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.208587988 seconds)
    (8/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.961639925 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.138712872 seconds)
    (10/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.927082311 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.000898074 seconds)
    (12/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.273391 seconds)
    (13/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.948255114 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.152767391 seconds)
    (15/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.923805338 seconds)
    (16/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.280769314 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.902734316 seconds)
    (18/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.088880493 seconds)
    (19/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 3.107514863 seconds)
    (20/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.916995694 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.848588745 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.958293071 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.524104147 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.648395132 seconds)
    (25/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.768299805 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.147799823 seconds)
    (27/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.85301005 seconds)
    (28/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.814824164 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.866336332 seconds)
    (30/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.847080425 seconds)
    (31/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.047055751 seconds)
    (32/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.8346883 seconds)
    (33/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.132676582 seconds)
    (34/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.034356898 seconds)
    (35/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.856200546 seconds)
    (36/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.195649929 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.812867022 seconds)
    (38/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.929743563 seconds)
    (39/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.835981984 seconds)
    (40/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.448130035 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.946844219 seconds)
    (42/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.983128352 seconds)
    (43/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.078612375 seconds)
    (44/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.981328299 seconds)
    (45/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.94779736 seconds)
    (46/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.865133501 seconds)
    (47/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.015671447 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.496849818 seconds)
    (49/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.242722153 seconds)
    (50/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.006465832 seconds)
    (51/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.848968814 seconds)
    (52/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.023249671 seconds)
    (53/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.833725814 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.039301354 seconds)
    (55/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.933613058 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.894239895 seconds)
    (57/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.231623269 seconds)
    (58/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.823611997 seconds)
    (59/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.008143478 seconds)
    (60/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.846608778 seconds)
    (61/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.869145897 seconds)
    (62/309) benchmarking ("sort", BigInt, false)...
    done (took 6.840733534 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.994781278 seconds)
    (64/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.840337622 seconds)
    (65/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.094365158 seconds)
    (66/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.014490928 seconds)
    (67/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.969489577 seconds)
    (68/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.872331145 seconds)
    (69/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.918179885 seconds)
    (70/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.84237035 seconds)
    (71/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.837018027 seconds)
    (72/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.898289433 seconds)
    (73/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.926419351 seconds)
    (74/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.153311229 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.939686876 seconds)
    (76/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.926470003 seconds)
    (77/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.959224217 seconds)
    (78/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.189281121 seconds)
    (79/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.840591787 seconds)
    (80/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.970951912 seconds)
    (81/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.919110078 seconds)
    (82/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.861207252 seconds)
    (83/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.12607212 seconds)
    (84/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.023028484 seconds)
    (85/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.860188282 seconds)
    (86/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.356928788 seconds)
    (87/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.814799875 seconds)
    (88/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 3.27037092 seconds)
    (89/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.829013026 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.042080203 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 5.509920177 seconds)
    (92/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.829276218 seconds)
    (93/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.987532252 seconds)
    (94/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.663950326 seconds)
    (95/309) benchmarking ("sort", Float32, false)...
    done (took 5.540254305 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.771709844 seconds)
    (97/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.976544528 seconds)
    (98/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.171380524 seconds)
    (99/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.158352341 seconds)
    (100/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.823836007 seconds)
    (101/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.341462111 seconds)
    (102/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.810841983 seconds)
    (103/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.344207226 seconds)
    (104/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.211665787 seconds)
    (105/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.870309017 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.200380571 seconds)
    (107/309) benchmarking ("sort", Int8, false)...
    done (took 4.783431573 seconds)
    (108/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.818777964 seconds)
    (109/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.894315301 seconds)
    (110/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.932149902 seconds)
    (111/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.052750135 seconds)
    (112/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.919216146 seconds)
    (113/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.902854516 seconds)
    (114/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.102901174 seconds)
    (115/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.883999698 seconds)
    (116/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.833016985 seconds)
    (117/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.95275403 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.014764551 seconds)
    (119/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.155838217 seconds)
    (120/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.110279709 seconds)
    (121/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.917276255 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.811806566 seconds)
    (123/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.074230279 seconds)
    (124/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.197833106 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.49414218 seconds)
    (126/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.890199947 seconds)
    (127/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.90601096 seconds)
    (128/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.300609193 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.857015908 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.920295987 seconds)
    (131/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.912480091 seconds)
    (132/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.827905903 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 2.02416952 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.827400546 seconds)
    (135/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.799766896 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 3.422684102 seconds)
    (137/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.838676598 seconds)
    (138/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.86309132 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.021234198 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.055104038 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.761625427 seconds)
    (142/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.899479205 seconds)
    (143/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.087342602 seconds)
    (144/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.904368922 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.906840467 seconds)
    (146/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.273154535 seconds)
    (147/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.046034571 seconds)
    (148/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.945787395 seconds)
    (149/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.021326946 seconds)
    (150/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.049436194 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.047673799 seconds)
    (152/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.807213238 seconds)
    (153/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.180695226 seconds)
    (154/309) benchmarking ("sort", Float64, false)...
    done (took 5.54918057 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.933171233 seconds)
    (156/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.905537685 seconds)
    (157/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.060275917 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.130837548 seconds)
    (159/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.830082001 seconds)
    (160/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.809609594 seconds)
    (161/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.957000348 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.197026294 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.824127452 seconds)
    (164/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.030789176 seconds)
    (165/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.818498124 seconds)
    (166/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.234024944 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.925547425 seconds)
    (168/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.267802618 seconds)
    (169/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.50537956 seconds)
    (170/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.993758468 seconds)
    (171/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.722331567 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.716698076 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.922836445 seconds)
    (174/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.244102616 seconds)
    (175/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.157673332 seconds)
    (176/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.328650275 seconds)
    (177/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.945649115 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.139660215 seconds)
    (179/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.828582854 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.746761294 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.900894776 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.788018975 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.178768788 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.836405825 seconds)
    (185/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.043659083 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.094497486 seconds)
    (187/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.791128662 seconds)
    (188/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.923900961 seconds)
    (189/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.814878877 seconds)
    (190/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.983030146 seconds)
    (191/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.041731654 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.83989532 seconds)
    (193/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.901606053 seconds)
    (194/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.922084537 seconds)
    (195/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.851906821 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.948369208 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.810058236 seconds)
    (198/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.943860975 seconds)
    (199/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.893217605 seconds)
    (200/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.804172895 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.962896404 seconds)
    (202/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.814026875 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.494505134 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.817646255 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.868184207 seconds)
    (206/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.148218888 seconds)
    (207/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.989465525 seconds)
    (208/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.876522494 seconds)
    (209/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.809918592 seconds)
    (210/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.983340564 seconds)
    (211/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.936682072 seconds)
    (212/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.939383964 seconds)
    (213/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.831347809 seconds)
    (214/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.716758749 seconds)
    (215/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.876087674 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.623124194 seconds)
    (217/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.245000504 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.038669374 seconds)
    (219/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.8686112 seconds)
    (220/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.888464282 seconds)
    (221/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.80487265 seconds)
    (222/309) benchmarking ("map", abs, BigInt, false)...
    done (took 8.554622138 seconds)
    (223/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.972598307 seconds)
    (224/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.855237345 seconds)
    (225/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.513924795 seconds)
    (226/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.836543072 seconds)
    (227/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.790051254 seconds)
    (228/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.227849069 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.147200677 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.828759545 seconds)
    (231/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.808028112 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.848298297 seconds)
    (233/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.849284932 seconds)
    (234/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.632330679 seconds)
    (235/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.872448017 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.625453968 seconds)
    (237/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.044943963 seconds)
    (238/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.390500559 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.200690659 seconds)
    (240/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.057911406 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.678623163 seconds)
    (242/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.264525777 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.895194782 seconds)
    (244/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.378468053 seconds)
    (245/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.296810256 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.46236295 seconds)
    (247/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.940872548 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.185105636 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.929790146 seconds)
    (250/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.784116984 seconds)
    (251/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.938459028 seconds)
    (252/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.11982899 seconds)
    (253/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.809704467 seconds)
    (254/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 8.008983488 seconds)
    (255/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.903533217 seconds)
    (256/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.958967758 seconds)
    (257/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.145483035 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.05477699 seconds)
    (259/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.0007249 seconds)
    (260/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.912398981 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.900180324 seconds)
    (262/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.90553296 seconds)
    (263/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.916606708 seconds)
    (264/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.09429215 seconds)
    (265/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.790221693 seconds)
    (266/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.998158301 seconds)
    (267/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.781320095 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.454703965 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.825522719 seconds)
    (270/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.986978034 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.152667248 seconds)
    (272/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.363392855 seconds)
    (273/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.034453877 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.136893031 seconds)
    (275/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.270081092 seconds)
    (276/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.803073436 seconds)
    (277/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.348646944 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.415678163 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.119512384 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.895541173 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.773143741 seconds)
    (282/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 7.812500802 seconds)
    (283/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.198398639 seconds)
    (284/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.156228525 seconds)
    (285/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.974613985 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.906711494 seconds)
    (287/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.767961146 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 3.039724092 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.932179124 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.506722456 seconds)
    (291/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.768346104 seconds)
    (292/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.376092904 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.162878388 seconds)
    (294/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.407494612 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.812715105 seconds)
    (296/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.793430229 seconds)
    (297/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.777329389 seconds)
    (298/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.367735547 seconds)
    (299/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.7949716 seconds)
    (300/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.875996114 seconds)
    (301/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.790704685 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.845299586 seconds)
    (303/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.756997295 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.41855115 seconds)
    (305/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.075927454 seconds)
    (306/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.19616788 seconds)
    (307/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.775158237 seconds)
    (308/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.802561149 seconds)
    (309/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.905046311 seconds)
  done (took 990.449267212 seconds)
done (took 992.286939013 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.809195448 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.800958571 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.784335167 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.806546042 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.89764092 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.815900466 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.795022967 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.787428716 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.832575909 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.835295899 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.78440968 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.811470893 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.786553993 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.784584545 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.783960906 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.798508304 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.103714939 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.82011175 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.801975884 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.795342594 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.803136265 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.785306988 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.835855501 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.812384552 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.790806329 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.788145216 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.788329671 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.805842956 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.897505834 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.790372069 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.788970007 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.797506174 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.105275453 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.817085346 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.781971259 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.805829121 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.799684026 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.795186982 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.792036614 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.819538249 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.196604837 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.830335745 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.789332092 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.787601529 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.787085518 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.790964308 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.787671143 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.793353027 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.80076166 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.800708573 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.192612869 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.846930875 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.789802625 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.787857625 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.799018161 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.787354479 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.790846027 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.803913833 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.807814984 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.80368334 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.095436976 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.826378869 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.790584047 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.805918101 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.797423646 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.230980675 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.82794752 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.793333385 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.195133712 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.835737629 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.230691555 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.838492566 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.788950988 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.802669753 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.821392771 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.106616044 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.817873914 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.787752963 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.796779288 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.787883963 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.798114139 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.801946888 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.793354816 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.79002123 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.803196277 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.816315989 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.799543217 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.791001333 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.797506228 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.810200809 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.796926494 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.801232443 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.79381842 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.785209686 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.799024946 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.792941468 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.793114059 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.793807087 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.795710091 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.800973606 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.194986406 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.849668127 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.78685396 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.787825639 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.78941623 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.804051424 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.196281291 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.834064496 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.812438426 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.836839131 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.79169085 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.097699097 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.828514984 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.80642956 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.799556191 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.794048036 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.786626783 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.097577443 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.230471261 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.850318455 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.792597022 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.791059487 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.807294906 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.792978327 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.787928759 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.107819216 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.826356079 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.805751612 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.912638555 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.802026352 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.822374991 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.7942453 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.79566842 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.821089829 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.810095755 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.823902501 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.795205656 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.808197845 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.807976468 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.789899018 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.804355056 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.802209944 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.79468799 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.799371482 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.787627896 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.822229696 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.806675049 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.806113541 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.814473198 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.914495465 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.791632072 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.099371819 seconds)
done (took 281.772494767 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.866242667 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.787666933 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.886072896 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.789497495 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.871185097 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.875358593 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.786433018 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.786578525 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.786269265 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.167557716 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.786477175 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.787207235 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.788172207 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.787889338 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.870951316 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.790026207 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.787719314 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.131552758 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.792299299 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.861616115 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.792204449 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.787988328 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.789859998 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.172501274 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.786690948 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.789340893 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.862806742 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.790669242 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.134885709 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.789101362 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.788760583 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.136028135 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.882978232 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.808549234 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.801376825 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.797129135 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.874199555 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.796191575 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.872605646 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.871333572 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.889993814 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.832453984 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.791284869 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.783616609 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.797909324 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.79375531 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.788639132 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.819545764 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.786064654 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.788346775 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.135116446 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.802303109 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.799814133 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.789842997 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.789238205 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.814718168 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.789676504 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.793434659 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.884785519 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.793150822 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.854601876 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.17344093 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.168836801 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.792141549 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.7890345 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.785828198 seconds)
  done (took 179.053073265 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.85330907 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.859681535 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.852290385 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.790538082 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.838402946 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.851980762 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.788040054 seconds)
  done (took 14.546651889 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.790462015 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.784666883 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.835135462 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.833261623 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.781743976 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.930578265 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.781821147 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.795645143 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.777435489 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.834351719 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.781330622 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.780448984 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.786819401 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.773922562 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.830593252 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.791891027 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.898913231 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.780647822 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.78074921 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.929923073 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.776759352 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.786931059 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.828344439 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.78743408 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.77591606 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.781532361 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.360446041 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.770785027 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.766637275 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.769430711 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.767479826 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.811087747 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.772781553 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.767893917 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.765782756 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.883069928 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.767482345 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.761996221 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.7647592 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.764872668 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.762935988 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.762321695 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.762972766 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.761355488 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.759330825 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.783670061 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.759903822 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.760833749 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.759681478 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.762190164 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.808803576 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.75849936 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.754676549 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.755583763 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.813458751 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.765038361 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.757699815 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.753051031 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.756795072 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.755467116 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.90910419 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.805932135 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.755925057 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.806906578 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.756005048 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.757674244 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.756555126 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.755895255 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.854390592 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.756600893 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.80772311 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.753989529 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.915931142 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.781457629 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.757908703 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.760080811 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.760321003 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.758329694 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.756394264 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.76327315 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.753375103 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.758086193 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.762682684 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.754348739 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.753671925 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.868196596 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.865985499 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.754146977 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.770363883 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.76378979 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.7532037 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.811332106 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.758255166 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.754660924 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.814893174 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.876502474 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.813386746 seconds)
  done (took 195.65296489 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.763520104 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.76494593 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.758578328 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.775241351 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.758295659 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.757204135 seconds)
  done (took 12.259694095 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.760246059 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.75863233 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.758829807 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.758313341 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.758427198 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.757693491 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.758292079 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.760048857 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.762895483 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.759055767 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.760075174 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.760804189 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.760863253 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.759099499 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.759862919 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.758935636 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.760216626 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.756839405 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.75906546 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.759213329 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.908803601 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.758171533 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.759261628 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.760375139 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.764905973 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.759008764 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.768126661 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.759945122 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.759245929 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.768124502 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.762808864 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.760319282 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.760745871 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.765223791 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.765024383 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.760284667 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.762656643 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.759755721 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.757372658 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.761075647 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.761001286 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.759495786 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.760306451 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.761201683 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.762583885 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.765762602 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.765362286 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.769185459 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.760122826 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.759876109 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.759862241 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.758673909 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.760502303 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.762040985 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.758227656 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.762342821 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.760140967 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.756848602 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.756860263 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.758242415 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.753107649 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.753915055 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.754474074 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.758852001 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.758523337 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.754611256 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.74992096 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.753777331 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.749172021 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.749561112 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.750539583 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.744696353 seconds)
  done (took 129.50097422 seconds)
done (took 532.74779297 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.886899473 seconds)
  done (took 8.55742786 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.889138925 seconds)
  done (took 8.607624542 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.22071102 seconds)
  done (took 9.90156384 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.764623376 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.79115978 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.759174141 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.755327345 seconds)
  done (took 28.772635251 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.836174833 seconds)
  done (took 8.513225671 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.774272816 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.750143111 seconds)
  done (took 15.234910272 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.752629899 seconds)
  done (took 8.439080282 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.11199165 seconds)
  done (took 8.814817011 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.759262699 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.779463905 seconds)
  done (took 15.233213048 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.732657683 seconds)
  done (took 8.412684547 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.201919736 seconds)
  done (took 10.981913007 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.768240529 seconds)
  done (took 8.556699694 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.813276166 seconds)
  done (took 8.492701112 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.829054153 seconds)
  done (took 8.510059608 seconds)
done (took 158.699711493 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.754429076 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.751535522 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.751582951 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.749842596 seconds)
  done (took 28.686817844 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.791408755 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.791621968 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.793531375 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.802222244 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.79510998 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.792933526 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.782786656 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.782675061 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.802218266 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.795085307 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.792565379 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.793851538 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.790812564 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.78451809 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.794044889 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.793206559 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.802580272 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.792245685 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.784950492 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.794852085 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.759708159 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.801896006 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.794925112 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.757520351 seconds)
  done (took 44.647751745 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.957523215 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.83600632 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.911813439 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.810478523 seconds)
  done (took 9.196036556 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.810316683 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.813042804 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.82305787 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.861564081 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.886276129 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.821222718 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.785402748 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.780520518 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.766027436 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.811032559 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.88687657 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.807460394 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.898765212 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.758690838 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.945651165 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.757801131 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.757508316 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.811810115 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.862700457 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.876858575 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.759268728 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.811111455 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.814104637 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.809348012 seconds)
  done (took 45.398099195 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.758709826 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.767008995 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.765388613 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.759600682 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.75897131 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.759255097 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.764853922 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.760874433 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.780073834 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.760783819 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.758049515 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.759221974 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.758436228 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.759629393 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.757412552 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.772498982 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.773009937 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.759777169 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.76218271 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.766229827 seconds)
  done (took 36.942359095 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.753371719 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.607527918 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.105471986 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.008205835 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.754339313 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.757469509 seconds)
  done (took 30.669794437 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.776130682 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.767841903 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.760601444 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.820504706 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.902542472 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.769414873 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.760364142 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.774688759 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.80851578 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.827271156 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.786152761 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.792424617 seconds)
  done (took 23.226870571 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.758334698 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.769153835 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.758644218 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.785912267 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.772619791 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.769462889 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.76995873 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.756164896 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.774662707 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.781311426 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.771216036 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.774797309 seconds)
  done (took 42.930443764 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.84662979 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.644815226 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.805594587 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.479178908 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.293175433 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.967172802 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.286194546 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.100166396 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.759295287 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.03017265 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.712561279 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004829381 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.011475611 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.756264531 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.823653861 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.206048224 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.055722945 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989232903 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.784054142 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.420529848 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942544627 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.410943099 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.621478499 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.950741693 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.031187987 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.950524448 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.079157191 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.776771912 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955331192 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.857893492 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828613804 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.818556457 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.094091368 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208459949 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934932188 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82999857 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.477670463 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.536496126 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.809326859 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.611338568 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.692981929 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.965413225 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838383005 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.829892142 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.764110404 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418101675 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172707166 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.833821001 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.531060899 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.829967415 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.83997865 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920921375 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.833362373 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.645456867 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.783123141 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.10882889 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.827407046 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836279464 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.397680182 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.903563124 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40615459 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.902550562 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.930060529 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.519632248 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.313759966 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.990417968 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.842155136 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.84228736 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.773633886 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.599324335 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.96795098 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.987363093 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.860676765 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.491801832 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.152749461 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.878300927 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.925797484 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136340729 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.576995908 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.889384704 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.067999811 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.798643087 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.77408723 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.697315567 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.774616345 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.114567001 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880942952 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.467700275 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885522178 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.185226424 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.853106419 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864253988 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848679868 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.066261919 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.72542951 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841503872 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.596548791 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.131018102 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86362143 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.183731392 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.776272405 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.845702065 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097785297 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.053957272 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.022986616 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.408990629 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010627653 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.843320115 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.92932943 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.712524459 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.966093263 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.126624961 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.90478364 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.931217525 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998227117 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.82291165 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173911565 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895646222 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.037925705 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.844881265 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.134914688 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.186881031 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.120465755 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948599605 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.870102113 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.867652161 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.632282228 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.496595157 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.093633514 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.869477241 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.308788038 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.992048759 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.869764493 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803008251 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.583925498 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.881426466 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.976782069 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.092998716 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.76250363 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.255630244 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802992258 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.042708094 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.982469166 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.091973598 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.525521387 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.952069936 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.12991286 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363134423 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.163948145 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993998097 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88929746 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962511764 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891607684 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.252431231 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.238616294 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.874143755 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.874027992 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.592461246 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.955517915 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877828808 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.87762096 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.679077266 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160141043 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.904063241 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.874719288 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.763312075 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.889383169 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941150533 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.878776746 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.884447384 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.378625124 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.630124507 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.88661928 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.616235549 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13161777 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88422806 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.5451191 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.07134525 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.960837978 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.16194284 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938780921 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.811906167 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.579045563 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.581015803 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876684551 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.812917311 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.87750256 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887341276 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.888592984 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.076603119 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.169264585 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.924315282 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.551845049 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.997671548 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.890771389 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.884754197 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.880353261 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.382627198 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.958569154 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.454978657 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.002657625 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016056252 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.894632504 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.814816003 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.88417437 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.88595977 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.880259963 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.846504553 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934201425 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.556687989 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341328535 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.142203779 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.537041932 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.900481788 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.577249217 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.01494814 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.907633363 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.634567756 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.971061992 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.983455123 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964708823 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.909109804 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.585464975 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.669617333 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.467599226 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.213465118 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.212725631 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345612518 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.34311813 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.231555267 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.241675171 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134439963 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.427149738 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.959840038 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.245494713 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842889639 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.988449672 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.552232736 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.263175053 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916561426 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127428479 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.292146757 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.723197761 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.062525291 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.110914213 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93422384 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.776788691 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.939772441 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.101372377 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056980386 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.638891382 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.131681769 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241412547 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.650731179 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.013157732 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.899969302 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.605405114 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987351079 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.611615439 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.261237757 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.384346951 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.001339335 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400722652 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.91083874 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.345277976 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.256909225 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.175753016 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.105129521 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837572494 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.91271894 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.91230919 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.901063812 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.894423205 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.873848122 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.201807862 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912177042 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.137785764 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.12616854 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.278619513 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.816266035 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.90685429 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901788218 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20810981 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.651989493 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150217159 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.310804396 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.52682653 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925180351 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.836456701 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835900824 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.604051154 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.9036513 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.879291558 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.132622035 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.016312378 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.858341299 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.34285908 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.224416238 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.16040921 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.91679694 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.183504141 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.181592388 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.640354978 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933891227 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.003475595 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.655238104 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.665342172 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.12642685 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.139583752 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.707785208 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.135550689 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.970410828 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.872819916 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.902391803 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.118167662 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.12596832 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.882492973 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159158193 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.629849004 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.913289989 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276385492 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964345434 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.874132912 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.123422522 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.998828832 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916291551 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986697303 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915239287 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.915031243 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.915479505 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955229449 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.874644764 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.042462609 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.919130325 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997449598 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.985756147 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.536107453 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.932205024 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.188327369 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27403541 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.241823606 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.968329675 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.906305163 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.910418904 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84046011 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044043138 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.351599095 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.179323824 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.036816183 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.047527919 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931943452 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.666874192 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.263393119 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.226917966 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182542304 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.80093958 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906024232 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.994111006 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.131188873 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917988054 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.117539768 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141352029 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.232952815 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.382446835 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.118607451 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.357947637 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180262579 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.275665818 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.907695404 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.499856707 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.914900664 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.674767434 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.950536665 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.902247543 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.198329489 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918731478 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.298216675 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.933468034 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.102309354 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.423153168 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.583452429 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.275771509 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.903765292 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.971066888 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.189874448 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.313798018 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224418847 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977009075 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.919285823 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.606655116 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045038093 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.911296395 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.18109133 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.90807225 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.120017452 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.625431263 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.918508294 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19496299 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221421888 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.905445425 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.904759838 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965963046 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.919502496 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.132456498 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.185436355 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.162864246 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918599946 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.910584559 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.727452988 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.191367498 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969816157 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.844391386 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.912481459 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007761235 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.157479154 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.929507106 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.427137662 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.612909924 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.210858078 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.831607024 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931885879 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.370744185 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.359845138 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244920834 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.433006712 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.144795061 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.471303463 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.807613287 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.292566391 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.915441411 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.379518794 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.296047006 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.914299878 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.485961082 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.030368435 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.181614766 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.23498012 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.924788401 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.075308332 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.964860908 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134778216 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.512442246 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.855886502 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.919305184 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.972668994 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.911208839 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.040861382 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.922491263 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 3.034127168 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.968757621 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.733532777 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.404784332 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.916355515 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.89893361 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.650378451 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.545435532 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028746356 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06749809 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918253011 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.635259263 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.204400441 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.167707333 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.496229726 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.988091786 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.915913174 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913973682 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.841312211 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.110340533 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.112943711 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.212802858 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.351207739 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.032259643 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.918060579 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.129217624 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.124938518 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.840169537 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069410741 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389399911 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.033383724 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.832195935 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.627426055 seconds)
  done (took 1693.611343103 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.921165122 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.929439678 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.922943041 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.961693523 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.925415528 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.929379681 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.975681091 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.008169783 seconds)
  done (took 57.415332612 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.913394633 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.125808932 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.921881609 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.913787222 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.937954172 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.913860097 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.107410676 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.927800866 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.93223194 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.922726344 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.913591418 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.923016426 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.253596122 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.938380308 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.913467911 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.919985359 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.931265885 seconds)
  done (took 75.259828011 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.914143648 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.193088799 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.934438214 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.938612321 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.793422568 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.922652398 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.890468208 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.966931788 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.919001279 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.091762195 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.256266129 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.928530182 seconds)
  done (took 90.590744861 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.930187529 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.920643119 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.920640377 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.921563467 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.921327005 seconds)
  done (took 11.464610751 seconds)
done (took 2191.735287296 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.29967302 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.136989615 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.149208884 seconds)
  done (took 6.128545891 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.06494231 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.111439041 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.232156038 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.239658975 seconds)
  done (took 10.49275265 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.206395766 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.300964557 seconds)
  done (took 6.349839826 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.245403404 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.948057316 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.298126948 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.915668186 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.916263205 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.915304135 seconds)
  done (took 22.595075943 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.919573999 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.921793169 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.920164655 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.920748736 seconds)
  done (took 9.522201488 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.897681192 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.647175101 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.901176223 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.913289587 seconds)
  done (took 21.201570537 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.667761921 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.316594097 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.663071181 seconds)
  done (took 9.49023396 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.405191254 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.841061812 seconds)
  done (took 9.08904965 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.1639431 seconds)
  done (took 4.006679261 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.948632866 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.190282106 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.438675124 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.443315398 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.538669265 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.760899327 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.257827914 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.162215881 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.395265423 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.380458006 seconds)
  done (took 25.358347534 seconds)
done (took 139.868495894 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.341865071 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.946327189 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.125393081 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.278509607 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.158256341 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.124060648 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.134149694 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.265626392 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.803476157 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.799193063 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.279032465 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.149903331 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.085808534 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.939382967 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.088487555 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.937163208 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.14913874 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.361279463 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.999073039 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.182237854 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.144811884 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.927245697 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.118336248 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.942507824 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.151519375 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.070244763 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.471733238 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.942078925 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.139221428 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.484986911 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.074446713 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.323751098 seconds)
  done (took 169.783410415 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.920577911 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.920564193 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.921199586 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.918937606 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.208607457 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.918714251 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.91961838 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.920589295 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.958452549 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.94042342 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.921022374 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.199300764 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.921972025 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.918759867 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.918943298 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.920174077 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.110828085 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.920550691 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.924319832 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.925886505 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.925365355 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.081977579 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.926987625 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.10639553 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.121242054 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.934283062 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.921106435 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.93610292 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.939654254 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.938650681 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.942182455 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.919977339 seconds)
  done (took 208.772356456 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.919592569 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.921957449 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.922165381 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.922103936 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.930992202 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.9314608 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.92260333 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.921471126 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.455644683 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.45941383 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.939869656 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.93185518 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.933220984 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.92082497 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.933967346 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.921161741 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.935060334 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.934904431 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.936984821 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.938889836 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.937578816 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.696151597 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.939222023 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.688495101 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.933488119 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.935522635 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.92393618 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.939467795 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.940622488 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.93848948 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.943945934 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.924318806 seconds)
  done (took 222.246435159 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.113650478 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.928725253 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.930938196 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.850216263 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.930555327 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.928210689 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.921962762 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.111498831 seconds)
  done (took 19.58859916 seconds)
done (took 622.243172623 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.425807308 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.277469091 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.109489017 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.955872245 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.212545349 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.985312783 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.95065285 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.014782566 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.679273549 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.020752367 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.591640747 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.975081255 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.683655216 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.979937648 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.071174906 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.007647221 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.536567473 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.632906078 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.127032555 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.03560717 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.117771198 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.879694728 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.034264751 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.708202368 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.700511219 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.935243338 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.116425144 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.541706735 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.961264447 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.108166455 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.733644602 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.334766177 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.966146081 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.948689503 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.00625165 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.982962027 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.287404502 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.963600545 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.072822057 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.684004297 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.029971208 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.55348947 seconds)
  done (took 105.7910854 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.918596575 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.916555455 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.91508867 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.917021698 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.917606884 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.917656771 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.917633988 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.916843691 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.918464341 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.916669807 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.917347782 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.918573014 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.916846969 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.91856946 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.915809907 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.917180679 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.91789796 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.918368969 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.918236893 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.916811663 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.918074056 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.918227717 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.933924508 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.91862763 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.918681841 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.918995431 seconds)
  done (took 51.734861386 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.932396531 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.093683908 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.171650963 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.954835485 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.934760086 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.936800356 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.95107351 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.938421979 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.936045467 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.93552485 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.027058249 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.940091986 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.95256477 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.171605345 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.952306925 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.933111509 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.932521359 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.934490782 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.10227168 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.949201748 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.952833388 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.937398155 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.952737233 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.947452762 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.936485795 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.934749479 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.938692755 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.427443025 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.945679819 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.029535093 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.981095179 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.959533487 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.375616378 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.182289553 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.992646237 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.944903485 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.935740376 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.030208884 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.941535013 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.935761574 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.953351342 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.941316142 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.172495941 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.428534702 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.950018759 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.936202804 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.439015688 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.041768385 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.976878246 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.945890024 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.174340583 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.95340259 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.936665628 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.936317111 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.973448244 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.941135473 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.936287963 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.284036607 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.948015364 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.95367242 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.94176757 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.937233297 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.10840864 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.945020837 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.098834144 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.947015476 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.942556981 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.936572402 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.172463806 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.95381662 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.436533742 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.952130997 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.936431009 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.030678984 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.101178846 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.466395095 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.950528337 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.110681254 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.392106667 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.961709252 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.943624734 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.418908268 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.965573863 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.94244582 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.939199434 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.938486961 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.937073827 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.98066827 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.953592782 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.365502881 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.437268227 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.3044842 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.964450789 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.952946043 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.938248207 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.286581373 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.94685734 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.938275472 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.16994335 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.442559639 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.953467573 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.946200139 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.423194332 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.954528732 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.959230607 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.947435423 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.178372112 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.954775235 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.982804884 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.938800723 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.946338837 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.942587974 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.957572044 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.945139927 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.93890596 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.411690549 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.052368302 seconds)
  done (took 240.165237821 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.933617956 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.937121235 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.932080167 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.936565162 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.932268311 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.937773461 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.932315388 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.93267456 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.938769317 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.932724467 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.933735536 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.935531458 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.933278791 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.93930622 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.566966256 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.940886879 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.540274122 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.934181138 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.934384621 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.954715274 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.711731631 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.941617396 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.934932025 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.950008753 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.931902314 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.934102882 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.939760701 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.10442796 seconds)
  done (took 170.269619931 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.940975082 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.122853473 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.960981158 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.980348805 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.94815392 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.937735073 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.964951663 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.963660726 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.946652518 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.937669114 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.938943437 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.003126234 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.951789521 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.083564262 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.974889118 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.971726514 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.045048468 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.949136938 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.939111425 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.938901533 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.970095891 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.933578243 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.003217261 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.070515393 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.963116226 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.059562337 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.947712647 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.942567477 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.941886666 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.061688953 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.959120584 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.002180607 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.970741354 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.958983453 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.064499244 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.062122569 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.048632664 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.971741034 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.946200382 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.939794959 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.940363739 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.929204081 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.058686934 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.963872259 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.943679321 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.049528769 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.965474372 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.942562444 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.951463832 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.940578113 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.955064018 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.963520874 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.010971686 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.079831362 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.979765351 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.968688037 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.967332466 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.23885269 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.951605521 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.044340519 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.935424955 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.061676905 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.964649356 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.93007182 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.94280872 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.94860008 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.971304067 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.974881286 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.049978112 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.95247617 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.044440514 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.978664262 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.94904525 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.941356734 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.945296577 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.060356076 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.068131786 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.979499116 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.981814881 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.975844198 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.937498802 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.9440608 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.931320837 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.961953412 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.946462755 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.0638441 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.067969102 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.951431078 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.94618506 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.94537631 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.944877937 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.970560279 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.07017083 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.984498595 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.039956144 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.013965451 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.020593308 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.961063627 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.957831945 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.947341067 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.008724856 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.961821047 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.956598836 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.28961295 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.017403395 seconds)
  done (took 210.526071445 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.403633589 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.000287226 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.003283116 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.275468056 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.369019372 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.872703653 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.994048943 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.993512064 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.018775997 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.183768649 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.065667993 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.012793583 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.982229418 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.967510383 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.9952089 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.015761218 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.002874016 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.331922473 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.12316023 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.159367533 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.97977504 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.279272761 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.315042709 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.389213178 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.030514559 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.332645705 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.666104419 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.135652839 seconds)
  done (took 63.772560375 seconds)
done (took 844.11016243 seconds)
SAVING RESULT...
DONE!
