cset: moving following pidspec: 24237
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.348498559 seconds)
loading group "string"... done (took 0.570968893 seconds)
loading group "linalg"... done (took 7.589774215 seconds)
loading group "parallel"... done (took 0.158052663 seconds)
loading group "find"... done (took 1.125714961 seconds)
loading group "tuple"... done (took 1.847158193 seconds)
loading group "dates"... done (took 1.237098882 seconds)
loading group "micro"... done (took 0.234833635 seconds)
loading group "io"... done (took 0.903269837 seconds)
loading group "scalar"... done (took 37.492539253 seconds)
loading group "sparse"... done (took 11.56998213 seconds)
loading group "broadcast"... done (took 0.919561717 seconds)
loading group "union"... done (took 12.347577348 seconds)
loading group "simd"... done (took 4.54726343 seconds)
loading group "random"... done (took 8.643560024 seconds)
loading group "problem"... done (took 1.785392931 seconds)
loading group "array"... done (took 20.013337907 seconds)
loading group "misc"... done (took 1.759595437 seconds)
loading group "sort"... done (took 3.122414445 seconds)
loading group "collection"... done (took 17.047294004 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.536015709 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129309784 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.138298954 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.127513285 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.152632879 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.123510415 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.131145419 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.093198303 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.85980774 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.157996956 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119968134 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.415153152 seconds)
done (took 5.368026306 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.178723704 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087843003 seconds)
    (2/2) benchmarking "String"...
    done (took 0.088272338 seconds)
  done (took 1.237671665 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.074740734 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.132413112 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.072576765 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.073380066 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.07328206 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.073290479 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.072576379 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.072198715 seconds)
  done (took 1.63304088 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.079134002 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.074255484 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.072358147 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.0743388 seconds)
  done (took 1.363838254 seconds)
done (took 5.55852801 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.783075422 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.211735114 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189765634 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.403153056 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.136644643 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.183400663 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.653441976 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.326611208 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.190840951 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081285342 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.112066555 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.352757198 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.128551997 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.651370904 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.082885085 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.098346901 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.145286483 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.433181135 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072953491 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088027659 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094847917 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.13331437 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.091751387 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078905025 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.151366926 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.073291025 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.139696409 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.085957056 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.071355671 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.219791518 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177608816 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.668776106 seconds)
  done (took 10.406564384 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.103976524 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.103400738 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.074397407 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130396246 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.102970892 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.075334035 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.080838342 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.073004823 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.097303424 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.134376778 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.096497215 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110942974 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.071990808 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.074800055 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.089165731 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.21452832 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.086128591 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086503939 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.076087609 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083756048 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.113033975 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083207822 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.085054709 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.085475072 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.134110672 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.186094447 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.102183789 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.102813219 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071712051 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.087442159 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.120051499 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132327935 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.071212896 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.071082099 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.130280022 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.100198407 seconds)
  done (took 4.742029208 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.990445735 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.146257765 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093839546 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.137189005 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.07033052 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.113911804 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.074308929 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085546542 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.211882805 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.365463186 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.590609847 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.134759024 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115734229 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10839491 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0737732 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.073792978 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.072447981 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.494604702 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107499079 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.113867798 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086326675 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.077715681 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.077129524 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.073137815 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073479505 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.069618219 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074780545 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.118717791 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.081539545 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.3079032 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126448969 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07400612 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.952574495 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.175330352 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07216029 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.244383768 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169806569 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101320843 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.147545928 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075400875 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.072211083 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.165062025 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.071499473 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.076269472 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.072710179 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.090352949 seconds)
    (46/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.097828013 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111917724 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.129781153 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.073539534 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.075206019 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.177536688 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.072078098 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.073039417 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.085470479 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.158718877 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.159832414 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.074357132 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.301057689 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.099002228 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.078959961 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.073192539 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.177577232 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.12939733 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.072571751 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.076022176 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.074867187 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076078277 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.076372492 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.383420692 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.071621736 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.055294078 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.077270644 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.08474942 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.078061829 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.076764434 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077899266 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078019955 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093758489 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.070931576 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080712594 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.071199719 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.071654715 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.069620529 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071549823 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087129174 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.489038291 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.073756315 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.073861524 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.073343773 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.099205074 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103582334 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.076020279 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.073193655 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107329841 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076669994 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.07441059 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.074774202 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.091686282 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.078152042 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.121012939 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.075227823 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.098528636 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.104644908 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.076989757 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106279243 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.088108229 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07570812 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.444958947 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.071325277 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073175548 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.072019166 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.075617261 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.074509446 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.087970661 seconds)
  done (took 22.465537825 seconds)
done (took 39.6669541 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.245712993 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075117916 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075122323 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075221304 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.07545165 seconds)
  done (took 1.692064346 seconds)
done (took 2.826799913 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.12540919 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103086492 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071246416 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.102721116 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071659825 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111761836 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107306633 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084136577 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106364606 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.071743621 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104184517 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072242788 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071916446 seconds)
  done (took 2.349872263 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088927354 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08979745 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07757546 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09181317 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071408868 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090428004 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.089249533 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096756095 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.089075118 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080431468 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07105315 seconds)
  done (took 2.065246834 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088017467 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089260149 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075232879 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087447662 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07208524 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087544822 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086907878 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091215163 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.089633295 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081687039 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07103973 seconds)
  done (took 2.043693403 seconds)
done (took 7.580164952 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.08168376 seconds)
  done (took 1.194720604 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.537870585 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.661456227 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085885467 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.11080702 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.197215864 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.117838905 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.249416723 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087899302 seconds)
  done (took 8.322471398 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.09486529 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.088771441 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.076518818 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.079692772 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.079858424 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.078858986 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.080325314 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.076305565 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.077241111 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07729102 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07926411 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.078528288 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.075880207 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.076270585 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.077420657 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.079456202 seconds)
  done (took 2.464739512 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.098086132 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098309892 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.080667081 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.082927432 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.079664295 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.078777963 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.08143598 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.08067636 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.077822134 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.079333439 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.082681415 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.080373367 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.078636167 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.071200156 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.080925448 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.083335725 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.078226122 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.08167205 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.082260007 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.083840912 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.08212567 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.07066566 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.078882178 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.081240015 seconds)
  done (took 3.167382246 seconds)
done (took 16.272745367 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.1113867 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073827638 seconds)
  done (took 1.304715933 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084598323 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085286341 seconds)
  done (took 1.299416571 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085858062 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069400184 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092021475 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.080954106 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.070629204 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.070075663 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.092332409 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.073424707 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.072561204 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.072763047 seconds)
  done (took 1.908340109 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072611719 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080386119 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073874777 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.084714969 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.078765597 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.070883707 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.078064303 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.074255956 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083551428 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.069214889 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.077123873 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.089690531 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.077201038 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.092026133 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.0784601 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.075137889 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.076704845 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.073768761 seconds)
  done (took 2.539924079 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.070274686 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.071333827 seconds)
  done (took 1.277550869 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.071296487 seconds)
    (2/7) benchmarking "second"...
    done (took 0.068585667 seconds)
    (3/7) benchmarking "month"...
    done (took 0.071747101 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070651342 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.068794418 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.069181617 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.070066452 seconds)
  done (took 1.620370377 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.392641032 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.122814452 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.313515773 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.079660963 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.088764696 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.263607144 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.074120337 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.079291471 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.078630661 seconds)
  done (took 2.662774878 seconds)
done (took 13.74934608 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08637174 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.093108813 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100833198 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.386829788 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.100344476 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.074829545 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.121265136 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.188636197 seconds)
done (took 2.296509632 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.217757813 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.661239573 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.40504276 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.208367996 seconds)
  done (took 2.41378976 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343202219 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.094558451 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067786095 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.076353136 seconds)
  done (took 1.725167927 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.072483996 seconds)
    (2/2) benchmarking "read"...
    done (took 0.075899969 seconds)
  done (took 1.292734902 seconds)
done (took 6.793297908 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072360528 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.187630947 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.07182947 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.073867644 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.071456359 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.071314208 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.073637395 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.073900686 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.091072778 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.073372533 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.073551574 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073500189 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071314328 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071304712 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073503761 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.073536937 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.071068763 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07121453 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.07115637 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071166069 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073799396 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.070826879 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.070859998 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.073252532 seconds)
  done (took 3.04316979 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087708875 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.071546167 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075740749 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.07561294 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.074985517 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.077563754 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.077898736 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.073375523 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.077873648 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.075656604 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075691874 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.075534373 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.075532088 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.075847692 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075825043 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.075691138 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.078001292 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073509746 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075872622 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.07578171 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.077502294 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073453424 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.074616853 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075927181 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073623582 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074385117 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.075650589 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.073718523 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077839775 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.075646456 seconds)
  done (took 3.428176923 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.075372797 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.068551804 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.069353743 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.076931515 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.068692316 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.068909421 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.068050391 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.069256978 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.0692049 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.068410117 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.069306909 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.068226868 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.068018976 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.069014034 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.069256829 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.073660802 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.087436394 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.070566773 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.070089259 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.070639125 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.077241818 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.070360691 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.070250497 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.069936168 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.070419632 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.070179419 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.070380469 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.069456872 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.071292783 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.070530883 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.074061892 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.074597336 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.071069884 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.078275805 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.074644199 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.07021222 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.075020108 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.069534972 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.070640849 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.069921844 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.070136169 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.070310721 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.069949215 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.078364267 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.070205506 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.071521156 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.070182879 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.071566203 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.070855986 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.072674292 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.069796866 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.070497696 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.072008009 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.071180651 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.074952298 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.069905518 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.071525241 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.070556039 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.071010262 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.070376191 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.070036164 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.070251595 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.073472489 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.070920998 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.086116296 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.077875459 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.07048266 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.071349318 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.069378551 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.071754257 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.071056277 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.084006179 seconds)
  done (took 6.32705856 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092236256 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091952423 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071821083 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.071165376 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067173321 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069112951 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074357309 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06923585 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071222462 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087877664 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069044243 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070995905 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071133135 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073182188 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069156422 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071078248 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077847485 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067031356 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.068913517 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074582057 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071254336 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076086311 seconds)
  done (took 2.795329256 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153556267 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075625293 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109880559 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080794572 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07736229 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08246932 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.077099854 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077904106 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077153038 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075105828 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074907379 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077230804 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076815732 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075390436 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074940167 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074964106 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077246603 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075025469 seconds)
  done (took 2.651529208 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.082133383 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.071920357 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.095026737 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.073492362 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.073840205 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07692056 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077846142 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.081324096 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.076076575 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.07341663 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.081229194 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075983278 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.076071408 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073944093 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076038947 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073851786 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.075589177 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073462805 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081318562 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077670607 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.077578986 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08119603 seconds)
  done (took 2.86722216 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08563598 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073856273 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086372509 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.073322892 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066400774 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068978987 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.075179913 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.071527594 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.075721628 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.073100307 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07150953 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06910186 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073795429 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073192526 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.075673699 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073277034 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075369484 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0731887 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075474763 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.068569011 seconds)
  done (took 2.640745547 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089602439 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07214608 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072209679 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079415679 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072861476 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072484473 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078843252 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072244614 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07237989 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.094374747 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074337245 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074486347 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081401394 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081100563 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074673902 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080877503 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08040761 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080556078 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073500699 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072629517 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.093758391 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074915499 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081334609 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074476077 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074397763 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074509261 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074846229 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078482711 seconds)
  done (took 3.34112016 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072097638 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07201346 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.071225203 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.071765561 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.071718224 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.07141552 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.07105855 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.071735879 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073517982 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071707917 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.073869817 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.073987854 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073725629 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.073820883 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07389282 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.073462719 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073681025 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.071524639 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071763551 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071591813 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.073639964 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073714818 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.073784796 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071011536 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070942265 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.073388989 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071411735 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071090981 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07377747 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071258513 seconds)
  done (took 3.341608272 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079503197 seconds)
    (2/2) benchmarking "in"...
    done (took 0.078422221 seconds)
  done (took 1.326125601 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.068041134 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086303396 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.0681288 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.077068641 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074957156 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072361163 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078430696 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076790298 seconds)
  done (took 1.764233086 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086463538 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.081905834 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.073731052 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.084147921 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.082042958 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.090088814 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13181759 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.073176778 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.080392492 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.071975941 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.086059323 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.072565239 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.080475325 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073822254 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07986844 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080941705 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.070735259 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.077310868 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.074126999 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.071238312 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073401608 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082194814 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.077075835 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.068601603 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.07508055 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097176937 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.084820802 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.072817237 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077497876 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.081284325 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.080307207 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.067974692 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.073059557 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.073554373 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.071085852 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.082286596 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.088546555 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077578211 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.082490977 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07355549 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.081856143 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.067394223 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.076355166 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.079774805 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085389809 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.073045594 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.073692398 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06834742 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.072411345 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.076503554 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.068663596 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074889582 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06797824 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.081851163 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.07810099 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08488292 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.072425667 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.075553837 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.077212697 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.076928679 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.080951239 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.075972569 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077297252 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.072543971 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084830234 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07913025 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082371806 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.068271655 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.067372321 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.071198452 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.083898435 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098095501 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.080347898 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.073489129 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073745219 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.071069215 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077249786 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07379125 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078357869 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.080228391 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.072294396 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07700547 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079959393 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073569599 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.075891294 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.079056981 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.070921816 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.075276146 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.0720992 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089106251 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.074250031 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.070926081 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.071600855 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.084161605 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.077173646 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.071547578 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.070918766 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.080336952 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06640598 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.072087515 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072593205 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073789044 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.081623144 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075461834 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07596329 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.081333022 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.078534351 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07330348 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.075470196 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.068866374 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.200333242 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.073416167 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.083838722 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.069477159 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078623117 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.076510995 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.074314379 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.083726007 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.072394674 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.073687421 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082821632 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.080182044 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.072395397 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.070915082 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.077093338 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.073449102 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.075501428 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.082233516 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.071508564 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06864728 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.068576958 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.078306851 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.072779106 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.078024707 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.077882885 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077558007 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.068102043 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.071268869 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07783488 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.082916347 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.074229162 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.075485799 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.079109689 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.07577731 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.072464384 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.080570444 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.076570726 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.073206436 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.079712121 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.075637016 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.068627987 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075294922 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.076483268 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.071866625 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07798279 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075087233 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.075511603 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.073057727 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071638413 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.079332881 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073754048 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.073256486 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074187969 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.072673686 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.084369699 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.0763328 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06816101 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.070400658 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.080148248 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.072344633 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.072526911 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.07279642 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.076173162 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.073401878 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.071170114 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.07259052 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.076619832 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081407216 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.076515689 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074000174 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.079664991 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.086647986 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.072571267 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.076274232 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.072844962 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073694087 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.073523168 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.083373296 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.080599365 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.077561044 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.076876545 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.070412425 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078942961 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081865154 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.073556462 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.070826607 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.072955011 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.075749493 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.079603965 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.076517945 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.072974012 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071134934 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074500373 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075262871 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.076336201 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.072615711 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.072701988 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.078028604 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.071028967 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.078087689 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072508505 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.083192495 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076264927 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.067369317 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074255197 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070346982 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.079536713 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.067688509 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.071198458 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.072791513 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.072626044 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.071037242 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.075097993 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.066493122 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.21122447 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08341118 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.076824755 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.075623396 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.074538982 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.083042107 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.077774823 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.078770579 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.079557467 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.08135899 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.085084859 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.074194682 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.081441488 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.085091288 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.07443065 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.068234867 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.079466522 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.072646102 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.07217367 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.072225715 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.071599869 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077369939 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.081139277 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.080759979 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.067871534 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.077607466 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.071710385 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.073349187 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.068851397 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.079068823 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.077113397 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.075213382 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081408492 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074237863 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.073134941 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07781986 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.072647853 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.073701665 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.073209151 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077039758 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.073720283 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.075874244 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.073749096 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.076774748 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.073446231 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.071178082 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.075179428 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.072912636 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.074867201 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078871124 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.07252983 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074153901 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.076456125 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.073663745 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07484201 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.074824492 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.073894654 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077016499 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075023346 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.07439339 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.076704419 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.068335922 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.081499822 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.072739725 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081617923 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.074549298 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.070549064 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.079065515 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.076650872 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.077526739 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.073383822 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.073939326 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.075607099 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.072883466 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.076937411 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080816498 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.072154644 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.085547434 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.081029203 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075240461 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.077332215 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.074620504 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.076065519 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.073733792 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.074678023 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.07352036 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.074813178 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.072810456 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.078108484 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.076327464 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.074358043 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.075918457 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.073624546 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.074591324 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.073792319 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.067661193 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.073372186 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.07316137 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.072766475 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082676144 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.07271487 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.074021684 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.071803975 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072902689 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.071304515 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.070192219 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.078500986 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078923846 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.072058728 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07921902 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.072848125 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.074915682 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083008163 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.067261224 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.070424409 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.20330984 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.07276667 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08146993 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.072582988 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.083510318 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.074560559 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.074849084 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.071690876 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.075418608 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.073070544 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.068841867 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.071586801 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07844489 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.074474996 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073312314 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.073960409 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.077216469 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074082497 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083672291 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.072869456 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.075455567 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.073822005 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.071088522 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.074066963 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.073961461 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.07772525 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.074044204 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.072358535 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.07084678 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.072937134 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.075500356 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.075688637 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.073473182 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.076061653 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.081249458 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07361293 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.077611682 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076222309 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.068962445 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.077525339 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.072979911 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.072856335 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.073774075 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.080946513 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077681979 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074499236 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.082984748 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.073204146 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075612675 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073316555 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.071360534 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.072658991 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.072853935 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.073257434 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.073817938 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.074222633 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08269545 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.071515553 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.077144231 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074721919 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.074720889 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.080976726 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.073710475 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.077483648 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.078746758 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.075285719 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.07605421 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.082579344 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.077599828 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077226523 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073805516 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.075584443 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080042669 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.073607875 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.081108379 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.075123493 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.07361811 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.075999788 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.072134677 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073207284 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.073285051 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072281809 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.079948984 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.073770854 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.073559551 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.073355575 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.071236104 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.075450354 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075262814 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.082468214 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.075818471 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076916869 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.068260482 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.070382391 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073400884 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.071926602 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.075731961 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.076154073 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.080022532 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.076112695 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.074490294 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.072339511 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.083282729 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079412249 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.077641627 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.07192132 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.076787089 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.073237373 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.075453648 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.074624723 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.073420324 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073018302 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.076860351 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.074506244 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.072798629 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079081439 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.076192342 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.205341735 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.075774696 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.078007499 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.077180731 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.070496966 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.074836475 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.07757985 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.080442072 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.078143617 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073945508 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085346244 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.073220954 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.075412253 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.076248737 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073311288 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.0790902 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.068970448 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.076804578 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074375826 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074707116 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.069047356 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.074076991 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.072856051 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.076321575 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.074614952 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.069204324 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084672376 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.08399681 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.077830377 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073222044 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07232548 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.068794575 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.068464538 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.074208656 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073990783 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.076350697 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.085311054 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.07327221 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.073392676 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.068645074 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073288284 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077615064 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.077684373 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.070908681 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.068740035 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.074490117 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.077743754 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.079633291 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072015457 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.07295201 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077464222 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.076348796 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.071638587 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075635013 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.071008884 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.077934937 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086352735 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.073574111 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075356047 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07996472 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08243481 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.07325638 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.068662041 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.073302865 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.077103802 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.07446612 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.073583487 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.074353408 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.088936289 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077537079 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.073837301 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.072440356 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.079546477 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.073675169 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.082166043 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073855323 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.073749089 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07837227 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.076191725 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.080697232 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.078042236 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08130733 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.077450334 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07727203 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.072404711 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074552571 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.071388703 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.073072953 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.074306438 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.073572431 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.077612233 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.079330563 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.07367712 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084637406 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.083026221 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.075278551 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.070132613 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.073502465 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.073267941 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.068343621 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.073227393 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.071636938 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.071204755 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.071635604 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.072017063 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.074540988 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07834482 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.075155647 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.072675842 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.072435405 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.066714666 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.07599842 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.075438111 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073874052 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.069454113 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.071770276 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.205449863 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.078035564 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.077930394 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.074019784 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.077606666 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.076822125 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076796153 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.068929259 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.082390426 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072911042 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.07709281 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.074149508 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073791682 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.074443235 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078605625 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.078214539 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.074977164 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.076859451 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078425441 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07559716 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.071578673 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.072070517 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.079470962 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.071378563 seconds)
  done (took 46.942220877 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104627214 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067985025 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067351861 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068259284 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078833113 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069610884 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068522788 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069407476 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069675037 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072172535 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068529606 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068460977 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076510794 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083529173 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077596775 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071129652 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066552271 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06770807 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066454018 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068130563 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07430534 seconds)
  done (took 2.781666887 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077878676 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.082101473 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07890847 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08747957 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076510641 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074796826 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.081798373 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076681482 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.08492757 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079293001 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08495028 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075927765 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.077697696 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.076966195 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076817941 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075168197 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082228601 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075635818 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.075018399 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079263563 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074847999 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079433097 seconds)
  done (took 2.980469706 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.072157743 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.071401648 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.072996391 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.066622503 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.070309885 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06652265 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.074970803 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.070584016 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.075281218 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.072466031 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.072524929 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.072396558 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.075157682 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06829851 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.073784481 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.070593795 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.114343338 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.083899765 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.072636484 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.073620878 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.068493809 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.075215836 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.068726803 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.068857827 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.07295078 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.075651065 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.073399786 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.070855266 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.071311658 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.070728009 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070711485 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.068617129 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.073345824 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.072604236 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.071134267 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.070886114 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.073094007 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.071335691 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.067921227 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.071007973 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.074229162 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.069158464 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.073282885 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.074884809 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.071453541 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.071092395 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.075256231 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.072521896 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.068406335 seconds)
  done (took 4.817203183 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.08199721 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113069613 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.073261419 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.094762575 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.085946426 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07916192 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.077531732 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.095940933 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.070278086 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.07117742 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.088036794 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.085284544 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.072683189 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.076587902 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07728994 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.07196554 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.072964971 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.071907922 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.075450325 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.071866929 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.075645822 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.079109447 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.086382088 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.100299175 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073513178 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069316913 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.07148471 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.075911302 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.08321482 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073923599 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.075211584 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.075765515 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084068836 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07478076 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069271789 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071943434 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085429239 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069986108 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072540436 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.068116728 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.07215832 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073737485 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076747864 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.086968043 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.071745941 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.075993854 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.07161767 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06932678 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.083422276 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.073950926 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.078612279 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.08337031 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073638443 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06992619 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073960383 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.084019712 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069944155 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068799783 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072741636 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.081344546 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.068055367 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073315671 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082426256 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071754714 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076210323 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082381742 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074673289 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073709849 seconds)
  done (took 6.62621609 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079839228 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.10160914 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086991414 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087182633 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08032735 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.080372281 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.08097029 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.082232118 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081410374 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.086438051 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082774666 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.131487355 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.078184303 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.084682142 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081777974 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081172837 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.080113254 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080566719 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081495184 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081693328 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.081392109 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.088119 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082489962 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.087549797 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084229497 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.077069327 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082770258 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082615232 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089095786 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082888146 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085711375 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.083000725 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083003333 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.089736911 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.085945868 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.08241819 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072146578 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082776677 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.082592291 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.082872222 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078376255 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089401295 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082715576 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.078701205 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082555622 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08276436 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.089008398 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.085936222 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.08490842 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.085487919 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.082515626 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089457472 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082520013 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081444086 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.086772038 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.088814615 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086685411 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08749593 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080510993 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08924071 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.088857131 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.091453443 seconds)
  done (took 6.544131571 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086013846 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07751921 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08934318 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.067494367 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069174414 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.078992633 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071983472 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.070972501 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08016678 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.080612903 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082072953 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079458745 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082130225 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082005797 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079291337 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080837174 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078671984 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079298049 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079936378 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.078386302 seconds)
  done (took 2.863094234 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.080565286 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088068263 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.072300995 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.076509679 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.074831444 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07641644 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.074084029 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07556149 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07466819 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077347047 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.082816168 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.082246772 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074603383 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.078677923 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.081991812 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.078749967 seconds)
  done (took 2.523865981 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.087692999 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.077013278 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082852334 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070863299 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.072177171 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.067076285 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.070512913 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06808666 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.069011256 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.085853773 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.072349471 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.084075346 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.072593195 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.071334432 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06923238 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.078615721 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.068806477 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.069833116 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.072253024 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.084507284 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076550909 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.070778828 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.076895014 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.072569879 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.075566602 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.077056222 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.071630697 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.073460092 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.069896714 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.073166697 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.075979879 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.077036875 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.069528054 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.070503782 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.072094258 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.070058078 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.072513823 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.072569948 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.078639466 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.072533636 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.071011529 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.075018433 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.07259622 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.073441917 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06920742 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.071971797 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.067510726 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.073722391 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.068435626 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.073463059 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.070961881 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072771867 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070979747 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077915576 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073106851 seconds)
  done (took 5.322333318 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086311572 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075318776 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066472966 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.069260435 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.074778741 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.0727068 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074796317 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071733814 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072493131 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.069065699 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072555203 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07469303 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072740671 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074554008 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072287819 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074975112 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065995075 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071920835 seconds)
  done (took 2.601397377 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.078185036 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071747542 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07876848 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071310413 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.070759264 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073513818 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06685843 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.069260276 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071003827 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.073169133 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073321222 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.07519763 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071108444 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.075798954 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073573804 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073361034 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.076070773 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071454684 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.073029023 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068712709 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075586346 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071027909 seconds)
  done (took 2.882269282 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.098869828 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.089235551 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.14680745 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.087470627 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.093847557 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.079307361 seconds)
  done (took 1.879245005 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097192243 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105342257 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07402866 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076197275 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082798355 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077153802 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077015781 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077038555 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084200871 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081746315 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079921812 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084552767 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084378337 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083854092 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082612742 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081920384 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077497754 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077415441 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073797427 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089303056 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078032751 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085063034 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077572059 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077235018 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077250015 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083877378 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08480401 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082601054 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077682984 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08517787 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082891472 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078197557 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085256074 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082495687 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077000353 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085346808 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07751392 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088925847 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081139287 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084658996 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.076265452 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081998495 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083607524 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081181291 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084069278 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077431095 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08146761 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077925049 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077973408 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08965585 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080237485 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08154232 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080288379 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082453762 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082737294 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088549742 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080374871 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081843955 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079967731 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080167232 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081678784 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079934196 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08144327 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079885346 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080316523 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081850133 seconds)
  done (took 6.681214568 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10935227 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072397815 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076107175 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080739167 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081905348 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075586162 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075177181 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075317381 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075726087 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072453716 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112323314 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075481258 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081666353 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082094156 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075784888 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075159751 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075287183 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081642491 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072748356 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088864245 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075276886 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082235775 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081531248 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081586511 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080233774 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079959051 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075702762 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075674022 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076066455 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075522649 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080719049 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076351325 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083504268 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074332015 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084170635 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077670933 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077500752 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080111593 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075305969 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081766842 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08271167 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087038235 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075353739 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075239635 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079988545 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075237101 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076796096 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07369791 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076354035 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072537626 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080856426 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082580547 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082577901 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084062072 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077497719 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076888628 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076167154 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075606207 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076835234 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082634915 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082932862 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076541065 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091041322 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07743946 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077863685 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084341799 seconds)
  done (took 6.557474375 seconds)
done (took 136.674264399 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.198451358 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.175757219 seconds)
  done (took 1.647410323 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074521424 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.101912578 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082274 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133674789 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071489373 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.106827971 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104001256 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.08199239 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071560876 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.072048474 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071518308 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07323036 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136299916 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071173481 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071782154 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.07396708 seconds)
  done (took 2.692822602 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102794473 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.162769987 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10738774 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.072753526 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104788869 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079918755 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.075053635 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082366653 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.078081324 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.072777692 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079632597 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07738819 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.072951521 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077535023 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.077295317 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077027411 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070814421 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077000143 seconds)
  done (took 2.841934825 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101464228 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094499048 seconds)
  done (took 1.490817013 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.162488394 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.137887597 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.207816426 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.343400856 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.157351894 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.148115722 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.146185077 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.144570795 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116907579 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.140323484 seconds)
  done (took 2.998604015 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.105433075 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.154303069 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.280171593 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.124949295 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.081616994 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.098754311 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.125072468 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.086913066 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.086416767 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.084274203 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084128417 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080786926 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.10394661 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078875597 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.080077093 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080770885 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.107696432 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.079289532 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.080481352 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.080962505 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105472648 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.07225852 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078810318 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.079058916 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081256625 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081390091 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.072105148 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071817464 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.080895714 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.083246391 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.084645856 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.097708798 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.084119361 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.110035422 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.078683153 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.110615767 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.084338026 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.080535237 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.082779493 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.080613405 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.085360459 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.084718678 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.080837141 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.083644827 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.074013587 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.084167897 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.073621147 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.073567865 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.085322805 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.074663302 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.084294451 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.083353574 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107694512 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.07261457 seconds)
  done (took 6.252166451 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.11204344 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.111254052 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076019577 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.117371631 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108418791 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075180101 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.113061969 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105850297 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.114187577 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07595322 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073960615 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075080046 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08390171 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085125133 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.119921341 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.112139142 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077769513 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074599187 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112814133 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111475919 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073914264 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106497062 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101460323 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.1109063 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.072930341 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075312467 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073913875 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075151918 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080006997 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081991905 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073994453 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082603337 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087434618 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081539647 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072620482 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073734205 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073483672 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.083060958 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083723904 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082174439 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.080514319 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072477868 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073302214 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074935358 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074067361 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073240159 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081667886 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082358774 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.081499722 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073509149 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074874787 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.073614167 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07453105 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082949856 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080623436 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08312246 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082887223 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073554438 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073884286 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076040958 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083473546 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082363042 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082301917 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077225362 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082648008 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073475662 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083580306 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086589164 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.074193403 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074578669 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073834794 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07339694 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.075997607 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.082650737 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.082790924 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.076638784 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07552095 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075498257 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084179361 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081862651 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073072148 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079670928 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072581787 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07368181 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075006022 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074622269 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.08053971 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082496206 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.075004623 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073392069 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073426965 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072422626 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.071315796 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078925884 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080651319 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080134714 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079976293 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073271298 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079750482 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079363599 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.208363156 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.084600694 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.077152203 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079333286 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.078676848 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.08583595 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.084947101 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086481546 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076789134 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.076275572 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.085227015 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087657381 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.077449254 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.083565908 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086836548 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.084638065 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.075701241 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087847041 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077749315 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.087694128 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075769377 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.087310649 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076521251 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.084833306 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07680863 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.075376859 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07619846 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.085001925 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077098204 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.076661894 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.077479805 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076569792 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.085300106 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.088690094 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078751006 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085030754 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.083933978 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076901581 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.084363345 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.076622713 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08563878 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076560317 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076893223 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07472915 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086688932 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076019892 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.076489581 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074481866 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083057799 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073783533 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083015939 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080951576 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073509224 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084245202 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083122527 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.08023669 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083389364 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074883275 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073469163 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073845162 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073519437 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080455775 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082618068 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074909199 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073616464 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.081229854 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082625431 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.073419105 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.081297954 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080918464 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.081581474 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07394015 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073662212 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08347233 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083164912 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.081298208 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.08183388 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081357161 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07364126 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079966535 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080732356 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073615737 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086105629 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073590264 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084885555 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081539246 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079565469 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081232744 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.082700089 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082635436 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.083038959 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084601631 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071871975 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072402066 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079826673 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072296012 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071889151 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07937594 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074194196 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074056514 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083534882 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073043124 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.218218618 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.074499173 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.083481367 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07440064 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076477866 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08736984 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074242879 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07812027 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082718244 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076818524 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084794879 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.088113995 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.081222888 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.074291221 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075713191 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.08438112 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.083612514 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074033225 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074264526 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075795107 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.081658582 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.081238113 seconds)
  done (took 19.703902443 seconds)
done (took 38.935694982 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.197881756 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150331369 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.16214515 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117047653 seconds)
  done (took 2.008863176 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.114348212 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102630769 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.09337894 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.071278715 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099730565 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.070659303 seconds)
  done (took 1.883452777 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.277690782 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.193601146 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.177094206 seconds)
  done (took 1.976156204 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.203489503 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.19265255 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.446463107 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.269923549 seconds)
  done (took 2.541292787 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.141682857 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090948971 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.073463605 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.090575842 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133413593 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161134159 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.103533355 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.12667 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.084923071 seconds)
  done (took 2.382265021 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.150825319 seconds)
done (took 12.272870383 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.117196193 seconds)
    (2/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.105323329 seconds)
    (3/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.203421274 seconds)
    (4/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.2303247 seconds)
    (5/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.246165915 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.0794233 seconds)
    (7/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.085444038 seconds)
    (8/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.120833957 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075301902 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.109697995 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.156193094 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.10610267 seconds)
    (13/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.166012857 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.108057729 seconds)
    (15/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.080998195 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.073807093 seconds)
    (17/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.083774685 seconds)
    (18/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.234863377 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.138095088 seconds)
    (20/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.235318347 seconds)
    (21/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.404144242 seconds)
    (22/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.232527363 seconds)
    (23/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.082100295 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.123485463 seconds)
    (25/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.076907284 seconds)
    (26/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.183722968 seconds)
    (27/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.132566747 seconds)
    (28/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.17429321 seconds)
    (29/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.059936143 seconds)
    (30/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.223462667 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09921356 seconds)
    (32/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.081999518 seconds)
    (33/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.113777665 seconds)
    (34/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.087285327 seconds)
    (35/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.081316608 seconds)
    (36/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.080574548 seconds)
    (37/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.097989012 seconds)
    (38/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.080809314 seconds)
    (39/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.061568084 seconds)
    (40/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.0817492 seconds)
    (41/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.086239762 seconds)
    (42/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.085009742 seconds)
    (43/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.163692694 seconds)
    (44/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.089540816 seconds)
    (45/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.222264553 seconds)
    (46/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.078743959 seconds)
    (47/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.244109337 seconds)
    (48/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.060892439 seconds)
    (49/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.197462771 seconds)
    (50/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.099308689 seconds)
    (51/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.127027322 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.099727812 seconds)
    (53/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.098637598 seconds)
    (54/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.077642643 seconds)
    (55/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.081533158 seconds)
    (56/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.130941613 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.08057222 seconds)
    (58/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.222270686 seconds)
    (59/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.097503961 seconds)
    (60/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.07153713 seconds)
    (61/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.085976048 seconds)
    (62/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.198868315 seconds)
    (63/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.081854008 seconds)
    (64/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.213085846 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.09644364 seconds)
    (66/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.162082409 seconds)
    (67/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.081165338 seconds)
    (68/309) benchmarking ("sort", Bool, false)...
    done (took 0.152203436 seconds)
    (69/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.08021947 seconds)
    (70/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.070013894 seconds)
    (71/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.191307995 seconds)
    (72/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.082016107 seconds)
    (73/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.070045938 seconds)
    (74/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.08267424 seconds)
    (75/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.079911986 seconds)
    (76/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.082134416 seconds)
    (77/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.132341407 seconds)
    (78/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.226219041 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 0.07280578 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.277670544 seconds)
    (81/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.157334157 seconds)
    (82/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.091195215 seconds)
    (83/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.082337216 seconds)
    (84/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.183021434 seconds)
    (85/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.073846036 seconds)
    (86/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.082835662 seconds)
    (87/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.189720793 seconds)
    (88/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074037546 seconds)
    (89/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.072564752 seconds)
    (90/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.080350798 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.139571523 seconds)
    (92/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.159886412 seconds)
    (93/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.199982206 seconds)
    (94/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.101791625 seconds)
    (95/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.084104089 seconds)
    (96/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.084721177 seconds)
    (97/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.082477121 seconds)
    (98/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.201122913 seconds)
    (99/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.080918733 seconds)
    (100/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.113870851 seconds)
    (101/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.080460716 seconds)
    (102/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.187538036 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.096652296 seconds)
    (104/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.076343284 seconds)
    (105/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.166627077 seconds)
    (106/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.085760643 seconds)
    (107/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.113525117 seconds)
    (108/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.160766154 seconds)
    (109/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.062508997 seconds)
    (110/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072615296 seconds)
    (111/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.074226317 seconds)
    (112/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.082197998 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.095587584 seconds)
    (114/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.082820809 seconds)
    (115/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.111578383 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.095546137 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.08503561 seconds)
    (118/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.079354745 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.157812485 seconds)
    (120/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.168445731 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.073540599 seconds)
    (122/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.128208143 seconds)
    (123/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.211040789 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.124747512 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.103566367 seconds)
    (126/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.060993148 seconds)
    (127/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.084935609 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.135591968 seconds)
    (129/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.080290191 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.12459938 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.097723935 seconds)
    (132/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.081605237 seconds)
    (133/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.124341984 seconds)
    (134/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.061194693 seconds)
    (135/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.070965344 seconds)
    (136/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.059453404 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.098480454 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.072988135 seconds)
    (139/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.081672817 seconds)
    (140/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.12083428 seconds)
    (141/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.10544951 seconds)
    (142/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072861002 seconds)
    (143/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.113792636 seconds)
    (144/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.128516143 seconds)
    (145/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.082354202 seconds)
    (146/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.154930676 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.095090483 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.098195059 seconds)
    (149/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.121331771 seconds)
    (150/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.060399195 seconds)
    (151/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.080018935 seconds)
    (152/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074235256 seconds)
    (153/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.089588106 seconds)
    (154/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.087141933 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.072806203 seconds)
    (156/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.096357143 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.079417323 seconds)
    (158/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.079413835 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072482242 seconds)
    (160/309) benchmarking ("sort", BigInt, false)...
    done (took 0.198936883 seconds)
    (161/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.059585831 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.095360622 seconds)
    (163/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.081509924 seconds)
    (164/309) benchmarking ("sort", Int8, false)...
    done (took 0.150682899 seconds)
    (165/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.079099082 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.174398707 seconds)
    (167/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.060199743 seconds)
    (168/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.086770278 seconds)
    (169/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072307812 seconds)
    (170/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.058557411 seconds)
    (171/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.056662837 seconds)
    (172/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.056727639 seconds)
    (173/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.159126187 seconds)
    (174/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.057189873 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.070432572 seconds)
    (176/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.068933073 seconds)
    (177/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.075180772 seconds)
    (178/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.069179371 seconds)
    (179/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.197147083 seconds)
    (180/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.059388984 seconds)
    (181/309) benchmarking ("sort", Float64, false)...
    done (took 0.135324058 seconds)
    (182/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.084681864 seconds)
    (183/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.271018791 seconds)
    (184/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.076834893 seconds)
    (185/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.061719064 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.120217024 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.134436086 seconds)
    (188/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.059158378 seconds)
    (189/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.15578174 seconds)
    (190/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.06310753 seconds)
    (191/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.081183357 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.093704541 seconds)
    (193/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.060876246 seconds)
    (194/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.0584463 seconds)
    (195/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.070899961 seconds)
    (196/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072113273 seconds)
    (197/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.109413964 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.093034138 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141560834 seconds)
    (200/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.058413613 seconds)
    (201/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.079632854 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.095329023 seconds)
    (203/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.058770545 seconds)
    (204/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.185529789 seconds)
    (205/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.074189313 seconds)
    (206/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.058683599 seconds)
    (207/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.084638573 seconds)
    (208/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.059297065 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.073197111 seconds)
    (210/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.079903603 seconds)
    (211/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.07442385 seconds)
    (212/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.082170824 seconds)
    (213/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.082238145 seconds)
    (214/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.083492917 seconds)
    (215/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.061303875 seconds)
    (216/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.061095083 seconds)
    (217/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076524579 seconds)
    (218/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.080107487 seconds)
    (219/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.080600623 seconds)
    (220/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.072203292 seconds)
    (221/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.05954736 seconds)
    (222/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.059689952 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.072984837 seconds)
    (224/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.059327144 seconds)
    (225/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.079646484 seconds)
    (226/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.079728059 seconds)
    (227/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.080492458 seconds)
    (228/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.073632323 seconds)
    (229/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.060641858 seconds)
    (230/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.102811532 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.096088973 seconds)
    (232/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072206987 seconds)
    (233/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.082283399 seconds)
    (234/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.08054705 seconds)
    (235/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.059792555 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.149511907 seconds)
    (237/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.191159041 seconds)
    (238/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.060697706 seconds)
    (239/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.073261949 seconds)
    (240/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.082441137 seconds)
    (241/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.080992625 seconds)
    (242/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.059613799 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.186270924 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.145857441 seconds)
    (245/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.061301573 seconds)
    (246/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.059526067 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.073429169 seconds)
    (248/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.061390877 seconds)
    (249/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.071920468 seconds)
    (250/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.074160184 seconds)
    (251/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.061292527 seconds)
    (252/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.08063369 seconds)
    (253/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.075729082 seconds)
    (254/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.082221757 seconds)
    (255/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.059641556 seconds)
    (256/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.071873324 seconds)
    (257/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.167342217 seconds)
    (258/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.148544223 seconds)
    (259/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.147550063 seconds)
    (260/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072160563 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.118872641 seconds)
    (262/309) benchmarking ("sort", Float32, false)...
    done (took 0.13980519 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.072870653 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.096087443 seconds)
    (265/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.073472844 seconds)
    (266/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074194026 seconds)
    (267/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.071676345 seconds)
    (268/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.073599148 seconds)
    (269/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.074664547 seconds)
    (270/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.059403324 seconds)
    (271/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.059805924 seconds)
    (272/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.05931061 seconds)
    (273/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.061955364 seconds)
    (274/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.058951478 seconds)
    (275/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.073771141 seconds)
    (276/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.073103987 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.103109421 seconds)
    (278/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074135607 seconds)
    (279/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.080922975 seconds)
    (280/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074741144 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072135173 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.123680033 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.097931089 seconds)
    (284/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.078776597 seconds)
    (285/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.059786037 seconds)
    (286/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.084982374 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.073233417 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.097938884 seconds)
    (289/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.183271746 seconds)
    (290/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.086213787 seconds)
    (291/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.059262843 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.135545942 seconds)
    (293/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.073713915 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.072255435 seconds)
    (295/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.074445938 seconds)
    (296/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.059027431 seconds)
    (297/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.060995245 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.080193627 seconds)
    (299/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.069235097 seconds)
    (300/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.076180713 seconds)
    (301/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.059534165 seconds)
    (302/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.058929723 seconds)
    (303/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.085461306 seconds)
    (304/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.079298791 seconds)
    (305/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.074283796 seconds)
    (306/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.05877042 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.072082251 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071500599 seconds)
    (309/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.079297517 seconds)
  done (took 33.266688579 seconds)
done (took 34.606943714 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.094940611 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101409107 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.086762321 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.104538261 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.092765547 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.088146014 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.08386802 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.088771584 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.090928433 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.091612453 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.089862423 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.065598209 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.084573478 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.084726157 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.085220647 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100985645 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.089149213 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.082715992 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.083673983 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.073842507 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.0833097 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.074651843 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.076626446 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.064898048 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.088599997 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.081794765 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.084387298 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.08359036 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.074360821 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.074900395 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.079547286 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.08316446 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.07517095 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.089222346 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.082882552 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.082662042 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.084716077 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.086692921 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.076007322 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.074667709 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.084563957 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.074936355 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.082248009 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.082969633 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.081197444 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.080388419 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.083198164 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.086549874 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100733565 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.077813477 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.084354787 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.085575079 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.086092623 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.081779368 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.07917613 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.082490566 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.080154096 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099932261 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.082879484 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.077282177 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.083836722 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.083975891 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.080275895 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.081956979 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.080907962 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.084389947 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.08559217 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.078282053 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.082323726 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.081124486 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.074575325 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.082200973 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.077445399 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.074507177 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.083880803 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.084914546 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.072810446 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.080564948 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.082452627 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.082343911 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.07288224 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.076409958 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.07614324 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.081314102 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.077178798 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.064219165 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.078326068 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.081267618 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.072785878 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.082474717 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.08120462 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.08211165 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.07570292 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.086532731 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.073586745 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.079283929 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.074287153 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.07416848 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.075809097 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.078426607 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.073827989 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.076938445 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.084557294 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.075642702 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.081278421 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.0872733 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.074268106 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.081326153 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.072880086 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.073504466 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.087974715 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.084358251 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.074136675 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076464805 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.072647733 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.080901249 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.072299249 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.072720422 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.072667181 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.073156338 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07941544 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.073567162 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0756663 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.080644731 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.230192494 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.075767724 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.081015887 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.079305126 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.075864588 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.082094295 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.075654011 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.075231979 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.077416245 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.072232766 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.078126788 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.07477532 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.082996634 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.077572806 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.082691729 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.076724961 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.083795763 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.079634899 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.081248329 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.080735183 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.073211223 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.069887065 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.078206835 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.077380673 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.076406549 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.075211115 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.076075681 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.074767958 seconds)
done (took 13.873543811 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.072586192 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.137971561 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.101779364 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.103579452 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.093525312 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.075242094 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.083843109 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102086217 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.075429709 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.105693568 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.096512636 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.094851911 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.118852564 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.07343067 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.074505441 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.078631987 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.075542343 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.088044235 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.104938815 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.095746401 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.120489304 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.073973085 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.099692653 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.096222153 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.094592459 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.100798052 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.075563945 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.079026707 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.07857577 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.10868156 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.098184316 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.078462588 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.075416593 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.106046343 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.100357075 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.090325213 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.07526269 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.090526068 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.074856919 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.075171877 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.07580433 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.104510333 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.088150116 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.088291396 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.078589578 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.084908137 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.07570911 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.090098178 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.096475328 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.086747883 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.092898639 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.106752512 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.077601537 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.091975223 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.072889679 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.092700357 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.084568097 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.077197971 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.074759433 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.082469409 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.074364055 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.078207824 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.087855676 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.087193861 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.079178024 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.0914856 seconds)
  done (took 7.265709972 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.089823337 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.103966859 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.092170114 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.092828027 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.074392813 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.07524505 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.074821704 seconds)
  done (took 2.04415393 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.073194706 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.093712859 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.097133643 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.09730422 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.089030567 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.098390791 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084219261 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.075032321 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.100269479 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.075884449 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.09599635 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.106343936 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.07826934 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.088283419 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.098508209 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.074719904 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.098742009 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.075128753 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.078271995 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.095904703 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078133065 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.101515862 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079988947 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.072919907 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085827692 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.072960616 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12018252 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.079237432 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.077343685 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.078026595 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.076431466 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.114603 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.088221569 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.082795421 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.075642017 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.089796079 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.088789257 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.078295096 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086357327 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.085104814 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.087805918 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.07548604 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.076180163 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.076049664 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.079082866 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.084837191 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.076025367 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.080086356 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.078032238 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.094454783 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.073528096 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.087763848 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.078003718 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.081114167 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.076496783 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.081666816 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08594741 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.076057063 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.094789451 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.076817374 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090584505 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089882807 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.088563374 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090128134 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.0779339 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088073121 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.088194457 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.077923533 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077689817 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.079167181 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088960159 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071684703 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.074506795 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.082327082 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074988123 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094320596 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094408633 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074468692 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.085807802 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.073022434 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.073699896 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.07480754 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.097502424 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.079682183 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073798942 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.078815778 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.078564095 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.07869673 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.073783117 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.079110894 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.072792897 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.08086654 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.078188741 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.078105365 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077519666 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08948276 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.07676625 seconds)
  done (took 9.536233893 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.076475494 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.075041228 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.075734592 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.073464205 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.074256631 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.073598542 seconds)
  done (took 1.91509787 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094973565 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.075130444 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084956163 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.077657165 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.108757156 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.092441459 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.094674086 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.085172294 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.091728475 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.086942304 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.093214469 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.096091316 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.0987171 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.080669528 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.094448423 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.079899402 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.094889118 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.082277918 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.087121433 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.08171627 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.094141635 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.080267455 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080875896 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.088553045 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.083884115 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.079963144 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.087256502 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.087685287 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.086828517 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.08478435 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.080097867 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.083800344 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.078688296 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.084958728 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.094915235 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.078449581 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.082206617 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.085237661 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.079599816 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.083569647 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.095262643 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081041877 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.081965948 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.085286143 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.085493882 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.079215703 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.08543163 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.087188751 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.094539835 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.085333809 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.085634451 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.079750738 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.083635283 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.085580549 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.078477522 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.084995848 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.085320376 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.094454989 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.080281578 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.079353043 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.076375495 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.083691731 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.084805817 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.084650416 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.085128531 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.084513732 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.078166587 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079501924 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078230273 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.077157589 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.082304668 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.075382669 seconds)
  done (took 7.571088127 seconds)
done (took 29.759030017 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.553319575 seconds)
  done (took 1.974273459 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.610015736 seconds)
  done (took 2.060420599 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.52530664 seconds)
  done (took 7.970652547 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.374893393 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.483599376 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.729834489 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.141415012 seconds)
  done (took 3.215452909 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.733921886 seconds)
  done (took 2.19208955 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.241322372 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232553055 seconds)
  done (took 1.942747744 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.38211697 seconds)
  done (took 1.82887817 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.131868543 seconds)
  done (took 2.579483146 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.242607917 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185094567 seconds)
  done (took 1.87532051 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.451061204 seconds)
  done (took 1.898444378 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.896093999 seconds)
  done (took 6.345613271 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.227845657 seconds)
  done (took 1.719509772 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.242043829 seconds)
  done (took 1.695101151 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.752854938 seconds)
  done (took 3.207581725 seconds)
done (took 41.964900595 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.088393554 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.091026978 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.090761785 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.088234662 seconds)
  done (took 1.793193924 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081806902 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.078947858 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.082594315 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.079958587 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.084713864 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.080738525 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.0824025 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.083154751 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.080802303 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.081133214 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.080970907 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.080852752 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.083081594 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.082495422 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.079117123 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.083098829 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.083544982 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.080986965 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.083214191 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.080634716 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.078744665 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.083134465 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.083494592 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.080073991 seconds)
  done (took 3.414941244 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.084349125 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.079109912 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.082984781 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.079175608 seconds)
  done (took 1.787550689 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.084332371 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095396882 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093373135 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.084592239 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.096258071 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.09142022 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074805661 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.07721491 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.078312213 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.085940327 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.076111007 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.10350563 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.095601431 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.086552139 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.088300188 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.073386992 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.076119136 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.095187618 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.086607089 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.087011735 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.077869119 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.086663498 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.076826213 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.097268136 seconds)
  done (took 3.526787997 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.085971385 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.109516038 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.089258504 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.099611088 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.100429746 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.073476516 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.088681116 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.100815576 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.134158358 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.073813179 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.079444133 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.073799821 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.08267701 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.076175289 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.088646003 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.117200311 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.120376021 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.077429321 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.105757652 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.073648792 seconds)
  done (took 3.319463009 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077896993 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.076274831 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.078379515 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.073736005 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.085506765 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.08086901 seconds)
  done (took 1.943093849 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.074341289 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.075509252 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.075850435 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.074314367 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.080442032 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.075319302 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.074025153 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.075667603 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.076008565 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.075549164 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.0744194 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.073796095 seconds)
  done (took 2.370982858 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.186472723 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.074068851 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.074744214 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.074405429 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.078746369 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.075218996 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.089653107 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.076180702 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.101218941 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.074439731 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.07505922 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.077219273 seconds)
  done (took 2.524758131 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198284867 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082792259 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23175791 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156678938 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114974081 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119025421 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118580099 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116959437 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143453492 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105739852 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16721233 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165888155 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112839923 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141842136 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095550803 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.108221251 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153542953 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170238769 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113205838 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16907284 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14899193 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133848562 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150465289 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107313801 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112082789 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124501677 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.079477572 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086451549 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168269432 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135917458 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144687181 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116680672 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102497432 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175881423 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169762569 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14231292 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153136654 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090417243 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.110084603 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135587198 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201068595 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095653835 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.305152956 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118969329 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088746768 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139653254 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125962022 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.126731974 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.110789935 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098214442 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149428213 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181843552 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138547103 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093046282 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130017118 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119114683 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.118436278 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121090758 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177295082 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162576357 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133395328 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.07999527 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114902309 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153738074 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139941659 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.113417246 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.128509798 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096650475 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135141085 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156013684 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1260789 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143413949 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.119197486 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093596916 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124377423 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138330082 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128134752 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16006189 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12661889 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.078448534 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122641114 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102216092 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084444393 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.148655275 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08155296 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173708571 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105634669 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.112084232 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127079111 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111168389 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11042527 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152813171 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.288481909 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108681143 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.073973225 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109749176 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121748523 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145953259 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092471994 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111698269 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119024576 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.083014113 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134765212 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080683569 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126083117 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.082652553 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125386595 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131816719 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.084245362 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126785963 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108441604 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.106192683 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133284348 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159455769 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095304185 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08887171 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168030933 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127431881 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10892614 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146104797 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159551953 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.109187433 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104943412 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147595848 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16659434 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09331573 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161980094 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109502492 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090859176 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.094998852 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126747207 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114880917 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.127337188 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08718496 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.12269619 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16393497 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.082132574 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100212278 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136119365 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085418733 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087678654 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109101483 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108414223 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.099860527 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101441173 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104304632 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137185661 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277466023 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112602341 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131145886 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105988611 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170623282 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095766386 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.111024382 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110977728 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.078163291 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136931049 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157814368 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086959318 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161512246 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.127449403 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122770597 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1252371 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090750767 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138129788 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086297593 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.078275035 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14510241 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117724127 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115528176 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.153546893 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121870059 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128753381 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.123739148 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134358252 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132651972 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131832309 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109829022 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.093395329 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115028486 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12879698 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.079053833 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.094054345 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084753819 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108377583 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098572785 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087719171 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140641096 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125441843 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112293409 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114639226 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102354455 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148622385 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.083400466 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128552628 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.123215194 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10093588 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.15280096 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152793718 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137352092 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105385134 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287846949 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.077555124 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080391161 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091968815 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124662508 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090857595 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.091868338 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120058696 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149488871 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133818442 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139451793 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127908924 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123420222 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154139428 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.078646872 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.126175228 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149266257 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125347457 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.111378828 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09899857 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.106540756 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145638456 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112157562 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178747412 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120651241 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130633425 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159898041 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.109861585 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087598552 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110205238 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136781131 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109216677 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146256897 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105775276 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095147015 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114683929 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.083963836 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103881217 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130136963 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121841843 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139178767 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.116549134 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135521073 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084559495 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118317652 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126511089 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125312438 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.072492335 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121978458 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16601708 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100173216 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121040833 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302324321 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085040665 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.142941848 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17394481 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147240867 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092313393 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111881729 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12313104 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127114748 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121902599 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1367949 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108265918 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138432156 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114099839 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.09178162 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093261544 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101166869 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107818754 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.09813993 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.105612302 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114721389 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.100077036 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131571576 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106135578 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113054909 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122146714 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.107390922 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.100786157 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104257274 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175395547 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123851526 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170398364 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.107289506 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.143124612 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161757921 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083458762 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087407389 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.086180687 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140555397 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091690566 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134753808 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.116567173 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122065108 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126841909 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142316641 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10247461 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.076453431 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113964861 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135163373 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127698182 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104208007 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.108206015 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161863246 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.105400391 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085590193 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.265878176 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124879026 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111339176 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170940636 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.072039542 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114344506 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084712493 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088472582 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131332457 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15395169 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.088879764 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.107756302 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126266025 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118321028 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13019158 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106192902 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115328329 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129133411 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150406713 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132537933 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09681074 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11654948 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134690482 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157463372 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108845288 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.105279737 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172251672 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15337277 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.161315938 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.093540767 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120386759 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120521944 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114581293 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139755512 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090208993 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162565093 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089489386 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138618937 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107007824 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091540581 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127491001 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.115364774 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095598377 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145265029 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120203045 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088789258 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082549366 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118582206 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120769393 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106233337 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.080807077 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290105187 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.081392387 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136635277 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161744766 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088123931 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112298939 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104124075 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088130652 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111472344 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109483741 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094642831 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.107896644 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170605552 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.092409167 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149028337 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136987358 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117979809 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137210064 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108684731 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.648286671 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.084996486 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153084595 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120628198 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172930832 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106398615 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123569125 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116493821 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125662035 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146191195 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108380553 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.182665349 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134899949 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.120577138 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087267915 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108189461 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108984495 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.092446259 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109992716 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118981046 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119808718 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.099500491 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.12079126 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126432841 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.089199775 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103077991 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154916352 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119563142 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14599716 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140170183 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091757266 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123071442 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139413507 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237808894 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.11999863 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150705233 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109643879 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103581966 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.085773866 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102507165 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17476239 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078309831 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156035557 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125312296 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11473547 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117987986 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.11190206 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132057183 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108679754 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123192612 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096614464 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111720806 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117019947 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08914729 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.084687585 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111454917 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116118442 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.106071045 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103367334 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.107226062 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153332882 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.080714282 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105329658 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120479955 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146929163 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170636857 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.096062724 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090941921 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123791186 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118402636 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.118397915 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126040768 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.086921718 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088974947 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.087062473 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.088281068 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113014972 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118299707 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119473249 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114300549 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159626594 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.090638995 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.231888689 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10108954 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110025735 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.078549798 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.084077894 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100978783 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102308006 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258255796 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111452321 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158870712 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.10090573 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.097076013 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095756215 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.081170222 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088408304 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126952916 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114082106 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120454054 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104089762 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.069361763 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109269954 seconds)
  done (took 60.931922977 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.112378767 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.087474349 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.102774058 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150203946 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.126072129 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204918458 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157530121 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193190559 seconds)
  done (took 2.704741275 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073678394 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.1000285 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.108900107 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.087829201 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.072772096 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.073953004 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.229238242 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.088011673 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.072180539 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09742741 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082160168 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.074540999 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.411197298 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.071318606 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.072607791 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.067098832 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.073583766 seconds)
  done (took 3.416716565 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.402420049 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.620848753 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.34839826 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.086693642 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.99027566 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.096147913 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.314817005 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.139426607 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.084217882 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.532325594 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.414767322 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.134169735 seconds)
  done (took 18.73473365 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.089279563 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.083026263 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.095397695 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.095708106 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.085279259 seconds)
  done (took 2.109757096 seconds)
done (took 110.058813457 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.089525883 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.424898604 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.061071536 seconds)
  done (took 2.080398786 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.093449853 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.09158121 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.092365623 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.089737616 seconds)
  done (took 1.943282957 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.081125854 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.083246384 seconds)
  done (took 1.733720951 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.234144195 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.179899456 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.105454345 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.089033372 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.086097495 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.088490894 seconds)
  done (took 1.837964614 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.078452786 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.082668521 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.081066542 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.085422917 seconds)
  done (took 1.899085701 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.082318128 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.059064976 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.060838264 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.064348782 seconds)
  done (took 1.838378921 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.092779743 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.090421326 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.085153479 seconds)
  done (took 1.839101579 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106453755 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.093676278 seconds)
  done (took 1.771572061 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.087376204 seconds)
  done (took 1.660322287 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094436129 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.105036134 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.13750251 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.11930051 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.143377358 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.11891505 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.090730028 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.091901756 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.085220366 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.094557935 seconds)
  done (took 2.652343112 seconds)
done (took 21.429325577 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.084567815 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.382233264 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36910968 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.100099414 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.709852774 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.366262275 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.997329159 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.103671709 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.151725509 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.078152936 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.094530366 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.657424924 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.987200677 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.339101209 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.975791315 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.3396304 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.659789035 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.079208509 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.078244014 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.078238065 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.984071305 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.077830792 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.075027866 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075850302 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.65582052 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.380676962 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075550405 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.336180026 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.075466285 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077147227 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.362627178 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093632883 seconds)
  done (took 16.456177325 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07671272 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125697697 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.079770822 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090615883 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07760273 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.076309826 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.079912197 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.078378227 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130224893 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.078473769 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.095648568 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.075245279 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.080244957 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07689598 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.095077448 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.080470725 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07627629 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075803307 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.075384834 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075757564 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.095847562 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.077099736 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.075393787 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075420317 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.075305023 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087166004 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.076135924 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.075706196 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.075441664 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.079955826 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.081147837 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.079760112 seconds)
  done (took 4.24073026 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123813305 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.133263011 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.083420093 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115923912 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123491678 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.081319465 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.153909191 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.103953958 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.134781594 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.075390161 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.092638795 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.075176702 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.108982042 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.078842603 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.098049646 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.076891334 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.076062349 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075618981 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.076132341 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.076810263 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093999578 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.075366583 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.075218687 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.076082081 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.075355395 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.089781587 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.078963078 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.079191573 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07922655 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.080298058 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.082001557 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.079243234 seconds)
  done (took 4.518910773 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.079671917 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.082394307 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.091543235 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.09360004 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.078860012 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.081884044 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.083689779 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.079291555 seconds)
  done (took 2.262438979 seconds)
done (took 29.057293275 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.086710627 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07841665 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.082789118 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.099274398 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.083782623 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.087456034 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.076760581 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.086471722 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.083369227 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.08377613 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.08454879 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.076817677 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.081681251 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.076548015 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.083462593 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.077456363 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.088356656 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.08181713 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.088272891 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.088410279 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.07971992 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.08273236 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.085381089 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.088102143 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.087730818 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.086972398 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.085463339 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.080580931 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.074710333 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.077315955 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.084129079 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.090220276 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.075091898 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084664416 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.076321329 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.076725498 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.081297654 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.076909951 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.087476668 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.086106652 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.078773478 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.086053305 seconds)
  done (took 5.051814176 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.094311493 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.099284336 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.0942257 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.071980387 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.077492481 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.074852407 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.098607267 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.069705471 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.070604546 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.09797704 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.066963906 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.069675146 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.072560817 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.064168149 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.069703669 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.066861496 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.071109004 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.064279752 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.069369646 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.067961684 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.096568838 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.061361821 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.084076385 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.070126406 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.063765683 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.069117663 seconds)
  done (took 3.575445921 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.081332954 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.090261649 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.099741252 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.153670327 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.120862586 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.087904616 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.088423408 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.101969741 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.104070964 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.075361191 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.079286914 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.100346284 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095033233 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.081722534 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.076799074 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.094488397 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.094215828 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.077717408 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.081520678 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.105190405 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.095011779 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.09346226 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099589966 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.088657178 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.076449475 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077833879 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.079707447 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.090241998 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.079705235 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.086524259 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.080130775 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.080268968 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.07870531 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.088380533 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.078781072 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.077814141 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.102721744 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.085243976 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.085713771 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.074839379 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.083587596 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.07836085 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.100629626 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.134426819 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.075870092 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.082546043 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.080239538 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.087168185 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.076475725 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.103868156 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.088718451 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.07630726 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.080084008 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.076010563 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.076050758 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079653987 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.077072224 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.077161231 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.083046078 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.079372166 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.098046668 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.079306896 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.090305239 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.07325306 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.082655909 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.07301971 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.074979038 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.072918626 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.099029304 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075771052 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113948417 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.074321735 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.075228156 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.08312467 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.082578374 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.082854645 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.074027317 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.090148828 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.084405741 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.078140969 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.083622357 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07783744 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.078469866 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.105306725 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.079662909 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.078380177 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.078013473 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.083055531 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07960967 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.07756901 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087987718 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.074195399 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.076334142 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.090838055 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.074022436 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.075220157 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.079150435 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.078218613 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.073111243 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08428335 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.077580081 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.075252416 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.086689449 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.075597178 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.076269371 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08585793 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.080273498 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.072587643 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.077382261 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07858364 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.074418019 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.075646274 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.075552533 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.074923994 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.08240549 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.080304799 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.077449983 seconds)
  done (took 11.485160876 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.17164428 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.160606852 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.08111507 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.154942184 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.087248134 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.088205613 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.157165812 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.102048749 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.077674046 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.077902799 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.077634022 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.116788671 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.112468496 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121343643 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.084424522 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.074221945 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.096376989 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.118181453 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154762016 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.151886951 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.101098951 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.085919739 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.080560604 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.078830298 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07877215 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.087345372 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.097583256 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.08414151 seconds)
  done (took 4.602697596 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085991127 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.110565271 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.081114827 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.096944102 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.096162478 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.07538577 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.076595671 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07616702 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.091720875 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083973432 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.074422501 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078558926 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.08123574 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.079555625 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.07611845 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.082110102 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.082496891 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.07707237 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07901289 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.083375539 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.085373568 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.097755969 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.077394128 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.073438279 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.079061762 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.073106808 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.069026805 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.089012806 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.074585097 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.09952048 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.072347319 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.081036409 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08832956 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.077233861 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.075927806 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.075504957 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.076775376 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.077319363 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.078820537 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.075309574 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.07397415 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.06428012 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.0734839 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.083936413 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.087412891 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062951111 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.078750043 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.079509127 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.079821516 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.071819955 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.077089124 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.077153916 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.077033265 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.082025972 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.078443788 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.079971155 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.075884644 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.082806594 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.082739099 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.074625716 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.071176762 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.072835232 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.079205972 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.07113391 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.089502322 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.079152198 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.073196769 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.074254493 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.075785134 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.087780532 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.074308901 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.079602632 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.072370416 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.076447499 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.079180836 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.076314409 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.075635026 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.07330023 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.074337222 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.074795688 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.061863115 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.07423361 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.06034826 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.076689781 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.072336815 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.074278697 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.075427606 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.080051958 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.085706792 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.078410966 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.083090393 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.077793401 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.075998142 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.080043773 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.068491677 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.078076419 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084447446 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08788287 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.074274273 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.072104739 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.087000957 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.080055288 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.073961284 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.066149358 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.079292312 seconds)
  done (took 9.86871129 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.098862906 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.076230703 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08864387 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.095977153 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.094607432 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.082962832 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.085410784 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.076248235 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.091019341 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.082101459 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.08384343 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.074966138 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.085639371 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.083933106 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.076457593 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.08458791 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.078101766 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.089441267 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.089090541 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.074537431 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.083011131 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.086952877 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.096402165 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.0874468 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085764065 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.087301677 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.096326254 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.085805351 seconds)
  done (took 4.042698706 seconds)
done (took 40.212156498 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.697816289 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.849568592 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.673616016 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.984844677 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.749525801 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.848027777 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.767019915 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.666289551 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.841280312 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.70561361 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.00352828 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.726850961 seconds)
done (took 64.242099106 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.701579146 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.815634568 seconds)
    (2/2) benchmarking "String"...
    done (took 1.890083297 seconds)
  done (took 5.301900725 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.854503831 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.342776544 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.90238699 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.662818662 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.671021549 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.922232412 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.466558869 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.202501323 seconds)
  done (took 29.767236019 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.793018497 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.892348418 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.355055826 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.382355796 seconds)
  done (took 15.068707269 seconds)
done (took 61.378232338 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.658795446 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.690062096 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.711024119 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.650393844 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.723528167 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.675237801 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.980879562 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.700680101 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.665226814 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.65783299 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.668054685 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.097867306 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.670854877 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.846516288 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.667688228 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.666154923 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.732783704 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.323599891 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.870853129 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.674479619 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.683967644 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.677639409 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.668254801 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.667516399 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.671554167 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.667520662 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.056348299 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.674618154 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.285588694 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.668564806 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.699235633 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.094053021 seconds)
  done (took 200.443304518 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.666557245 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.878283509 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.917155093 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.696157731 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.310285237 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.848931193 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.768680612 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.342002239 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.668677955 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.6728137 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.922036988 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.667860505 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.935426099 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.611815755 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.717795991 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.676531141 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.811110338 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.94011917 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.720533542 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.83660789 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.684364108 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.760144255 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.713910159 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.898493015 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.67851326 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.69823468 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.683300663 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.674927884 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.85757134 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.784568959 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.707039443 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.673278155 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.836182878 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.540494778 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.686358911 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.67062116 seconds)
  done (took 166.756337709 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.852875178 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.667967732 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.667517546 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.667320353 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.673311639 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.667396716 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.790193435 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.791298233 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.287493105 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.013900263 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.722360387 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.668064976 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.469922253 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.668104364 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.73533875 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.678840847 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.668378967 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.683513235 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.694404041 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.671908645 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.669008362 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.792226855 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.681606826 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.668496046 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.675148044 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.669111267 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.673509351 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.041333211 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.669076437 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.826001084 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.668705757 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.674057654 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.908917921 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.670420816 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.669376023 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.523025801 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.403239043 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.753773126 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.670894811 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.674490067 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.669116465 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.885846335 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.669870996 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.670004561 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.670047006 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.67127683 seconds)
    (46/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.668929697 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.812915776 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.672215895 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.789616086 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.672100152 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.147964662 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.671521889 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.668762847 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.669942385 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.448894345 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.480500213 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.673657639 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.672886755 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.669521988 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.669337857 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.682942286 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.591248341 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.749298496 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.671494727 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.671749 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.673080207 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.676850961 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.671711167 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.795288868 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.674512772 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.059923351 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.734190544 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.789495018 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.790391815 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.672781533 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.737079867 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.764509616 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.670430091 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.671033544 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.670710325 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.67127879 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.751523043 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.671525049 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.671160451 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.832219154 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.679716345 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.672133688 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.72491262 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.740187527 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.671663321 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.514215305 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.674531985 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.671277689 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.963180889 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.740057443 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.671658954 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.672649738 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.808201895 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.793160705 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.385084173 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.675463546 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.432483466 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.825029033 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.673511545 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.821222474 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.676468459 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.754693706 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.678156172 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.67415777 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.705695686 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.673206256 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.726084974 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.672922649 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.046225028 seconds)
  done (took 390.546874548 seconds)
done (took 761.252232818 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.297733827 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.265249101 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.366333868 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.275325524 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.261141503 seconds)
  done (took 13.067973672 seconds)
done (took 14.669246599 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.763749102 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.765116542 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.696441165 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.763232131 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.694471183 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.761436542 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.744733136 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.699285223 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.730420885 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.698896433 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.733679981 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.698268783 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.685013565 seconds)
  done (took 24.038208991 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.902459584 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.908243233 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.742366617 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.899783405 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.718976175 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.901135333 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.835626087 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.818866199 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.822838564 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.689241867 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.685923123 seconds)
  done (took 21.530132224 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.906727979 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.908497496 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.750557685 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.911267684 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.722952407 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.906511838 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.839948432 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.826437605 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.828011684 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.691006748 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.685928656 seconds)
  done (took 21.583005996 seconds)
done (took 68.753929066 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.682603906 seconds)
  done (took 3.287292381 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.710695 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.879253498 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.68991998 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.690096609 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.683341118 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.682972893 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.687950541 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.682638337 seconds)
  done (took 15.312832806 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.679280352 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.681586753 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.678322946 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.680695572 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.681228442 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.681109278 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.681727072 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.679827753 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.680622544 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.679542422 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.682225127 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.682085334 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.679601799 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.67950325 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.679092267 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.681724534 seconds)
  done (took 28.493806308 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.679397412 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.67828041 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.678652634 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.679331848 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.679548048 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.680762294 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.6808983 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.680241177 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.680384269 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.6809535 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.680944443 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.679834495 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.679596422 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.679756061 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.680359577 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.680084182 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.680088224 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.680404762 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.685739759 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.68044746 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.680758878 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.68079383 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.680989306 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.680475623 seconds)
  done (took 41.937571141 seconds)
done (took 90.634943854 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.430296409 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.420489599 seconds)
  done (took 9.457201868 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.684143059 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.683481029 seconds)
  done (took 4.978538189 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.683872874 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.683396213 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.683790232 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.683415038 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.683554539 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.68309764 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.683838084 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.683530771 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.683180617 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.684665964 seconds)
  done (took 18.444025324 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.684603745 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.684579759 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.681903685 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.684868676 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.684194231 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.680956891 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.683887653 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.684159242 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.683644726 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.681357635 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.683842733 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.683600475 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.684624897 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.682622686 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.684942921 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.68295257 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.683075631 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.682539201 seconds)
  done (took 31.910766607 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.684121105 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.68375502 seconds)
  done (took 4.976464067 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.68149157 seconds)
    (2/7) benchmarking "second"...
    done (took 1.681773223 seconds)
    (3/7) benchmarking "month"...
    done (took 1.682259157 seconds)
    (4/7) benchmarking "year"...
    done (took 1.68270637 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.682665989 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.682312153 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.682438607 seconds)
  done (took 13.382889508 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.686261725 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.829940643 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.890138388 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.324593154 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.685911241 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.688830391 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.59306366 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.689771186 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.691084372 seconds)
  done (took 18.68863593 seconds)
done (took 103.443957124 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.540802835 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.684965117 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.927562014 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.741570311 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.743953327 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.980961186 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.690028902 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.976855632 seconds)
done (took 41.89442896 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.717039909 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.38593159 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.393837471 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.709828618 seconds)
  done (took 15.099492636 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.666006756 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.000700194 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.686014171 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.503834923 seconds)
  done (took 21.470550832 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.053976801 seconds)
    (2/2) benchmarking "read"...
    done (took 2.029740092 seconds)
  done (took 5.699454368 seconds)
done (took 50.596312103 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.686428446 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.686082738 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.684514338 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.686401238 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.683494929 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.684329908 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.687605229 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.688207105 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.685382429 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.687294037 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.687678156 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.687641273 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.684272378 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.684320923 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.686788619 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.686662705 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.684314213 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.683716197 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.685334664 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.685506074 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.687950904 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.685366011 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.685349088 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.688295346 seconds)
  done (took 42.074423682 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.688413198 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.686430132 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.68762885 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.686913544 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.684494442 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.686776818 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.687357399 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.685970837 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.688991309 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.688494189 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.685904037 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.686171792 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.688085342 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.68644192 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.688721495 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.685873852 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.688432606 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.685079505 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.68725609 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.685651675 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.688909953 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.686282414 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.687006075 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.68993374 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.687371159 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.68674593 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.69137213 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.687252246 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.688035509 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.68566189 seconds)
  done (took 52.229612097 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.694104661 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.696884182 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.689708386 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.690706783 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.689435844 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.691147882 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.690134008 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.690686602 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.690282088 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.690399113 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.690199698 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.690338698 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.689893989 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.689717669 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.689455693 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.691277741 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.690177383 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.690471858 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.691600885 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.69051995 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.690994617 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.690825138 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.690100892 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.689948191 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.69049889 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.69027814 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.690025744 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.689455935 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.691269715 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.691622583 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.690378305 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.691706493 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.691465388 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.690559402 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.69196872 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.691064229 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.695392749 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.698342204 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.690796903 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.690445371 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.691274569 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.692111011 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.691396161 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.692089901 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.691186668 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.691590253 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.690935641 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.691243224 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.690832165 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.690755321 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.6912362 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.690591696 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.691310841 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.691161462 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.692171824 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.69190044 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.69254504 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.69202654 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.692997965 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.693903015 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.692468245 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.692315179 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.69221518 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.692682514 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.693471562 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.692343237 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.692002131 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.69223073 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.693171612 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.692800196 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.69329578 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.693863801 seconds)
  done (took 123.405411672 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.692887332 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.691119617 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.69028468 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.689614327 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.689541584 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.692674674 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.690610733 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.692128568 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.689809352 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.692977037 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.6932283 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.690613968 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.690198143 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.693695458 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.693305941 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.691278798 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.693891564 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.691204674 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.693101155 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.693711192 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.693241109 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.69181559 seconds)
  done (took 38.838375941 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.694106122 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.693537778 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.690731586 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.69414595 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.691290106 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.694525234 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.694442016 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.693645934 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.694092466 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.691670995 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.692459612 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.694209036 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.69233766 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.691735343 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.691426041 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.691817447 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.694445276 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.691676315 seconds)
  done (took 32.089669328 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.692657685 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.693078207 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.694686455 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.691565472 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.691498075 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.694759116 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.692093082 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.695558707 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.694711812 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.693272809 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.695527401 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.695888595 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.695439436 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.693465741 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.69567649 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.693070143 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.695319775 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.692487926 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.695045675 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.693688286 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.693915296 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.695938768 seconds)
  done (took 38.887630417 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.695667778 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.697037074 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.69337565 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.692683608 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.692964652 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.695392353 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.695670228 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.693339467 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.695722107 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.696551292 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.693418567 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.69631355 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.693747611 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.694403741 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.693465167 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.693502271 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.696461969 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.69409632 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.696020097 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.693848803 seconds)
  done (took 35.513585334 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.698375572 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.699003169 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.698458371 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.697696683 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.697249862 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.697638966 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.698724682 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.69872889 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.69728765 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.698755403 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.698386074 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.697709454 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.698494039 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.698721796 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.699181723 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.698378348 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.699109783 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.698634364 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.699284799 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.698531158 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.699904208 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.699080799 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.69880379 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.699013973 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.698975489 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.69965772 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.69855424 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.698957511 seconds)
  done (took 49.183143757 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.697545149 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.698301597 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.695416009 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.696086854 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.695545229 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.695469277 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.695934893 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.695872459 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.700071394 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.696257105 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.698417718 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.698833646 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.698901301 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.698089041 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.697883422 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.698254441 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.697912524 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.696427996 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.695444019 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.695246882 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.699308558 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.69848677 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.698735707 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.695625919 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.696368999 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.6987987 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.697645157 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.696800386 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.698592123 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.695894137 seconds)
  done (took 52.540125298 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.716724005 seconds)
    (2/2) benchmarking "in"...
    done (took 1.716653465 seconds)
  done (took 5.055848227 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.695387916 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.700113423 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.698415238 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.696907853 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.698217906 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.699756125 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.700646359 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.6962281 seconds)
  done (took 15.20802039 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.699690023 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.699335194 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.69983721 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.69982111 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.701453623 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.700046825 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.706002471 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.699698241 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.701891802 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.70134793 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.707834098 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.708158378 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.703294783 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.701548669 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.700920197 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.700850545 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.698867632 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.701120655 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.700954809 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.699980337 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.701253389 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.701830609 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.702516841 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.697078868 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.70246142 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.711736559 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.704038681 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.700965519 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.701501641 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.70410409 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.700259107 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.698186078 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.702291911 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.702147933 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.701035344 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.703264164 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.709560492 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.701665978 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.707477171 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.702104611 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.701553409 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.697898568 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.703070862 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.702509156 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.702634592 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.702021587 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.702512571 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.699378243 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.701538329 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.705697835 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.707881005 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.702411965 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.699433856 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.704518164 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.703331116 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.708718841 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.703485588 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.705721973 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.712398798 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.712662 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.716216151 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.711385989 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.703426756 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.703507487 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.712706417 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.727821535 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.709163246 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.699770419 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.699603149 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.703547957 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.70963654 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.715643004 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.713872605 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.704676421 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.704179347 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.702905869 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.703565905 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.704081856 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.709537578 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.706777575 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.70481956 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.70516142 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.713582965 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.728530454 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.703124646 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.705205177 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.705177103 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.70498836 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.705196382 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.715232521 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.705343418 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.704110844 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.70336978 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.703927364 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.704774229 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.705026374 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.703947755 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.705073355 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.701170118 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.704625491 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.705355479 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.707715832 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.71427159 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.704933782 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.705726794 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.710770922 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.704570515 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.704022328 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.711480449 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.704199728 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.704753621 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.705208758 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.712089839 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.702142391 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.709146445 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.713942417 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.706069444 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.705344741 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.705499925 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.70452069 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.714587309 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.732514254 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.704850562 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.705253315 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.711676453 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.720556647 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.706619371 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.708762749 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.706008493 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.702929439 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.702614327 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.70741202 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.706517599 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.706818964 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.707884179 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.707536987 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.70396817 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.706680259 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.707845934 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.707408803 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.706872193 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.705725374 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.706727231 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.708660697 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.707708236 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.707703695 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.711813081 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.706479965 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.707647973 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.708117589 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.703756887 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.70736369 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.708884869 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.707221791 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.707210577 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.70784926 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.705944965 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.708152373 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.707124543 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.706814655 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.707171627 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.707909538 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.711564363 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.708631938 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.710943239 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.706657153 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.704343489 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.707055201 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.708407995 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.707558079 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.707761861 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.706657407 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.711128757 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.716678676 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.70718543 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.708672113 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.709969126 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.709474893 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.709386675 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.709347939 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.711086603 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.716789965 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.709187165 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.714776582 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.708216054 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.708900063 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.708762707 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.707754374 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.70800135 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.709703583 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.712400128 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.717503931 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.7210984 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.718738188 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.709675469 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.713124007 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.710579128 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.714885217 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.713315503 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.711406505 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.70955994 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.710824541 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.71038497 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.710266032 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.71154538 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.710727747 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.70836505 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.709453173 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.708916624 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.710237443 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.70949753 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.710150276 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.710836492 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.706805918 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.710302656 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.710118428 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.71014059 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.707240978 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.708472074 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.711076814 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.710141828 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.712198913 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.716137256 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.707227539 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.711970469 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.711712264 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.710624686 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.70965017 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.711050207 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.71240943 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.710909932 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.717080847 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.7110583 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.712057604 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.717599891 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.710593805 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.70969622 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.712648927 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.711618952 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.708690616 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.71449505 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.719332701 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.711051576 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.711706377 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.711591681 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.710511113 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.711064002 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.718039447 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.708796491 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.711394098 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.711740664 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.713657699 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.708969068 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.713214925 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.713091676 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.713171348 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.713471128 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.712009927 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.712145191 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.713277878 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.713049528 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.712588074 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.713153645 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.714710522 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.721982439 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.71750728 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.713276054 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.714171908 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.712827393 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.716449337 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.71287574 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.713587531 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.712128045 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.724711428 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.722926795 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.720058993 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.714460654 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.71329567 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.718895381 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.714301816 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.717698724 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.713395715 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.71356896 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.712603023 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.712003875 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.711055425 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.714118729 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.712670635 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.713824865 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.71487353 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.717716923 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.713679175 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.713397545 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.71441625 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.7140659 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.713112723 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.712372094 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.713905669 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.715302709 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.714798224 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.712843358 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.713753693 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.71959014 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.713589669 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.715073257 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.71285852 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.713336581 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.713319126 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.715691891 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.715343424 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.717858656 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.723962494 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.71751421 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.723626451 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.715920565 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.724088108 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.715332521 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.718372675 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.723915559 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.712580797 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.713480528 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.714475836 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.715695334 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.721383855 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.715709681 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.716266703 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.720432415 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.715576646 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.717024831 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.714121422 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.715575146 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.716254863 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.716027333 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.723120702 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.716155932 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.719397532 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.715762654 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.712373707 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.716934577 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.715810059 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.714646306 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.719086726 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.716506146 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.717102179 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.715321016 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.71547165 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.715723846 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.716828063 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.715727774 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.713502811 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.716175677 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.721723915 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.716551257 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.721820495 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.716960245 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.723694674 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.718531298 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.723361311 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.718029464 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.71699933 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.717867856 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.716938889 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.718518086 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.716439565 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.718219669 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.718464365 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.718327217 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.721952584 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.717877326 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.719534844 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.718060337 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.718684755 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.71631394 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.728993409 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.743520795 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.718701611 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.72297979 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.714155762 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.71921863 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.723619956 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.718807483 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.717230758 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.720668177 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.728924152 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.726499023 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.718020282 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.718825689 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.717830272 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.719213331 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.71831552 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.717987818 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.719769303 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.71775235 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.71910747 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.71959887 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.721410101 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.718751925 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.718405852 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.719433152 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.719619682 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.728684381 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.719161251 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.720400788 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.720479457 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.718948966 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.719292945 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.718233835 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.719446593 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.719369799 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.71934738 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.72068419 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.725845372 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.727012939 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.720992402 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.71878851 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.720085771 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.72000096 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.719545849 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.72077358 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.720433326 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.720902358 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.721321734 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.721196812 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.720232107 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.718806022 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.720076799 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.720311117 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.720151381 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.722299961 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.727759262 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.719701766 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.717701917 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.719712894 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.719239397 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.71896897 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.719860058 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.727811587 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.723496157 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.73174689 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.72916852 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.726102995 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.720643312 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.72405544 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.729005342 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.719494535 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.721225006 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.721593401 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.721341518 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.721976565 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.724385553 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.721857884 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.726796927 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.720965085 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.720575441 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.728114458 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.722286387 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.721642234 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.723229133 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.724830132 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.72192441 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.718676263 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.721758406 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.720587154 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.728243385 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.722458658 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.722599557 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.723416168 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.720499606 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.722891556 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.727647324 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.722157262 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.723263776 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.719988018 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.72182657 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.722013218 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.725369966 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.71904804 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.721680765 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.722896281 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.726433474 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.729417097 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.720199213 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.723556847 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.723343495 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.72243108 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.724270438 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.722676904 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.720695302 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.719574441 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.722823086 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.72246295 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.723189648 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.725493941 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.722693511 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.725084099 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.725052095 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.724859467 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.726291822 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.73404577 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.730768587 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.720003464 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.721639984 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.723381499 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.725176084 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.724214103 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.724120816 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.723688561 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.724404376 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.723129998 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.724248351 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.723351306 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.726709979 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.740011453 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.724220162 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.72353535 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.724554504 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.726893778 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.724275623 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.720711683 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.723938221 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.72540896 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.726114849 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.732287254 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.725828911 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.730933227 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.723802534 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.725038668 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.729455814 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.728113759 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.732706679 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.727496905 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.726143165 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.724604144 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.729110744 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.740613746 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.725965526 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.734603224 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.75551985 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.72660044 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.725934989 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.726101874 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.724126574 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.727190398 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.726536719 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.727423987 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.725731764 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.725563132 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.726562765 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.725882124 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.732012697 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.725972133 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.725697568 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.725985772 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.725296914 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.72685613 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.722015707 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.726538984 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.72555283 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.726574671 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.727461939 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.726886736 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.725656907 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.737984965 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.736429078 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.726168504 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.727560482 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.723498418 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.728867571 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.729305835 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.737433089 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.735513553 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.727861583 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.727114644 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.727058998 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.727422385 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.723786994 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.726914418 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.725787734 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.725906757 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.724452715 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.739407069 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.737085016 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.731772999 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.726455244 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.728182429 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.727030854 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.727737499 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.728476514 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.728452987 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.728104434 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.727549454 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.733025761 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.727289841 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.727974985 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.731246078 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.736393323 seconds)
  done (took 1024.23674232 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.725995263 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.72545675 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.725895479 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.72457391 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.725218986 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.726323251 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.726163581 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.725593454 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.725391805 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.725853836 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.725546865 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.725227393 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.72657756 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.726170181 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.726501082 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.726331516 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.726314276 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.726154611 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.725459605 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.726298428 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.726214555 seconds)
  done (took 37.893482719 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.729216404 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.725950629 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.726656852 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.728351582 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.726915743 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.728665136 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.726533846 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.728626953 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.728637551 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.726768316 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.728866804 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.729625055 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.726562435 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.726586972 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.727334805 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.729624223 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.730605381 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.727261804 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.72882262 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.726901935 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.72970035 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.72708856 seconds)
  done (took 39.666498038 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.731816201 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.731887206 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.728616827 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.727310543 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.73033954 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.726525246 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.731183605 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.729993733 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.73014158 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.731352849 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.729391892 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.730251709 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.739457577 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.737372294 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.73264759 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.730718837 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.875216247 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.731615972 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.732054847 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.73214273 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.72892592 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.736124656 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.728262139 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.728783729 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.730383894 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.732768782 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.731988852 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.730866453 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.732298927 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.733254455 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.73721971 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.731687893 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.730685985 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.732683557 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.731262257 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.732640107 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.736322723 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.733258819 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.729351969 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.731751304 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.741414844 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.754098118 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.733557102 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.737137632 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.731705656 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.7315703 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.735883439 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.741710234 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.730410309 seconds)
  done (took 86.702329888 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.73239323 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.732745144 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.729616662 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.731404153 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.732076198 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.731989591 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.732229928 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.732924059 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.729477689 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.729946201 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.733600333 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.729639102 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.73000079 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.733387781 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.732991606 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.728940321 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.72931518 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.729678524 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.728593533 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.730279035 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.729685551 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.732395272 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.732192178 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.729358975 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.731851671 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.731197829 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.72916286 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.731200434 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.7296933 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.729456355 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.732718771 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.732102787 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.731848462 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.729706412 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.728815173 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.731815577 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.733237354 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.729791154 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.73228805 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.730433845 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.732065312 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.732455489 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.733217977 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.730384085 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.727701445 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.727452145 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.727674274 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.727745782 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.72877506 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.730837563 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.730458502 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.729097213 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.731252422 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.728204403 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.731731262 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.730897552 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.72844353 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.728235006 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.731093373 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.728059487 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.730723595 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.730998504 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.727390156 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.731195397 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.731745578 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.729159332 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.728768478 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.731348387 seconds)
  done (took 119.33282292 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.731424943 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.732229718 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.733174404 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.728649921 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.728525994 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.729218519 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.727982049 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.729312876 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.729953054 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.727733865 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.727342497 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.726526146 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.728167348 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.7270798 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.728697382 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.727682002 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.727226699 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.726753975 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.727342797 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.728512097 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.728076311 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.727593178 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.726705946 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.727779817 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.727033905 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.727867102 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.728408983 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.727873257 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.72829891 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.727310816 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.72775639 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.727657334 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.727366306 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.728095454 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.727769914 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.728481367 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.727383112 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.728736271 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.727810494 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.727599364 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.727721326 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.728235471 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.727824874 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.727944671 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.728721512 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.728622035 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.727957555 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.728006864 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.727136742 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.728832499 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.728194986 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.728470581 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.728438161 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.728872799 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.731054003 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.726289834 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.727376115 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.728090985 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.728028392 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.728133968 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.729315331 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.727234596 seconds)
  done (took 108.804520557 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.72618045 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.727146849 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.724938993 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.72435212 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.727096747 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.7258495 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.727221819 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.72651971 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.729755188 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.727567233 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.727663529 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.724463603 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.724834426 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.72713864 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.725478939 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.726576693 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.725380171 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.724461935 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.726565513 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.725354951 seconds)
  done (took 36.174004811 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.724002437 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.727396567 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.724267672 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.724598021 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.727019093 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.725151519 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.726388901 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.727069457 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.72444068 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.726663115 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.727001099 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.727612925 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.724536354 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.724910979 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.726370897 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.724265428 seconds)
  done (took 29.262238928 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.725485782 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.727278037 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.728882716 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.727839271 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.724206529 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.724452404 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.72765741 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.723967612 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.7238068 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.726845502 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.725104993 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.727997453 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.722208982 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.723135653 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.719090703 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.723263436 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.719689188 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.719724194 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.721840542 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.723768987 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.719287679 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.71944186 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.72147087 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.721967326 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.719419311 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.719096767 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.719566227 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.718790857 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.719580384 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.721003201 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.718963085 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.718677331 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.718255185 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.718106218 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.723423154 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.720244312 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.7205746 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.722134055 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.721059907 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.721537268 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.721697827 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.72016104 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.721411988 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.722660667 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.71988461 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.720551885 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.719995283 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.718836725 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.717830757 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.718879704 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.721872593 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.722838047 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.721842241 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.721782482 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.721956526 seconds)
  done (took 96.351527651 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.721222389 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.721432393 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.718843826 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.721268894 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.721352342 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.719179086 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.722023054 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.719350074 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.719174051 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.721239578 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.720078991 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.721366003 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.719175719 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.721223575 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.719110678 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.721824526 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.719069376 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.719843547 seconds)
  done (took 32.611364966 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.720109666 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.720305661 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.722080564 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.720027808 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.719448486 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.721821994 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.720773088 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.721814206 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.721537073 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.719859335 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.719904229 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.722329295 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.722603182 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.721354446 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.718143212 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.71918031 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.720321797 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.72202121 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.719637122 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.717232669 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.720022893 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.720750887 seconds)
  done (took 39.495942524 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.719711002 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.719124516 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.735070895 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.741414529 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.740611909 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.754442531 seconds)
  done (took 12.052612461 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.714897409 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.717391723 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.715286776 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.718593299 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.718020622 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.716360605 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.714306287 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.714886645 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.716696477 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.715721089 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.715316375 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.716604559 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.716332698 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.714548115 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.716243288 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.7159462 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.714083851 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.714556075 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.711889392 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.714560202 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.713102719 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.715543074 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.71292989 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.712740344 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.712063329 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711818193 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.714354999 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.712161659 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.71170814 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.715313687 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.713104023 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.712169843 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.713780758 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.711921264 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.715286025 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.714732576 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.712928458 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.714336408 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.714203433 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711921949 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.714985098 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.713820195 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.714206964 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.712261663 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.713803117 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.711046297 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.712338411 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710909005 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711748032 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.713733691 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.714013836 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.711205591 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.71468301 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.715357825 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.714569824 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.714205812 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711368685 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710806663 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.714811724 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.710725659 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.710256184 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.712906955 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.71020974 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.71095975 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.714027369 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.711183331 seconds)
  done (took 114.752360201 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.710580232 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.710938246 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.71166037 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.712620112 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.710263011 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.70979812 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710685189 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.709845599 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.711512576 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.711045944 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.713865547 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710126305 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.711259077 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710211918 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.710626184 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.709301058 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.709626216 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.708947298 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.709537019 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.712548255 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.71149464 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.7101285 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.709980565 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.709504306 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710405906 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.712241827 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.711498295 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.709161027 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.709735867 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.709656599 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.709951595 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.709356864 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.71041764 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.709221286 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.70925408 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.708854651 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.709827044 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.709229945 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.71005402 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.710859515 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.709150274 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.7127862 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.709182934 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.70930434 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.70971923 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.709169275 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.708962758 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.710011751 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.708896883 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.709620644 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.708548216 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.70892114 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.709027633 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.709582615 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708583779 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.709134551 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.708601021 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.709061386 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708466888 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.711639368 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.708192925 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708361185 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.711092195 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.708777148 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.708211045 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.708781227 seconds)
  done (took 114.494221472 seconds)
done (took 2378.470721104 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.744771987 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.701686651 seconds)
  done (took 15.080261276 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.871754818 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.823486896 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.70950892 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.71314142 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.707999955 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.731129204 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.728371776 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.708809473 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.709161162 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.709259307 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.710162635 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.89326121 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.757047613 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.709708788 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.70777956 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.801521731 seconds)
  done (took 49.628483914 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.711314043 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.712339546 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.724022563 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.713886709 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.71033833 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.723218618 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.744254224 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.714705914 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.746034453 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.72311445 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.782859768 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.724361514 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.712678345 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.762561174 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.728988309 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.728072282 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.807515832 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.789692577 seconds)
  done (took 32.892288993 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.791328209 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.717447014 seconds)
  done (took 10.151173327 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.716589415 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.719660254 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.725575049 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.727820618 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.71245336 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.729089709 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.730048152 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.731330725 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.743011028 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.724203911 seconds)
  done (took 68.894081228 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.714193717 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.710374105 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.710299969 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.707451399 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.702044015 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.706477606 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.70742013 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.704492711 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.367873025 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.74509757 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.715485753 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.713656114 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.709674226 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.70898025 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.706833742 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.733456047 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.810338848 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.705950985 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.706054756 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.714445556 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.707944999 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.767531854 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.721602411 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.709532508 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.736971801 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.368855827 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.719434284 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.715442383 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.832393414 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.70805886 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.709581805 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.709652737 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.712607164 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.090697029 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.980121651 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.710654143 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.724006673 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.716575554 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.708522204 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.821255126 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.710747612 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.717217825 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.45732754 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.963583312 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.804882326 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.750891599 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.033208232 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.725900113 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.712853557 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.739068981 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.712676951 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.71060444 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.723136282 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.185389047 seconds)
  done (took 123.455675143 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.706413887 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.056909908 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.876666982 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.707072648 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.994063943 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.916047463 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.70709745 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.758589785 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.707739372 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.942260132 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.962187828 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.814126847 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.707324325 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.706093675 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.708469669 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.705897892 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.86228076 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.779788587 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.707934958 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.704979347 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.736274302 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.949984505 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.831412206 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.708438502 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.735291123 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.919427331 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.829567185 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.811902746 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.509291134 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.705731573 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.77396678 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.708273481 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.707231971 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.705097068 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.865570517 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.823055337 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.791869135 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.708735496 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.705570049 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.706743159 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.458623886 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.909093739 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.804938411 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.840017398 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.960874808 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.913676322 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.491713394 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.705678112 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.44459685 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.872777925 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.937800109 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.9432547 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.829103491 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.709466518 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.983330988 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.706904546 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.706201799 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.958989395 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.930373488 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.806293312 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.71185409 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.708545214 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.706303434 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.00076878 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.709137481 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.804823579 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.709428632 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.710659508 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.805343356 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.808510621 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.939719943 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.923831358 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.740381255 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.052395838 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.220992677 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.95723502 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.776199566 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.962697585 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.709577505 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.706912358 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.790432691 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.554982954 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.963758379 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.991958352 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.956205368 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.745587337 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.435733697 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.707731236 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.936789818 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.931558992 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.970154505 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.960410576 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.946067028 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.033288599 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.707322598 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.70837865 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.008040512 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.83559064 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.711325509 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.059951213 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.941554388 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.239850707 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.738568679 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.016393166 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.842299213 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.710852257 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.35204745 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.709248674 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.941452306 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.751414852 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.709937199 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.709637725 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.932465611 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.703187037 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.707934667 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.608870768 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.773120318 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.712971853 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.945817351 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.712533188 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.980621092 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.7123258 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.944448602 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.708572327 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.74616669 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.884434989 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.959307589 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.712916379 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.951346959 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.955011694 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.827155248 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.984381218 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.621296274 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.711376598 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.998054646 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.711657151 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.709881917 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.8836111 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.711207833 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.855444847 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.714823643 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.005672012 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.733945735 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.944198834 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.713388697 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.972261998 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.746302764 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.763218397 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.714269506 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.834854062 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.711439933 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.53933247 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.87083556 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.712847544 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.709436786 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.280381574 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 7.123594844 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.862171577 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.938727155 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.734854622 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.7863905 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.386684101 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.711939244 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.797757349 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.738197465 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.100811687 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.711002058 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.965481549 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.714530579 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.71088065 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.711872774 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.001202949 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.950692925 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.714923594 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.711084893 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.621982498 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.71236027 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.71127113 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.89556956 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.095364475 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.710817173 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.916951382 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.716531715 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.841985726 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.716037538 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.79313739 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.047451926 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.712103334 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.712767073 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.712481051 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.712213621 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.71179449 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.923306364 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.741454709 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.209438563 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.852162723 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.987576176 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.025616782 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.956370525 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.758699166 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.717812153 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.975877193 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.71536934 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.778712841 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.715400879 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.735305363 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.943422696 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.716948912 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.006070388 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.986324694 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.72094365 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.762934858 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.717227574 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.712270908 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.715324259 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.860727089 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.802978963 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.716467241 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.714152225 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.830757176 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.836765557 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.924285428 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.715558442 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.7528887 seconds)
  done (took 869.984198747 seconds)
done (took 1171.719075572 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.712932355 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.715277006 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.705208193 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.715196425 seconds)
  done (took 28.49156382 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.726240991 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.71868678 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.722219214 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.719004421 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.721310767 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.720696115 seconds)
  done (took 11.971186941 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.743563228 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.715158272 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.716619732 seconds)
  done (took 20.818308728 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.786563406 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.100957437 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.819925453 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.144721057 seconds)
  done (took 9.495439406 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.722081364 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.72259757 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.722189802 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.724770603 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.72760186 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.728392034 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.722842781 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.72273693 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.729685532 seconds)
  done (took 17.167630038 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.827733406 seconds)
done (took 93.414720493 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.746999572 seconds)
    (2/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.738617191 seconds)
    (3/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.885300631 seconds)
    (4/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.637065902 seconds)
    (5/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.238765718 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.797729087 seconds)
    (7/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.731354224 seconds)
    (8/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.951323977 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.828664581 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.111076398 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.866854646 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.078613509 seconds)
    (13/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.959613139 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.841394959 seconds)
    (15/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.909606178 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.080579035 seconds)
    (17/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.747240304 seconds)
    (18/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.755654032 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.949011318 seconds)
    (20/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.709893899 seconds)
    (21/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.489554528 seconds)
    (22/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.150006589 seconds)
    (23/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.752846854 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.715579004 seconds)
    (25/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.795026768 seconds)
    (26/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.902587895 seconds)
    (27/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.825292829 seconds)
    (28/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.792711058 seconds)
    (29/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.09296991 seconds)
    (30/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.135248625 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.439541972 seconds)
    (32/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.908132811 seconds)
    (33/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.724961073 seconds)
    (34/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.946182347 seconds)
    (35/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.749954205 seconds)
    (36/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.054499598 seconds)
    (37/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.744267383 seconds)
    (38/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.809119259 seconds)
    (39/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.711331661 seconds)
    (40/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.332386239 seconds)
    (41/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.72758969 seconds)
    (42/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.798676818 seconds)
    (43/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.974461309 seconds)
    (44/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.824672226 seconds)
    (45/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.197492134 seconds)
    (46/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.750011086 seconds)
    (47/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.151638474 seconds)
    (48/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.226824351 seconds)
    (49/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.734236058 seconds)
    (50/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.730246219 seconds)
    (51/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.332501105 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.510791612 seconds)
    (53/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.741804228 seconds)
    (54/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.829906262 seconds)
    (55/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.725028194 seconds)
    (56/309) benchmarking ("map", identity, Bool, true)...
    done (took 3.185316292 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.907663449 seconds)
    (58/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.125236236 seconds)
    (59/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.72865176 seconds)
    (60/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.129395914 seconds)
    (61/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.395376303 seconds)
    (62/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.208893363 seconds)
    (63/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.760889219 seconds)
    (64/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.009837241 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.660653309 seconds)
    (66/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.918871523 seconds)
    (67/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.753663124 seconds)
    (68/309) benchmarking ("sort", Bool, false)...
    done (took 1.946862127 seconds)
    (69/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.731632289 seconds)
    (70/309) benchmarking ("map", abs, Bool, true)...
    done (took 3.464348539 seconds)
    (71/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.034974658 seconds)
    (72/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.87069557 seconds)
    (73/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.818581252 seconds)
    (74/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.832003984 seconds)
    (75/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.966321882 seconds)
    (76/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.731189214 seconds)
    (77/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.899037944 seconds)
    (78/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.715671954 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 5.484274403 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.730970852 seconds)
    (81/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 3.441462102 seconds)
    (82/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.984017583 seconds)
    (83/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.751513447 seconds)
    (84/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.726528767 seconds)
    (85/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.88869282 seconds)
    (86/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.751856551 seconds)
    (87/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.036160777 seconds)
    (88/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.737280006 seconds)
    (89/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.907535427 seconds)
    (90/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.741404514 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.765027202 seconds)
    (92/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.862691267 seconds)
    (93/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.916077031 seconds)
    (94/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.759569905 seconds)
    (95/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.88452595 seconds)
    (96/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.745575231 seconds)
    (97/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.856797954 seconds)
    (98/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.827616816 seconds)
    (99/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.264116006 seconds)
    (100/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.005179267 seconds)
    (101/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.985624773 seconds)
    (102/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.735014222 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.842649377 seconds)
    (104/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.800904143 seconds)
    (105/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.82306779 seconds)
    (106/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.745612111 seconds)
    (107/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.825833348 seconds)
    (108/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.830547922 seconds)
    (109/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.719307637 seconds)
    (110/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.530704395 seconds)
    (111/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.728871361 seconds)
    (112/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.843815916 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.993241465 seconds)
    (114/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.621006675 seconds)
    (115/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.799261709 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.658851867 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.069050828 seconds)
    (118/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.752452471 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.729879566 seconds)
    (120/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.868107055 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.03157116 seconds)
    (122/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.735676345 seconds)
    (123/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.717179451 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.924981792 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.848828414 seconds)
    (126/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.999757004 seconds)
    (127/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.74289007 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.862866883 seconds)
    (129/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.949746763 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.842625112 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.640585569 seconds)
    (132/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.763557276 seconds)
    (133/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.957599334 seconds)
    (134/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.057367066 seconds)
    (135/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.85956371 seconds)
    (136/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.756321113 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.533686362 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.002424004 seconds)
    (139/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.760695775 seconds)
    (140/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.184801771 seconds)
    (141/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.674564725 seconds)
    (142/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.88014707 seconds)
    (143/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.743843328 seconds)
    (144/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.84090995 seconds)
    (145/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.771132568 seconds)
    (146/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.730928944 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.665178822 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.063015756 seconds)
    (149/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.984094289 seconds)
    (150/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.725979322 seconds)
    (151/309) benchmarking ("perf_countequals", "Int64")...
    done (took 3.198894212 seconds)
    (152/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.76369674 seconds)
    (153/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.580476334 seconds)
    (154/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.229874253 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.13396309 seconds)
    (156/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.771499623 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.907960593 seconds)
    (158/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.990913584 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.824928382 seconds)
    (160/309) benchmarking ("sort", BigInt, false)...
    done (took 6.736998313 seconds)
    (161/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.059349065 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.672491784 seconds)
    (163/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.768282871 seconds)
    (164/309) benchmarking ("sort", Int8, false)...
    done (took 4.639029965 seconds)
    (165/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.761531468 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.931241894 seconds)
    (167/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.722528309 seconds)
    (168/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.593225351 seconds)
    (169/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.732406735 seconds)
    (170/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 3.677464186 seconds)
    (171/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.107095677 seconds)
    (172/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.116986586 seconds)
    (173/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.89703738 seconds)
    (174/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.843809756 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.048474615 seconds)
    (176/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.756664132 seconds)
    (177/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.814534148 seconds)
    (178/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.88809699 seconds)
    (179/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.724787776 seconds)
    (180/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.955021712 seconds)
    (181/309) benchmarking ("sort", Float64, false)...
    done (took 5.486169108 seconds)
    (182/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.23660818 seconds)
    (183/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.825974111 seconds)
    (184/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.806560781 seconds)
    (185/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.719265055 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.803830559 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.918290408 seconds)
    (188/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.02660423 seconds)
    (189/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.736941758 seconds)
    (190/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.008864099 seconds)
    (191/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.960115483 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.144607264 seconds)
    (193/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.724766911 seconds)
    (194/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.142398925 seconds)
    (195/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.968303488 seconds)
    (196/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.072409968 seconds)
    (197/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.811382802 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.864852123 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.885932143 seconds)
    (200/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.904873992 seconds)
    (201/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.764282873 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.355032957 seconds)
    (203/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.724612062 seconds)
    (204/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.825957237 seconds)
    (205/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.876211929 seconds)
    (206/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.974058964 seconds)
    (207/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.744342812 seconds)
    (208/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.912823799 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.144262805 seconds)
    (210/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.14237769 seconds)
    (211/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.740750298 seconds)
    (212/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.961127127 seconds)
    (213/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.775227039 seconds)
    (214/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.866005823 seconds)
    (215/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.217192592 seconds)
    (216/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.611396798 seconds)
    (217/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.747550115 seconds)
    (218/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.123540194 seconds)
    (219/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.830537114 seconds)
    (220/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.926985142 seconds)
    (221/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.985237107 seconds)
    (222/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.765126245 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.05641643 seconds)
    (224/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.845518314 seconds)
    (225/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.764800056 seconds)
    (226/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.829314695 seconds)
    (227/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.972073897 seconds)
    (228/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.02397566 seconds)
    (229/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.727012162 seconds)
    (230/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.871428212 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.73333015 seconds)
    (232/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.844522256 seconds)
    (233/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.480396145 seconds)
    (234/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.941145896 seconds)
    (235/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.298374156 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.740808845 seconds)
    (237/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.741473115 seconds)
    (238/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.805432794 seconds)
    (239/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.124154523 seconds)
    (240/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.821818263 seconds)
    (241/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.760719614 seconds)
    (242/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.592727122 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.739175303 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.739989491 seconds)
    (245/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.817711653 seconds)
    (246/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.843804572 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.087455272 seconds)
    (248/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.138104148 seconds)
    (249/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.993964735 seconds)
    (250/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.748004595 seconds)
    (251/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.201961794 seconds)
    (252/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.771976448 seconds)
    (253/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.873691337 seconds)
    (254/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.736042033 seconds)
    (255/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.579856186 seconds)
    (256/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.729437225 seconds)
    (257/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 3.253144823 seconds)
    (258/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.764067356 seconds)
    (259/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.742525678 seconds)
    (260/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.84557853 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.721810794 seconds)
    (262/309) benchmarking ("sort", Float32, false)...
    done (took 6.489700113 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.056246018 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.702349348 seconds)
    (265/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.650385708 seconds)
    (266/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.842120506 seconds)
    (267/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.920735362 seconds)
    (268/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.746666328 seconds)
    (269/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.948451048 seconds)
    (270/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.02178378 seconds)
    (271/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.855491262 seconds)
    (272/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.914438339 seconds)
    (273/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.897827952 seconds)
    (274/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.995240894 seconds)
    (275/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.741836282 seconds)
    (276/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.818076279 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.933177224 seconds)
    (278/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.737331111 seconds)
    (279/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 3.249256906 seconds)
    (280/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.931529471 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.980777539 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.744669983 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.433332896 seconds)
    (284/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.77027166 seconds)
    (285/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.042020829 seconds)
    (286/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.442663823 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.418143289 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.382990713 seconds)
    (289/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.939877493 seconds)
    (290/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.646820882 seconds)
    (291/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.116253092 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.772735491 seconds)
    (293/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.823034228 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.416612352 seconds)
    (295/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.833513931 seconds)
    (296/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.892410328 seconds)
    (297/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.047026439 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.509595114 seconds)
    (299/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.186654667 seconds)
    (300/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.813678666 seconds)
    (301/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.120896732 seconds)
    (302/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.881719275 seconds)
    (303/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.312282823 seconds)
    (304/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.801928735 seconds)
    (305/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.84224365 seconds)
    (306/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.252615844 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.097315332 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.964419545 seconds)
    (309/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.771507053 seconds)
  done (took 965.516409331 seconds)
done (took 967.45163539 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.775428063 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.769513639 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.753070751 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.773801135 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.865008245 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.78078806 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.763931939 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.753926783 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.800743436 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.802618778 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.750693853 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.778997139 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.754489359 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.754690657 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.753000361 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.768064864 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.067064985 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.786747861 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.770365298 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.762835357 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.770036007 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.75041475 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.803965564 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.780387446 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.756420301 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.7559108 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.756478272 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.773001714 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.866973663 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.756909539 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.756617786 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.764931048 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.066105013 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.784905339 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.748828337 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.773816506 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.765465572 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.76371872 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.759102574 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.785898674 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.152705677 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.797678657 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.757284562 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.755129546 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.755138481 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.758754147 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.757524711 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.762199888 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.768437591 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.769170314 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.145280701 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.815186823 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.757427938 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.756286166 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.766385035 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.755957221 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.759509119 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.770639264 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.774935339 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.772540572 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.049807686 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.791614612 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.757284338 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.773073517 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.762342729 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.182046865 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.795858257 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.760274232 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.154444422 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.805166094 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.181244128 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.809111833 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.758647545 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.770168687 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.788893968 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.06854292 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.784519428 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.756150123 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.7639939 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.754629624 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.767059773 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.768905551 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.762706079 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.757698794 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.77073944 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.783809859 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.767222879 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.759163162 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.766695544 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.77662907 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.763971756 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.767349735 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.760787825 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.753081116 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.766056508 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.760428165 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.759328066 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.759813251 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.763497426 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.76735935 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.152543128 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.816709182 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.754466661 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.754862867 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.757305044 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.770716474 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.153842812 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.801020534 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.780104165 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.806226347 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.760731501 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.05101449 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.791774208 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.775582408 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.767956558 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.762075981 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.754170991 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.051845871 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.180268872 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.817331217 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.761830224 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.755556102 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.774840969 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.761531806 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.756311721 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.07108651 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.793702655 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.774606196 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.882724208 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.771665667 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.791657193 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.758136624 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.76342496 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.790393467 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.775169293 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.791205163 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.76285059 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.775591785 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.777331147 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.757020087 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.771728324 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.771634013 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.761610525 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.764244977 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.755221449 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.790126064 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.773225509 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.772649414 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.78186375 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.881758556 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.757819556 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.054440375 seconds)
done (took 276.619912032 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.831859512 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.757667854 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.868902759 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.755374141 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.840986613 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.841698045 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.752982652 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.753954815 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.753687705 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.132437801 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.75359474 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.754156964 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.752099173 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.753574301 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.840804803 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.756466468 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.754526021 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.115959317 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.757492556 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.831457874 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.756190165 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.75425212 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.757987664 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.132811564 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.751662472 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.755803464 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.828523428 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.757429847 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.098015187 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.752825953 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.753445355 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.09759754 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.84793533 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.775504773 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.7666889 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.765006668 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.840853914 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.762287519 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.837504089 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.83988437 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.858939376 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.798426567 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.751110216 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.760175024 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.761686456 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.759729205 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.755567033 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.78502218 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.757920958 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.756374098 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.096040139 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.767618069 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.757095641 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.75562351 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.756817704 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.790817722 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.756081695 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.759513905 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.852512079 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.759985509 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.821135619 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.134505512 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.134455118 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.759211955 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.752492367 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.756327755 seconds)
  done (took 176.824534445 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.824648874 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.837150001 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.825691128 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.762713076 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.809010733 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.82620057 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.763515419 seconds)
  done (took 14.327113183 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.764091137 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.75972337 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.81019976 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.81128168 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.761669597 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.912052981 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.758740836 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.769811041 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.756921041 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.810634484 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.760190265 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.761044817 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.766231049 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.752662878 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.809748674 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.77083137 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.875462434 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.760944204 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.762042946 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.911320368 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.757939021 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.767101695 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.793239439 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.771201236 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.761515065 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.766044382 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.323955539 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.761598186 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.757700305 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.760441811 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.757361614 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.80017632 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.760628585 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.755521848 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.75753974 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.873360882 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.76246043 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.758047815 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.762398992 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.75535249 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.76161015 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.760396802 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.760853207 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.758479943 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.760152309 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.784086166 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.762188419 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.761422574 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.761208092 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.761091918 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.795097235 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.762430849 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.759435592 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.760099567 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.814756488 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.769320282 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.762736068 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.758465316 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.762163767 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.758661919 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.912388074 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.811871962 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.761600344 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.813198282 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.762593836 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.76234222 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.760787766 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.762255604 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.85746889 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.762362094 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.811618616 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.759243031 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.920684042 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.784140494 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.763888574 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.764460376 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.764852702 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.763930936 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.759771085 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.768790281 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.76005583 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.763969485 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.768796892 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.761095896 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.761042647 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.875220937 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.867060104 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.760850788 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.776415162 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.771632074 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.761519684 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.797766773 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.763917718 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.760230651 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.819237351 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.879588771 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.816305009 seconds)
  done (took 195.117633065 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.767332013 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.770862162 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.763721587 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.778706988 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.763493675 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.762650633 seconds)
  done (took 12.289077802 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.7658092 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.765215813 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.763585455 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.763215539 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.76546047 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.765523667 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.766252783 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.764423323 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.768941394 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.764090196 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.765583155 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.76850759 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.76603611 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.765440529 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.766046193 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.764235527 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.766746778 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.761059126 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.765406349 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.765838642 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.927342436 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.765882571 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.767130887 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.765047354 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.770073189 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.763449933 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.773704527 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.764290436 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.765072633 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.774294372 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.770873719 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.766528391 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.76621788 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.771223083 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.771341764 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.766767702 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.769848087 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.767397489 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.762854121 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.76651791 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.769217004 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.767021316 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.765052994 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.768884353 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.767548958 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.771669248 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.771872147 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.774355278 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.766704022 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.769659637 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.76873302 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.766114737 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.767052034 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.769012699 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.767999432 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.77197375 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.773710555 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.768260946 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.76705372 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.766814729 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.767597944 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.767401301 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.768240044 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.7724031 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.764184702 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.770562466 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.767768921 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.771751077 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.76810267 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.766523872 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.769464523 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.763595266 seconds)
  done (took 130.104998538 seconds)
done (took 530.355009048 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.902168316 seconds)
  done (took 8.587801661 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.805904471 seconds)
  done (took 8.534031574 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.259410969 seconds)
  done (took 9.94765425 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.772168411 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.805582563 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.771413252 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.768753418 seconds)
  done (took 28.829545439 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.868261273 seconds)
  done (took 8.555162998 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.786924304 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.76112881 seconds)
  done (took 15.271824844 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.849275469 seconds)
  done (took 8.538407158 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.853264833 seconds)
  done (took 8.566868974 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.791293453 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.802634743 seconds)
  done (took 15.297720551 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.748347817 seconds)
  done (took 8.436554012 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.474664364 seconds)
  done (took 11.256970617 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.775740823 seconds)
  done (took 8.570824032 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.841933225 seconds)
  done (took 8.531470742 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.84541315 seconds)
  done (took 8.532901443 seconds)
done (took 159.141677961 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.767025191 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.763960705 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.761695613 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.764323079 seconds)
  done (took 28.744747103 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.801326481 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.80179455 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.804110305 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.813132966 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.806261293 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.801539523 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.795041169 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.794632399 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.812887712 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.804707766 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.803699981 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.804767183 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.802578425 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.79536062 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.804528567 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.805423599 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.81281458 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.805372102 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.794528259 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.80542738 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.770347805 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.813514199 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.805968681 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.771619778 seconds)
  done (took 44.919563815 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.96433648 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.839460032 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.923686356 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.821437872 seconds)
  done (took 9.237816011 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.821170505 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.823127976 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.8369137 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.873698685 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.89893362 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.831047573 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.796481816 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.79161791 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.777140507 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.824094801 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.899286323 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.817622773 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.916476186 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.771079007 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.953772712 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.770925354 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.770130469 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.822469613 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.874464713 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.89140055 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.773240071 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.822953464 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.826791461 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.8182546 seconds)
  done (took 45.693232578 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.769725122 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.777206186 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.776431944 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.769691254 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.773339805 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.769839857 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.777989555 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.772047861 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.791065269 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.771089562 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.769841256 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.77126519 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.770284002 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.770891527 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.771318117 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.783296489 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.784027679 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.772237379 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.77445812 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.777535309 seconds)
  done (took 37.184895364 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.767142674 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.618325972 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.117189678 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.023316582 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.766757624 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.769989234 seconds)
  done (took 30.752942696 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.784815939 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.777519423 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.772650761 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.829660723 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.913988919 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.780391803 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.771348238 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.784931021 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.819903291 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.839069355 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.792993571 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.801049875 seconds)
  done (took 23.361034029 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.769891696 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.770004286 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.770335654 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.787871737 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.783631302 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.780478471 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.778687057 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.766961939 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.787794572 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.791225687 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.780968539 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.786740948 seconds)
  done (took 43.050381477 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.857784816 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.660751146 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.429696811 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.582937943 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.305212933 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.981158329 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.409655117 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.948493104 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.774429258 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.0409909 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.373373176 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020132024 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.0231988 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.768353597 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.842842471 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.234939359 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.072914288 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007572796 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.801681431 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.479377911 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89539828 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.315895779 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.567755693 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.902852219 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.979107874 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.899913148 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.028568389 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.732080019 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906321758 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.807505925 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.778400622 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.769316022 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.043983627 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988262955 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859538753 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.779640456 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.427758578 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.487571048 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.759161292 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.484035865 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.495265128 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.913420628 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777067903 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.770136772 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.705351748 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.309847355 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.963191149 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.774073554 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.471673814 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.77042884 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.779997181 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855823512 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.772895201 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.588324281 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.721474175 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.049047866 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.76810844 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776689536 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.332750452 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.877482335 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.421950672 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.709909048 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.862211013 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.534579366 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.257459355 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.926838546 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.7750575 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.77303399 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.703140716 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.537774804 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.906400876 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.914036531 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.790004334 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.418945784 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074990111 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.460387753 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.860882586 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073731034 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.584091665 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.712410197 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997401897 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.719153972 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.706390825 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.633655885 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.70432099 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.046605779 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81070405 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.436669193 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.816861313 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.951041617 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.782031039 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792250712 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.778668233 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.993937031 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.65592503 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.772871618 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.351263229 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.066176558 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793206864 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.953664129 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.704873187 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.776184593 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026428227 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.983454757 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.023872704 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.249569967 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.947963714 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.77378423 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.861823396 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.706700826 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.788860094 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.061260178 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.84361768 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.904157727 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912530248 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.729187237 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096867115 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.806707996 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.951213408 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.414894346 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.047564615 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.109103459 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.028916543 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.858511887 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.776108119 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.775424294 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.565636021 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.40349259 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.997712627 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.774349335 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.287922289 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.787375685 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.776295141 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.707432471 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.430747336 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.426658507 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.902191091 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.996029673 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.745821791 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.055224099 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.706673001 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.918141812 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.76435657 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.99640556 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.44741449 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.866392426 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.032553953 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.264379088 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.023936622 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789349631 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793118965 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856434814 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797266729 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.197601297 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.032583313 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.777935314 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.778413144 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.5542386 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.852696824 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.777392997 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.781835047 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.574204754 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073939814 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.809059323 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.78266611 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.667994299 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.790155277 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.860956649 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.780540447 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.785081902 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.30146319 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.631628924 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.787609475 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.422944362 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001445215 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.78657368 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.549970886 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.978969889 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.867997435 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.065296073 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.846404093 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.709284499 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.47910959 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.479880952 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.777415672 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.712556049 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.779609638 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784192379 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.787255658 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.045230908 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.073647982 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.831326213 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.547719917 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.899789732 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.788199928 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.78122007 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.77845793 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.274595572 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.907787958 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40798621 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.789121197 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91544854 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.791390251 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.710817446 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.781473683 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.782714013 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.778098043 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.73169574 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831072735 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.555422722 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120617215 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.036223502 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.425865027 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.797830708 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.522734557 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.918736647 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.800711366 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.372012282 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.763229801 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.918914514 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848558119 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.788678424 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.55438426 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.567244457 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.342511959 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.091426268 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.113728359 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.24333836 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.157790475 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.121286893 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.956694868 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011812154 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.306773742 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.83811971 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.96588716 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.722313664 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.870594644 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.453787668 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.144427212 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.795312548 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00661133 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.181520959 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.440184654 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.952187281 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.989623529 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814872385 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.586928598 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.812277589 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.30262252 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934027344 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.424028104 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.015274291 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.960618563 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.395611288 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.905014228 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.78098287 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.256969853 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86871452 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.489164059 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.140643972 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.318919871 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.432164438 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.169266317 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.788827947 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.224572594 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154661012 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.11586348 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.878295521 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.716664704 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.792562756 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.791365147 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.78113916 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.757359802 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.63304749 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.03286024 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.791495179 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016100619 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.059396922 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.063206723 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.690932144 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.786952271 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.782643379 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088780417 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.466877391 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021088784 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.125334219 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.355755177 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.793723915 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.715073702 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.714466053 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.485254236 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.789775461 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.755648139 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0173642 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.89421939 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.73349016 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.177320058 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097248714 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.035594656 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.796442675 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.07073457 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.066853438 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.515383194 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.811413651 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.883567331 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.364324165 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.548889388 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.00407985 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.015881853 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.584046198 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.014632743 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.427966989 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.766515724 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.782371673 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.997713111 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.00478262 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.430761172 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047854024 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.508136643 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.791278749 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14662889 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849134137 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.458301129 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.011964315 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.87403045 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.793131571 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864704981 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.793264236 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.795030641 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.794066569 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829368768 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.442556085 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.932460799 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.799098209 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875437642 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.936522791 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.373325595 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.794184916 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076833083 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.151735712 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.131077198 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.852659828 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.78527292 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.791458589 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.717323265 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922434555 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.228795187 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.058901618 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.913941277 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.978551932 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810300962 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.380095191 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.082709835 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.099068472 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.059622781 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.680217444 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.787739932 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.877588971 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.009152752 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.796818119 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.995077368 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023732216 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.117787418 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263102483 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.92562713 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.069237908 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.059639385 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.155095833 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.786980367 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.381813667 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.79544069 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.307499491 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.833639362 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.444602309 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088551539 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.796393817 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006614909 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.809038634 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.9876837 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.23842934 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.566714631 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.156029515 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.791308953 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.851217618 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.077150114 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.210090445 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.107643458 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.866748761 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.797524145 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.483100214 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926637738 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.652002848 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.017152029 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.790546344 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998501429 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.499459297 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.796439092 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.087328695 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104285039 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.786516675 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.683455308 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815681731 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.797596499 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.010235209 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.082841171 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.043121409 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.796491776 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.794548841 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.602999498 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084589506 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.855143923 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.721516449 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.791804764 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884270646 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.0352424 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.810124572 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.30533074 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.490960096 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107714903 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.714045213 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.811382202 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.204584035 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.259657301 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147661914 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.31780769 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031395772 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.35089936 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.643893273 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.167315715 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.794823195 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.186323713 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.168481726 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.792989502 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.312224622 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903648215 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.078057855 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.119074597 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.805350325 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.585784043 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.841964303 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.013064193 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.382988705 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.732295289 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.793086446 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.850257955 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.790539167 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.789432929 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.800339322 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.723769568 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.648232081 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.630284719 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.281042245 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.795730837 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.873253722 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.407058587 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.369583685 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898466933 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950317824 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.796123472 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.50070086 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.080367943 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.04465652 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.304717531 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.86395269 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.794501928 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.793248631 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.716354291 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.986301651 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.057199831 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101490141 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.135114919 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.902127939 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.79458012 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.006166629 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001291999 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.456015417 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.964824441 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.177487749 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904901532 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.719943796 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.503314548 seconds)
  done (took 1636.982291463 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.814037078 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.799559538 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.803411283 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.854491466 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.814225261 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.837276761 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.849132562 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.839546744 seconds)
  done (took 56.327761773 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.79261198 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.97129989 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.800870132 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.793242377 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.817291403 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.79353871 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.955190737 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.804719259 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.866742687 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.801004389 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.794811433 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.826811949 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.120619214 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.816478508 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.792941471 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.791833924 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.292739039 seconds)
  done (took 73.569878523 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.795815563 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.812863501 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.818051425 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.818473488 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.814247101 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.800580668 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.899480507 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.851372705 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.801118798 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.974952226 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.137266715 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.803617243 seconds)
  done (took 89.046839608 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.811400744 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.801016025 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.800361718 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.801267017 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.800143942 seconds)
  done (took 10.740488037 seconds)
done (took 2131.317722814 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.036043272 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.978534268 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.020939267 seconds)
  done (took 5.718302014 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.940608107 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.988266175 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.10636263 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.113589417 seconds)
  done (took 9.870414773 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.079918549 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.177337427 seconds)
  done (took 5.973938102 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.123923869 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.833044086 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.174262756 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.794593574 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.799333985 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.799714812 seconds)
  done (took 22.115814874 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.797247027 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.800533164 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.796909884 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.79914741 seconds)
  done (took 8.911609092 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.778025023 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.49160898 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.781447533 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.795948981 seconds)
  done (took 20.563742177 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.94840617 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.913669512 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.939561897 seconds)
  done (took 7.518807286 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.269423915 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.011207184 seconds)
  done (took 8.997109791 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.954640725 seconds)
  done (took 3.672653647 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.82494463 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.068495248 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.30009924 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.322706972 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.402599429 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.687770421 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.137443617 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.032454936 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.25189264 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.265662078 seconds)
  done (took 24.011957865 seconds)
done (took 132.239041831 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.152203198 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.825971293 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.999921702 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.159498482 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.035079497 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.000897779 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.014749586 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.15118839 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.846098783 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.833194814 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.162255383 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.033916522 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.963554835 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.816678458 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.968478286 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.817438229 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.0267699 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.174035167 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.842246981 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.061272343 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.028360305 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.806018509 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.999839372 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.821645945 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.032913781 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.950937481 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.35154899 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.823605178 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.978685888 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.365446119 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.95522478 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.2033471 seconds)
  done (took 165.922915559 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.797544238 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.798314868 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.798065862 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.798485445 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.333002706 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.797456102 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.799622081 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.797790932 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.265924365 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.251255491 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.799259814 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.320133159 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.800639723 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.797320072 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.797462724 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.798508426 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.422755778 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.801533111 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.798781396 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.798313714 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.799331643 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.167376099 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.800195987 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.192779066 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.416908228 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.799949532 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.798551788 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.800431507 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.798457206 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.79780106 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.800494115 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.798014172 seconds)
  done (took 207.264631141 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.727046628 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.800906145 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.799751327 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.799098468 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.800868253 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.799913383 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.798873918 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.799605373 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.416761212 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.408526475 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.800269527 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.801196582 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.801032456 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.798907142 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.799268152 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.799598311 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.799920449 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.758467387 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.800101757 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.800532136 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.804474699 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.394127355 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.801951764 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.400620191 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.800507853 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.799820077 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.801086173 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.800530675 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.799657792 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.800759711 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.801596923 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.801124042 seconds)
  done (took 217.639304988 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.060296442 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.805739897 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.806596047 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.725201249 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.806076927 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.805059724 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.81255064 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.053736964 seconds)
  done (took 18.599894237 seconds)
done (took 611.152698584 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.28590239 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.133097424 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.989227804 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.830885567 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.072855671 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.863288192 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.825568136 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.896068963 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.446541784 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.897515207 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.473957948 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.849389157 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.56063412 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.854231299 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.946968477 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.890495359 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.40338083 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.486468157 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.003522644 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.90678628 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.99879004 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.763500741 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.911131862 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.481806222 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.581036053 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.811120749 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.899791311 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.410396945 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.839276479 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.986938089 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.572073845 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.135698297 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.842694016 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.824735189 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.883915962 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.860542659 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.099622559 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.841151161 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.94945746 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.577341517 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.90189283 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.350398185 seconds)
  done (took 99.864185371 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.79706493 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.795706179 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.795641042 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.794937404 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.795106351 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.795635098 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.797546354 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.794357278 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.796791247 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.794681259 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.795597545 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.795872083 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.796204468 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.795521056 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.795800191 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.795664581 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.795308558 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.797707318 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.795293453 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.795448156 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.796569868 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.796059324 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.810927841 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.795536073 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.796152615 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.810115313 seconds)
  done (took 48.455661102 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.808473184 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.973538423 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.046876339 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.839794478 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.807715887 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.811488001 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.827890571 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.814407034 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.810974339 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.815581058 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.899799986 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.815786229 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.826722997 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.046969139 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.8269936 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.809179891 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.809491738 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.809064263 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.980146076 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.826500358 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.836460703 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.814436927 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.829391174 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.823061455 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.81081612 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.818490086 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.812228742 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.282017596 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.819398327 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.901137499 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.857943478 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.835326676 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.223934737 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.056601403 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.868598584 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.821160098 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.809814255 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.903708129 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.817114371 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.810673371 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.828722683 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.815430399 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.045778343 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.30514081 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.826711536 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.811704959 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.290754544 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.913464344 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.852285689 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.824149541 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.048354709 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.837398766 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.812070169 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.810729445 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.847328893 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.819595145 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.810228971 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.170048072 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.824494809 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.828600799 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.816296659 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.811609352 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.983264752 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.81962332 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.972047406 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.821987139 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.817791961 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.815077296 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.048096183 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.829346805 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.305654792 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.827058828 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.82604985 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.902132818 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.978900714 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.320524919 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.825084226 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.98337076 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.240822482 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.836959657 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.819481665 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.272654212 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.841333296 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.819462747 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.814509243 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.813780428 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.812827066 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.85313013 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.827756232 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.237836154 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.312200789 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.182339538 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.840388584 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.827275708 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.812006573 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.1637573 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.822804261 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.813573631 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.043915276 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.321594812 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.829216549 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.819056602 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.291784737 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.829900187 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.831782523 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.821491217 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.053060561 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.830887323 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.853611744 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.8146956 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.819405044 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.815553406 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.832076254 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.820396027 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.81385428 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.287043943 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.923472546 seconds)
  done (took 225.334368257 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.808859944 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.812143223 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.80970605 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.813312278 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.807895145 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.814327431 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.808027096 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.806492199 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.812839881 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.807490629 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.808171905 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.809066693 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.811573585 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.809599258 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.819858183 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.815699307 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.413748522 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.810677587 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.808855728 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.809796715 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.466671257 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.81864369 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.809886899 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.808149163 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.810981458 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.809493303 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.818611081 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.813042342 seconds)
  done (took 165.708133429 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.815716986 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.930617603 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.834829431 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.841946681 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.825083854 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.813492579 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.839073285 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.832252291 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.821111975 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.813723797 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.813357108 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.876271998 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.830359684 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.913591259 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.848479824 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.847358216 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.920953747 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.825314198 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.81455351 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.813982154 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.844982188 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.811980383 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.876970095 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.944860966 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.835263919 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.932351689 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.821436101 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.8171115 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.816283826 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.933678781 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.832524074 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.877424134 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.84529129 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.834887817 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.937362963 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.933386789 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.92282229 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.847448548 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.823482153 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.815351206 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.815277702 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.804846365 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.933531772 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.837467947 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.81878872 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.920339837 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.836905181 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.818692168 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.827039491 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.815181069 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.83039139 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.835746736 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.885143893 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.950912183 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.852559407 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.842741381 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.841870613 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.114747823 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.827145475 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.91452255 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.811318269 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.935716265 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.838661036 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.805017363 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.817738422 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.824222748 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.846005726 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.849304442 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.921217085 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.826537816 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.915413293 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.854031472 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.82455809 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.817324828 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.820142416 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.933588558 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.93522975 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.85396586 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.855697979 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.850437615 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.813553977 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.819850867 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.808564299 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.835755342 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.821831002 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.935023825 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.935742421 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.828045956 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.820247247 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.819958656 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.821238764 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.844855437 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.945009574 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.855598622 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.911923459 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.888657551 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.894258485 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.834327566 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.831978912 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.822152389 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.883484323 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.83512942 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.831162904 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.166159408 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.890450836 seconds)
  done (took 197.06777103 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.270540807 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.877369609 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.876179746 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.13348224 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.164318451 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.744859689 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.866563812 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.868499934 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.89029063 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.062408488 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.942626645 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.888018845 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.855496827 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.842734262 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.867073161 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.888654394 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.877641858 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.206382283 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.976996055 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.992486676 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.852909378 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.16165616 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.145547147 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.259398009 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.903371248 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.212792502 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.537132537 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.01336102 seconds)
  done (took 59.922950692 seconds)
done (took 798.075775837 seconds)
SAVING RESULT...
DONE!
