cset: moving following pidspec: 28133
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.384866893 seconds)
loading group "string"... done (took 0.579176202 seconds)
loading group "linalg"... done (took 7.225173658 seconds)
loading group "parallel"... done (took 0.16440352 seconds)
loading group "find"... done (took 1.152830496 seconds)
loading group "tuple"... done (took 1.74775112 seconds)
loading group "dates"... done (took 1.234935855 seconds)
loading group "micro"... done (took 0.219453007 seconds)
loading group "io"... done (took 1.020277656 seconds)
loading group "scalar"... done (took 37.906519984 seconds)
loading group "sparse"... done (took 11.820313684 seconds)
loading group "broadcast"... done (took 0.943953178 seconds)
loading group "union"... done (took 12.132376037 seconds)
loading group "simd"... done (took 4.47132477 seconds)
loading group "random"... done (took 9.010969068 seconds)
loading group "problem"... done (took 1.826315742 seconds)
loading group "array"... done (took 20.704513392 seconds)
loading group "misc"... done (took 1.676658542 seconds)
loading group "sort"... done (took 3.310499161 seconds)
loading group "collection"... done (took 17.216355812 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.526850568 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124519726 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.117577488 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119046881 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.14716972 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113068625 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124705878 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085558041 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.784188691 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148005083 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117630048 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.427602247 seconds)
done (took 5.151090937 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177904132 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084068154 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084705907 seconds)
  done (took 1.30611125 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067107219 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.123283588 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068471492 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069544659 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068897379 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067538659 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068102947 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06771118 seconds)
  done (took 1.666785946 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074579188 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.07140426 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067996859 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069286853 seconds)
  done (took 1.419769396 seconds)
done (took 5.785556042 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.782785109 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.205235165 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187051462 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.412793302 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.129967956 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.158124992 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.642572645 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.316094851 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.192223629 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080261023 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108611736 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.327589297 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.110663397 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.642029805 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077630616 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090285048 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137194874 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.415335207 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066964937 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081726597 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089240083 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127673311 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087841812 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073645494 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.144899772 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067017262 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136396458 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080378463 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065952722 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.212484511 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172491073 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660635518 seconds)
  done (took 10.257095243 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098735868 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096776862 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068374122 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122096841 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098771377 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068810319 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070414388 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066683772 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086092521 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127414067 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089191196 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100878783 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065744797 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06817054 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084508526 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203255021 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079418273 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081854999 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070413068 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075689403 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104817215 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077955831 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076595934 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076434767 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128624561 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180353642 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09940811 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099732261 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069232966 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081257521 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115850795 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127166837 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067296354 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067443119 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123751125 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.099909335 seconds)
  done (took 4.592062698 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.998188741 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.143094901 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.08929543 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.134919496 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064104411 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108665014 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065460972 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080541591 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.207632898 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.452384855 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.592746251 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.111559557 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113241975 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.107213808 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069065457 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.07022494 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06865166 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.516378372 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.099562794 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110497462 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084307945 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072654064 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070732935 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.354636325 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068017271 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063892726 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068232654 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.05808942 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064334571 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12648986 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068285348 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.940531647 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125509099 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066106833 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100436724 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.172034308 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090196767 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.274427061 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068466915 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063624322 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.153060104 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069649992 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066723057 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.08329591 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103258319 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112040831 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065429351 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066615975 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.164852295 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064426209 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079666426 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.640506493 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153917424 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078946491 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065675126 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.253740446 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.087662354 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069695449 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064400982 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.176733844 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.067546889 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129536874 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067823687 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066811113 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067969223 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069042702 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.380538059 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068009239 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.031078694 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070210033 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078954705 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068737082 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069283484 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0725295 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072991888 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.08812875 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066519538 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074762257 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065971583 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065789128 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067103697 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083916673 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.379326781 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066464633 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068524894 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064455672 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089264943 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096826284 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068436233 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065754267 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099999142 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064201676 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067687042 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066315113 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106949069 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066176662 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083641358 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069368599 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113660045 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068850094 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.196317503 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068430804 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.09973534 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070655599 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098971097 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083831282 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071073042 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.419388486 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065695182 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065578393 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067935354 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065502345 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067804752 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066338199 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079127997 seconds)
  done (took 21.318952166 seconds)
done (took 38.301664147 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.234392165 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078081353 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073762066 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075546396 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073947984 seconds)
  done (took 1.756872965 seconds)
done (took 2.958431012 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122576235 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100247819 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064046829 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096867878 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064064704 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101657708 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100927399 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081694617 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100218472 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063999489 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097852817 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064140939 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063863575 seconds)
  done (took 2.341276846 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083820341 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083781593 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070711835 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082682079 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063731006 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083538919 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081227296 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088790261 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081104481 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072329168 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063534919 seconds)
  done (took 2.050457438 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084923009 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086025085 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071402916 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083214902 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062839347 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081989141 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082065769 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085950377 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082247432 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073925136 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063889815 seconds)
  done (took 2.054930952 seconds)
done (took 7.634969745 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079582224 seconds)
  done (took 1.264881978 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.590614113 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.083387532 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081384461 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111011069 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.189125387 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118219269 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.272838571 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086088496 seconds)
  done (took 8.904057938 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101823618 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071667217 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069607327 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069641063 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068268519 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068211714 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068216456 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071425699 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072092279 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072004615 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069840077 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069055275 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070436114 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071662436 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071650702 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068338493 seconds)
  done (took 2.414924248 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092150931 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090793044 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073016876 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074772142 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072103598 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072121167 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074401382 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073723096 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070667357 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071997619 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074955369 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07345283 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071845581 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064879465 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073862496 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074903159 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070430157 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07341941 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074643883 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075005616 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074988039 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063949357 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071652908 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074317721 seconds)
  done (took 3.074995528 seconds)
done (took 16.853648737 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.115750407 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071556155 seconds)
  done (took 1.375983117 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082704345 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08255025 seconds)
  done (took 1.364522465 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084407121 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064641541 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089880431 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077111599 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066300643 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065428117 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087011445 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065903545 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065613733 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066032266 seconds)
  done (took 1.93266843 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070395821 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076341898 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069951896 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081203968 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073250282 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063800168 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071254367 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06741492 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076824763 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062948451 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07077753 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082288097 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070762983 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084405352 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071748282 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068503239 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069983448 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067167101 seconds)
  done (took 2.50216855 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065802411 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066106227 seconds)
  done (took 1.337619473 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068256756 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06310151 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066915955 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066747782 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062791772 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062013793 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062817235 seconds)
  done (took 1.653062342 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.383756801 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113423303 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.30975288 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070451643 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081848495 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.254260665 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065466255 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070389495 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069808092 seconds)
  done (took 2.663334791 seconds)
done (took 14.039606174 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081931046 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08654712 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095519521 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.372755929 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091359936 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065767598 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113850111 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.19134959 seconds)
done (took 2.316118328 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212900297 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.633127721 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.401150623 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.20433244 seconds)
  done (took 2.445451564 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.34479753 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088302889 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059050469 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066770722 seconds)
  done (took 1.781348584 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067137917 seconds)
    (2/2) benchmarking "read"...
    done (took 0.06878393 seconds)
  done (took 1.350807038 seconds)
done (took 7.007803903 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067427224 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065840389 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063798857 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065872948 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.063381408 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062850123 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066468828 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.083200704 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066071971 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.06606744 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068079507 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065857327 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065929705 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063458016 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06364914 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065480287 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063164668 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063023429 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063658144 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063740343 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065617186 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065904965 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063409377 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063329884 seconds)
  done (took 2.823609768 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086557202 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066327498 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071047779 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070801806 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068701138 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070707653 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070688519 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06547619 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070623134 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068071245 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068304799 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068808851 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068639182 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.068771478 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068539367 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068824249 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071854532 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065822245 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067849835 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068889678 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070607644 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066408947 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068839525 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070495586 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069094601 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070299695 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068026085 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065548163 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071005594 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068885191 seconds)
  done (took 3.308159063 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069870478 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062926537 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063450839 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070450686 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062759928 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064058228 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062984616 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063367358 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064441421 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063669688 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064562763 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06369019 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062982396 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06441821 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064181008 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06717735 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078824892 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064525213 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063412096 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064131843 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066938131 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063717553 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063794384 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063462698 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06310745 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063297434 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063822268 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063256401 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063878297 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063104741 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06688152 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067148516 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063044576 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070488523 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067171265 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063169914 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068145112 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063196233 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064572849 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063663581 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063318529 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063018469 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063201055 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070555118 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063726904 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065005722 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063480346 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064649591 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.171838638 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066110732 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062872138 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063375429 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065257858 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064693665 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067846881 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062678563 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064021085 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063127165 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063932828 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062700184 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062963982 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062500482 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065655034 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063624353 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077857238 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069904912 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062687142 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064524245 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063788429 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065210734 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064450466 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076922144 seconds)
  done (took 6.023556792 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091023133 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086873341 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06476729 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06460071 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061299535 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06377582 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069406768 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064284046 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065042162 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081172925 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063701171 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064205616 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064771585 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067051854 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06385786 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065264898 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07194788 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061644873 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063509157 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067517036 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064201176 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068947064 seconds)
  done (took 2.735384911 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.158753553 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069964417 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10519843 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075312526 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070203956 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074947978 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069430239 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070282387 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069653626 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067687651 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066924402 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069265902 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069586125 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067540607 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06732619 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067152033 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069457099 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066911778 seconds)
  done (took 2.603657444 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07740895 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065342905 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086166041 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065771802 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065456673 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067690738 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0699334 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073912521 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068002265 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065312908 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073487487 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067867127 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067858818 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065974849 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067873004 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065100359 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06776624 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065872525 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073637595 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069859335 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069671335 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073554945 seconds)
  done (took 2.762742386 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081552229 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067589199 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080056123 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067937402 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061719056 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063878344 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069808584 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065691705 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069979247 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067720219 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065256301 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064089105 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068022963 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064928654 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068065795 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064885659 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067618716 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065461044 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067509347 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061234296 seconds)
  done (took 2.583970591 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088428958 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06835104 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067053641 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075428257 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067193297 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067369104 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074551844 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067541604 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066996916 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088307601 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067565456 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067649166 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074899006 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072145938 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067288529 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0744208 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075036897 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074325818 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067500689 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067140873 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087784094 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067295639 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074768179 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067585904 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067515873 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06806827 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067439906 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071948899 seconds)
  done (took 3.245206068 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067289425 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065927346 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063794385 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063210897 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06318348 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063799571 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063233141 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06335627 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066131943 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063419085 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065671896 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066482021 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065759424 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065320143 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066079205 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065681957 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065851791 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06315947 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063565518 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063372363 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066086235 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065901469 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066490248 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063254551 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063275737 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065952898 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062717591 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063091454 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065762149 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063540756 seconds)
  done (took 3.175827393 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07811601 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072365628 seconds)
  done (took 1.388453155 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063808288 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080051322 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063361308 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06938686 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069387756 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066978099 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072849025 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069229061 seconds)
  done (took 1.787260543 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083924284 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076992662 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067431405 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080152186 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077076472 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08328651 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134726837 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066687209 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073212164 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064247619 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080546516 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065445742 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07227452 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066328797 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072024887 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072779796 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063880149 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071705968 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068129979 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064748362 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067576343 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074659458 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069435607 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061418266 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067224949 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088968665 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077533506 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065387703 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06928918 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073408811 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071890558 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060035756 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065698632 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.06656271 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063771938 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075947369 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080315201 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06857365 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074426597 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066825995 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075539947 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060820202 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070617188 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072450972 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076477367 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066323961 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06647568 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060753073 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063574854 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068182998 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060880526 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068179424 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060376951 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072828563 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069400555 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076710547 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065201381 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.06783626 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.06873739 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069129867 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072369737 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067978443 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068996851 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065823305 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076081279 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070806713 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074787636 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060752807 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060099774 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064016252 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075845882 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.0889876 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072113673 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067275708 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066665645 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063563157 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068778279 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066676252 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071573687 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072637977 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065672611 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071603493 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073053559 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06614028 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06820644 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074042168 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064512488 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069133893 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063663567 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081863714 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064666443 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064262193 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063692189 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076491953 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069169617 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065687878 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063433867 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073720791 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060096841 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066765386 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067069625 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066746159 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075794621 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070386952 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069919961 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073577403 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072408853 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06538464 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067714671 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061929528 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065741319 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064117452 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07243024 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.05930863 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067766471 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066300768 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065976211 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073383291 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063091706 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064557283 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072967316 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070319894 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.188599905 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06356875 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069980305 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066722976 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071337562 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074633613 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064731203 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061714543 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062500821 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070185762 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065580242 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07012695 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070727271 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069370671 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060584357 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06393731 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07128804 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07542188 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066625009 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067278495 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072331813 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068240385 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06667713 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073180638 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069332177 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065518486 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072446101 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067475529 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061335295 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069276558 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068806621 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065383111 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070442382 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069183417 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070067412 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06858818 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067029761 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074668402 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066523871 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065549304 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067134026 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064922748 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076945794 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06816862 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061306049 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063317267 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074212475 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064777 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065716337 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065908202 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068657784 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067379604 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064967239 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065807033 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.06793159 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076134895 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070123807 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067691027 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07177855 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077687439 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066391361 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068298981 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065689724 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067652963 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066473577 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075186121 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071997924 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071416204 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068718594 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063049717 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07144616 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07404653 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065917003 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063408391 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064537421 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069734834 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071807576 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069979731 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066431974 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064197976 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066306768 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068964103 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068564338 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06535283 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065005982 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072304827 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064266012 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072504002 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06639213 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076202358 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069279096 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061638422 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068977992 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064663062 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07230081 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06125566 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064749309 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065434049 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067142699 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065457371 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068757971 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060532673 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073808596 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073773727 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066793558 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065745368 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066442587 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073823359 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067571148 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06990419 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069026898 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071065765 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075612734 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064916297 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069122366 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075160361 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064980408 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059291638 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070698616 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06349649 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064138815 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064437834 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063854696 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068150724 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072466145 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071600864 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.18775521 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070383518 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065825875 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066139824 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062237547 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071837011 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070228792 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067603682 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073804245 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067862473 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066419841 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070977896 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066317876 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067627197 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067653125 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06992422 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067947806 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068696872 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066359144 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069558978 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065971118 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064003048 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068106496 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067391902 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066824602 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071634657 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067021565 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067412593 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069217608 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066773344 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067273999 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067561473 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066592334 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069588972 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067468148 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066359935 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069211139 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061081019 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073821359 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06505089 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073772388 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066573928 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06414784 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073068232 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068578871 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072151686 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06706413 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066876968 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067977072 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066741163 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069485323 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073318542 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064946448 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077061791 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073948785 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067717556 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069115496 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067074366 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068281099 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065990592 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067048724 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066836293 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.0668875 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066329665 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070342167 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.06923387 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067191012 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068621881 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067119415 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066942947 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067769463 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060993437 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065433796 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065677596 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066052988 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076290242 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067112955 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065946854 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064990746 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067796267 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065517706 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063010054 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.0737416 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074600994 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067181874 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07317876 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065776513 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067952128 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076734134 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060581014 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064896834 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063786837 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064711436 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073567697 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066649947 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07555783 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067321762 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066110694 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063183431 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066616991 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064382867 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060367345 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064079174 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070097876 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065384849 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065268774 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06636869 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068574161 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06721143 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075346661 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065290405 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066996588 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065791784 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062712719 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064748719 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064360317 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.067883908 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065604227 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063221778 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06249576 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064616685 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065735282 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066636344 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067249082 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066204343 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071673966 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064978303 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067844264 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067428476 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.0597205 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.199910442 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066647944 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066401683 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066071213 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070644893 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07019056 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067277403 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07504145 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066649312 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067602334 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066418174 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064780122 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06575076 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065743641 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066064457 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065586356 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068060905 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074853169 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064436162 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.07013949 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066459834 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066589114 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073312873 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067573569 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069667767 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072734843 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067398198 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068872891 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074696551 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071068695 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069746556 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067333748 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068874282 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072175308 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066433874 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073466484 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067398386 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067521298 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068862798 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064851559 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06655447 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066013265 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065974361 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073381203 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067427109 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.0660512 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066353873 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063597356 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067291754 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068932717 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073658884 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068908198 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069310069 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061838543 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063535217 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067527058 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064848674 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068126338 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068868459 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072309804 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068866636 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066677476 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064988994 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07569021 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072059354 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070184612 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064859032 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070388055 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067394469 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069100914 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067811123 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066739313 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068023312 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070256768 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068904405 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065707737 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072946641 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069775918 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0669761 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067934242 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067778511 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066843007 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06360954 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066673063 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068239368 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07102554 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068309607 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066308205 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076372309 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063953729 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066666767 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069450788 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065307857 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070889146 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060981462 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067638432 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06707666 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066683011 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061452299 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065488702 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063970436 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068458129 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065163563 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061250647 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076402941 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07567177 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068858794 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0652517 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064655282 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06116372 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061441557 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065644303 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067354804 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067520228 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076655774 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065319589 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064779057 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060746604 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06539972 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068210706 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068148052 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062492422 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060631617 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064349407 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.06816707 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070694535 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064212853 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.064523121 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068400949 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067232316 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.193920146 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070648608 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063786991 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070969282 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078420543 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067441528 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067384887 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073029916 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073999016 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066865896 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061968411 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066665594 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069981288 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.06719508 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067230117 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068206126 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082390253 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069935059 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065977579 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066106111 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070452274 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066314146 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07432931 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067527364 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067709059 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070959583 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069249936 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075445084 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069378201 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074525759 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070658469 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069309777 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065725942 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067336314 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065394256 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065683557 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068146016 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067223958 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071765315 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074110925 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065263987 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076272876 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075584617 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068355193 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062964876 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066098267 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066041017 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062140585 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067348484 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064110609 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06515064 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064663501 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065393915 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067432854 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07122471 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067878426 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067230786 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066662137 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060601639 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.0691164 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069177174 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067285107 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063517698 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066002662 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066903228 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070417266 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070029814 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064486444 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06789256 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068193139 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067508905 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061607727 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072661612 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065424979 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068212945 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065301194 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066522443 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066380972 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069370445 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070660476 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067510959 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068703049 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069786103 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067790369 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063219119 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063457178 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07125224 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064071049 seconds)
  done (took 42.457140539 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101523535 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063355454 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062821307 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061625073 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072675901 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062712258 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061244723 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062695075 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062418595 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064726474 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061565332 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061519612 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070045857 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076838642 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072540331 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066541889 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061867339 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062703791 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061622223 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062431602 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069666496 seconds)
  done (took 2.732643086 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074084385 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077524461 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075443444 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081842705 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070188551 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070388321 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075057199 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069985741 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077786388 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072011455 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077782505 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070100456 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.071995599 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.07173577 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07178996 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070375711 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077686047 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070278696 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069545523 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075080291 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070038824 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074915275 seconds)
  done (took 2.927349735 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067197037 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065984645 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.06780647 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061342841 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065711517 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060818461 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069229808 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063578459 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068606575 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065385793 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065200412 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064840982 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.0676362 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060830002 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065774688 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063367764 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106536068 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068612775 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065345823 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066185272 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060732324 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067361499 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060897663 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061197815 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064552108 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068508082 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066158396 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063448724 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065437986 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064835545 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065394138 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063125891 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067364783 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065746649 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064377497 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064715237 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065385987 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065159151 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061036039 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063467719 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06588829 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.060988283 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066169426 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066271589 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063102574 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063154601 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067217118 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065089375 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060557642 seconds)
  done (took 4.531162195 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081078242 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.10874423 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066658683 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090063094 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.07952527 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.071858906 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069300126 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089335597 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062882495 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064260189 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080613656 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077949845 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064792362 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069421382 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069186007 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064612873 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066053896 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06409728 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068600371 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064023177 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068468868 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071814081 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079112493 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077398605 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068818043 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063538404 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06397082 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068734599 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076354434 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069241604 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069318692 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070222257 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079411323 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.06991447 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064093514 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066777535 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080199248 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065206127 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067670812 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062553154 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066652016 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068685101 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071337344 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080488232 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064692021 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.06971146 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064807246 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062297884 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076643737 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067177817 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072026491 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078495006 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06892776 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065172455 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069052413 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079577092 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06492468 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063403197 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067899425 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076438895 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06269635 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068593521 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.07754661 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066653294 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071627369 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077716683 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069758995 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068521266 seconds)
  done (took 6.298369855 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076796425 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094423884 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082258628 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082427075 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074753036 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074543175 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075188151 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074851718 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074420283 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07967342 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075473985 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114881414 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070560528 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077333062 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074805561 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075258666 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074954161 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074976365 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074669911 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074720062 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075834375 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081849444 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075369183 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082225455 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.0787009 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070637773 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074524902 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075100945 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082404499 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074969214 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086717664 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074731151 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075087865 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082796557 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07875921 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074327699 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064925336 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074858001 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074731186 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075042293 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070591359 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082263918 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074953768 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070554761 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075090004 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075423887 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082815148 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079752584 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077546333 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.080126408 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075603391 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083090875 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07493916 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075026454 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082308828 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.084960072 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082563111 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083103903 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075465704 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082366257 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082370129 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084957724 seconds)
  done (took 6.188091841 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083198413 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073228108 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082686765 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061002381 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06349458 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07089167 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063906097 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063844462 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073898827 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073414407 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075418914 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071877661 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074283106 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075414055 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071216444 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07433586 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07069165 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071322632 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073149603 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07095403 seconds)
  done (took 2.777888296 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075521001 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082096169 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066287078 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070451527 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068774762 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071035947 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068019418 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068831651 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067062324 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068893118 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075571585 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075533452 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066490865 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070658993 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075879437 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070699669 seconds)
  done (took 2.473801276 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083610047 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.07237478 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079295041 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066240819 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066414471 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062361397 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065771569 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060749699 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061870858 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077757867 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065162005 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075792501 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065579348 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065111159 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061924561 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070819318 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062106125 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062573086 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065433486 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078719284 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.069476795 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064030077 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068524822 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06494505 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067518269 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069836376 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064390955 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065731912 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062961974 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065494214 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067925807 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068683003 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062564915 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063230767 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063700675 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062701069 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065439416 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065561289 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070572397 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064997708 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063264633 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067446868 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06524306 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066247372 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06191033 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065545025 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062066556 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067510153 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06313675 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068114939 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065287744 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.0679113 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065994346 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072686131 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068002205 seconds)
  done (took 5.012057068 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079871667 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069683372 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061190893 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063619332 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068825141 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06729048 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068640848 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066824565 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066492134 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063620121 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067297915 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06834355 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067288292 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069240868 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067105674 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068709315 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061291836 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06658455 seconds)
  done (took 2.556318886 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071507429 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064801008 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073018464 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06583654 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065605134 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068134044 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061369021 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063840331 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064171319 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066241774 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065767493 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067984581 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064220814 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06811057 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065778049 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065462144 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06786555 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064334881 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065533683 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061391579 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068071181 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06407192 seconds)
  done (took 2.79212184 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096400478 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085223054 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139726725 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078383357 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08408699 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071097628 seconds)
  done (took 1.895583061 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092759422 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099321976 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06614675 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068670075 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074678455 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069251259 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069033342 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069607116 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077379375 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075329248 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069570002 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077562424 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077721744 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077054092 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075226259 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074881777 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069301773 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068967861 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065938299 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082742961 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069943095 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077544668 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069448105 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069419161 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070220555 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076582126 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077755296 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07492673 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069542093 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077828807 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074536088 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069371683 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077921018 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07528105 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068524486 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077384043 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069324908 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082641336 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075015303 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07698866 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068409294 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07558964 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077548459 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074161751 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077874731 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069931495 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074359965 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069623222 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069697186 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085385146 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076723825 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078574036 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078789681 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078318059 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078171607 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085088083 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075570971 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077256737 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075023968 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075370272 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077100328 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075210568 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076756951 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075190127 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075146256 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077085609 seconds)
  done (took 6.305777208 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105679677 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069107647 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071449233 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077637261 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07685751 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069747813 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069295357 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06936597 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069614443 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066194297 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107249084 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07023692 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077458284 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077413924 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069757392 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06964031 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07013561 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077198404 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067569947 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087541016 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071945141 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079182953 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079357315 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079508965 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077831799 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077414212 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07198886 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072047437 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072324867 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071627709 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076467187 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072079785 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079040051 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068312585 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07910107 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071646653 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071630196 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07763472 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071259676 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077601847 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07839949 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082659287 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069373139 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069282255 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075469836 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069311665 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069235727 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06643518 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069558426 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066807391 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075634644 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075309432 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075504547 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076717086 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069652751 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069848 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069514882 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070183146 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069765449 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075208176 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077058491 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069998001 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085356511 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069278251 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069903044 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076873614 seconds)
  done (took 6.26633965 seconds)
done (took 128.864228747 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.193679627 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164022818 seconds)
  done (took 1.693880141 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069000734 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098532667 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.079579601 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128643587 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066044301 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099732961 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.09926383 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07776725 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065812429 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066256 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066087875 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068208663 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130544933 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065876197 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065888093 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068199045 seconds)
  done (took 2.667058798 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100595085 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.163571858 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103920929 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066316267 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100041899 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072367071 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064619436 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075034265 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071958397 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065271828 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072732282 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070068442 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064781111 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069799623 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070974876 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072096085 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064877114 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07202943 seconds)
  done (took 2.795306745 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102245169 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09454428 seconds)
  done (took 1.552332265 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158452428 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106092008 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.144968347 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.349622698 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.162128932 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.147277907 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.143315114 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.141972402 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116042182 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.138495237 seconds)
  done (took 2.963922113 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101317987 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.157132726 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.269950287 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119213864 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075343359 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094115073 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118282326 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077628327 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080080106 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079723618 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079529406 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075439153 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099260236 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072496089 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073556097 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075165491 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103105529 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07240144 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073700069 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074945032 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099546268 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065730036 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072421642 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072506163 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076598375 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076796204 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065885692 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065554222 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075567275 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073864029 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075880505 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.091451101 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076761045 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104789224 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069968202 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106440909 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076306336 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072930552 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073713593 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072903453 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077329476 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077100419 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071897204 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075908769 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065537439 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07616329 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06516271 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065204439 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076551239 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066296702 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076890175 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075883575 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104919865 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066486469 seconds)
  done (took 5.95529837 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104896762 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105319102 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071474485 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112647605 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104056083 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071817151 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102124158 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094945185 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103468657 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070514441 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068390688 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069838413 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081637124 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081796569 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114394499 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106273424 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073168645 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07093596 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105381556 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104546152 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067946408 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096317675 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091068477 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10265657 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066999991 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070145861 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068025324 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070281696 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07645554 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077782023 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069138491 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079904668 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084249483 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077585574 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067022235 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067290497 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067941597 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078625486 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07902929 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07827323 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076770432 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067597312 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067967386 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068875497 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069594517 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06760646 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078365511 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080147421 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078063003 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069685759 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069793113 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067514544 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069850725 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079309606 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077181774 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080272065 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079070328 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068345049 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067843359 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071809361 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079752294 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078964405 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078522684 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069560537 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078417882 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06814655 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079527845 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083529153 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068233902 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070466245 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067838132 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06933447 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069223098 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077216025 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07707007 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069043517 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068793795 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067761223 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079512028 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077792668 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067655124 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076124776 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066791859 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068092239 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068960153 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069022257 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077264148 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.07928745 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069445807 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068235201 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068732672 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068132328 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.0667964 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076036679 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079703845 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078592396 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076982188 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070460187 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077456796 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076623151 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068659787 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077541471 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067036079 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068813994 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068463608 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075981347 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075286419 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076737542 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.197221621 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068537257 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077894441 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081184345 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068728492 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077581588 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079716491 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079233577 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067704312 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080465673 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069375549 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079530325 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070209468 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079430762 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069210282 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079575185 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068340811 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068338717 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068950687 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079861401 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074202687 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068492275 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070135922 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070046518 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078690679 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082042203 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070646247 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077846561 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078020681 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071029838 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07829689 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068845824 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078599604 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069928449 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069853756 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067524634 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081703172 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069454371 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068497217 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069519116 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080251074 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068579982 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079756053 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077712209 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068109496 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080355399 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079998508 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076702262 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079578349 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070403012 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067959503 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067915885 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069548477 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078411587 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079047818 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070383663 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068677358 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078086139 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079520902 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06738371 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078917905 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077787052 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078501558 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069096918 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069787893 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080141994 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080182002 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077494556 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077475013 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077882436 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068768061 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077200628 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077518483 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067943695 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083070195 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068339235 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082137247 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07791016 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076203451 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07851976 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079835333 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079337443 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079874587 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082361943 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067945117 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067746035 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079441566 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068294378 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069296018 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077700388 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069342983 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069644725 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082761551 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068585086 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.07951681 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067703077 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078163632 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066956298 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069266463 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08138647 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067122361 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067927716 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.0773487 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068327824 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075383424 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077863233 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.075977828 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066372376 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068782194 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208270314 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.0789666 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068198593 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067808545 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070015559 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078099391 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076631393 seconds)
  done (took 18.555241832 seconds)
done (took 37.543233955 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.211473835 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152791085 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.182578485 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118940845 seconds)
  done (took 2.118164454 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.118094498 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101740904 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093210449 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065210331 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099468806 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065395444 seconds)
  done (took 1.934291394 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311277304 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210789516 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.188366787 seconds)
  done (took 2.097228324 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199854199 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188210147 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.419467171 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.263073653 seconds)
  done (took 2.571991446 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145410149 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08890597 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067952668 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083842441 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133335939 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160364057 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100166588 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125011559 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078647555 seconds)
  done (took 2.432196934 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149172054 seconds)
done (took 12.702959109 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.18470477 seconds)
    (2/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.08446227 seconds)
    (3/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.109707905 seconds)
    (4/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.183565077 seconds)
    (5/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.081719961 seconds)
    (6/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.235771639 seconds)
    (7/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.082870142 seconds)
    (8/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.145195185 seconds)
    (9/309) benchmarking ("sort", Int8, false)...
    done (took 0.142229862 seconds)
    (10/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.232382972 seconds)
    (11/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071984055 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.0860056 seconds)
    (13/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.205670366 seconds)
    (14/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.214649605 seconds)
    (15/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.112307061 seconds)
    (16/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.205876883 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078448782 seconds)
    (18/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.077378962 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074936038 seconds)
    (20/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.230663158 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.109265107 seconds)
    (22/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073635112 seconds)
    (23/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.06449624 seconds)
    (24/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.191910913 seconds)
    (25/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.211178799 seconds)
    (26/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.125580482 seconds)
    (27/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.179097864 seconds)
    (28/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076970873 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072756113 seconds)
    (30/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076095703 seconds)
    (31/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.091069859 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.163598745 seconds)
    (33/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.08284642 seconds)
    (34/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.181196039 seconds)
    (35/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.198633338 seconds)
    (36/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075928938 seconds)
    (37/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.166857762 seconds)
    (38/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.184767725 seconds)
    (39/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.155824479 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071549033 seconds)
    (41/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073843835 seconds)
    (42/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.194717051 seconds)
    (43/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.101136158 seconds)
    (44/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.157024973 seconds)
    (45/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.210359576 seconds)
    (46/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.161908685 seconds)
    (47/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.05378261 seconds)
    (48/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051040949 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.090320035 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.100971915 seconds)
    (51/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.196091153 seconds)
    (52/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077598088 seconds)
    (53/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.070082089 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.089720939 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07287733 seconds)
    (56/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.150228901 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.084942742 seconds)
    (58/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.05077209 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.11310707 seconds)
    (60/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.07165913 seconds)
    (61/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09166268 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090752654 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.161525057 seconds)
    (64/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068874802 seconds)
    (65/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071804943 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067273225 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091817238 seconds)
    (68/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.172565507 seconds)
    (69/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.153443142 seconds)
    (70/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052326074 seconds)
    (71/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075220391 seconds)
    (72/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.051822381 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065133873 seconds)
    (74/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074281137 seconds)
    (75/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065645515 seconds)
    (76/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072553736 seconds)
    (77/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072214327 seconds)
    (78/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.050936261 seconds)
    (79/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.06667702 seconds)
    (80/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.193844663 seconds)
    (81/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.05105901 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 0.065810059 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.125856771 seconds)
    (84/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.178776319 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.113538673 seconds)
    (86/309) benchmarking ("sort", BigInt, false)...
    done (took 0.333449429 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.093662064 seconds)
    (88/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051430301 seconds)
    (89/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.116396626 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09470639 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.131201971 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066294909 seconds)
    (93/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.203227708 seconds)
    (94/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069555617 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067025635 seconds)
    (96/309) benchmarking ("sort", Float64, false)...
    done (took 0.130655876 seconds)
    (97/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051621215 seconds)
    (98/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.112646569 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.089084771 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.173314189 seconds)
    (101/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.103835382 seconds)
    (102/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.074644388 seconds)
    (103/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073319967 seconds)
    (104/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.107362636 seconds)
    (105/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.075343661 seconds)
    (106/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.111500028 seconds)
    (107/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066004288 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.0741368 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.110767549 seconds)
    (110/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.098295798 seconds)
    (111/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076871709 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092749216 seconds)
    (113/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051019068 seconds)
    (114/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.156181077 seconds)
    (115/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066989339 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.145521415 seconds)
    (117/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052220487 seconds)
    (118/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.157201963 seconds)
    (119/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051353936 seconds)
    (120/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071550384 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092863922 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 0.137551785 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073234424 seconds)
    (124/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.06983925 seconds)
    (125/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053160741 seconds)
    (126/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075832312 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072252052 seconds)
    (128/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.15560027 seconds)
    (129/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087873962 seconds)
    (130/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067201396 seconds)
    (131/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.0658961 seconds)
    (132/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.171077393 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071260714 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072336524 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065111526 seconds)
    (136/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069903721 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.076053234 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064636621 seconds)
    (139/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051335229 seconds)
    (140/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.153934244 seconds)
    (141/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060477943 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072210205 seconds)
    (143/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050351563 seconds)
    (144/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.19275706 seconds)
    (145/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072683046 seconds)
    (146/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050603775 seconds)
    (147/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.146827205 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.146697381 seconds)
    (149/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.094239122 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.101772115 seconds)
    (151/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051855622 seconds)
    (152/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050918934 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065073139 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.0730177 seconds)
    (155/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072033984 seconds)
    (156/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051349707 seconds)
    (157/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076265719 seconds)
    (158/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.077054015 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073666652 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.091342615 seconds)
    (161/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.377925558 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065682556 seconds)
    (163/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081252337 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.06565002 seconds)
    (165/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.1553366 seconds)
    (166/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.09615689 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.143190859 seconds)
    (168/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.080615559 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089348887 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.090980382 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.111880327 seconds)
    (172/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.08908777 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066797221 seconds)
    (174/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082317961 seconds)
    (175/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061696908 seconds)
    (176/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052570515 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088423513 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065535926 seconds)
    (179/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.053200163 seconds)
    (180/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052305903 seconds)
    (181/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066080392 seconds)
    (182/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.100687111 seconds)
    (183/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077123097 seconds)
    (184/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.052908235 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090779999 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064807549 seconds)
    (187/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072797448 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072272305 seconds)
    (189/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073306094 seconds)
    (190/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067172914 seconds)
    (191/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066403196 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074019441 seconds)
    (193/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068215892 seconds)
    (194/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061036701 seconds)
    (195/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052062709 seconds)
    (196/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072605325 seconds)
    (197/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.107747483 seconds)
    (198/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.152412748 seconds)
    (199/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050432717 seconds)
    (200/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.050195544 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.270046745 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065541045 seconds)
    (203/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074414099 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066512264 seconds)
    (205/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.053609297 seconds)
    (206/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074239936 seconds)
    (207/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077845121 seconds)
    (208/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073274827 seconds)
    (209/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073827354 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08865918 seconds)
    (211/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051580253 seconds)
    (212/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070826874 seconds)
    (213/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.065541425 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075258704 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073710531 seconds)
    (216/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.139646475 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065949812 seconds)
    (218/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080147746 seconds)
    (219/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079022855 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065519878 seconds)
    (221/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066230759 seconds)
    (222/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052182726 seconds)
    (223/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.062868821 seconds)
    (224/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051028207 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072087919 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.112673744 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.184514389 seconds)
    (228/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.18440797 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.09418955 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064411697 seconds)
    (231/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052316569 seconds)
    (232/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065561744 seconds)
    (233/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072753402 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088788658 seconds)
    (235/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.101097927 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140143738 seconds)
    (237/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067432683 seconds)
    (238/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.064184931 seconds)
    (239/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.101543107 seconds)
    (240/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074392344 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065392296 seconds)
    (242/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.05093159 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094354534 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087713854 seconds)
    (245/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052289318 seconds)
    (246/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051473596 seconds)
    (247/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051180619 seconds)
    (248/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.052083023 seconds)
    (249/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062612495 seconds)
    (250/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.176458814 seconds)
    (251/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051351349 seconds)
    (252/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.06219306 seconds)
    (253/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.0682583 seconds)
    (254/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051788725 seconds)
    (255/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072362636 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065337408 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065767603 seconds)
    (258/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078588047 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.06682848 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.125071578 seconds)
    (261/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078834409 seconds)
    (262/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074009433 seconds)
    (263/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074437173 seconds)
    (264/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079300285 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051113409 seconds)
    (266/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064509635 seconds)
    (267/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051026769 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072373177 seconds)
    (269/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052207049 seconds)
    (270/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050957513 seconds)
    (271/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052384 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073572955 seconds)
    (273/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065420355 seconds)
    (274/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.138433455 seconds)
    (275/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.181972364 seconds)
    (276/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054497608 seconds)
    (277/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067803791 seconds)
    (278/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066786128 seconds)
    (279/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052293473 seconds)
    (280/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063958302 seconds)
    (281/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051063369 seconds)
    (282/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073814354 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089069906 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.140916893 seconds)
    (285/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064878007 seconds)
    (286/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065303815 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086745753 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073679204 seconds)
    (289/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.175783368 seconds)
    (290/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050864381 seconds)
    (291/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118695269 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064471084 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.10875115 seconds)
    (294/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051173225 seconds)
    (295/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063749753 seconds)
    (296/309) benchmarking ("sort", Float32, false)...
    done (took 0.132065201 seconds)
    (297/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060898116 seconds)
    (298/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066784339 seconds)
    (299/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061887695 seconds)
    (300/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072875274 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071977852 seconds)
    (302/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052222347 seconds)
    (303/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067080439 seconds)
    (304/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053393058 seconds)
    (305/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066485313 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071129749 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086592142 seconds)
    (308/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071885086 seconds)
    (309/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088360184 seconds)
  done (took 30.953124867 seconds)
done (took 32.352893405 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084403716 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092556678 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074597764 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093119269 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08017663 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075715357 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072264848 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07851064 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079826787 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082182885 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077795151 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054315235 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074205575 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074254444 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075404887 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09104679 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.07864263 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073496357 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072813948 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064745638 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072931965 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065414196 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067117183 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054493961 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078726664 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071423996 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07207885 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073572618 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065670114 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066303779 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.06897302 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073765576 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065490373 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079487007 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072425016 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073738811 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074255393 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07680299 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067156038 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065928566 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074454962 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06543137 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072836017 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073859246 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072069375 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071771712 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073281401 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077657462 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090928511 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068152111 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075138238 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076088741 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076130802 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073181796 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069885299 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073162523 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070845522 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091331859 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073734278 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067800972 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07465372 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073916047 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071119699 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073321173 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072736375 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075005502 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075723039 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071334938 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074569639 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071857067 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065369206 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072747517 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069089468 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065270976 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075693938 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077007823 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064147257 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07119395 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073140475 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071110181 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064451947 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066994119 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066694194 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071828104 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067217925 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054188259 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069996092 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072175312 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064282962 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073206296 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071891578 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072316155 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066951133 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075678604 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064776344 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071069602 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065187572 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065182725 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067115978 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069178737 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064695381 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066883828 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074401665 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066211528 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07199839 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079040136 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064814071 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072381528 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064348859 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064509822 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079593005 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075057946 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065272265 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067848151 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064464977 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072981029 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064704016 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065122537 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065372531 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06532425 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07149862 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065368046 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067402593 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07265229 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078499826 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064710451 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.06862307 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066463005 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064906653 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070635627 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064499164 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064679944 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066957871 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061185955 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066345176 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064506004 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072020838 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066454449 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.207586315 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068191691 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074807357 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070639324 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071977976 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072375002 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064000377 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059132648 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067570377 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067622051 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068058055 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065337972 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067438809 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06566794 seconds)
done (took 12.438540338 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068565785 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.139549479 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096926435 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096079156 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085906862 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066562516 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076173886 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101600077 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067984362 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.10217791 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088263263 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085862395 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114216571 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064940732 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065879268 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070155804 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067411486 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082083914 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101385687 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086817444 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115798103 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065613566 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093126214 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089055765 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.08829798 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.103124427 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069246777 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069720516 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069710304 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.092822536 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088277928 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069928702 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066793959 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099099658 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09370925 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083348835 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066720621 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083035081 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066276987 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06576564 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067837131 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099451288 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080955356 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081241342 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069698767 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069777853 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066916136 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084245078 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090249394 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079315056 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086680591 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101950045 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068969753 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065949875 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064717933 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08691822 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065542377 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069337928 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066639991 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068368978 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066401714 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069160265 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081005082 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080552452 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070511227 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079883793 seconds)
  done (took 6.812113161 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084711692 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091564891 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084482905 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083489788 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065844508 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066480359 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066740205 seconds)
  done (took 2.042887774 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067719283 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088616272 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089217758 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088960383 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081438787 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087524974 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075815131 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066908812 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.087898181 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068104379 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087621261 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100743985 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.0700432 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075639993 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090995998 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066490915 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09075469 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06685745 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069551046 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090577899 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068682897 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095638538 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070300994 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066823542 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081106851 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066981532 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114319332 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071099235 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068488545 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069684569 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064513555 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107171408 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080547045 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074183413 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066666449 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080877233 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081283737 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064870285 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082923327 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.075412759 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080526589 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066595333 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067664061 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064640047 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070742722 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077211312 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067690592 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067406383 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.06893734 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086740154 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067555345 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080811371 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069440016 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072235749 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06839844 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073337309 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077106858 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067505124 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086841444 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068575569 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083507112 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082510581 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079994894 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082616773 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068909127 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079887677 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079830624 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069660706 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068639956 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069953068 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082593855 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065061395 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06784553 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076967064 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068216331 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089741439 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.08900081 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068553273 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080163902 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066738621 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06663908 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066522622 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089144143 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071948197 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066301497 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07067553 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069532381 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064801489 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065252635 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070091005 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064026346 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067853416 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069629826 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068961781 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068644397 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082951092 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068883811 seconds)
  done (took 8.815358889 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067958254 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067403541 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.06915599 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06805414 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067876499 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068053474 seconds)
  done (took 1.916180639 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09388693 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.06896669 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080394955 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07229504 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106331602 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087289807 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087276851 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07808367 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083473256 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078064533 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086818862 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088167382 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091991219 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072335601 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086150372 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071296427 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087775674 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07480603 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078267713 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07295121 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086247408 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072260417 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072398289 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081206586 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076058748 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07156874 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067456013 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078763261 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.07768711 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078048382 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072074174 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07582519 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070916722 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078171206 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087181227 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071032154 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071995837 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077547197 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072792707 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07586536 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088143014 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072659154 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074591862 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077199723 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077617156 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070262521 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076429297 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075011083 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08576089 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076941142 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076928342 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070900111 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.076139713 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076673624 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070454747 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077274868 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07666488 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08667515 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071858754 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069985704 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068716681 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075840763 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07718795 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07585245 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078281345 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076800642 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070341854 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072128767 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072856779 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071527198 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076976105 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068577276 seconds)
  done (took 7.062141702 seconds)
done (took 28.131043836 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.534193062 seconds)
  done (took 2.012998021 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.61628194 seconds)
  done (took 2.120491792 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.451342909 seconds)
  done (took 7.947185399 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.397292127 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.520769992 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.717979528 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130904891 seconds)
  done (took 3.306661902 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.708715687 seconds)
  done (took 2.214382615 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.213141069 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.20131596 seconds)
  done (took 1.934086166 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.374784831 seconds)
  done (took 1.878496169 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.129187618 seconds)
  done (took 2.633891915 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.256799565 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174037125 seconds)
  done (took 1.934887777 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.471897982 seconds)
  done (took 1.97332961 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.825789866 seconds)
  done (took 6.329621168 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.208826561 seconds)
  done (took 1.761996609 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.23566391 seconds)
  done (took 1.744658756 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.71905789 seconds)
  done (took 3.227627955 seconds)
done (took 42.528204301 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081096328 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081154479 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080758296 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078351872 seconds)
  done (took 1.81735056 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077251737 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072929248 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.07629717 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073300038 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077773839 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073364749 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074212773 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075623266 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072418227 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073308545 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073624279 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073228339 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075106244 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074205874 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071164389 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075233672 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076435087 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072953931 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075767614 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072991671 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.07074002 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074821568 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075117648 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071684769 seconds)
  done (took 3.290782539 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078071398 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072775769 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074955051 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072095131 seconds)
  done (took 1.816909115 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078532117 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094775905 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.0896432 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078561205 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092706947 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086982383 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.06909224 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068842248 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.07078244 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077924284 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067913742 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096255394 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.08843157 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078170549 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080021019 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066116144 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068393157 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088202737 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077925931 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.079439448 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070933154 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07779396 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068278064 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088410054 seconds)
  done (took 3.416652091 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086217534 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105746161 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081905758 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088480284 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090889747 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065184435 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087183038 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090846588 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127346103 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066010713 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071206344 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065608513 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.07328406 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06506184 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080759903 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107423119 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111547548 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069054671 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096890387 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065427108 seconds)
  done (took 3.220792879 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073446269 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070153454 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066679516 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069716726 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077035978 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072750778 seconds)
  done (took 1.955943234 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068148165 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068427636 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067634693 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067568294 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072742714 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067788619 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065414494 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067503702 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067968743 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067013903 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066654161 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066078207 seconds)
  done (took 2.3343748 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.201271862 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068120961 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069464211 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066223461 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071247565 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066314748 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081553562 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067614489 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091862266 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06649175 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066553967 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068415757 seconds)
  done (took 2.509048034 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206856123 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076169244 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238716644 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150069483 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11048804 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115433242 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112069926 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113817123 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141451262 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100218133 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167406092 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166172706 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106984542 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136826643 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088766986 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.10068939 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153419912 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16299711 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105204293 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167291088 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145626887 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126438961 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148731045 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104503693 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106292893 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121866644 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070976976 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079702506 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169844355 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132763104 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143507531 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110494407 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092257519 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176996328 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171657377 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140929853 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146771303 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084724416 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.10567344 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134425765 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200212562 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088247845 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160996 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10842373 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219515591 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134775169 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121401136 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120117087 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106074829 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090066588 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145599526 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183539127 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.136171434 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087297973 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124353364 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113563199 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114168242 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113467314 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182609295 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161948305 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127955733 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071601083 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107741544 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153282349 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134415557 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109217682 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125228269 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091874212 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134734548 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155485087 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120919502 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143866289 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.116882911 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088616265 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119519384 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140263031 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127044664 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160878047 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124068677 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073318393 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123663208 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101867254 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081176763 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145459171 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075317877 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176482735 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099278843 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.109093914 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125257438 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109420187 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109269158 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157681611 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14439575 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102452858 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064761608 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245302754 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121480117 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145517894 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087301486 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109910441 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117744688 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077917089 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136884014 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07565826 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122605936 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078251346 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126711449 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128889608 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077744325 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121746817 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103982016 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.1007982 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131713645 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15941646 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087994279 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082346607 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16941281 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121886505 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103258194 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14486702 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156563537 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102087671 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100903818 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149064586 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179033672 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089431231 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163653645 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106372683 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08356262 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087698743 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123617666 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111412059 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123644507 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081814207 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.11768975 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168759171 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07484368 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095908461 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134302832 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079271363 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081345562 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105597691 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104944406 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096133306 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100259573 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104941403 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136071572 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123325111 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105302621 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123835398 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098364896 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313969782 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087935995 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102820417 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105174816 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070015615 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.134330258 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159028229 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079323235 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164506167 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124859762 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115839269 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119231425 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083490704 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141661071 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079279792 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070513181 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144079405 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110372387 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110229597 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151990758 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115438368 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125565768 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118117404 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133690087 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130961029 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130339788 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105113683 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089167975 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112086241 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126257889 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072593518 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090244614 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079947788 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103985276 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096052317 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082789016 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140725602 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123653077 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109312182 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11215232 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096400517 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148186752 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076067996 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127826618 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119918273 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095172453 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153131144 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152614006 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131472604 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099070868 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137067615 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070265222 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073639881 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087622646 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122383228 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08202238 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082888244 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257526648 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148160381 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129683884 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137307711 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122867028 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120492089 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156724668 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070622097 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117625473 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146533206 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120598019 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.10487797 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090688803 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099051601 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143535371 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107202316 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181638929 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116299997 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123909128 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153843984 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.10051436 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079885828 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103456857 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135437718 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103095086 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143020339 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099897744 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088571509 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109597556 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078227618 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098801622 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125866913 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11815796 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134735536 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.11562814 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131913401 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077256244 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115394899 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121579028 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121560226 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064123081 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120497329 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161498056 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095183277 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119704892 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154076833 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07950412 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134275104 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174500049 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143568025 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084547791 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253356966 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120095179 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129965971 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120126422 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14175369 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106783516 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137790906 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109765061 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087153418 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087793805 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098647746 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104872237 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.09629633 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106329294 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.112960816 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095888417 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13180906 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102987566 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109919939 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117786524 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099336348 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091001338 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096773761 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17606327 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118607277 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17086438 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100511547 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144044505 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163886234 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074624869 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079310833 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077368686 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140197403 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084209351 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129721644 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.106419009 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117080783 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123323791 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143056799 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095332615 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068333464 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109023293 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132456707 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124592833 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098413724 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103820699 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164042304 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101751365 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079248794 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113503641 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115896386 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102721701 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171298952 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061660347 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105869489 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07629276 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08001888 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127251827 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291933238 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080836674 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103893178 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119616781 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111907973 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128657299 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101344089 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110784512 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125619846 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150969256 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127785768 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090074466 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111948151 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128390425 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156636943 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105233745 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095808706 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17128847 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152422525 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160481751 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088128493 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115085403 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113805659 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109381094 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138869696 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083005266 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163333528 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082508505 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135898585 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102876507 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088602189 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128138391 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.10832576 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087922881 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147911825 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117391514 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082139593 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077199183 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117189621 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119271078 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105895989 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075358005 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138840699 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073891179 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132104286 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159513964 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080239726 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107069268 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096750996 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079052126 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105806874 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101552269 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0875103 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.239568338 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175189022 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088382152 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150868038 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134795346 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113829218 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1363145 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101945804 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639640962 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077345391 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153368732 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116349287 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17408164 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100689134 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118039872 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110286556 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122884798 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144303839 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104866733 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.181696545 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13265086 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114401143 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079025852 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102425423 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104375452 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087503158 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108192001 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113750701 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115431792 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093127227 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115576185 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124179094 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081905863 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095481475 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160007775 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116533367 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143088967 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140122996 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085525758 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117565979 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138347916 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079668706 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120684378 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151449394 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105271057 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099111432 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080742624 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.099943536 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157897215 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072708525 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157587537 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117415149 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.252221086 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114734015 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113414507 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131372249 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106338786 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121271692 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092459684 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109592021 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113735462 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082480634 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077196693 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104737654 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110558929 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098723972 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097930627 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099002287 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151609361 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072236915 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098731177 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114111164 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142395401 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173789783 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089083612 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08226005 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118069048 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113831235 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111969525 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120815931 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078726242 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081806603 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080411049 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077930741 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.10888326 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112560874 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114176862 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110426606 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163103219 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082865897 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.230788692 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095206568 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105101549 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070314698 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078379229 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095694335 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097626962 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106998716 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109474577 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159170403 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095772863 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089884657 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091479601 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074459638 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083356582 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128827786 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109645971 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117439728 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097766537 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062512589 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106684236 seconds)
  done (took 58.884457877 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110166949 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083037765 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.093768353 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143947275 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122783761 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.201929646 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.153336476 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188535651 seconds)
  done (took 2.741602278 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071018442 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095099287 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102736665 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082474761 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06757248 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068635457 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.23047634 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081649989 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066417269 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.098487465 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078466288 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069190031 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.427335081 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06570718 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067327419 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061801424 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067275534 seconds)
  done (took 3.414492194 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.390786935 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.613212174 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.350216641 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071966278 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.430240819 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087977996 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.109798653 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.130517329 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072549747 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.535379628 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.402997 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.124279926 seconds)
  done (took 17.949667192 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078126547 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069775594 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083470585 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083226414 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072310572 seconds)
  done (took 2.013959723 seconds)
done (took 106.93090281 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083776738 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.604701441 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.0530318 seconds)
  done (took 2.313530476 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086113083 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085981274 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085641842 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083389405 seconds)
  done (took 1.977129964 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076643375 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077586695 seconds)
  done (took 1.779769857 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.23112471 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.161392238 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095511007 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087287535 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080778837 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079276091 seconds)
  done (took 1.880121955 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074515024 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076833485 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072943585 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075747922 seconds)
  done (took 1.924790855 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079917072 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053223043 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054346873 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.057624132 seconds)
  done (took 1.869988764 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089490393 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079300808 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079069749 seconds)
  done (took 1.876716383 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104537373 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.086383092 seconds)
  done (took 1.817071774 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08560739 seconds)
  done (took 1.713571005 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.103702151 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102611398 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.13119397 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110626475 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.13902526 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109003265 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084399896 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085102568 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.075913238 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086189451 seconds)
  done (took 2.657864214 seconds)
done (took 22.008758077 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.084830702 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.363781177 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360727324 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089920651 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669590525 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356233852 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.96862245 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092392114 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114449687 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067323991 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083968833 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.658171615 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.958371924 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.319193578 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.945127626 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.314565821 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649350274 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068314763 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06756294 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067899336 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.950268253 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067384357 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.0675443 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068523044 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648860929 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371352427 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067496997 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.315447161 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067416331 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069376987 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354294239 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068324923 seconds)
  done (took 16.027391494 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073696283 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12000789 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073296572 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084460651 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070309369 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069503183 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071237555 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068630475 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120081302 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067477999 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084995002 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067753521 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071480521 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.083429007 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087522891 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067921892 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068379864 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068715559 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067617356 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068107385 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086975882 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067671274 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067762635 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068207398 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067698024 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080118612 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068607616 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068134122 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067855411 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069968784 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07089321 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068888794 seconds)
  done (took 4.044273314 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117223727 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124582019 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073635352 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103590435 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110478358 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070156416 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143023944 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093198485 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12689525 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067703904 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084541613 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067920831 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102015175 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068433515 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087854797 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068145662 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069718495 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068277967 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06821053 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068376964 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.0875783 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067711816 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068221139 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068404005 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067942866 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08148099 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06786172 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06802704 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068038012 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06980106 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070749809 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068611425 seconds)
  done (took 4.284320983 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07503514 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076586273 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083045522 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084021813 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.06904292 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071974203 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073084156 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069241946 seconds)
  done (took 2.249882597 seconds)
done (took 28.241777629 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082013761 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06931911 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073013783 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082271489 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072731622 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079501358 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067128612 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075190127 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072145452 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072757607 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074651993 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067750141 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071277977 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067782377 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073812153 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06789205 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079518296 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.07214709 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079002694 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079473077 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070069815 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072646641 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074922482 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078641593 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080378958 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078526706 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077923628 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07273956 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068940547 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070844923 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07652251 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083574503 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067608739 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078870915 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067332387 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067051207 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07160291 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067241808 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079094372 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076867992 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069427764 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075944678 seconds)
  done (took 4.726883281 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091874198 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096166823 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08712847 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062842257 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067542699 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06517626 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088366121 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059678633 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059485348 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088128102 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055829833 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059407719 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065234741 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053765657 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060495911 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056510231 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061981207 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055466336 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060118113 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059635217 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088711395 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053355074 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077400249 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06307541 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055595641 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061312753 seconds)
  done (took 3.397499268 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076718744 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087983366 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.08971504 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131144901 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.106230872 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079088237 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079078666 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095193534 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.088319605 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06656394 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070205705 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092087339 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089959498 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073919678 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067937841 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085793741 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083679039 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068852533 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07364131 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094298941 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086443244 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085744136 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.096101856 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084180513 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067074442 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069996066 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071519333 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081578246 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072453327 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077436238 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071765466 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071668013 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.07017901 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079519107 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071011137 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069131652 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09242197 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077696843 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.07910109 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068143447 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076365246 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069073607 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092743695 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126444531 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067199841 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076101716 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.071750574 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077449534 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067534611 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088262204 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079083167 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067687059 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070909659 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067120422 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067670084 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081028657 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069712078 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.06969378 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076893011 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.073935531 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.092415607 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072839302 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083310214 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.0675785 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075353978 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066910675 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068884135 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066483213 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095654837 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069359663 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111254063 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068904561 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068851756 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076934832 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075181755 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074316414 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068248114 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083458976 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078712046 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07141914 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077004704 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071032446 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07053656 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.091629566 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070020469 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069622338 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069513383 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07343551 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071945697 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069279384 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081028682 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067482235 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070397922 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084706475 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067585493 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069537694 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073491378 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072434579 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.0670476 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079218405 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072559772 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068221566 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077419069 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067807728 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070809821 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080498293 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073676462 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066603356 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072080947 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073601541 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068161 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069821029 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070735677 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069646249 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076768704 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074466754 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072616131 seconds)
  done (took 10.654678751 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166903881 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156937866 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.06972923 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.147164892 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076890797 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078892863 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.163511388 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095237095 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067940538 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06817314 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068938375 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110404292 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105978518 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115885225 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078441058 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068176635 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084358568 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.11473064 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.1517098 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.146620589 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.08497181 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076472809 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069904317 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068817742 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070308105 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078426152 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08563103 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076699338 seconds)
  done (took 4.43138119 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083474387 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.105863433 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074636415 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090785633 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090280699 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067849815 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069956936 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069697683 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081200903 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078738494 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067505143 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073936072 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075356439 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071043084 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068936356 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074438418 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074938925 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069078874 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071425755 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073093524 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078449615 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091333725 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071148809 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067330046 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072072265 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066547203 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063284837 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084324442 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068888811 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.09490758 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06606784 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073516963 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082593414 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069050091 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06706367 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067867577 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067860326 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067833707 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06951032 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066282514 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066534742 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056980403 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066803535 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078771689 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074363585 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056116089 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072494054 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073209993 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072875422 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065742978 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071050655 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07099277 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071374504 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075347607 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071250053 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073393234 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069296569 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074488353 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077321931 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067544291 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064938042 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066353261 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072607707 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065390767 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076619675 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072964466 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066095047 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067563648 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070027257 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074551155 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068168756 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072107278 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065293432 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070066016 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072646064 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069417557 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069089564 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06616884 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067990388 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068086544 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055878376 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067705553 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053672871 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071016345 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066017918 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066670938 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067659519 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072565957 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079422993 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068971276 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073870532 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069013235 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066777842 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070593869 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06026809 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070540974 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083392398 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082198871 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067533122 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065710896 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081403935 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072469046 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066289558 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056208594 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.072711038 seconds)
  done (took 9.181749931 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092563084 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069745612 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083829175 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091499074 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.08643071 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074932118 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077455326 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068886932 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083127112 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073869392 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076434062 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067786256 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078194966 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077748211 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069856238 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07757297 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072208935 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085686874 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082844518 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068018224 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077238117 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080323796 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090363038 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082096828 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081151991 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082464807 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090209441 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.077657753 seconds)
  done (took 3.912108805 seconds)
done (took 37.943341959 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.726896748 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.902308461 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.726814895 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.105322084 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.884870527 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.753739316 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.93078173 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.729092238 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.030809209 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.76647999 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.934097219 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.911123523 seconds)
done (took 65.056065052 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.804714494 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.869694952 seconds)
    (2/2) benchmarking "String"...
    done (took 1.956402035 seconds)
  done (took 5.491061636 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.940717788 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.299625733 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.977019284 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.728254778 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.730288248 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.068533073 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.536978623 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.236920993 seconds)
  done (took 30.243280603 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.838177839 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.961875459 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.400494477 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.43584844 seconds)
  done (took 15.352887388 seconds)
done (took 62.588501931 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.746176346 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.75269555 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.75079935 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.708526162 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.782222604 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.73868084 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.180642871 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.804525981 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.724508875 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.708294475 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.726050588 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.149965221 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.740373335 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.17618428 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.725401978 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.736639018 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.767950172 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.249236591 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.886381323 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.743234699 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.730085982 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.784449046 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.726030957 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.731560993 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.735271726 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.727349791 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.133728918 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.734246507 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.33973437 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.729180359 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.756165833 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.769438734 seconds)
  done (took 202.35772095 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.726769747 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.628692816 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.676998331 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.72950341 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.964323328 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.911103197 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.849021037 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.146544828 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.730847873 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.749257828 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.9463062 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.727442899 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.967527428 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.678378462 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.759880102 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.83408389 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.925456584 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.955598359 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.760331849 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.907881206 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.739597567 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.835328899 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.761217865 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.902501354 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.743722093 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.735393363 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.906720627 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.742074837 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.923359506 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.903885296 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.745684514 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.739355078 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.95290485 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.605771362 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.73288646 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.748630305 seconds)
  done (took 167.959730117 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.14780588 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.731910496 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.732636479 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.731524274 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.74218812 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.730613944 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.852416221 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.857091049 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.329059346 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.537329029 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.78471441 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.731296068 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.576367081 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.729647512 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.800220449 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.744974052 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.7296655 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.747928245 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.758878586 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.729939685 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.732492892 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.858731648 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.742527072 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.898067943 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.739926765 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.734388871 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.737854318 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.104919617 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.729531823 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.733720297 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.7381626 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.988068787 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.730884826 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.731584171 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.627732079 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.976334452 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.824758354 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.7316478 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.739136689 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.733950616 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.954984715 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.733447524 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.735923309 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.739300292 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.909168737 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.733475454 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.856689554 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.729043043 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.247046408 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.734353184 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.733637634 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.577986144 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.427623091 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.732871521 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.733776263 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.735371488 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.733298178 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.734875349 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.738991195 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.445388189 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.733734627 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.804844295 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.736300181 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.738363904 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.741314557 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.734570563 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.960426897 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.731529396 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.160676088 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.788632244 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.972971493 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.856361843 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.735572326 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.801429881 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.827239272 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.7321345 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.734242046 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.734694811 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.735535446 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.815263326 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.731718685 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.865928779 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.738924031 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.735303939 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.786314059 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.804763178 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.73348212 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.63015818 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.736513074 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.735338291 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.068772709 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.736949032 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.804121461 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.733980037 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.736442752 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.737606023 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.869052098 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.856342762 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.522657999 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.736750087 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.491833728 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.727360267 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.919328465 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.723312248 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.911887011 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.726381747 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.808538029 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.726489981 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.725827513 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.725738317 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.757254767 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.72478346 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.783818598 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.724730666 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.099558383 seconds)
  done (took 399.01539903 seconds)
done (took 773.200065913 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.393303435 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.340685418 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.449999232 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.361806398 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.343098608 seconds)
  done (took 13.547288999 seconds)
done (took 15.208433311 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.811868503 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.817849101 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.751187042 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.819125531 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.751618039 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.815537195 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.800349509 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.751475083 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.786253425 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.753432893 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.789789927 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.75572045 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.73948668 seconds)
  done (took 24.80927452 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.964270785 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.96484532 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.804098794 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.962285399 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.777899682 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.958079658 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.888438059 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.876054588 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.878057512 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.744012804 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.742001531 seconds)
  done (took 22.224650451 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.959236901 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.97017424 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.805688424 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.980349336 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.785001617 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.977776983 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.895484698 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.884178606 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.89030148 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.745746708 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.746183419 seconds)
  done (took 22.303177016 seconds)
done (took 70.999484257 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.740195262 seconds)
  done (took 3.406467972 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.764347409 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.917625366 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.741458978 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.744254486 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.738671854 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.738363245 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.747829749 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.736162903 seconds)
  done (took 15.795967918 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.742700721 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.738526767 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.735533365 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.738564535 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.734821367 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.735472601 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.738391482 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.738236166 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.735528849 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.744029374 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.739263159 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.742667505 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.742447625 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.746365607 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.74053642 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.738765074 seconds)
  done (took 29.499903259 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.73905027 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.738580217 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.739621616 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.746373323 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.738537616 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.743351157 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.741935031 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.741757064 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.742065346 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.737962007 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.74261101 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.742319241 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.740962534 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.74007883 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.739075415 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.746529844 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.737628769 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.74027537 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.745005306 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.742009871 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.745505436 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.741817084 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.741885448 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.740964431 seconds)
  done (took 43.466888455 seconds)
done (took 93.832950733 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.655525041 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.152722012 seconds)
  done (took 8.476882009 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.746565041 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.745431709 seconds)
  done (took 5.201362162 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.740220674 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.741466365 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.742237812 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.743214298 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.747222111 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.744330093 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.741495387 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.743185778 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.743237928 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.742555245 seconds)
  done (took 19.100841696 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.749588582 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.743111392 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.745473521 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.745410306 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.745434173 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.742675675 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.746175752 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.744999071 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.745583978 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.74135154 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.74829582 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.745912265 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.744855085 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.745334114 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.744806582 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.744762511 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.744698277 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.735583948 seconds)
  done (took 33.07927659 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.743448726 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.743102015 seconds)
  done (took 5.158098179 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.741822977 seconds)
    (2/7) benchmarking "second"...
    done (took 1.740866779 seconds)
    (3/7) benchmarking "month"...
    done (took 1.740143518 seconds)
    (4/7) benchmarking "year"...
    done (took 1.741172497 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.747083469 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.744071956 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.741091132 seconds)
  done (took 13.863283141 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.744064089 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.905009741 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.977421142 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.400862837 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.746304803 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.749686487 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.744715312 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.749029448 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.753706042 seconds)
  done (took 19.439002558 seconds)
done (took 105.987504465 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.555025492 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.745443863 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.109750368 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.866071903 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.754996302 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.081920876 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.756180358 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.043065819 seconds)
done (took 42.587908163 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.795929046 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.278815454 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.315606199 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.097550559 seconds)
  done (took 12.360186302 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.720333098 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.296063113 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.775704591 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.316656371 seconds)
  done (took 19.800317988 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.1074846 seconds)
    (2/2) benchmarking "read"...
    done (took 2.094722634 seconds)
  done (took 5.876122486 seconds)
done (took 46.501597632 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.74034218 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.742053352 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.74058994 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.745630169 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.738283062 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.739731319 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.740941591 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.73751432 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.73975144 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.743252401 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.741060637 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.740810347 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.744430715 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.739738829 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.738905349 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.746916188 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.739806702 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.7397003 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.738899219 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.738677223 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.744321908 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.741201837 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.739102327 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.741614247 seconds)
  done (took 43.450172122 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.74188825 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.740162575 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.740795479 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.741096059 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.739876958 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.742163112 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.741820872 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.742535274 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.745554912 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.74061653 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.740589968 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.738088026 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.74292789 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.745874309 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.741977587 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.74203826 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.740708901 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.740500513 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.747070579 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.743083946 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.74348781 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.740501533 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.738234345 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.743081784 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.742715605 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.738276136 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.742957656 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.739901882 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.743685788 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.740893968 seconds)
  done (took 53.924359213 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.746787291 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.745640153 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.742717051 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.743747117 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.743017671 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.746004103 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.739483291 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.740395987 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.741104658 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.740883555 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.744521601 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.74133578 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.744111863 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.742762732 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.744969487 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.740282667 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.746015163 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.739800903 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.742384116 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.739879139 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.741687137 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.745329583 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.74290506 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.740557946 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.740229929 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.742591635 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.74285132 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.740802933 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.744982431 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.740842806 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.74341601 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.742229223 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.743416294 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.743079734 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.742576952 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.743236726 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.747717957 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.751738653 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.739369025 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.749446497 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.74646029 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.748840874 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.746139941 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.746380169 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.747345887 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.751209794 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.747125861 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.744993931 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.746969245 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.748516346 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.749263096 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.74767672 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.748676147 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.748485003 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.749501305 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.74626587 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.75397356 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.744636788 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.747432478 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.747596938 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.747574577 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.749116716 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.753511798 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.743223725 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.748020521 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.744733031 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.747309682 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.744907571 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.754425037 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.749577325 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.750766117 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.749095134 seconds)
  done (took 127.336470481 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.752118491 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.7382405 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.738879541 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.741162562 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.739554471 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.743051788 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.749486078 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.743428639 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.741083026 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.743527995 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.747678332 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.743257597 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.747622519 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.741189103 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.745075797 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.744420092 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.741954495 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.739778524 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.75205663 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.74620205 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.742689741 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.742580919 seconds)
  done (took 40.037610243 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.750224835 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.742880832 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.741579191 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.746149953 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.7437346 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.741961217 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.75673701 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.751302953 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.746429707 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.742844231 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.742551533 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.749259002 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.749519853 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.744916079 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.745785064 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.745272276 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.748159509 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.741210781 seconds)
  done (took 33.102044108 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.742959123 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.743948917 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.74995978 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.742450732 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.744362957 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.744622105 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.741706631 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.746486588 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.746415608 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.743435914 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.745325489 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.742790392 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.745438577 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.744332992 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.744273961 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.744574018 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.750365098 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.744433035 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.746744963 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.744385106 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.743144983 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.748650467 seconds)
  done (took 40.067581609 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.747263027 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.745000756 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.743830454 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.743097959 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.743891402 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.750071347 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.750063364 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.747618055 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.748743895 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.748742808 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.744362445 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.747433905 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.745366412 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.744866963 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.745779279 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.748306631 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.750057165 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.744305737 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.747749097 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.743563165 seconds)
  done (took 36.603825088 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.746973046 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.750100705 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.748991167 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.749825494 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.751062733 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.749808217 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.74904174 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.750678696 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.745592841 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.750434826 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.748681845 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.752472713 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.753900044 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.746573614 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.747532768 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.747170555 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.753235265 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.749305253 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.753552148 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.753220809 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.751218104 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.753212792 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.750134806 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.751560255 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.749441751 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.748127705 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.751120955 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.750879962 seconds)
  done (took 50.676878673 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.750193232 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.75217789 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.74638347 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.745238738 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.749563413 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.749020931 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.756512389 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.74782234 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.755625025 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.751366643 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.751682725 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.752149649 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.75201979 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.752323019 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.755241436 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.752957641 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.753828665 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.752750267 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.745221643 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.744201638 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.7477803 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.751263542 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.747184287 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.746286217 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.743816984 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.747687753 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.745285959 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.745211122 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.748901356 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.746916185 seconds)
  done (took 54.162987396 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.766807646 seconds)
    (2/2) benchmarking "in"...
    done (took 1.76731462 seconds)
  done (took 5.207406808 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.745977238 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.751554392 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.749365787 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.747602954 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.745152858 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.748866749 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.749569874 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.744837095 seconds)
  done (took 15.657780216 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.746051672 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.74902242 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.750640178 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.749689746 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.750462969 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.746035583 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.752797057 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.749161121 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.749085336 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.75192923 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.755982636 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.755048331 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.752956605 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.750347042 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.753546184 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.753122231 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.754026325 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.755572356 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.753632022 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.753152558 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.76212095 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.75297872 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.755151425 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.753517382 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.75337856 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.761758617 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.759939386 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.750953974 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.748112469 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.754377637 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.751540269 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.747417522 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.752591673 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.750603831 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.753669831 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.751552663 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.75616904 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.751607705 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.753349817 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.752187526 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.750792162 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.747420702 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.751323382 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.752267482 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.752693603 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.752875817 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.751760235 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.74725783 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.749185721 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.755428946 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.755733296 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.750127768 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.75054877 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.75229322 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.754886731 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.758484455 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.75170547 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.751824204 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.759066359 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.759905366 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.765640658 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.755490442 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.749742076 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.754229211 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.76051023 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.774542638 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.759618539 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.749334155 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.749583575 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.75367716 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.759721068 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.769804819 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.760211184 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.755433899 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.752398951 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.751132573 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.751226898 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.757299123 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.755698929 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.751852432 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.75269134 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.75323617 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.759671646 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.776930316 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.748422921 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.751843863 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.754344028 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.753439861 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.751598754 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.761322029 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.753812742 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.753035216 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.750446403 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.751221747 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.754366098 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.755094672 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.751068763 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.751482526 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.750700576 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.756238941 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.756225713 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.754766522 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.760350297 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.753086492 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.754081892 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.757767831 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.75636902 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.751058626 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.757719528 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.753334797 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.755668581 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.753825694 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.758641103 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.750383398 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.753989921 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.760076223 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.753716309 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.754135999 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.754963616 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.754751133 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.760746497 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.778655514 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.754494507 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.755854643 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.757171604 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.766849295 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.754899097 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.753591462 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.757028788 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.752668268 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.752240935 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.754680456 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.753961231 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.753426469 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.759065464 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.753801334 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.752689036 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.755512157 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.75595553 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.753167364 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.755638274 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.756920632 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.755449874 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.755635874 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.757134142 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.753724834 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.760655263 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.754382079 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.755089971 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.756116206 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.75399489 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.756698426 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.755623951 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.758793832 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.753562735 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.75922676 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.753674142 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.759356335 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.757468484 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.756769183 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.757251268 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.756069296 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.756857103 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.759085694 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.756829118 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.753345766 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.754495843 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.756871616 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.758608034 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.756511346 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.758015241 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.755631358 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.757658421 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.765835104 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.759331399 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.75906094 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.757709323 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.757413047 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.758209218 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.758721131 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.759629384 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.76413828 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.75932485 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.762635283 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.757835957 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.759180384 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.758631097 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.757167681 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.755880262 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.758656119 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.758336316 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.766556854 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.767893683 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.765813358 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.756506918 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.762234694 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.757190348 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.764826718 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.760556832 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.760496634 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.758432368 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.75984596 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.759113019 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.759797132 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.758029452 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.759715275 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.75493214 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.759228936 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.759492159 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.7583634 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.759104604 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.758358988 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.758447139 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.757342196 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.762033632 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.761353083 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.75642459 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.757281064 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.75717459 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.75930203 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.760683952 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.760402083 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.765689922 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.756938427 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.760286281 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.762168788 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.757267005 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.756001996 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.759891645 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.759731235 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.758366364 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.764165349 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.758865124 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.758321699 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.764731558 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.759098504 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.758977543 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.763086816 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.760687951 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.758913106 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.762296608 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.768144156 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.76221729 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.76166302 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.763357662 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.759519751 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.760974166 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.764759382 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.758274316 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.75958001 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.760632318 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.760782495 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.759446408 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.762751874 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.76030816 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.759784966 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.763715523 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.761707818 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.761785233 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.762487816 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.763312658 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.76180552 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.760371933 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.761864836 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.77023293 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.765268376 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.758988484 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.761368157 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.760799712 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.767499052 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.759494233 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.762884891 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.761068799 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.772722763 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.770521572 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.766232011 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.761688925 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.761517987 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.764611187 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.761564555 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.764167278 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.761668379 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.763070853 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.761764841 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.760456682 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.759268023 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.762842672 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.763216026 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.762411857 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.760381366 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.766940547 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.76200024 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.758954783 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.764454581 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.762606358 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.761751009 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.761118557 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.762853398 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.764307824 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.763578118 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.75980502 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.762097083 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.767564572 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.760774332 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.763357615 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.761265874 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.763869906 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.760841812 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.762371223 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.765095542 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.765485415 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.771759475 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.766180466 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.771410179 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.762773248 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.772080253 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.768318509 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.766781691 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.773574739 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.762788322 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.763095766 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.762667349 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.765985108 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.768789857 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.764444894 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.763823421 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.768607634 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.765917674 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.765202157 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.763788983 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.764675294 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.764523109 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.766561913 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.774612953 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.764157078 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.765808981 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.76443348 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.76168985 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.766010648 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.765342044 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.762414375 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.766813874 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.76571602 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.763913 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.76450179 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.763374813 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.764946097 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.766489884 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.765867544 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.762235032 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.766162143 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.770154704 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.764010928 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.772092445 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.766045153 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.772104373 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.766284322 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.769471127 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.767300295 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.763662739 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.767356821 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.769292234 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.766989191 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.764100438 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.765370651 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.768081466 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.7658921 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.77187168 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.766660277 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.766929107 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.765132807 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.767788332 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.764477516 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.775447223 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.791221169 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.766500614 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.771250074 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.764090084 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.766807354 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.773369436 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.767628207 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.764301199 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.768408168 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.776785983 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.776686893 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.766337214 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.768239009 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.766311768 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.768174626 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.768811739 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.768374966 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.768494225 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.767853274 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.767044678 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.770122503 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.772395623 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.767980215 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.766966712 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.768026968 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.768079468 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.776713428 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.771494802 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.76751431 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.769665819 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.768581782 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.767151798 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.768756287 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.769694788 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.767526202 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.769080734 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.76833658 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.774556219 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.774765487 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.770320364 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.766418585 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.771448567 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.767192462 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.768371686 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.772882681 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.770801909 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.771038983 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.768955118 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.770210068 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.771331734 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.767968052 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.770945121 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.768531113 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.771051341 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.771856811 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.776835718 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.768723496 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.766143357 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.770656562 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.771121088 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.768547592 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.771711821 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.776990915 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.771392928 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.778394792 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.776774537 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.77720239 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.76861096 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.773529654 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.777451118 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.767851448 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.769714313 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.772767203 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.770543256 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.769738545 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.77384804 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.771874533 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.774419701 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.768697395 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.768681569 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.778609399 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.770263879 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.770150872 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.771818691 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.774017208 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.771264304 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.767720554 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.77179946 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.769931828 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.7778499 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.77051613 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.773015787 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.771217934 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.768098472 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.771951182 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.777295124 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.77208618 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.771197218 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.769076702 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.771496229 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.77546542 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.771636271 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.770088658 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.770304028 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.771057181 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.774321997 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.778860236 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.76971319 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.772496025 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.770391766 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.771201677 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.775736089 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.773444312 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.769640083 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.769246672 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.770416944 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.77325884 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.771687438 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.774385111 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.769213522 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.772752057 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.773661295 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.773510556 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.776691582 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.780077092 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.780874843 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.770920462 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.771371776 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.773655357 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.774395299 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.77392425 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.775331131 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.772138645 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.773626459 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.773468965 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.774434848 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.773342949 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.775176949 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.787078746 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.773502197 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.773526635 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.772442229 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.776421445 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.774790646 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.772941126 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.77504632 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.774124617 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.776245726 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.78312272 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.775315981 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.779470888 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.773250619 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.773101639 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.778924136 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.774891254 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.781140463 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.775816107 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.776891833 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.774606884 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.77786866 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.790056806 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.7756613 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.783504462 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.802110979 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.773450374 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.776063052 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.77699846 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.773364151 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.777246016 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.775635114 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.777686196 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.776069548 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.776134205 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.776943114 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.775962002 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.780479305 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.775010633 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.777259689 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.77572047 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.775087274 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.775193815 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.774793974 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.778114876 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.77698964 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.77805065 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.779609501 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.777788438 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.776962239 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.787478339 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.785122093 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.777692786 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.777924896 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.773289212 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.778266638 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.778291533 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.785827179 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.787157425 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.777412836 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.778600671 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.77608694 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.778899669 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.775417259 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.775629126 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.776581096 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.776283886 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.777014526 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.78780532 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.788679883 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.780154681 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.776533375 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.779070705 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.777921073 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.776841808 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.780258878 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.778723738 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.777342239 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.777091255 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.783307076 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.778614454 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.778369903 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.781594579 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.785851049 seconds)
  done (took 1053.48846876 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.776706397 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.776183689 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.778003773 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.776412242 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.77592033 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.776754528 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.77518542 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.778026649 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.776225131 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.776607472 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.775541177 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.776459791 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.776665494 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.775274375 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.776376313 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.776504629 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.776548089 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.776142139 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.778267756 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.776376834 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.775476427 seconds)
  done (took 39.009265026 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.78058664 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.77668632 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.777687919 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.780146712 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.777548865 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.779076154 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.776903286 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.781952957 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.78021745 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.777589096 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.779489229 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.780279197 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.777242576 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.77818112 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778439944 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.780410726 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.780838241 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.777970315 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.783941931 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.779923306 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.781702034 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.778984866 seconds)
  done (took 40.849527176 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.782572862 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.784195988 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.77861469 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.778443901 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.781941946 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.777718797 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.781689633 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.781962238 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.77995398 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.78121346 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.779685318 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.781128388 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.786629725 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.787297237 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.781104026 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.783724546 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.927130041 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.782201445 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.783116384 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.78286778 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.780491351 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.78618519 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.778237852 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.779359138 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.78097439 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.783074736 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.782722681 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.782455017 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.782149065 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.783509586 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.787083287 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.783989208 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.781008683 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.782415347 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.779281883 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.780100325 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.785213113 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.783875497 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.781743435 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.783743974 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.789744589 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.801483293 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.784029042 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.785555945 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.782749119 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.78380016 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.784463493 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.791673124 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.780771706 seconds)
  done (took 89.221627399 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.782390822 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.784110394 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.779397177 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.783171714 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.783185633 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.783370877 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.783302289 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.783681709 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.781809568 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.780373759 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.785571679 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.779948155 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.78101041 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.785365821 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.783830303 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.78068942 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.780507355 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.78133081 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.782842379 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.782203116 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.781778779 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.784792848 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.783694725 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.78280529 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.784660403 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.78121418 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.781672573 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.784823984 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.7826151 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.783634606 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.785392527 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.784819199 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.785534889 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.781965848 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.782562544 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.787894387 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.784228527 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.780992693 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.785957367 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.781476223 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.785794855 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.786325044 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.786125921 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.785504735 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.782955654 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.782014809 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.784545812 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.784175 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.782468886 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.785581615 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.786137799 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.783153096 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.787220885 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.782585121 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.78581976 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.787013172 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.782661653 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.782984826 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.78818799 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.782271063 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.78409371 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.785231807 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.782527475 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.78679113 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.785614437 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.783229081 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.7837698 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.784605688 seconds)
  done (took 123.000157047 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.7883932 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.78727702 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.787590425 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.786626331 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.787368964 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.788344685 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.787263995 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.787703986 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.787145915 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.786582393 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.787030883 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.787661742 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.78680934 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.787451528 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.787999677 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.787644241 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.789004535 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.790055684 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.788860173 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.787977431 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.789212348 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.787812471 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.790721349 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.789699042 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.789127401 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.787686554 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.789261381 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.788634453 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.789049898 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.788887211 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.788500265 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.788835153 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.788895992 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.791262098 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.790104655 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.789222746 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.789448578 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.788927989 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.789243508 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.791383715 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.788124674 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.787800713 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.787262952 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.789329288 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.787286121 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.787922825 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.788902228 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.78995914 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.78799936 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.787011713 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.79020973 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.788834183 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.788956413 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.788921165 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.789506675 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.7868922 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.790549917 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.788778473 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.788373234 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.789754569 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.789006531 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.789863024 seconds)
  done (took 112.604921713 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.788260918 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.788780098 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.787079848 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.786793926 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.791274539 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.78654027 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.790464692 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.789158157 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.789706825 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.78926259 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.790817323 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.788291636 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.789323796 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.790583775 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.787281707 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79075269 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.787143138 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.78761942 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.790218728 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.788212842 seconds)
  done (took 37.493345309 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.788067993 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.790470498 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.787428525 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.787641585 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.78889153 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.787954827 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.789340063 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.790791052 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.787779257 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.791454049 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.790283426 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.793075158 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.786844664 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.787526911 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.790950201 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.788749298 seconds)
  done (took 30.341554574 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.788372072 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.790947781 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.790423445 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.790588056 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.787323777 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.791288681 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.791566155 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.788486741 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.787994479 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.792116608 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.791736328 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.79224407 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.790643605 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.792198963 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.789247648 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.791939276 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.79060376 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.787852964 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.79153884 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.792801014 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.789494679 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.789513146 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.793597435 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.792299522 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.789564462 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.790344965 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.789926236 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.789991459 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.789995545 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.791621281 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.789136517 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.790931512 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.789948884 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.791413602 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.793862201 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.790582425 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.793230896 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.794348454 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.793211119 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.79279331 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.792785358 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.790474856 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.794974033 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.793378245 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.791806747 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.792190953 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.791235908 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.791800247 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.790988824 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.791431208 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.794021852 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.794849396 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.793942494 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.794698609 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.794129954 seconds)
  done (took 100.244155279 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.795387552 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.795738543 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.790625529 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.794744215 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.795188522 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.793799722 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.794869485 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.790882366 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.790324065 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.794838928 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.793535702 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.795298245 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.791565346 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.796095522 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.793284348 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.795786815 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.79453132 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.792475692 seconds)
  done (took 34.008897424 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.793125352 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.792769698 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.796498641 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.793546761 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.79219806 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.795832175 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.792749068 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.79670656 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797387263 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.793098553 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.794836723 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.79641429 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.796995123 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.800497435 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.797900315 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.7958978 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.79787453 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.798293584 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.795064535 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.796519171 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.797472523 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.795691638 seconds)
  done (took 41.227559828 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.79200589 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.794035314 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.810050169 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.814681279 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.815140241 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.829555647 seconds)
  done (took 12.575887033 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794137379 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79808669 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.793159532 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.796381598 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.796321129 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793960709 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793440658 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.795166278 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796535902 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.795175275 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793287964 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.797353387 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797187167 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794020075 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796748059 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.796711348 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794464058 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.795938115 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795045109 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.797643504 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794773687 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.797596685 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794667558 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794935889 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795013566 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.795445088 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.798404887 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796412097 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795064567 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.799042448 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.798688694 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795620042 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.798906142 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795410133 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.799605456 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.797299408 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.7965395 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.798835634 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.798268842 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.796041786 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.799025083 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.7986738 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79781467 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794704815 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.798649047 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.797197461 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.796944266 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795712797 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.795330879 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.799687373 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.800017387 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.795857999 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.799785091 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.797683704 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.79929106 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.798831065 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.798304129 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.797324829 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.799107496 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.797808944 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.796559665 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.799822617 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.797407729 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795042556 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.800206179 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.797365614 seconds)
  done (took 120.314465444 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.800344877 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.798287341 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.799410528 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.799204536 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.799711693 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.799841835 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.799738839 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.798925861 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797791837 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.797289333 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.800508801 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.798120665 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.796200888 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.797831844 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.798622273 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.797825983 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797421102 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.798246823 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.797746998 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.800781037 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796838664 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.798065946 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.799415362 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.798962691 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.798689421 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802595418 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.798226609 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797971337 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.799666473 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.797924683 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.798661941 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.798772817 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.79948054 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.799195654 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.798188166 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.799434933 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.798590787 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.799748558 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.799138043 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804359507 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.798873872 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.803774998 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.799429671 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.799294883 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.799795584 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.800901543 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.799652726 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.799081692 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.800453645 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.800864067 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.801113053 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.801260304 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800042117 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.800405268 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.798964552 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.799931237 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800304195 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.801060776 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.800660482 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80338037 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80099101 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.801213919 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.804180023 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.800237757 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.802169951 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800008985 seconds)
  done (took 120.50326996 seconds)
done (took 2456.778725607 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.841556526 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.065500442 seconds)
  done (took 15.63347069 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.962755331 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.916839948 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.801239399 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.850574129 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.798362681 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.823450641 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.82028684 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.798773533 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.799550212 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.801828713 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.80070811 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.991895256 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.801794669 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.798593402 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.800205013 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.895446991 seconds)
  done (took 51.195684423 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.805411617 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.806830691 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.815653988 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.80569932 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.804837442 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.824617287 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.837850884 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.808955456 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.864758914 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.81824422 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.92410524 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.817244666 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.806698191 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.875411316 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.81668722 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.818760255 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.90254536 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.885150848 seconds)
  done (took 34.768267058 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.886467706 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.80402195 seconds)
  done (took 10.428528864 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.830826399 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.813926512 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.824179215 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.803918519 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.822822703 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.822767541 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.800688451 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.802511697 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.807045673 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.80330817 seconds)
  done (took 69.864016341 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.810888432 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.805187085 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.805720886 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.804954586 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.797655567 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.801041074 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.806889874 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.803757105 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.499319352 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.8401371 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.812311298 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.811499971 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.805362612 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.80714817 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.807422241 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.829017084 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.929664123 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.807285796 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.805218362 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.811790917 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.807333418 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.861001534 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.819318891 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.808653927 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.83520726 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.502066589 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.81356296 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.812148387 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.928970015 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.806740719 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.806581746 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.805202425 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.809202328 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.187754591 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.102010034 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.804746156 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.813077439 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.813150493 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.805952903 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.935220444 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.806968548 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.812881253 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.757410414 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.092427742 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.916691118 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.856328701 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.19911564 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.808718483 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.807353959 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.837558131 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.809665047 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.80717501 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.818307326 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.320591067 seconds)
  done (took 129.268450892 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.803114321 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.064123806 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.959188022 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.80372646 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.090441533 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.012839412 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.802935084 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.851809934 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.805062758 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.036815962 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.025969387 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.913986953 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.802274563 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.801996312 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.801685817 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.800107901 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.967599679 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.879320867 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.804455699 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.801505859 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.834810916 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.054016607 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.934715976 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.806335669 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.826085945 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.017827092 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.930823434 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.914958395 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.275217097 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.804261547 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.870439173 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.805078127 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.805653511 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.803060306 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.962044805 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.905761063 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.894371443 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.805590267 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.801285885 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.802298519 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.477332694 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.00195913 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.902751945 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.950811137 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.062010792 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.013500235 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.593098226 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.803255891 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.542818286 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.965622962 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.039976454 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.046632306 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.931637939 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.808033859 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.071179519 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.805305804 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.802910776 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.041281058 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.050367283 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.910757877 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.806654997 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.803915301 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.80248874 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.054424461 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.80532064 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.900022306 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.806479573 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.804569655 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.90311178 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.910141973 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.054989644 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.019465156 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.839386911 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.103963331 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.279747717 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.057270433 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.87591303 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.040843122 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.80506436 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.802585672 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.893332142 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.656201645 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.006752601 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.058912876 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.064022583 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.844757733 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.527246435 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.805402375 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.036638048 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.031877188 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.096114756 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.048474551 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.960718269 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.133297168 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.804522089 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.805684835 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.045913258 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.946797104 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.807856847 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.169992989 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.041866525 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.387278789 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.837470379 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.11878083 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.943089325 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.807334935 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.451173552 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.806728917 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.036440374 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.850552723 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.807843207 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.807484898 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.029369887 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.78885224 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.807651192 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.520874517 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.873488559 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.8069392 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.043836415 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.808503099 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.075672645 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.807466897 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.053526592 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.218209274 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.840974403 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.981906024 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.052746739 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.807789836 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.067930246 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.056966898 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.928548211 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.081937416 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.733192865 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.807943889 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.101577022 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.81025752 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.808455915 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.98393038 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.810253113 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.044332376 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.807391215 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.100507606 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.834701394 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.969198914 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.809891758 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.07426985 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.845105583 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.862884079 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.810790803 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.942446597 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.810093294 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.694387378 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.963779461 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.810886421 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.808739893 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.341592403 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.810884378 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.969617328 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.04912868 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.835677876 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.885759375 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.479982092 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.808806989 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.899668248 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.838315527 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.155327896 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.809453264 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.026005969 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.809508174 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.335994747 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.810044979 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.057463718 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.042688057 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.813043875 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.809681799 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.715746272 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.81012883 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.810129731 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.972710213 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.63822069 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.810877907 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.017642355 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.811621618 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.943352721 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.813178725 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.895635001 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.162721603 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.805011542 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.807672448 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.802523863 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.803837537 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.80222599 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.012485001 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.830762576 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.331541715 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.940518314 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.073405745 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.11879645 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.057141155 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.847771594 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.799403807 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.044588325 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.796895132 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.861148701 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.797638153 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.819353031 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.03096328 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.798735381 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.011242445 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.084430143 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.721452034 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.844349201 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.793639834 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.788625529 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.709220506 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.944929541 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.881572899 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.79056199 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.786464585 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.90621117 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.914906711 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.00161324 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.788397307 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.014765851 seconds)
  done (took 889.421413217 seconds)
done (took 1202.306026777 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.783669152 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.787150604 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.76982438 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.785829151 seconds)
  done (took 28.843934005 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.795504757 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.791625859 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.794987366 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.793428389 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.794116509 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.791733759 seconds)
  done (took 12.479689426 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.817975193 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.784984608 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.785996477 seconds)
  done (took 21.108291832 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.860783631 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.207012718 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.904619762 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.238739132 seconds)
  done (took 9.930838426 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.79633785 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.795472338 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.794881888 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.795706566 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.79681371 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.798431166 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.793532863 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.794885739 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.797397035 seconds)
  done (took 17.884552545 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.128423313 seconds)
done (took 96.095160595 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.954764731 seconds)
    (2/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.026991022 seconds)
    (3/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.828231181 seconds)
    (4/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.880281475 seconds)
    (5/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.813526598 seconds)
    (6/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.066993501 seconds)
    (7/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.90555794 seconds)
    (8/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.159754635 seconds)
    (9/309) benchmarking ("sort", Int8, false)...
    done (took 4.821551378 seconds)
    (10/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.798955297 seconds)
    (11/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.88743182 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.943965988 seconds)
    (13/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.009877298 seconds)
    (14/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.800684686 seconds)
    (15/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.820945231 seconds)
    (16/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.073851896 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.860112133 seconds)
    (18/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.900002575 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.840972154 seconds)
    (20/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.798916474 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 8.040927211 seconds)
    (22/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 3.21382123 seconds)
    (23/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.933808018 seconds)
    (24/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.143440045 seconds)
    (25/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.17525131 seconds)
    (26/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.157747577 seconds)
    (27/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.095824345 seconds)
    (28/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.921886876 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.079287479 seconds)
    (30/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.784904255 seconds)
    (31/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.973964635 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.92624466 seconds)
    (33/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.214496192 seconds)
    (34/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.106481767 seconds)
    (35/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.682440147 seconds)
    (36/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.89057818 seconds)
    (37/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.417791283 seconds)
    (38/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.738417949 seconds)
    (39/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.020200587 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.941255022 seconds)
    (41/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.909918433 seconds)
    (42/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.418495219 seconds)
    (43/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.137732993 seconds)
    (44/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.937543891 seconds)
    (45/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.277575598 seconds)
    (46/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.374692636 seconds)
    (47/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.791645402 seconds)
    (48/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 3.818715277 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.194723453 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.871129065 seconds)
    (51/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.794190477 seconds)
    (52/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.860529131 seconds)
    (53/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.290695828 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.15500086 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.925737252 seconds)
    (56/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.889739471 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.072635202 seconds)
    (58/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.110534294 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.60913755 seconds)
    (60/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.035260723 seconds)
    (61/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.835635398 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.717916005 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.810795989 seconds)
    (64/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.872261547 seconds)
    (65/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.821016845 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.863921338 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.194147363 seconds)
    (68/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.265423385 seconds)
    (69/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.888324144 seconds)
    (70/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.788837823 seconds)
    (71/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.80727229 seconds)
    (72/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.422828084 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.127890749 seconds)
    (74/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.855256798 seconds)
    (75/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.800021454 seconds)
    (76/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.47055352 seconds)
    (77/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.928842871 seconds)
    (78/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.940750156 seconds)
    (79/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.801493889 seconds)
    (80/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.866732419 seconds)
    (81/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.785440067 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 5.559437967 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.897546474 seconds)
    (84/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.791807869 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.873393724 seconds)
    (86/309) benchmarking ("sort", BigInt, false)...
    done (took 6.799203055 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.504982123 seconds)
    (88/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.891782633 seconds)
    (89/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.065155849 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.002069613 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.895850446 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.444671923 seconds)
    (93/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.368811249 seconds)
    (94/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.865936427 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.80059467 seconds)
    (96/309) benchmarking ("sort", Float64, false)...
    done (took 7.368909759 seconds)
    (97/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.232231668 seconds)
    (98/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.945560621 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.094433982 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.902059447 seconds)
    (101/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.648632724 seconds)
    (102/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.895782304 seconds)
    (103/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.921659848 seconds)
    (104/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.785500127 seconds)
    (105/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.319533968 seconds)
    (106/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.994315115 seconds)
    (107/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.144464235 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.021026257 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.786723127 seconds)
    (110/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.979386751 seconds)
    (111/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.95880779 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.603740947 seconds)
    (113/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.99515336 seconds)
    (114/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.901857496 seconds)
    (115/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.805008526 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.881686167 seconds)
    (117/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.69662951 seconds)
    (118/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.155448879 seconds)
    (119/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.967482091 seconds)
    (120/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.828376722 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.492538046 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 2.251897128 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.826680666 seconds)
    (124/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.886286317 seconds)
    (125/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.788115806 seconds)
    (126/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 10.312957315 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.227638612 seconds)
    (128/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.925150771 seconds)
    (129/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.841394242 seconds)
    (130/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.002994575 seconds)
    (131/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.502116873 seconds)
    (132/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.93014901 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.048240495 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.086143407 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.099990036 seconds)
    (136/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.951445934 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.110895771 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.957435613 seconds)
    (139/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.119439078 seconds)
    (140/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.033090185 seconds)
    (141/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.997031919 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.940909748 seconds)
    (143/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.048607595 seconds)
    (144/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.160598329 seconds)
    (145/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.959957569 seconds)
    (146/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.975837856 seconds)
    (147/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.826599761 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.951171801 seconds)
    (149/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.865844359 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.900130533 seconds)
    (151/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.971216779 seconds)
    (152/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.127109697 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.046580095 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.84581332 seconds)
    (155/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.90715942 seconds)
    (156/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.003613386 seconds)
    (157/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.956769349 seconds)
    (158/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.815797089 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.872897923 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.923177006 seconds)
    (161/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.004728293 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.115401308 seconds)
    (163/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.747613954 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.518343754 seconds)
    (165/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.097657542 seconds)
    (166/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.831770839 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.816076221 seconds)
    (168/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.010735986 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.933849458 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.140178838 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.798633856 seconds)
    (172/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.879152411 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.837394887 seconds)
    (174/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.664959336 seconds)
    (175/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.326595214 seconds)
    (176/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.135156159 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.750754595 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.209744349 seconds)
    (179/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.990615244 seconds)
    (180/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.196015275 seconds)
    (181/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.809863312 seconds)
    (182/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.988804845 seconds)
    (183/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.899972906 seconds)
    (184/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.788829298 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.447295876 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.190311048 seconds)
    (187/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.83089813 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.828023446 seconds)
    (189/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.82322627 seconds)
    (190/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.308886785 seconds)
    (191/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.070395243 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.854769152 seconds)
    (193/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.886051957 seconds)
    (194/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.339017274 seconds)
    (195/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.301233596 seconds)
    (196/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.085229157 seconds)
    (197/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.997430373 seconds)
    (198/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.924568776 seconds)
    (199/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.218962827 seconds)
    (200/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.857565582 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.985335047 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.977260746 seconds)
    (203/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.843646191 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.060068903 seconds)
    (205/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.18283241 seconds)
    (206/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.833399137 seconds)
    (207/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.824782478 seconds)
    (208/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.839660608 seconds)
    (209/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.83935004 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.775209539 seconds)
    (211/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.131613135 seconds)
    (212/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.835492978 seconds)
    (213/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.774461841 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.618403779 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.042041699 seconds)
    (216/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.807845349 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.137163654 seconds)
    (218/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.3834315 seconds)
    (219/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.520839087 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.117827964 seconds)
    (221/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.810539582 seconds)
    (222/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.81975577 seconds)
    (223/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.096057958 seconds)
    (224/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.11855788 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.8322072 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.880949727 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.803410797 seconds)
    (228/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.805951087 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.836461181 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.85365017 seconds)
    (231/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.390162641 seconds)
    (232/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.025496654 seconds)
    (233/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.835470858 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.765388892 seconds)
    (235/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.992727659 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.805486541 seconds)
    (237/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.895742572 seconds)
    (238/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.79020403 seconds)
    (239/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.995333617 seconds)
    (240/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.571674454 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.170367095 seconds)
    (242/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.438263497 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.448881262 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.040344778 seconds)
    (245/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.796139092 seconds)
    (246/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.909251026 seconds)
    (247/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.236374652 seconds)
    (248/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.004591394 seconds)
    (249/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.133124061 seconds)
    (250/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.805611599 seconds)
    (251/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.128750873 seconds)
    (252/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.096974716 seconds)
    (253/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.918126435 seconds)
    (254/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.019943113 seconds)
    (255/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.948894331 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.19752185 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.898004545 seconds)
    (258/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.326686626 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.813608535 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.923433858 seconds)
    (261/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.512108596 seconds)
    (262/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.901344155 seconds)
    (263/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.819519963 seconds)
    (264/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.319729433 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.118559856 seconds)
    (266/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.92097178 seconds)
    (267/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.171670404 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.833502252 seconds)
    (269/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.791980589 seconds)
    (270/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 3.393241785 seconds)
    (271/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.290008767 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.179760029 seconds)
    (273/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.973975193 seconds)
    (274/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.810418503 seconds)
    (275/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.808437918 seconds)
    (276/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.792048554 seconds)
    (277/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 3.259606576 seconds)
    (278/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.883644461 seconds)
    (279/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.279927051 seconds)
    (280/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.900278365 seconds)
    (281/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.730734553 seconds)
    (282/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.81762251 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.037509137 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.8287744 seconds)
    (285/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.139483951 seconds)
    (286/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.216458991 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.754454245 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.904105168 seconds)
    (289/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.808282005 seconds)
    (290/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.182687725 seconds)
    (291/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.807870582 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.891494196 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.604045578 seconds)
    (294/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.066798995 seconds)
    (295/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.940375974 seconds)
    (296/309) benchmarking ("sort", Float32, false)...
    done (took 5.558848828 seconds)
    (297/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.998834265 seconds)
    (298/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.944379101 seconds)
    (299/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.104742069 seconds)
    (300/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.537514184 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.839615801 seconds)
    (302/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.170118757 seconds)
    (303/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.919378712 seconds)
    (304/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.793185816 seconds)
    (305/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.026132278 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.938227447 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.773499846 seconds)
    (308/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.910388887 seconds)
    (309/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.024133132 seconds)
  done (took 1002.252679667 seconds)
done (took 1004.065470842 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.872949557 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.833783991 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.820055807 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.839756571 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.931912961 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.851161487 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.828460892 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.820890895 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.86752942 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.870588301 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.81949757 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.858723251 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.820536143 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.81853284 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.819536972 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.833879266 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.137298826 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.851389744 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.837271511 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.829581591 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.836795528 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.820204732 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.86920927 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.851332408 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.823809601 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.822800843 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.824050842 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.84063208 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.931346715 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.824462589 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.822936223 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.834561754 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.134781574 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.847802958 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.813669003 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.838590057 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.830882019 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.828739524 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.821338798 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.848982216 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.282757748 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.822197055 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.823614529 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.816558302 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.815711184 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.818846026 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.817423918 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.823592884 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.825033964 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.826256479 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.274648429 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.833884517 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.81609008 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.813762737 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.822467315 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.812112728 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.816059113 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.828640741 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.832009823 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.827976861 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.11748115 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.846571847 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.816623617 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.830926819 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.821543397 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.31093716 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.817735935 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.818384051 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.279442918 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.825139014 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.310245961 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.828541446 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.814611686 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.827857642 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.845001443 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.128630967 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.837951607 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.813602901 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.822768775 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.814022793 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.824265375 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.827480441 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.818822309 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.816607431 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.827959556 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.846780064 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.824471761 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.816613774 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.822669765 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.833110203 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.824217201 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.826757545 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.818423936 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.810107946 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.82459178 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.817666915 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.818002249 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.817763266 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.819897007 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.824638542 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.276368587 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.837910949 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.81169789 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.812582673 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.81519712 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.829065509 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.27809457 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.823008547 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.836775517 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.863368818 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.816681687 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.12126466 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.848611097 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.832351118 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.825409457 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.819019241 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.811274703 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.121310072 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.308877004 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.837652176 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.81969756 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.815235553 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.8336884 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.818291478 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.812868618 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.132664568 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.845596143 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.830535283 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.938029591 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.825902772 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.84908695 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.816843252 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.819350968 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.849676044 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.832463304 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.848769797 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.819703186 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.833363188 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.834678581 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.813432716 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.828920382 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.82708173 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.819524069 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.822801604 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.812369735 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.851906327 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.829687916 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.832177139 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.840234258 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.939718755 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.816129518 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.123352985 seconds)
done (took 286.243498305 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.886710723 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.814757322 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.914380879 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.818612055 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.8994062 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.903454942 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.814732659 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.814513373 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.814312959 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.186339934 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.815191365 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.815207938 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.811328506 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.81454905 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.899307425 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.817618891 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.815366142 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.152117656 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.817783971 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.889087949 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.810828552 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.814040581 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.818892828 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.190565058 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.81417357 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.812378247 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.890571976 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.81841753 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.153252422 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.808535891 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.81027496 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.155312888 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.908285786 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.834993667 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.829861906 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.82466356 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.899567394 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.821916044 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.897529267 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.896973503 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.92038642 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.86061368 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.813278471 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.810624221 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.821624014 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.820495789 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.817002165 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.844207608 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.817437155 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.816796302 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.15287383 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.828500192 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.82679685 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.815625361 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.81728648 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.840411208 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.818573281 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.820758862 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.912171452 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.822479393 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.880330049 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.192885671 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.231899648 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.820469436 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.81145394 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.81683711 seconds)
  done (took 180.816393671 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.883660809 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.893221438 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.886420155 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.820804475 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.868289013 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.888132896 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.822146902 seconds)
  done (took 14.802523691 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.823978326 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.818883869 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.868251183 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.868823092 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.821987509 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.968145486 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.820864557 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.831197477 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.817476397 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.870558455 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.82059898 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.82039997 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.827606922 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.8124501 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.867019277 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.830355269 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.93613678 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.820428752 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.822370065 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.971912097 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.819239443 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.82732114 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.875203327 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.830710203 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.822141658 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.825627756 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.404554534 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.823944043 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.819050183 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.823676172 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.81933728 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.862400993 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.823787956 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.814526577 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.819909971 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.935330976 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.822301848 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.819649647 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.82346871 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.815404447 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.821436456 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.822344164 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.823241126 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.82178589 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.820232638 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.841105954 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.819565896 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.82004403 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.823932704 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.817825733 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.866677325 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.817921693 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.815574865 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.813810445 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.876545389 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.820837028 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.81736255 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.813022005 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.815408142 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.817828301 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.961627332 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.858720748 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.81306266 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.859133649 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.813374167 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.811668687 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.810387667 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.809953573 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.905373043 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.811278636 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.858069771 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.804087347 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.966605007 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.832929553 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.810348947 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.816737625 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.806798461 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.806581535 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.798245227 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.808584766 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.800859954 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.802117142 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.807998022 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.800964292 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.803916913 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.909037455 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.905405279 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.795784738 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.811006928 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.81444973 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.793766126 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.848121772 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.796903814 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.795394515 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.851853954 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.916929475 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.850115162 seconds)
  done (took 200.385972015 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.798375133 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.802131918 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.801368079 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.808823182 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.790334617 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.791542846 seconds)
  done (took 12.508351074 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.794425852 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.794194249 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.789543783 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.78942528 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.791817087 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.789865291 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.798959823 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.787728224 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.793687768 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.788390132 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.786887164 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.789705959 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.796237865 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.785360212 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.786522062 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.785514514 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.787293239 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.783345052 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.784133541 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.783745596 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.930653757 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.783624216 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.782876361 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.783684763 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.784165954 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.779784216 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.78631269 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.780635692 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.792265555 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.786542618 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.782848672 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.779777126 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.778943391 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.783905663 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.7903294 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.776722969 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.782072711 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.776069842 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.774265965 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.786995419 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.773023633 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.775440307 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.774568487 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.773188709 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.774616518 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.784627952 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.777237761 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.776247134 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.773907861 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.771637662 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.772013611 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.776618429 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.77046716 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.770485416 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.770835185 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.774696967 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.774350183 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.770851109 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.771605819 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.77054333 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.7734608 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.770681642 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.77193636 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.776802054 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.779414077 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.770271511 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.770442786 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.776675307 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.772829216 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.770432378 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.7725056 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.768969925 seconds)
  done (took 131.05601539 seconds)
done (took 541.328123495 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.88866452 seconds)
  done (took 8.581635651 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.926225004 seconds)
  done (took 8.723665176 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.386075359 seconds)
  done (took 10.079828556 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.786774902 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.824059516 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.761647534 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.7690899 seconds)
  done (took 28.847132844 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.963528652 seconds)
  done (took 8.658362741 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.778133397 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.7621422 seconds)
  done (took 15.270460349 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.823064156 seconds)
  done (took 8.518549585 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.21786849 seconds)
  done (took 8.915926631 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.779387411 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.797309828 seconds)
  done (took 15.290335619 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.74983531 seconds)
  done (took 8.44325693 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.480127118 seconds)
  done (took 11.178378812 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.77434793 seconds)
  done (took 8.482361822 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.815412045 seconds)
  done (took 8.509087911 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.878416559 seconds)
  done (took 8.565545308 seconds)
done (took 159.756939252 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.76182746 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.755415483 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.756148464 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.754205933 seconds)
  done (took 28.712278449 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.797151704 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.797473349 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.799243524 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.809029525 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.801844192 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.802122993 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.794047431 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.801372109 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.812975545 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.802283808 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.79988739 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.800371131 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.796956284 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.789817888 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.801487071 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.81807912 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.808801162 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.798775242 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.791311792 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.80136899 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.765133485 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.810395677 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.800398025 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.764777279 seconds)
  done (took 44.852321028 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.964710446 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.835728439 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.917099323 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.81482043 seconds)
  done (took 9.21825148 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.816513811 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.817959175 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.831623905 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.868247407 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.892281539 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.82692015 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.793249196 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.786721349 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.772953874 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.818236987 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.893743238 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.811121798 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.905710165 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.766129045 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.953487824 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.763415412 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.764905136 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.81768205 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.868174628 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.881825874 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.765197601 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.816250342 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.821281379 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.811919013 seconds)
  done (took 45.552159497 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.764702276 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.771970296 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.770797254 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.766264253 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.766304994 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.766754361 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.772913989 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.767579025 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.78639673 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.767251205 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.7661897 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.765576246 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.765223775 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.765952878 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.764851225 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.777933681 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.77924539 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.765952697 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.768903822 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.771621024 seconds)
  done (took 37.078946108 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.757789626 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.61101569 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.109140364 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.014260296 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.756922713 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.75953523 seconds)
  done (took 30.697663665 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.781741666 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.775811894 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.766368717 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.823062376 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.904336039 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.772759177 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.764845902 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.776896031 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.811417875 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.832153181 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.786803318 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.794261716 seconds)
  done (took 23.281653665 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.75983095 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.760031832 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.759630381 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.775700542 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.775597483 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.773721678 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.772594621 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.758295188 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.777939327 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.783762282 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.774583202 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.777760568 seconds)
  done (took 42.943322581 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852028412 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.649913877 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.826691341 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.488997204 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.243218875 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.972500334 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.276612505 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.104429631 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.766663434 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.035695281 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.014583765 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.868965676 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.017468808 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.763442292 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.771258848 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.260605178 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.066452371 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000562542 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.791824275 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.583184413 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816137277 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.370432386 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.665626614 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.823906141 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.975384305 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.894388753 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.025461408 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.723447647 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902036337 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.80050917 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77534176 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.764229274 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.036559434 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152098696 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863798099 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77454673 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.418275787 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.48413474 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.768898894 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.572204771 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.672264632 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.901810054 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773461258 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.764889381 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.697823878 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.367548396 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.151273708 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.770283487 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.475784108 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.763731046 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.776117167 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.853103374 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.769605727 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.581129449 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.716420431 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.046088585 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.763027124 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.769017013 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.337315594 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.931596835 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405797932 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.745976531 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.958691997 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.59654306 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169286172 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.917889038 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.768469812 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.769412122 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.701431141 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.589689746 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.273031878 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.911470198 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.784442792 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.417667363 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072552277 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.067791128 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.712123736 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05286427 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.662908522 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.74177605 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.98995534 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.712752699 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.697802061 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.621277581 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.697975718 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.037638318 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803388169 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.40656592 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.805435899 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.101969312 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.774485437 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.780907102 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.769808483 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.986848222 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.52594846 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.761304978 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.730859114 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.908378417 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782499123 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.102621872 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.699202054 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.765694965 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01869343 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.975588776 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.110506514 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.29800947 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926912888 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.763512112 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.841590005 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.764091716 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.815364591 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.043462449 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.824978391 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.938818366 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824618966 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.725906891 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072191599 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.791691047 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.928481161 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.9734006 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.892654816 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.105248713 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.058855933 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827579726 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.767313597 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.764576976 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.666705308 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.319141859 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.03190033 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.764954309 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366380064 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.819428343 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.767110947 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.701759998 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.392936207 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.968329817 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.742456803 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.989389061 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.766555129 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.076858828 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.699738952 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.912848791 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.882633236 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.988018178 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.420176167 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.850128091 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.024992926 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356907506 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.141872433 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.819066567 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784582901 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85721441 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788061437 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.296439707 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.064056729 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.77045363 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.772048613 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.677448076 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.772860329 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.767447467 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.770445515 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.562873383 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055546961 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.795621159 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.765576018 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.657696817 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.781613924 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832360324 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.773528534 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.777786411 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.31375364 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.514247082 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.779208494 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.396181318 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991678022 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.777444098 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.570891231 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.884742742 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.850622669 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.044813238 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.832439503 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.702530088 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.477406811 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.460080691 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.768554377 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.702157648 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.768730635 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777766785 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.779141852 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.147496786 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.054171746 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.814844828 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.708514805 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.814081511 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.778978864 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.772269292 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.769360384 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.316525848 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.941487618 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.4299232 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.820449268 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906319145 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.782022589 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.702749796 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.772608609 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.774272335 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.769787982 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.727040562 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822220384 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.590438914 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.15630772 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.026838529 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.417329969 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.787316974 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.729083823 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.831898756 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.797483876 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.764544093 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.783582516 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.923288226 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.780965478 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.781647934 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.603584865 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.480941968 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.336939081 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088380963 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089569814 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.219386489 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.364892988 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.077180815 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.113617557 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007582832 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.300983196 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.833343405 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.118416453 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.716047557 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.854267102 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.424302116 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.131590608 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.784212923 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.99819597 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.167829315 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.848275194 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.797106702 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.981333652 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807737618 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.772748647 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.737006724 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.975068161 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914898627 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.646823798 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.987116245 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.107671305 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.608660187 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.904172185 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.769203807 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.482653001 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860915025 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.489650547 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.133964338 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.390407799 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.920137232 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261641101 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.773604325 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.217400017 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132343611 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.203247404 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.898882917 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.708454347 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.784598724 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.782018058 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.770866931 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.770598475 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.645496085 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.023033704 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.783657525 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007882027 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.149443965 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.080243705 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.685350184 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.777527936 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.77296042 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085217255 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.685882401 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946990727 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.336310366 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.312857067 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.775935388 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.707710747 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.708827624 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.467427947 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.781464731 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.749421823 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009302967 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.962021644 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.762243261 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.379562495 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023178986 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.029039952 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.788200502 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.055880125 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.054116625 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.507078332 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802997358 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.875322778 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.600726987 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.894394156 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.042681431 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.009249891 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.57181992 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.005257846 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.842785432 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.595280296 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.771684903 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.990352304 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.044730299 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.882248509 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021321934 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.498551797 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.913497608 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102880234 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835882508 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.829062965 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.946634917 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.969342285 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.784382447 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859409579 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.785967645 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.786379315 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.787295071 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820455101 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.835022965 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.913808132 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.789776797 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863515178 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.954984175 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.31814108 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.779809842 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.059557306 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.143346116 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.111115752 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.840052066 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.777429347 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.777072247 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.710498456 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909855482 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.222425857 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.050868222 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.908197241 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.073721819 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801538431 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.892491905 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.275701434 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024462905 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.052093026 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.671447947 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.790269748 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.789418329 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.044805868 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.78953734 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.988378772 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01677358 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110803203 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.252303878 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.132485798 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.154026711 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.053043733 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.147683244 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.778801407 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.369472515 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.782393696 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.638297945 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.821943321 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.997581457 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055635976 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.788675218 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17029751 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.801026985 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.979069837 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.295418966 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.60914154 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.070870271 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.769431089 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.844240646 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.062627638 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.176886104 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.095094852 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.850323194 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.789550703 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.503006794 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915762661 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.639958953 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.047286627 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.778248455 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991092531 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.489582171 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.789666998 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063939118 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090079076 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.776212662 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.652195125 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787826602 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.79036079 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.002737464 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.060053191 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.036442587 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.790439296 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.788829004 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.59555627 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.062873547 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.843591387 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.714991145 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.783021026 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880444733 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.028423227 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.802580043 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.300308783 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.491447401 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081595612 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.725520799 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801946663 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39274494 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.165392972 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116129173 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.333638888 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.014264363 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.344372132 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.780574291 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.078625966 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.786766436 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.392021387 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.092309215 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.786143262 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.506048109 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.82462386 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.057718311 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.106688848 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.78911676 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.726345076 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.758492173 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00786897 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.37759088 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.728565388 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.785390724 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.843918198 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.786978603 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.914514584 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.795212161 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.674712484 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.785193607 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.532970426 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.283787839 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.790919892 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.772554999 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.622236148 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.54436459 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821984798 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930092754 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.794341568 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.494601043 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.079450803 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.039259519 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.50628439 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.795352971 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.790736226 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.787394713 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.714780469 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.981578564 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.164107884 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093043797 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.354406038 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.828362708 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.790291964 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.00313479 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997596474 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.798227469 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.935258274 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390508428 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.829422217 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.517493959 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.467538355 seconds)
  done (took 1647.735147694 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.788672938 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.80786704 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.865605614 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.839630992 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.856389369 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.856752877 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.896431861 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.892484361 seconds)
  done (took 56.519704827 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.784248723 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.978439174 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.796205037 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.787397926 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.792936595 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.786810648 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.957271622 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.79600671 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.793622004 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.797071132 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.787238512 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.782938324 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.131669282 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.811862139 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.787731594 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.804107802 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.794562313 seconds)
  done (took 72.937230915 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.785803459 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.012313618 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.828715106 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.817114274 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.739672614 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.806155628 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.865814335 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.809572174 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.793474897 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.023916625 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.122651831 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.822071117 seconds)
  done (took 89.14399648 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.798274302 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.792615194 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.79402258 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.794326094 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.794599734 seconds)
  done (took 10.696594834 seconds)
done (took 2141.122465686 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.03500953 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.017448353 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.025119134 seconds)
  done (took 5.758466936 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.939952988 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.988946894 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.106417617 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.111027554 seconds)
  done (took 9.867985451 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.08452628 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.166435283 seconds)
  done (took 5.970913571 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.212611347 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.793191025 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.192923206 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.791216341 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.789450893 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.789132624 seconds)
  done (took 22.093761749 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.794228014 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.796359163 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.794366944 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.796279126 seconds)
  done (took 8.899064026 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.774317547 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.528054026 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.776173236 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.786920404 seconds)
  done (took 20.582471772 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.543788415 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.229262904 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.53724418 seconds)
  done (took 9.029133752 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.38054276 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.69477105 seconds)
  done (took 8.794302248 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.04321942 seconds)
  done (took 3.760938033 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.823168267 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.065698697 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.319113458 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.337707156 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.412291026 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.687571227 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.125466172 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.051645549 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.215337267 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.255505355 seconds)
  done (took 24.012654685 seconds)
done (took 133.719305948 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.175375491 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.035019884 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.99611507 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.13982067 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.052282583 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.994313179 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.987898149 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.127117812 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.636329474 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.634732477 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.139068496 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.093608608 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.934206842 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.035402058 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.941854137 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.037488056 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.022941668 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.190396525 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.835506685 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.034119632 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.993562721 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.768493855 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.981591978 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.785029026 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.0510332 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.945161723 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.359858544 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.033192764 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.98994028 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.375165352 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.949147585 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.189671791 seconds)
  done (took 170.184815231 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.792320135 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.790786774 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.79062977 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.790935429 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.198892294 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.797497232 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.792554692 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.789133096 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.900640249 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.904299418 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.80405164 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.249064924 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.810488852 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.789937862 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.803527891 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.790966871 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.125036301 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.805993901 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.812350187 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.813380705 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.816951581 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.049030198 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.8167061 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.096755794 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.131028103 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.815197383 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.79122377 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.817904015 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.799404734 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.803554006 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.803427822 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.793462432 seconds)
  done (took 205.612669158 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.794036409 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.793445724 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.793495145 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.793456266 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.792981822 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.791547412 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.796221397 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.79346617 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.401398036 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.402607417 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.800263571 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.799926406 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.803262756 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.791958256 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.798924791 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.793620726 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.799219387 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.80146148 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.799751683 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.801906792 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.804675308 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.576113794 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.802187122 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.584414807 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.798866881 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.797280248 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.793615144 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.803833993 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.803545945 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.806144004 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.805614911 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.794808095 seconds)
  done (took 218.05258271 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.994269191 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.80348243 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.805389549 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.749979816 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.80521437 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.802290069 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.76195883 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.000746086 seconds)
  done (took 18.465707884 seconds)
done (took 614.050913202 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.278472388 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.119108539 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.977028473 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.825689251 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.051920124 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.856883445 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.82318481 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.888747362 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.560898024 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.893231606 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.515513846 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.84169717 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.608592016 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.85168912 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.945681325 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.880619546 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.36647633 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.461832886 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.000189923 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.874878302 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.001075492 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.765768083 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.905633015 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.588631675 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.623743473 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.815006089 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.003432865 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.377022881 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.835385618 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.991550455 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.550980882 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.213509951 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.83442375 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.820783733 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.880863684 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.860818771 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.177291847 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.832192947 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.942958012 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.563934634 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.880572185 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.450373029 seconds)
  done (took 100.264141271 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.79362053 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.79379593 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.791050249 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.791198931 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.792544297 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.791197773 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.792755946 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.790930647 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.791569262 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.790123798 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.79130305 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.793387258 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.791868437 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.791820566 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.791296639 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.791344215 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.793417398 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.79421218 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.791104441 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.791427591 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.792797142 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.791584999 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.807343449 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.791803302 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.793803245 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.791698295 seconds)
  done (took 48.346323164 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.808649814 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.972257036 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.067482948 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.825771511 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.804416788 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.810626121 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.825251227 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.810936199 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.806578387 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.808042161 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.899776241 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.813741584 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.824927657 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.06846927 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.821712114 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.809105654 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.808786215 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.806791931 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.978700105 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.821639403 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.829813736 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.814931099 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.829455796 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.821336549 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.810832721 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.808284668 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.815398396 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.275688736 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.814964284 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.898215237 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.849561663 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.827442292 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.230809908 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.081323063 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.860728616 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.815476117 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.811059564 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.903069524 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.812215418 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.807040947 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.825173534 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.813802015 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.065941711 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.316861832 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.820718343 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.81115945 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.283753569 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.912989635 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.848549011 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.81894255 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.073404324 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.822912249 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.812772617 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.807491361 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.846683828 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.815450892 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.808817813 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.132800825 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.820083314 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.826730165 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.816132169 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.809886821 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.98466736 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.815218959 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.974537942 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.816247061 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.816973841 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.810225219 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.072025515 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.823238346 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.318518003 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.820538903 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.810647269 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.900404394 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.97686367 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.309552184 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.822941197 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.990217537 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.249806096 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.834235403 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.817925529 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.271253767 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.840353614 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.818305134 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.815094469 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.816762199 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.81334909 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.858180758 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.826481829 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.243616481 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.321637159 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.150640871 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.83851667 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.827770594 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.811421538 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.133699873 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.821639403 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.813475368 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.064366782 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.323657506 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.824332828 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.819905685 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.310986752 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.826752734 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.831034387 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.820320504 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.077697125 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.825283904 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.902618178 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.812272316 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.817079784 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.814041626 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.830234335 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.818372052 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.816026651 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.294729281 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.920477448 seconds)
  done (took 225.289850326 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.806741606 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.805738491 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.804561027 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.804047678 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.804928241 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.811692949 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.814542648 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.802811933 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.810360483 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.804903125 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.80366474 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.80623792 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.80558458 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.80709376 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.296138228 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.812984711 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.419619227 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.80823703 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.806398394 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.805302803 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.489486084 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.811962126 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.804853731 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.8041853 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.808316323 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.806659374 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.814273261 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.845608752 seconds)
  done (took 166.164167907 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.817409257 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.993405428 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.831264179 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.850248292 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.823387668 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.815640851 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.837257354 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.834648578 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.818899791 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.812785437 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.81397426 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.874641816 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.824677273 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.954407776 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.843319548 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.847635378 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.921255167 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.824523421 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.813640072 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.813657248 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.843650524 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.809121781 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.877044563 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.942835737 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.832436182 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.934595404 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.816903516 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.817221603 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.814817927 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.934902898 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.829846389 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.878089918 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.841063805 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.831852167 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.937312966 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.934134453 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.925001875 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.843874293 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.820168906 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.814828856 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.814091005 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.805939538 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.934463278 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.83209997 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.81427565 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.924315876 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.832442862 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.818874545 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.824907613 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.815277824 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.828006915 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.834534031 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.881393439 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.946843434 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.848994936 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.842461406 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.838844853 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.097945672 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.827419509 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.91938598 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.806687833 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.938660701 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.835008214 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.802490771 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.817296135 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.823889378 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.846786942 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.849337963 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.920249555 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.82213417 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.919042508 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.851630725 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.823964421 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.817430258 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.821332539 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.936794041 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.932563928 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.851404227 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.85518697 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.846123237 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.811600756 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.817675889 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.805271931 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.833264672 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.824002398 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.937864395 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.933991319 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.824955033 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.820640835 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.819743267 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.819020531 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.843846856 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.945612982 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.849979118 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.914464418 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.884229945 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.890359871 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.831007224 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.831501881 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.822751857 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.883460461 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.834241526 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.829431253 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.147816155 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.887565524 seconds)
  done (took 197.030080385 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.299094661 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.873134276 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.875899335 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.128631632 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.247007853 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.699524969 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.863987471 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.869577106 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.890231837 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.054185899 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.939802174 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.89049479 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.852848203 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.838893857 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.867835407 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.888749157 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.88235652 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.19926544 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.993134143 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.94463287 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.84731941 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.180594454 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.189966296 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.268634082 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.902837116 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.197441893 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.557118867 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.013375192 seconds)
  done (took 60.006844703 seconds)
done (took 798.8246412 seconds)
SAVING RESULT...
DONE!
