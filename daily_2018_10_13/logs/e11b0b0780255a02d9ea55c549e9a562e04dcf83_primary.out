cset: moving following pidspec: 11663
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.247823411 seconds)
loading group "string"... done (took 0.463848789 seconds)
loading group "linalg"... done (took 7.56566716 seconds)
loading group "parallel"... done (took 0.172380278 seconds)
loading group "find"... done (took 1.15851362 seconds)
loading group "tuple"... done (took 2.074482857 seconds)
loading group "dates"... done (took 1.326461503 seconds)
loading group "micro"... done (took 0.243190149 seconds)
loading group "io"... done (took 0.643387557 seconds)
loading group "scalar"... done (took 40.492651869 seconds)
loading group "sparse"... done (took 12.327878777 seconds)
loading group "broadcast"... done (took 1.094440328 seconds)
loading group "union"... done (took 13.703463634 seconds)
loading group "simd"... done (took 4.809118082 seconds)
loading group "random"... done (took 9.717602155 seconds)
loading group "problem"... done (took 1.954436619 seconds)
loading group "array"... done (took 22.219489121 seconds)
loading group "misc"... done (took 1.418948466 seconds)
loading group "sort"... done (took 3.549001355 seconds)
loading group "collection"... done (took 19.194879384 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.506970391 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.134931 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131491393 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.14526279 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.199336157 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.141915819 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.154349437 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.112248163 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.932105132 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.1815293 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.151611456 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.505867577 seconds)
done (took 5.04076663 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.218156061 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.092138547 seconds)
    (2/2) benchmarking "String"...
    done (took 0.101336326 seconds)
  done (took 0.858877355 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076963631 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144344673 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093164231 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077003037 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093582128 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077310663 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093473233 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.076701144 seconds)
  done (took 1.330902651 seconds)
done (took 3.164076511 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.723894271 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.275140708 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203828209 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.457531218 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.194061691 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.21235169 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.672226252 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.338553663 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.249395823 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098676984 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.142662199 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.382285777 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135180631 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.677495316 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.090284533 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.121309994 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.175041199 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.439967428 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081569081 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.108846615 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.114983158 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14029488 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.126046737 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.089580332 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184061096 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081069144 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.190837046 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.106455087 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079983364 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.28517292 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199503155 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.685285806 seconds)
  done (took 10.773255523 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110173402 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.131112222 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.095398107 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137066731 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133345172 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097772148 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082704692 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095090995 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120418736 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.173838418 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.129746108 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.120450875 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093037506 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081425674 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.112989704 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.241750324 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.118263019 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102427359 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099231249 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.101822642 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.119599649 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112142268 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106573929 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092433679 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165053059 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.217864065 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109341325 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124440644 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095271192 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112044804 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142173559 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14279027 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095395831 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079895591 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171299959 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12507401 seconds)
  done (took 5.073232731 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.185189672 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119742728 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165691586 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.161300705 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.137839755 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.156776831 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111104911 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.24084262 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.106504193 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.161712524 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.138771934 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114511157 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07905506 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097133553 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094210434 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.619114926 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.161707974 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.133519186 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.112807379 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102023889 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082676878 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364325212 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100944891 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.07975591 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09672688 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064612808 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.156619949 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097280807 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.131769504 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119491578 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081204344 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136892087 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.203538959 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109068101 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133172882 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094203023 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078498567 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.176137262 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103116753 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078385193 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.119598975 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132542016 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132582764 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.095436059 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080521875 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.202555303 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095631183 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.111706563 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.929723493 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180315554 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.122369374 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098096995 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.325867287 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.114148222 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080038007 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.095072783 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.240615646 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.194765083 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.07655262 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097007202 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.095210088 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079398508 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.120775823 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081177445 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.38018475 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099271849 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.731591165 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082508048 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.104724298 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082369546 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095524806 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102676196 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086838876 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113810905 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078815247 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098946988 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078224122 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.09553597 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080490811 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107731941 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.092220005 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083707776 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097466469 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146766803 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.092989935 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.097876558 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127523907 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.098288079 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.077495838 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130042552 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097347083 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080028184 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.131986194 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097604958 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.090063708 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098459132 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141782779 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.094828131 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.156607608 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.093234955 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122555775 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097575737 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11419872 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.110932587 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09841554 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083946259 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.093663264 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.076557788 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.094672135 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146676944 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.094457856 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079551149 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.098329532 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.107939038 seconds)
  done (took 22.370359777 seconds)
done (took 38.890161553 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.323897375 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.100974857 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.100625491 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.100049814 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.097004746 seconds)
  done (took 1.466898447 seconds)
done (took 2.184841943 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.285298966 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.170825572 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093591946 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.164424389 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092114666 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.171254499 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158030139 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.110535937 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.214854866 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.076766578 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.161984847 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093317803 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075772657 seconds)
  done (took 2.614294006 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093466959 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112413072 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082345731 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108950346 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075411491 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109510438 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092074968 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114979951 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108122207 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08437548 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092024838 seconds)
  done (took 1.791159929 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092924925 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111299506 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080869041 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108402416 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07613853 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108184903 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092279502 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11302022 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107864334 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08483052 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092076818 seconds)
  done (took 1.782813606 seconds)
done (took 6.89772023 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.089968457 seconds)
  done (took 0.800756709 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.904693429 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.935889881 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.111106216 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.146914102 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.295399645 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.188532998 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.468182841 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.123874872 seconds)
  done (took 11.092188826 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.141090732 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082498446 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.100214635 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.082700653 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.09939457 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.08577624 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.096672054 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.097823344 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085624046 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.099484483 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.082159419 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.100462807 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.096944565 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.085601299 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.10108081 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.08442927 seconds)
  done (took 2.301471876 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118546185 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116520953 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105966457 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107082242 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085318045 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.102258301 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104850058 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087652705 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101018644 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.101171567 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089954669 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104556099 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102681093 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078956413 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.103957703 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.105707068 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084618739 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104948226 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.10540141 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089560621 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105297688 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094190478 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085960935 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.103430514 seconds)
  done (took 3.215313726 seconds)
done (took 18.124852632 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.158590207 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.10690501 seconds)
  done (took 0.989380549 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.093546423 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111231756 seconds)
  done (took 0.931055599 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.095363276 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093437507 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.118816508 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108123414 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079660266 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.094565315 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118463596 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079859353 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094398455 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080040225 seconds)
  done (took 1.692572011 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082095447 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.107561642 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.099645853 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.093832948 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.102853821 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093618813 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.085911806 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097767653 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.107749451 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076146775 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10080857 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.111718504 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.08537174 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.114061348 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.10275644 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.0822907 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.100720551 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.096451554 seconds)
  done (took 2.472527773 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078782249 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.095191663 seconds)
  done (took 0.903643244 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079846091 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09184858 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080596425 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095662306 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09220458 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.074707674 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.092480929 seconds)
  done (took 1.336361644 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.470136379 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134776549 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.252135097 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.083547805 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.118186692 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.298578063 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.096514024 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.082988676 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101137109 seconds)
  done (took 2.423143727 seconds)
done (took 11.476455743 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092052571 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.115825958 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110464136 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.459794064 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106582794 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.095890307 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.157160167 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.248145555 seconds)
done (took 2.120808891 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.150312772 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.321632025 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.112210674 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066348594 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094273087 seconds)
  done (took 1.331612986 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078746647 seconds)
    (2/2) benchmarking "read"...
    done (took 0.097980967 seconds)
  done (took 0.910730407 seconds)
done (took 3.131594832 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079743571 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.095370227 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.110743788 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.096301005 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.07784746 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.097042353 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.077158301 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.093809878 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.079386603 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.094712197 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.095114425 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.079138097 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095531103 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077017685 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092858694 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079010847 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.095116087 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.076636787 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09305009 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077175218 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.092756821 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07982594 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.092934821 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.076874203 seconds)
  done (took 2.873728604 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.097366168 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097081692 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.101464984 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084346451 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.10018969 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085321396 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.100861095 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.094854543 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.084973505 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098644903 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09872332 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.082487454 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097054616 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083628467 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09699481 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100395634 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085273106 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096163569 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081530215 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.099583499 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.100098311 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080076256 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.099052483 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100401868 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.082158988 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098185372 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081819425 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096691235 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100965894 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.082331248 seconds)
  done (took 3.52710274 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.083993975 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.092559789 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.076751966 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.099609005 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077347357 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.095836071 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076639706 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094634334 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078259529 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.093214492 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078708772 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.09391213 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.076881914 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095152359 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077619436 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097557806 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.10582295 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077418005 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.093327315 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077770787 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.096280424 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076934748 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.093390783 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077153358 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093829272 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076725264 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.093486354 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.076383744 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094108916 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076649223 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.096621475 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.079993987 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093286081 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083744647 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.097074987 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.07703006 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.096613667 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.093249258 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078049148 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093052074 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.075930793 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.092901561 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076796793 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.10010678 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.07712654 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096341426 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077704354 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.095237184 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078344156 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097261849 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076711828 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093086833 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079060955 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.0940964 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.097724601 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.076746745 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.093866688 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076278147 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.094989625 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.076961717 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.092962724 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076402905 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.095297458 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078456569 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.108724002 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084379024 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094153187 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079510661 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.094495867 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079995391 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.094974885 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.10737005 seconds)
  done (took 7.043044863 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08161736 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104924783 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079974525 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095938508 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076014722 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095177711 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097538941 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077985996 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095244433 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085739605 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093848752 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078703151 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095141147 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.105133856 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078678937 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.095365038 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084404691 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091211722 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077630156 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097515967 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077314865 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096541168 seconds)
  done (took 2.707510064 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.20665584 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103762009 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139837384 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105964299 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08185559 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.104088421 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101015095 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085284644 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099850571 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083118636 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098506635 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099982576 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082308678 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09802653 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099570277 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083431856 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100196669 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08448351 seconds)
  done (took 2.609028895 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.091968491 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.096977819 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101540298 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097194304 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.096930499 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083577194 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102810122 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.104720309 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.081926099 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097065204 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09013123 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099232447 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.098649254 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080475514 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099305475 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080046519 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.098759709 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079665162 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106140395 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102180366 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102924488 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090582988 seconds)
  done (took 2.8350933 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096519746 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098833462 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.115837778 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083626684 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09339279 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079419716 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.103793411 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.079977764 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.10500995 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.09861461 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080738285 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.095908274 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088163669 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097195148 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102630384 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080406115 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098741958 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080622238 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099062488 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076063194 seconds)
  done (took 2.607039932 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101881426 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098308343 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097730866 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090238241 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098861007 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081220341 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10817369 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.097864817 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081661658 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122358468 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097559085 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081863664 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107817303 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.103622472 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098109025 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090700785 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.106554074 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107322148 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.081318537 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098214178 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122557845 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082373717 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108172155 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098443113 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.189457587 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098761034 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098199151 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.086695257 seconds)
  done (took 3.591389384 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080058851 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096898928 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078180073 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.094582467 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.077735687 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095272777 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079242322 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.094520004 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080061705 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093956232 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080381062 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.096805953 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079801641 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.09809704 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080586088 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.096871631 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08271461 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095119133 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077477396 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095098989 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.08083694 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097529599 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080707875 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.093974679 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078185326 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097281713 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077846884 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.093930278 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081107889 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094171303 seconds)
  done (took 3.385185522 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089481038 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104186059 seconds)
  done (took 0.950160635 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.077662832 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113019401 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078014532 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101273691 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085376626 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098339248 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.105378506 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085111418 seconds)
  done (took 1.500765729 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095342286 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.108479773 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.081785632 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110311561 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.107854349 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.0934424 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.157947161 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.098930614 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.08604557 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.095789374 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.11149784 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.079818485 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.103193157 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081330389 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.103694779 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086965173 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096587679 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086891992 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.100375349 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096703209 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082789138 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10931501 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084012245 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.095069128 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082090312 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.107714167 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.107412528 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082667555 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.101352442 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107527235 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086065871 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.091705174 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081635254 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099756117 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079568553 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.106543155 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.109765194 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083959316 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.106819713 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082215554 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109573728 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093182946 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086142225 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.103557414 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090912341 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.098876165 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.082481717 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093606675 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.095221557 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.082872045 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094064735 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081857676 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09235063 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088488606 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103380489 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110754785 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08041172 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100216016 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084967939 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.101359391 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088696635 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.100692764 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083207986 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.097051627 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10423256 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085439708 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105311466 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076339129 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.09237325 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079042072 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.106715896 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121464675 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088949001 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100059178 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082949042 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.095873939 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.101635827 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082602423 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105231026 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089711149 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.09866438 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105133076 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08902438 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0987537 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.083811517 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.107178097 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.09711969 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083841485 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096094525 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096467715 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.097771343 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079840444 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.096574752 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.106248252 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084556704 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098845324 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079677985 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105902118 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.076043239 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101074141 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083191219 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099447843 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.107399348 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087001039 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104493642 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.106563183 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088727179 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09881059 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084647395 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095145742 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083373371 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.100902876 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.104733842 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.074844395 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.100915832 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082886814 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.099723574 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.087995604 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097308214 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.081799901 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106565137 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.105010354 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080167705 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095095867 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085211927 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.098729099 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086112844 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106145195 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.096953906 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077058053 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.093533485 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.085816817 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.098684947 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.084943577 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104042599 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101967187 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.075984343 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.096484671 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086882279 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.106440152 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.098730628 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082379721 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.103753106 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083278554 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098451948 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.087503751 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.101438644 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08024063 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.104340553 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.100770377 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077170626 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102511621 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.084998688 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098820268 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085671395 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103980044 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.10217712 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082005384 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097732627 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087970943 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10042451 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080220507 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098576844 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.097536656 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.09047684 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.101148171 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.076623463 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096362126 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089904502 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.096194289 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081219765 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.097267173 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.10173473 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083252777 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.097660018 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.080582962 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.100210445 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111214083 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086413998 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100567884 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087760295 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.108775361 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.081686999 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.101705846 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.098978718 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082970672 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100490684 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089150057 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.104855741 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105507986 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.083338604 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.095859162 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087377293 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106601729 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081187718 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.096678499 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.080391117 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103215805 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.105700352 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085624926 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.099824728 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080124016 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099651139 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103111134 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.084426813 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099941667 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.080511542 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.104593297 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082148782 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106635482 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100203972 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.090599931 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103170757 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077488335 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103571418 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097203419 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.087677676 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094679573 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079668235 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.098334538 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.082832616 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098190965 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.084712651 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094112962 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088308213 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107347315 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.099141775 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082250827 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100049331 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08953733 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101609088 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085836339 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.10280726 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.10401837 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093814578 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.098585651 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.084540368 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.10904522 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.099672033 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.075828856 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105105483 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.080098569 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.098955852 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081129025 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098411226 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085519731 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107825011 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.103997142 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076740704 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103015549 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.080289371 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.098622251 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.077940328 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.106188088 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.103009282 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.08423501 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107771959 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084532347 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.10154288 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.102711004 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082781041 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101966794 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083047852 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103166287 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083740364 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.101442437 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081473069 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.101988525 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099100295 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080236504 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.100876728 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082535288 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100015289 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087547013 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.101542632 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081989785 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.102564372 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100717987 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082586797 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100421809 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081277711 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102677565 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083907337 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100297351 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.08514821 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094784559 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107357019 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082415043 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107280144 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082564578 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.0961895 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087032832 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.104640729 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105029616 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083381782 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.100625717 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083554418 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.099892793 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.084141158 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108113328 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.09817894 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091435172 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106064249 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082814214 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.102917728 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082169167 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.101435917 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.099568452 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083681612 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.100748547 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.08197078 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100023387 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087103218 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103235101 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.081896153 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10165123 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102046536 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.081858516 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101203012 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.076643422 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.099290337 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081964265 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100673968 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089640681 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102389389 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.102531587 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081085854 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101548704 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082271669 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097486903 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090293154 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10948612 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101296774 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090193395 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.09993065 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.083581477 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110117421 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094747342 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.080481804 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097857487 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.079989772 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108723017 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.083941767 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.109682962 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.10090578 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082181721 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098133766 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084029779 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.098965812 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077855252 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098589416 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085913719 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.102745466 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081303496 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101204648 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.103660457 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084849805 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108265539 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.082322964 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.10266744 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.083437749 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098556109 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081667363 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.10088487 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.103655471 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.084653883 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099217844 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080124371 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100815109 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084435632 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.109391947 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.081911498 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.101763757 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089556148 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100405277 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.10349563 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086827809 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.09464637 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.086503362 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100088431 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082592423 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.100222333 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.104754157 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086422496 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101648371 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.089945424 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100947344 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083250348 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100787795 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.09880352 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.082182046 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101505691 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083623493 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.100760942 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084080994 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109120135 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080683783 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.102795314 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100134056 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083075147 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.104942775 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084149053 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.10271769 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108510073 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086246658 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.101662288 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089343928 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.104821684 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086306639 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102956458 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.102124955 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088962088 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.100172023 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091157057 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.101226821 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.083732634 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102859891 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081610912 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100361565 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.10084866 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082728774 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.106335967 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.083821413 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.100224146 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082455487 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.09874225 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.084658406 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10468396 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109091094 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085510536 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104953576 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.078649149 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098530008 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084582792 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.09914383 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.083885606 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104245432 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107124016 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085893623 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.101744754 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082044373 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109087876 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106760983 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088668378 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.098249661 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087456652 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101921806 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086240431 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.102467599 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083672012 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102708203 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.106858793 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084278485 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.100693581 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091791277 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.1050219 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084880073 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103034814 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.101989532 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.084205667 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.096519254 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.0852403 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.103582529 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089279014 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104705794 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101308299 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092439889 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.100259749 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083837017 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105077078 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083030099 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108397118 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.096614414 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.085068424 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101799469 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084541267 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097025612 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082896306 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099197607 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085563693 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.100893063 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079004511 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110568758 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109217484 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085471129 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100387163 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082819557 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.096516987 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078298562 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.102058066 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102378598 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.08516459 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.111499163 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083113743 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.100788671 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079143515 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10196448 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085754983 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104440985 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080847843 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.09802111 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.0998094 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.085823729 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.108928049 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081926775 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101431066 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087944013 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103729796 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081018827 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105149256 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098868081 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087963862 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112160756 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.083897523 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102614022 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.106751908 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091591271 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102584339 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.078797367 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102336038 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085475246 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.101765864 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102830884 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084413751 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115853009 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086862084 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.10104482 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081877207 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104592696 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.100976531 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.091792418 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102982495 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.0842599 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106573385 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085696785 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112147829 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104032463 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089129578 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104010194 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085463098 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100644166 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102608222 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081852192 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.099584098 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084888886 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102838764 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088438971 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.109620957 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.101354434 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094084653 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.109606951 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088981566 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099369902 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082436608 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101939684 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079047023 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103176115 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.099655807 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.082637644 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100768809 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082639524 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102470507 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088500492 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103905817 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084112051 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103123611 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.095472913 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.08553569 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.104563835 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085642329 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098220234 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084011676 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103251278 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.08932772 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108676697 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102468367 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085653185 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.103451971 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08520158 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098156378 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.08995351 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100656106 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086477444 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102076982 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08407338 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103670506 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10619563 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088851076 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104240892 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.085267208 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.114983442 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104475986 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081351492 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099088311 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089086725 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100575801 seconds)
  done (took 57.120303935 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144350556 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079856194 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098395852 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079218849 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111938811 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09797182 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079344237 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098391868 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08068058 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.100872019 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079398079 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097744659 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107840929 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123567388 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093296431 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102057123 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096894268 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081261964 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096891244 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0804117 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107817157 seconds)
  done (took 2.844030183 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105123359 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.116417301 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113682128 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.11878007 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090249845 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.113929475 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.1138717 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115072602 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098795103 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109067099 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116830398 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114852211 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090691007 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110238973 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108483085 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092986165 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117021545 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108451477 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.114616279 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094358964 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11162013 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.112915047 seconds)
  done (took 3.193791276 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083890989 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101558794 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.0841673 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097473563 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.0837233 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097070984 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087994862 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100498532 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087754728 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.10142668 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081505985 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.100990135 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103509955 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079101852 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101042178 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081542956 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151051193 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.105892392 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.08262834 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103507831 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.0972751 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085793215 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097600413 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079216888 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.100327353 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087929375 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102555523 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081390381 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102411791 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082036241 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102578739 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080079728 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.102852099 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.10238308 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082604285 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.100312145 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083740462 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101120268 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078997048 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.099936579 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083807156 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098097832 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084843642 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103892021 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081132057 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.099772087 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084087084 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102060617 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.09682359 seconds)
  done (took 5.407695058 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104927513 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159910946 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086727754 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142319336 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119525303 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111013654 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087259729 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141691888 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101207493 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.08285998 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.120891323 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.118888815 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102355031 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089006255 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110579069 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101302444 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085862534 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102106366 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.106552282 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084327351 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107256308 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090127717 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118429811 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.116833328 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107409425 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083375749 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102971747 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107379111 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.096957291 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.107969855 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107888101 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089673302 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119579857 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.10757581 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101250402 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.087022478 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121065324 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103840018 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087238203 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100048633 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.085914897 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108400047 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109218128 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.120497695 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083596273 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.106837652 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083909067 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.099997239 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117511161 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086689547 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112190902 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118422317 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106755172 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085333065 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108098289 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.118825518 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084512531 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101239516 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106817043 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.096578919 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100607115 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107201037 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.099069351 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104775834 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.11112215 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098244129 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.107794004 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106853909 seconds)
  done (took 8.049505084 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092207427 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110283181 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119801263 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120527476 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090415933 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.109779602 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109742834 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.09041464 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109717646 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115724981 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110005548 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132505309 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085369684 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113956426 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110422901 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090445534 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109683418 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110518486 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091604561 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110281105 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.109984535 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118999356 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090014419 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119442003 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140433931 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104915889 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090866603 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.109932571 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119667005 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109848473 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122068284 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091634437 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.109993228 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.119347318 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122582914 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091646754 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102652059 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109379096 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092087973 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110622312 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103996122 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118983396 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090972202 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103895934 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110260282 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.09030477 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120281961 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.122419985 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114188441 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097083811 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.11055299 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119432165 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108644426 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091646262 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.118964869 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145201115 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119511863 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119323459 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109645003 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119087511 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09987149 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.12707702 seconds)
  done (took 7.599713857 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106971098 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114145751 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116947199 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099799885 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083192606 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10720491 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082040554 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101001178 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112655406 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094536303 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116661138 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107683939 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109514588 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097150947 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107583534 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111436071 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088245191 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108415952 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113692572 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107402838 seconds)
  done (took 2.908795772 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.092723422 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123203354 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084516385 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110801182 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107399762 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091452703 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.105608084 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10648411 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086073742 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106611865 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096221079 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115642049 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104365328 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091862677 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115787778 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110297158 seconds)
  done (took 2.471295868 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095077064 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.115741303 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.11875177 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08477477 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.102955785 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080781437 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105203849 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099286057 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080883751 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.119522478 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084386768 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108172265 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104095672 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083415453 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.100581438 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.08806208 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099902049 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082401255 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10473688 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.12010071 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095995806 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.10281852 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.103986338 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086869819 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104173373 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089989642 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.10492538 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102182805 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.082500923 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10361536 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085324038 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.111731331 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100293753 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083847237 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102708898 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083065107 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103330357 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084895296 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.106978843 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103875823 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083260902 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103003316 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084003014 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105056261 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080391443 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104646975 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099624526 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091653692 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.101172651 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084516831 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.104083596 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106569522 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.08638357 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.114091044 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089222372 seconds)
  done (took 6.18644713 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099395759 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108346988 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080139873 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102371215 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088066905 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.106791 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107043816 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08815843 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105550993 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08309745 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106055269 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09004367 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106973037 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10713811 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086984571 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108879225 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080773905 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105626951 seconds)
  done (took 2.593092186 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089917182 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103937811 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092874303 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105255871 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084736815 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106877855 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079736767 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.102493123 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10211821 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085405317 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103594118 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087167751 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102788757 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087112537 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103981244 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084226674 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.106687612 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102204179 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084823611 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099639678 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087440437 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102697598 seconds)
  done (took 2.932123336 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118259382 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.123107234 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.0924228 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.2259836 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.10352129 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.1310424 seconds)
  done (took 1.622272447 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108539658 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119622207 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104335645 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106740829 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113950097 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105934419 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087711493 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106253546 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116898863 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100414812 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107221355 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117572055 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115897881 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095963611 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113885149 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114368342 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106428984 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087427264 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105252524 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127538776 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087856704 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116306336 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105890082 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08620308 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107365894 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116266054 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115544444 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119883272 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086569727 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116757583 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112466602 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087458093 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117575957 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122201679 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107396537 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097686001 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106803807 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127414345 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113056412 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096105498 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107723481 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113125087 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097856977 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11328369 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117806931 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10667069 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092316258 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107116842 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106047091 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133215631 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094593843 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115928383 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113763763 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116957484 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117000776 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133714304 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101211284 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11645241 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114106714 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121894115 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115910641 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093145088 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115303612 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122117499 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115309971 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11636474 seconds)
  done (took 8.065366344 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101518947 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124781778 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106666507 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121932856 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097079407 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107041021 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106558562 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087111607 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107150673 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105811778 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150850987 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087217611 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116627328 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116725094 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107162832 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087625268 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107631782 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117066231 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086156116 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133110611 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107745655 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115170587 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115286377 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096783579 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122214808 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112926276 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106010389 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087514633 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107323524 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107398056 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094104463 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108162787 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116801991 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086532285 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117358583 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107743302 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087799686 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112505908 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108020064 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11322537 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097431342 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126624842 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107337857 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107201209 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122093287 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087757171 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10710934 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086660782 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108151812 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106221551 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121067378 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102072477 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121817443 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11729911 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107180923 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087899774 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107392713 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107401601 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087527968 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114363427 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116347305 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107255077 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135025176 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087500049 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107413441 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117951775 seconds)
  done (took 7.949377679 seconds)
done (took 153.306820646 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.09789111 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.134983933 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096600097 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.167384899 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.105204181 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118361699 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137003888 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097299494 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105071175 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085584543 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.105371177 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086912589 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.169990033 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.08599635 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.105188615 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.106715645 seconds)
  done (took 2.646099515 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.198384788 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.252493659 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101977729 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.104765256 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088237063 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.108940083 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.10370713 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.090995499 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.108429283 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085780689 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.107645625 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.085586174 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.104402127 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085447438 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109024508 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087258328 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105134668 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087727305 seconds)
  done (took 2.860783456 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111633344 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.143672242 seconds)
  done (took 1.106104905 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117849055 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.178452817 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.292504399 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154682447 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.117552294 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.125284643 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155094606 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129431175 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.195722926 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.121444017 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.121125257 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097782867 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138828572 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.114034733 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093927852 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117371818 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141150403 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093375484 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113991271 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.114154408 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117429449 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105642959 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114102058 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093417262 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.179414088 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119050455 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084476026 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.107220866 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.114179945 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094162275 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113695655 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.123235843 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097487859 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.173480412 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101959009 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.174485866 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.096580697 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.111530111 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113472256 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.09082818 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.117811938 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.116820544 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103823347 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.117443798 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.085630129 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.117459466 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104504727 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085396599 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.11358398 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096639057 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.11385326 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.112101845 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.154688815 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.117875701 seconds)
  done (took 7.462167413 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.79243506 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.16628914 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089797348 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.876667681 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137250471 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104073583 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.774048263 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.132102184 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.232111176 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.755322337 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13375348 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121566737 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224583281 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.237413405 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.925385235 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.308592727 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.666711972 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10190794 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149686569 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.150691706 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117304339 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136130067 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.128914084 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.451638444 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095470868 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110909083 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116156832 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.099551425 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.156757916 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125274722 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113835002 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176389021 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.26408279 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.181528461 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115050511 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088926426 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110977395 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.16724286 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263248671 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213066105 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179691145 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087754956 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110823168 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.120876757 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110690726 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108471518 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163083645 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.193271744 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.171577112 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092061972 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119939561 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118186635 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119646243 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164116358 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.118614132 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.285430163 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.317653337 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110485632 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120182247 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105152784 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259851507 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.121887256 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.221838447 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116789731 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.209671767 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111613467 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.758426696 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.1875678 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090733269 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118267572 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11891608 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094064521 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121046263 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169651896 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.390934272 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122830055 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092376007 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111032533 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.202391687 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.1234384 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110554504 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160910032 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.114568717 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100246792 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123731658 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121878228 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170196736 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.227508491 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12327463 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118600416 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093239504 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123634479 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115342325 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.210048366 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215477259 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.16166068 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.205908507 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122096844 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.18252947 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.166765444 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098637979 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.192951468 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098090983 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124922075 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122289373 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.212247697 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144652997 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.121551235 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094384511 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118069652 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147639302 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12582282 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096781366 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.188866072 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.480939183 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.165298249 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.107922717 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125452512 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097665629 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180701462 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096373639 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259163379 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120917223 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.16840144 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118936732 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088098808 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119335865 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.162575772 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122970708 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120547278 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101922933 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118782887 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.231760089 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216486886 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123268327 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.220651757 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183337295 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119623282 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171023583 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121435988 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166025092 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119721802 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120087323 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094564301 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.782136667 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122821629 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097992991 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115097133 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.193922643 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11081123 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101791591 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.123390995 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107797287 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.751519687 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126513265 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120881603 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.100987013 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118068866 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119568574 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116187843 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09432716 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159569919 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226916119 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120561641 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119467088 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.10232865 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.179656537 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095247535 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124467629 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.12334783 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124125071 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.101163467 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11460183 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.122508051 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168858501 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161177444 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.218458969 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.593880009 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089851394 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124138159 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227150657 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088962217 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.288034101 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118881757 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.221146062 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163866744 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.11978976 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.31469735 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165445323 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.196564771 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126509296 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.172439235 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086722887 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118599362 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.161365978 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11190877 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116608113 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.161081649 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124824656 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101853691 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.963768365 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111264869 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.22432126 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108847951 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.169199287 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.114925671 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099479362 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287361171 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11042433 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.106846874 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.184512788 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092806627 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124612177 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.721145733 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103223845 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121400984 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117462169 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.219198348 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163551679 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118300587 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097781393 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120328641 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.161309171 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.206189406 seconds)
  done (took 43.737474073 seconds)
done (took 58.657473225 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.271666373 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211955889 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.255605161 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.167241209 seconds)
  done (took 1.848865143 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.168724349 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.146793862 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120037664 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.106503929 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.148212192 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085056487 seconds)
  done (took 1.648884315 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.348200087 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.267267794 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.235772424 seconds)
  done (took 1.727717217 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.28682689 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.250502667 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.353361425 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.41258969 seconds)
  done (took 2.296833176 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.206277084 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.130597467 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.109742817 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103294593 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.194455279 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.245787891 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.139956384 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.198709254 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.12023598 seconds)
  done (took 2.367639996 seconds)
done (took 10.76317491 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.220849414 seconds)
    (2/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.261505283 seconds)
    (3/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.231675342 seconds)
    (4/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.192047586 seconds)
    (5/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.136644883 seconds)
    (6/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.193462854 seconds)
    (7/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.115696319 seconds)
    (8/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.168528199 seconds)
    (9/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.212200309 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.092387378 seconds)
    (11/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.193229036 seconds)
    (12/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.120373262 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.101007127 seconds)
    (14/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.133027212 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.246374402 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.093112785 seconds)
    (17/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.119179282 seconds)
    (18/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.122751488 seconds)
    (19/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.165798506 seconds)
    (20/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.147012473 seconds)
    (21/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.07709675 seconds)
    (22/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.163671466 seconds)
    (23/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.1218122 seconds)
    (24/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.219726808 seconds)
    (25/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066266749 seconds)
    (26/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.197162652 seconds)
    (27/286) benchmarking ("sort", Int8, true)...
    done (took 0.221561148 seconds)
    (28/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.125740458 seconds)
    (29/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.138739185 seconds)
    (30/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.134649503 seconds)
    (31/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.114107926 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 0.223648961 seconds)
    (33/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.102604968 seconds)
    (34/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.122644321 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.09514755 seconds)
    (36/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.217679718 seconds)
    (37/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.135258267 seconds)
    (38/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.115259596 seconds)
    (39/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.193004417 seconds)
    (40/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.217571467 seconds)
    (41/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111973217 seconds)
    (42/286) benchmarking ("sort", Float32, false)...
    done (took 0.171997452 seconds)
    (43/286) benchmarking ("sort", BigInt, true)...
    done (took 0.231006104 seconds)
    (44/286) benchmarking ("sort", Float64, true)...
    done (took 0.230863064 seconds)
    (45/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.094386623 seconds)
    (46/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.12159389 seconds)
    (47/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.092900932 seconds)
    (48/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.124606182 seconds)
    (49/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.114979551 seconds)
    (50/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.090492117 seconds)
    (51/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.122568611 seconds)
    (52/286) benchmarking ("sort", Float64, false)...
    done (took 0.147112645 seconds)
    (53/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.192109123 seconds)
    (54/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.138693308 seconds)
    (55/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.165977056 seconds)
    (56/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.088729859 seconds)
    (57/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.198770169 seconds)
    (58/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.170078613 seconds)
    (59/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.163509921 seconds)
    (60/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.184004651 seconds)
    (61/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.18096799 seconds)
    (62/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.076761759 seconds)
    (63/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.13422291 seconds)
    (64/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.075150761 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.132739709 seconds)
    (66/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.136045088 seconds)
    (67/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.099178266 seconds)
    (68/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.110422069 seconds)
    (69/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.160195369 seconds)
    (70/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.121138807 seconds)
    (71/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.119555327 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.086899018 seconds)
    (73/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.115060707 seconds)
    (74/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.08731602 seconds)
    (75/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.087918693 seconds)
    (76/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.075518007 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.144990171 seconds)
    (78/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.097596486 seconds)
    (79/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.115236185 seconds)
    (80/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.189503692 seconds)
    (81/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.129993499 seconds)
    (82/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.172784871 seconds)
    (83/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.144097446 seconds)
    (84/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.085892399 seconds)
    (85/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.113919997 seconds)
    (86/286) benchmarking ("sort", Int64, false)...
    done (took 0.087643947 seconds)
    (87/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.21043425 seconds)
    (88/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.187414075 seconds)
    (89/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.06743054 seconds)
    (90/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.136899739 seconds)
    (91/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066773192 seconds)
    (92/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.17320401 seconds)
    (93/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.125143521 seconds)
    (94/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.188791507 seconds)
    (95/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.088515399 seconds)
    (96/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.096535617 seconds)
    (97/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.165134776 seconds)
    (98/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.171202783 seconds)
    (99/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.120330259 seconds)
    (100/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066667104 seconds)
    (101/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.087118623 seconds)
    (102/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.118643942 seconds)
    (103/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.171221141 seconds)
    (104/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.10929362 seconds)
    (105/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.153356476 seconds)
    (106/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.153119471 seconds)
    (107/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.103611129 seconds)
    (108/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.187180607 seconds)
    (109/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.173420211 seconds)
    (110/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.066902715 seconds)
    (111/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.119458045 seconds)
    (112/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.113806242 seconds)
    (113/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.089663684 seconds)
    (114/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066085533 seconds)
    (115/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.142586905 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 0.17941848 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.096420337 seconds)
    (118/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.066706544 seconds)
    (119/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.116711439 seconds)
    (120/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.182346948 seconds)
    (121/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.113307055 seconds)
    (122/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.114622643 seconds)
    (123/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.11639673 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.092803067 seconds)
    (125/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.189771674 seconds)
    (126/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.133260014 seconds)
    (127/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.088405355 seconds)
    (128/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.094643236 seconds)
    (129/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.117992113 seconds)
    (130/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.067406728 seconds)
    (131/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.183295796 seconds)
    (132/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.116221197 seconds)
    (133/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067080881 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086419248 seconds)
    (135/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.116165509 seconds)
    (136/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.08792078 seconds)
    (137/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.129516928 seconds)
    (138/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.076299003 seconds)
    (139/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.118856077 seconds)
    (140/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.087995193 seconds)
    (141/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.100060979 seconds)
    (142/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.095728254 seconds)
    (143/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.118031659 seconds)
    (144/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.11428571 seconds)
    (145/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.086760971 seconds)
    (146/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.076075166 seconds)
    (147/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.220539933 seconds)
    (148/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.089073805 seconds)
    (149/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.092837424 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.108264744 seconds)
    (151/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.110342095 seconds)
    (152/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.114861252 seconds)
    (153/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.077961057 seconds)
    (154/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.089885255 seconds)
    (155/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.143682943 seconds)
    (156/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.116521794 seconds)
    (157/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.091642839 seconds)
    (158/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.140336809 seconds)
    (159/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.06693336 seconds)
    (160/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.11904958 seconds)
    (161/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.231968934 seconds)
    (162/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.183901379 seconds)
    (163/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.082168367 seconds)
    (164/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.173042068 seconds)
    (165/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066218711 seconds)
    (166/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.11540757 seconds)
    (167/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.067063174 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.1085876 seconds)
    (169/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067677344 seconds)
    (170/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.096334451 seconds)
    (171/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.109968773 seconds)
    (172/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.114634939 seconds)
    (173/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.130755718 seconds)
    (174/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.109395567 seconds)
    (175/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.119526936 seconds)
    (176/286) benchmarking ("sort", Bool, true)...
    done (took 0.22148549 seconds)
    (177/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.107973166 seconds)
    (178/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.06725624 seconds)
    (179/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.06619252 seconds)
    (180/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.090225329 seconds)
    (181/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.148279264 seconds)
    (182/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.113090863 seconds)
    (183/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.08878495 seconds)
    (184/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.120211069 seconds)
    (185/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.114814453 seconds)
    (186/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.089730152 seconds)
    (187/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.207708089 seconds)
    (188/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.087732296 seconds)
    (189/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.090002349 seconds)
    (190/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.095548735 seconds)
    (191/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.117114541 seconds)
    (192/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.088417843 seconds)
    (193/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.107823824 seconds)
    (194/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.153053638 seconds)
    (195/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.101025606 seconds)
    (196/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068993425 seconds)
    (197/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.088991803 seconds)
    (198/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.093545549 seconds)
    (199/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.089827522 seconds)
    (200/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085645434 seconds)
    (201/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.13494975 seconds)
    (202/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.133329029 seconds)
    (203/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.087898991 seconds)
    (204/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.11338906 seconds)
    (205/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.066727332 seconds)
    (206/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.179287187 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086554266 seconds)
    (208/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.115617021 seconds)
    (209/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066351484 seconds)
    (210/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.117392175 seconds)
    (211/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.087127675 seconds)
    (212/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.091474434 seconds)
    (213/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067922076 seconds)
    (214/286) benchmarking ("sort", BigInt, false)...
    done (took 0.21917305 seconds)
    (215/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.280436022 seconds)
    (216/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.111812077 seconds)
    (217/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.078662297 seconds)
    (218/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.128213769 seconds)
    (219/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.172475028 seconds)
    (220/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.066873137 seconds)
    (221/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.107318101 seconds)
    (222/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.140389281 seconds)
    (223/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.097989188 seconds)
    (224/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068623198 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.085379397 seconds)
    (226/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.115815402 seconds)
    (227/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086342083 seconds)
    (228/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.08993694 seconds)
    (229/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093481538 seconds)
    (230/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.134144124 seconds)
    (231/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.111877492 seconds)
    (232/286) benchmarking ("sort", Float32, true)...
    done (took 0.230154149 seconds)
    (233/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.067148079 seconds)
    (234/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.086772146 seconds)
    (235/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.117213244 seconds)
    (236/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.085844127 seconds)
    (237/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.109030575 seconds)
    (238/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.169338383 seconds)
    (239/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066119054 seconds)
    (240/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.133382561 seconds)
    (241/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.066915828 seconds)
    (242/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.109588436 seconds)
    (243/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093518997 seconds)
    (244/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.131533952 seconds)
    (245/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067355179 seconds)
    (246/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.066293489 seconds)
    (247/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.089406025 seconds)
    (248/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.066767678 seconds)
    (249/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.065593333 seconds)
    (250/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.11613592 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.107628643 seconds)
    (252/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.094383554 seconds)
    (253/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067508004 seconds)
    (254/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.089064083 seconds)
    (255/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.075372964 seconds)
    (256/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.107156504 seconds)
    (257/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067136158 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.085623155 seconds)
    (259/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.088499329 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085488381 seconds)
    (261/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.089215564 seconds)
    (262/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.094781457 seconds)
    (263/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.107880722 seconds)
    (264/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.094879959 seconds)
    (265/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.089026798 seconds)
    (266/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.093743169 seconds)
    (267/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.108190799 seconds)
    (268/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.100828123 seconds)
    (269/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.089624497 seconds)
    (270/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.088469029 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.117019435 seconds)
    (272/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.086773257 seconds)
    (273/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.10761014 seconds)
    (274/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.089228689 seconds)
    (275/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.134326965 seconds)
    (276/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.085934329 seconds)
    (277/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.109497849 seconds)
    (278/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.137021079 seconds)
    (279/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093744623 seconds)
    (280/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.089982251 seconds)
    (281/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.112014399 seconds)
    (282/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.090140159 seconds)
    (283/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.086661021 seconds)
    (284/286) benchmarking ("sort", Int8, false)...
    done (took 0.187447515 seconds)
    (285/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.090705422 seconds)
    (286/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.087752578 seconds)
  done (took 35.790357122 seconds)
done (took 36.667349223 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100202896 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146024239 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095432139 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134895382 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.122352145 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091226112 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117139294 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.096682259 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.121678928 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.123600491 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098113149 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092294619 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096470527 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.118978147 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096393941 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.136155255 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122247205 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093559989 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118354751 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085626216 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.116972937 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087217393 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.110409111 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069675433 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.1210473 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093519167 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.115061357 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119625583 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.085875535 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.108817999 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091859737 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116273711 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086786922 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122050404 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092736697 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.117287191 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.09679707 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.118325915 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.110567107 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086649544 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.116857621 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.085865656 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116160828 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094312548 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.11498411 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092167579 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.116864465 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098925558 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.136935168 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113647343 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.09463799 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.118845954 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096937639 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.116369975 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089805315 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.117199282 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091384841 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.137892138 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118139994 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09203315 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.116391549 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.09424147 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.114916858 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094312435 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.116979762 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.119711281 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098105376 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.113787074 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096550222 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.114663935 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087029379 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.116766957 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090243326 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.108496225 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095147712 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.119762098 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.107544638 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.091496169 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.116619527 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091386691 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.108727364 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088700023 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.109740967 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092686996 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.110866117 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069243675 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.112632755 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092350116 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.108399245 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.09616795 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.114832658 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093220269 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.110843967 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.097993704 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.109247293 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.09137427 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.109881652 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086639439 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.111936657 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090588241 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.108938097 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089355778 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.118595056 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.110472522 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.092431997 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.121081846 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086780667 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116099698 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086090877 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109005602 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101206911 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.119739996 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086838525 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114261748 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086036625 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.117881204 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086533404 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.109001371 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.109477122 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.086777035 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.116186597 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.086314153 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112606832 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.093859656 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123864515 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086378278 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113329086 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089403488 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109700596 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092485799 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.109495228 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087054775 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.11114836 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077734041 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112399975 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086874077 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117167657 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090251142 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.117941308 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.08870876 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.118927626 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092048994 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116237382 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.11599692 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.086097502 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074497516 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115649022 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088503744 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.111160415 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086997782 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111104251 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086435778 seconds)
done (took 16.766459142 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086734344 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183187675 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.149646694 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.140567152 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106705905 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.110883648 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121718145 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.117835227 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.111476397 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141672424 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109793222 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.130568358 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147019248 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086549686 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.110343497 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091066751 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112067613 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101988523 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.143937595 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.131607176 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.162565633 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086737771 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.145699723 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.133732363 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119672118 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.113920682 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111253462 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091035104 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.11464574 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102622588 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.130871461 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.114371725 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087583904 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133272263 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104093778 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118056501 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087557792 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.117046707 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086986462 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.110074904 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139507357 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.131475488 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092772112 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.115960761 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091335309 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.112462406 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089718753 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119960223 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097938203 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.113759919 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.124448803 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.1544112 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090162754 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12002475 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086652854 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121422431 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120713417 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090038987 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111436246 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089445775 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111132613 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090980667 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126050015 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.140216827 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091138316 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119743464 seconds)
  done (took 8.53061175 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104742183 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.13801566 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105540518 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.129020828 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110547693 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088279842 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.111425658 seconds)
  done (took 1.727797627 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.087611672 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.132809134 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110731986 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.134621815 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131278169 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.11231189 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121925775 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089463206 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131169774 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089339382 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132763649 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.148646486 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090693231 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119508133 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137336518 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088295128 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.135979058 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088394403 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115316661 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111483488 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115344954 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134587556 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090156686 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112661962 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102210615 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.112763488 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.160627577 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093583989 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113254706 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091972532 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.110679218 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.149954201 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103024484 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124026529 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089000655 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128444259 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.126785711 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.085942766 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.124970186 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094003479 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.126811551 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089219121 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.11352904 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086880121 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116812544 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.098912782 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.116196081 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.106398912 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.115866369 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132182138 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089817559 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126274472 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.08913764 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116314051 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.091164317 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118265723 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.0985542 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.113165588 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132499332 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089886576 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.129259598 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105860138 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.126625216 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.128730807 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091964139 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.126671214 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102781829 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116094323 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090785166 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116530787 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.105396488 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.110835905 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.089826747 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.122543832 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115075282 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.111650574 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136235296 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091252606 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124271872 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.112832516 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089686108 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113003213 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112480824 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117699916 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089241601 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116149663 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092212 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.110608007 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087832746 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.116925082 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087660032 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.113668827 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.091434333 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.11362673 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091362052 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.129761721 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113822725 seconds)
  done (took 11.727744597 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090376884 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.113625993 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.090384046 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113811765 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090393671 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.113113529 seconds)
  done (took 1.564729189 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.116167504 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115713023 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103578251 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119538651 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.154371206 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.102415831 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.128675468 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123182454 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108073179 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.125985935 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128531479 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104720471 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.133206177 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120719178 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103705921 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119060176 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.10375915 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.123448561 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126228222 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097042635 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.135288584 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119602504 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097067956 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.130198216 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117230641 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095902791 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124143381 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104388838 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.125672749 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122568149 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096333797 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.116950022 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095690453 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.121729654 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.127983252 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095941567 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119974598 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.117148848 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100487979 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.116369994 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104039497 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12006694 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126629796 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093008994 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122539669 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119199229 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094385855 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.123376341 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103649389 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.117490096 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118190122 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094131904 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.115705891 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094186097 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.120770085 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125050311 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094392571 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.127904629 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.119560509 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.095324895 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117375243 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092482937 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122743129 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117149921 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104004124 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118894589 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.119899259 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095500675 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.1203419 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095570088 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118864367 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092857198 seconds)
  done (took 9.139918249 seconds)
done (took 33.629489251 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.67365112 seconds)
  done (took 1.624099829 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.81960616 seconds)
  done (took 1.772606147 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.690295506 seconds)
  done (took 16.674561932 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.48088406 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.564493078 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.970686473 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.176060376 seconds)
  done (took 3.146112955 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.919908055 seconds)
  done (took 1.896115023 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.279673182 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.233765198 seconds)
  done (took 1.472825975 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.800629059 seconds)
  done (took 1.769347369 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.348386072 seconds)
  done (took 2.308898538 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.320174379 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181014429 seconds)
  done (took 1.467703921 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.543950791 seconds)
  done (took 1.511416186 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.616754516 seconds)
  done (took 10.589267367 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.262346537 seconds)
  done (took 1.240014773 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.300840459 seconds)
  done (took 1.270625468 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.296889665 seconds)
  done (took 4.269550603 seconds)
done (took 51.976155599 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098251233 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.12552361 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102188678 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123112257 seconds)
  done (took 1.41367444 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100994687 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119582496 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10063066 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119671215 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125000547 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095467571 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.12114021 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100804176 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119841044 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095505435 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119572431 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.11818567 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099120203 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.120797705 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092543092 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.122331248 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124244608 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.095929212 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123000861 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.09583353 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117871168 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097601662 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122887174 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094388807 seconds)
  done (took 3.617435921 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.09929626 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.117674321 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.095392815 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.116291547 seconds)
  done (took 1.408428772 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099138442 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130636753 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105843444 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125312049 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129925308 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105625334 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115495896 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.091759098 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.11875423 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.099162093 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.114590668 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.13782242 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.105788586 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124070699 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101846713 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112744279 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091097198 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.129384075 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123304826 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.099642701 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.116689072 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099307186 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.113807731 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.110041 seconds)
  done (took 3.677196789 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170230509 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126081287 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.136836104 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.09536044 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.158447033 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.138350754 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087283697 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.13944158 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088278966 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.128959377 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117443205 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132490279 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128361571 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088112435 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.112100167 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087707981 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.127452646 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128502255 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090149154 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.125912213 seconds)
  done (took 3.39051555 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097646169 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.115853867 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088162054 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.114867432 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098273157 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.119427528 seconds)
  done (took 1.614537951 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090146608 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113479 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089623103 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.112655405 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.09415145 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.113388237 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088279164 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.113388694 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.088774126 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.113533601 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089070641 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.112708693 seconds)
  done (took 2.200888118 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.498961592 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119489922 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.11969125 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088850055 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.120717506 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089169224 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.128009305 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092325716 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.139326585 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088580087 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114509302 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092750856 seconds)
  done (took 2.673123713 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235471721 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124335704 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279744316 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.361939268 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153824972 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162781538 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.275367832 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159690193 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.196554965 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148240463 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228008689 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19537947 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150654099 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19070559 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136963345 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144377803 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18835375 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247256262 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15172032 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209838843 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203512149 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16634584 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179420733 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150224121 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111839987 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190790134 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094551359 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129267209 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229352638 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178375951 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187688474 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159184636 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145505684 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233822802 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246229656 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194773124 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275773134 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132799519 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.165391549 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.142698676 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260420636 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138398901 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230040497 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154564163 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104655409 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218845795 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164211509 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175961814 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.145011161 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137705959 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196164999 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238791568 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.190218118 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138216729 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295025714 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14671098 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.158275675 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187360825 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248098287 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2225221 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187374301 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.119313722 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186331685 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189205278 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20833291 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.150361324 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.180013009 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145664027 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180548349 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187631511 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163920313 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200635905 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.177775796 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136876154 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168197647 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172216614 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171386335 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254616198 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183092989 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.121263062 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168498044 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147190846 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129278455 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.167543617 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123864198 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213058595 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142147985 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.161446495 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207779894 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157329535 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159977675 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219235926 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181982532 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147594302 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.08367059 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151461913 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.153790468 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174476343 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138374543 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157228189 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155923301 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.128331224 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168210801 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097475939 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207607242 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.09138548 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171892399 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207699814 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100432184 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160087374 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151498593 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.149206451 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175565451 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197591829 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138772341 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132531782 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208823335 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177385652 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.140524905 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175244354 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226245892 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.116414951 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147207562 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222383297 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240150148 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112798428 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225905938 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151843221 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107776086 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.132359184 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179279565 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155006688 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161244099 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13078583 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.181712685 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229649676 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098491249 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138783671 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194237012 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132111229 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130954304 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154577319 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145779447 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.110389205 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.141462969 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.14347735 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174204764 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176213363 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154007669 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165007253 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148512347 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246262387 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138398963 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.149192127 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146668618 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.094238969 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.190582554 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222127124 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103693627 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229848808 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.170220482 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220755729 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168387641 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10702896 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175708331 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128784016 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.118797812 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190758979 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165763352 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160338336 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.19459853 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218998615 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.176349812 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.206693353 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164917564 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173901272 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.16345282 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154798701 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.10983417 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158938451 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156693018 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.122781215 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.13733112 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.106957373 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147951505 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141166519 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131425976 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195596411 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167211954 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213002287 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157062754 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146692451 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178700684 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102179406 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199332785 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.176621538 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144997232 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.197255535 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190094762 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210139473 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115593989 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22299509 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119004468 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09842517 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.139752471 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168623565 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13313089 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106914516 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186289002 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179520057 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179537397 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169299348 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228168861 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175182375 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190852372 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.121130784 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.141345017 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207172427 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173914226 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.153235235 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135800246 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.149872174 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176986433 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153142024 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25216651 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166285182 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174481908 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231324295 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.122855315 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130027281 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148624528 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175897181 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152172953 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172932752 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145464676 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138246297 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159249075 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.128316316 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158400937 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183318475 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162369426 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210489947 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.121842788 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209126245 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099999408 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158982022 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157923298 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164091144 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.107374348 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173558257 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199851755 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144399783 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164801809 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213630886 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103933332 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.302862916 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231254427 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191960097 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136673872 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15376723 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159240822 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161950046 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169160574 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17740429 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157539277 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185283801 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158418929 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.134908553 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137260384 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147841418 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123699798 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131378134 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.146975707 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.175585651 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.137298737 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186443256 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152883401 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158258753 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169381892 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150050941 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.141900507 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147996903 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214470061 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180897275 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23745882 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.149048374 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.177027533 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20385821 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125483679 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130343761 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.105774057 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176421135 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134719416 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215499698 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.185620817 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196794821 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20456368 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175945772 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137819686 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.093332604 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15598427 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167852466 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22489598 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147001768 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.11906735 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227689609 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.108476374 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130673459 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164511416 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283754609 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143356789 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218509741 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080955211 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.278050768 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123084407 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1045475 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161083175 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232879462 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.134116429 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.150506193 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166012822 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185403362 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13425084 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147355307 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.214677585 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208910848 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223741356 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182269703 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.10421292 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155534258 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200269709 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191002332 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155395175 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.137483159 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204011821 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192552518 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.221962434 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.139663812 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168145218 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165510941 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156255173 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184964663 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133821888 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20590514 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133997923 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18987557 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152206265 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136545498 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17402146 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.211526951 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112523408 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212914905 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181589743 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133365283 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104592772 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190364563 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177003263 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153027331 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099156811 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207799679 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097886521 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216903192 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232083572 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131799745 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15543974 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144978072 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107597348 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152724077 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155177276 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13712749 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.161103079 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201223016 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.133378434 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18875423 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2271606 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16980802 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170848262 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145218426 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.691558015 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.12970726 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193142457 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145996182 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203634279 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149607442 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170751902 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157075377 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166888797 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22045906 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158831065 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230487094 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188294233 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.176412964 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13153577 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156850741 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152486199 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.14284411 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152420457 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167338564 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159383319 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.143644981 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.17711229 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163020383 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.132093233 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112451409 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222493482 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119187237 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211155973 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178426542 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109961918 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197338342 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184929501 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131755458 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.178034173 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233263704 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112473873 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147772987 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.131932614 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.149451138 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255971373 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097343597 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214438752 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182250587 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158004471 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167978894 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145767459 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190008755 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155221444 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211403266 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115234248 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.156216343 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154829092 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13670054 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.129216719 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153632875 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165874243 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.120436038 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18445643 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.137181532 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191986658 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123778078 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144179871 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283336625 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176946751 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241544131 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.107026535 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135831736 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161830881 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148218986 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.174964581 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176437456 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.134387132 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133107586 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.134231478 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.127291025 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111099823 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154307254 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189280825 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18932786 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205503025 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.13584647 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.276704554 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11274841 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15459159 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.113813799 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.106857737 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149053417 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14489826 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154314189 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190104737 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258651567 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.145668858 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.131487537 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146512625 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098751581 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133814176 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160797049 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162959135 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17853414 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141640015 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080545864 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154683762 seconds)
  done (took 81.492210471 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17302702 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.151178939 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.158508947 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.237061678 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.191126028 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.281452971 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.223727135 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268643968 seconds)
  done (took 2.756731067 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093122307 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.144962607 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.155232434 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.131207927 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09137394 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.11845708 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.337940392 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.131906473 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.114980128 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120485863 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.169823807 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094156936 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.540539305 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.09050949 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.117918526 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.106096995 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092352436 seconds)
  done (took 3.719377734 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.040246279 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.481073407 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.724972609 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.190216591 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.157122247 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.116039392 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.674680523 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094926609 seconds)
  done (took 11.551869473 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.115774281 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.135572873 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123627844 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.151405053 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.139653032 seconds)
  done (took 1.7469864 seconds)
done (took 122.229592489 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097070235 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126505607 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097304696 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.128447028 seconds)
  done (took 1.509870461 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094916921 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071223241 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.099277806 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075208938 seconds)
  done (took 1.410837479 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.186542485 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.166628791 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.378558587 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072156609 seconds)
  done (took 1.556916975 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113713996 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13067987 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103837394 seconds)
  done (took 1.431271648 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106633707 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128123829 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102720175 seconds)
  done (took 1.418021799 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105273874 seconds)
  done (took 1.185959508 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107075455 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136162476 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108319464 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.134559217 seconds)
  done (took 1.567254449 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097968745 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12592295 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108722687 seconds)
  done (took 1.41209717 seconds)
done (took 12.916535747 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102704025 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.415065512 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412055955 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109803096 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.74261606 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380574373 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.0211438 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144522092 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.163303977 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093013837 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13710024 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.693347587 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.04535307 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.36994882 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.005033307 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.367424052 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677926183 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119939409 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091499058 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12058578 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.004314938 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093059677 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120353735 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091648634 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.705637724 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.396800244 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12141301 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.366910132 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091856566 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125001479 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382226647 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121012838 seconds)
  done (took 16.901425294 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095125267 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17107919 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097623254 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12111255 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.121893349 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094737848 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122045329 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094221883 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.176112023 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121096399 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111162343 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120510105 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.123792537 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094994143 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.139168636 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094008831 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.123347152 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092582507 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119662372 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093240152 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138271356 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11847154 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094131616 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119581491 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093150671 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133433264 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094785372 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120777097 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.118453208 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09913782 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.125536066 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094241082 seconds)
  done (took 4.758514744 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139778429 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180640962 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.126861067 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127219034 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.166311762 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.1219649 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.19641289 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.116947017 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181279544 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.120534789 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137418944 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092905563 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.154736833 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.121252538 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114216552 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12047484 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09654566 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121009543 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092507368 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121644763 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137955601 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093466898 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120718405 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093484702 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121928144 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108334879 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122449003 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119126081 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093819111 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125092798 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098545676 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122450776 seconds)
  done (took 5.097340369 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097549307 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124586803 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.10971926 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137738979 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094786582 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.123882924 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097367935 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.122849544 seconds)
  done (took 1.994463853 seconds)
done (took 29.832814157 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110445417 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.125620788 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107320017 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133531139 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.10278012 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.130076885 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090882245 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.131809995 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133064572 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102183317 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.13606222 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.09198692 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.121064921 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092590055 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13281632 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097567693 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.130773334 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101899151 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.131786737 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.130815929 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094480536 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.13110765 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102580025 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.131723723 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104403892 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132009178 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.135976662 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099714433 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.12159003 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094459961 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.122303065 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.102766458 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.121618295 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104181261 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.125319576 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097273922 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.121837265 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094855406 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.13126086 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.131212624 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099384027 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.131988524 seconds)
  done (took 5.945831737 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107898121 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.138006118 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104117929 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081145375 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.115032193 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080541074 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.136213494 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079199497 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.108649989 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107230151 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074554353 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.104961902 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078365445 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.100085438 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077365538 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07564512 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.106910081 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076047673 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076245825 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.104458754 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080018917 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072731924 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.106703502 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079278096 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074685839 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.10868829 seconds)
  done (took 3.545941293 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.10063807 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133120396 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113569688 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182305939 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.159251368 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099943796 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.130782215 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13847121 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109048164 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118905321 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096373876 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148661731 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110951395 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128606533 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.09208047 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136227837 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134104997 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094660436 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127505666 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112935521 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137152343 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103616022 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139905441 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132051164 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092820595 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121745948 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097015714 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.133679795 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097626643 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.129868825 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097078632 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.123479689 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.12108165 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105072326 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.124361367 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094952912 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140281791 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102913582 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.129450807 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.120475209 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.100891937 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.120859972 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114508665 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.160433663 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091539438 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128363118 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122864181 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103516312 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120431639 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110512296 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130051424 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092335246 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.123617986 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091807201 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121682559 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105845712 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.122434381 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094969482 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130200712 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125298885 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106187734 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123817291 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108560646 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.120808573 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100517897 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.119706299 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092699232 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.119657869 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142769376 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094788225 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.159995974 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093573104 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123066597 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101361861 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.128837105 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127211565 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092991805 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136206957 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102808843 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124130796 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102015504 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.124755182 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.0952294 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.139129637 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.12168523 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095832957 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.120996988 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100043294 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.122545735 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094962429 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135485822 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092147364 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124402615 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110645729 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.120538436 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.121332997 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099440142 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125316373 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093233895 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134596145 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098409634 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.121443417 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.130441081 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093885725 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.123504026 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103977569 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.124795909 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092233464 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125947038 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098984218 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123025916 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093314367 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.123770898 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094701634 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131852587 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.127084678 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098067772 seconds)
  done (took 14.725615926 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228193672 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215991472 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.232457776 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.261126281 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134636494 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.11429482 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.240142008 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.125023868 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.122483894 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.158277198 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.170086702 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.18001907 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.169169193 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180110675 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.168563443 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093024807 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.141806144 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.163392195 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.213855409 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.25621402 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.142620691 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.101555871 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162082856 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.159647594 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.136323638 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132266692 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.119096465 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.132030323 seconds)
  done (took 5.765329714 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107765939 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.153773776 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098892124 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.143929449 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147952153 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092683381 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.12750845 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095462774 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134382132 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134222431 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092925475 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128722776 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.09984684 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131507685 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.122798752 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103872322 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.130577739 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095178657 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125753609 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097472645 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132316081 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101010719 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.126542616 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.120119074 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102480653 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120923339 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086270792 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141875321 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122098827 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115877319 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120407082 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102784606 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.137072667 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093565812 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.12201421 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094736138 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124021588 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.09592332 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.12396188 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.09143297 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121627717 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07773225 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121617842 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135845719 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100081947 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.081047355 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129362476 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.126548048 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095297651 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119783179 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095900315 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.123801762 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096845015 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129649352 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.095290828 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123286838 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096863485 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.114813077 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100076461 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.123996612 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.08475595 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.120200826 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099763617 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117010137 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102073698 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127078329 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092247692 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.124471191 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097940704 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128071018 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095874863 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129020777 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091542451 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.124520775 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095400424 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12809488 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.124749301 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.092278087 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.121890382 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093963851 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074983299 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.122566479 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073606092 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.125447233 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092027851 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121215085 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094872489 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128566544 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137418817 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095433446 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131412098 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094399516 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122189292 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.09546018 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112229424 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096551094 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139049079 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.14023106 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094465226 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121057787 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107843623 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125400393 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092451001 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.105252274 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.103185961 seconds)
  done (took 12.904160156 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130528547 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.152472654 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.123557093 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.111601252 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155651524 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157052824 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100998507 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130050329 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095248901 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.140983097 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093282656 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.13078332 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.09316303 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.1370924 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.15551772 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104243203 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124244647 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107687515 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127604671 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.168218497 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112184685 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.141733412 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.111042841 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123375508 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.12751354 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110919906 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.159710104 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106844345 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.135997308 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141744197 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107546053 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.159369743 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.14154761 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099148299 seconds)
  done (took 5.442457475 seconds)
done (took 49.416540859 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.226595091 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.396956018 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.180944037 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.028634768 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.231541928 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.188813417 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.213065738 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.181152338 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.579056219 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.183494957 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.425148448 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.655773144 seconds)
done (took 59.60173602 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.284266641 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.33832776 seconds)
    (2/2) benchmarking "String"...
    done (took 1.490885791 seconds)
  done (took 3.946976336 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.745829846 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.084578199 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.439107039 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.180868775 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.199659516 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.481070569 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.782860169 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.489020971 seconds)
  done (took 27.764519644 seconds)
done (took 41.851401366 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.189416871 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.199684423 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.22150466 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.162013065 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.308678511 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.203033377 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.421835725 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.346922922 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.207130033 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.1703944 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.201456514 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.205888726 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.18781851 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.340138376 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.192969519 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.194013223 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.275534721 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.898077366 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.569479768 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.191087644 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.219529118 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.237469336 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.199702667 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.190804775 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.255147407 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.184123289 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.198058453 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.204327121 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.493838584 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.182651732 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.287880718 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.564656108 seconds)
  done (took 190.013530065 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.183784836 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.142229484 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.226921491 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.222572221 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.586136548 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.384188525 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.328374392 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.669721355 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.204206619 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.188776624 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.414150509 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.187816413 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.487226712 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.159191805 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.214463879 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.249962862 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.458369573 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.488558339 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.223188963 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.358778039 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.198025233 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.422503434 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.333226158 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.366125234 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.200278113 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.213892161 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.217507188 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.193672091 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.392629703 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.384751728 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.228897364 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.224338732 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.780819936 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.041170622 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.209896998 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.200493599 seconds)
  done (took 149.100411565 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.184808494 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.185310361 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.187218254 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.216102977 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.185753943 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.717243552 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.717388132 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.734048223 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.401628406 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.493480885 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.422599473 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.18563472 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.279210081 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.199558354 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.186898302 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.20259613 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.227443245 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.190284361 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.186767065 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.718224656 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.199620887 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.232126727 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.357078791 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.202115162 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.216458053 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.576796859 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.187211168 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.217929464 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.513536757 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.233446229 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.187214857 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.550140422 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.237883369 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.302428639 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.189099986 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.218160982 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.187477117 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.465275452 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.187103188 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.188670749 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.191358868 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.846100407 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.190514421 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.719697708 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.18745448 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.118488218 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.188414035 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.18826676 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.929949221 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.85225912 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.206694704 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.188463609 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.190802181 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.188243185 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.187947261 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.219315212 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.809437329 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.286448875 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.205499187 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.188912879 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.192195427 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.219541687 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.189738204 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.188938799 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.622235657 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.189699581 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.334382729 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.26163106 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.296796105 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.734255812 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.19282635 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.288589362 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.310236436 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.189205753 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.189547028 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.189199807 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.19011223 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.298719326 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.189410349 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.590472689 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.190410094 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.360381743 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.206828337 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.496034526 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.288601669 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.190581706 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.570134462 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.195046381 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.190514544 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.92532038 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.286956132 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.190398853 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.191041231 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.191838561 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.592307398 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.725641744 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.442758004 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.194546621 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.677119335 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.194334999 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.611013278 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.72177867 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.845963214 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.195373835 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.302890051 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.361931598 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.207278184 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.193010732 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.190831539 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.508881145 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.194851514 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.250748673 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.191620282 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.588248913 seconds)
  done (took 364.196687426 seconds)
done (took 704.420894438 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.789840223 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.77871826 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.884136569 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.772507877 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.737960986 seconds)
  done (took 10.081217791 seconds)
done (took 11.20056798 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.371677328 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.371192833 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.25038173 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.373880864 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.223262985 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.389561467 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.35278629 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.213131057 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.291322181 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.270476699 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.29021637 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246198352 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.224915525 seconds)
  done (took 17.987870282 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.493466818 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.509843147 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.25613486 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.507346577 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.233330652 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.516345953 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.391695719 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.403613916 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.412360033 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.226517355 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.206802432 seconds)
  done (took 16.277317594 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.50788934 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.509898449 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.259847959 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.510551718 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.235205556 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.525043107 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.395213325 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.407745289 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.408281056 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.22749561 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.208500939 seconds)
  done (took 16.31591321 seconds)
done (took 51.700517597 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.20403236 seconds)
  done (took 2.324461843 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.238776437 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.4034469 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.221600119 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.21129458 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.204049469 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.20535935 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.21196624 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.204856184 seconds)
  done (took 11.02241782 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.203556313 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.200719148 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.200565745 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.202113783 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.200934557 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.204514181 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.20044837 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.201317879 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.204693328 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.20421387 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.201855487 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.203600165 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.202126673 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.204467371 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.204809692 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.204777469 seconds)
  done (took 20.367179516 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.204284476 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.202828611 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.202731499 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.203037738 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.20242811 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.202905025 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.203986936 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.20224216 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.202265588 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.20238066 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.202690348 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.201820326 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.203059502 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.202214132 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.202760882 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.204040156 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.203085548 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.203773373 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.207290534 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.203112593 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.204598612 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.203207415 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.204541222 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.204626021 seconds)
  done (took 30.003864938 seconds)
done (took 64.839082905 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.796357391 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.765272655 seconds)
  done (took 6.685085885 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.205321393 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.206159207 seconds)
  done (took 3.536699674 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.206017579 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.206750512 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.206939295 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.20729412 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.206177396 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.206162162 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.207349479 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.207202241 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.207301527 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.206731292 seconds)
  done (took 13.191035604 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.206471761 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.206663827 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.204341889 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.206374149 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.20622934 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.204129168 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.206629684 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.206806929 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.206498886 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.204607322 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.207524632 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.204602455 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.207217374 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.206470684 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.20708128 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.205337339 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.204822836 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.204996585 seconds)
  done (took 22.830841514 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.206524285 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.207373751 seconds)
  done (took 3.538818279 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.206011601 seconds)
    (2/7) benchmarking "second"...
    done (took 1.204709946 seconds)
    (3/7) benchmarking "month"...
    done (took 1.205402804 seconds)
    (4/7) benchmarking "year"...
    done (took 1.205729709 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.205561283 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.204982434 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.20570665 seconds)
  done (took 9.563407393 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.20835035 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.381582249 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.462011151 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.827370345 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.209522797 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.212180167 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.022659947 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.211867287 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.214301501 seconds)
  done (took 13.874977555 seconds)
done (took 74.345597875 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.219355448 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.21776483 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.425983691 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.214795215 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.216326841 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.546735873 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.259488283 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.329306617 seconds)
done (took 37.557660788 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.216252572 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.194662413 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.88581749 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.193851876 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.243803453 seconds)
  done (took 18.645557509 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.222154428 seconds)
    (2/2) benchmarking "read"...
    done (took 1.541814666 seconds)
  done (took 4.89086515 seconds)
done (took 30.880600023 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.210311939 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.210354766 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.207734886 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.209688167 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.207848434 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.210480594 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.207640532 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.206819483 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.209982373 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.210075245 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.211424131 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.210320775 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209631176 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.207398398 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207418158 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209947926 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.210308975 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.207428865 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207395501 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.208884915 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.208181763 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.211179075 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.209071621 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.209182582 seconds)
  done (took 30.146463005 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.211324933 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.210707569 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.211145722 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.211052498 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.207499691 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.211743097 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.210364346 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.208288042 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.211657741 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.211342457 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.208790552 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.20903276 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.211772437 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.209937034 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211140695 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.209408275 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.212540641 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21009353 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212133056 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.209266452 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.212158372 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209777486 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.209969191 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213343107 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.210403696 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.209016776 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.212173118 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.210586996 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21333661 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.210280675 seconds)
  done (took 37.448896993 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.217796701 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.220059235 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.212519384 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.212179303 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.213189264 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.212615905 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.212648527 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.213088175 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.212944547 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.212684104 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.212680631 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.212815794 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.213971911 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.213065263 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.213501585 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.2125816 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.213026955 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.21419421 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.214220162 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.213562977 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.214470737 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.215015864 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.214586891 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.213394189 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.215057105 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.214431997 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.214322616 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.214164524 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.21426829 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.21529991 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.214398909 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.214536504 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.214256441 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.215527609 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.215381504 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.214950216 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.220132325 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.22202976 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.215764665 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.214927171 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.214921178 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.21589675 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.21540388 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.215352822 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.216006891 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.215859859 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.215730908 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.215325889 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.215919459 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.214749778 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.215142432 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.215886543 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.215457005 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.215569183 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.21700373 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.215227405 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.215305584 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.216337708 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.215684235 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.216407489 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.216406808 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.216144366 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.21675341 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.216538301 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.216695592 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.216655964 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.217566919 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.217102567 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.217501688 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.21751713 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.216806697 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.217694157 seconds)
  done (took 88.62894626 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.217616432 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.215149225 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.215335413 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.214207786 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215658224 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.218059636 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.214729315 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217139908 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215362821 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.216908308 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218344108 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.21613448 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215116435 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.218704873 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.21799044 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.215209379 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.218909425 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.215812942 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.21886885 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.218202217 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.219432983 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.215237033 seconds)
  done (took 27.902630545 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219061036 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.220196031 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.215935048 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.218476955 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.215642242 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.219392792 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.219800074 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.220743007 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219763385 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216154875 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216333358 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220290562 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.216067997 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216093322 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.216730642 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.218208609 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219785743 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.218137173 seconds)
  done (took 23.061788566 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.217246875 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.217441313 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.219783846 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.217619073 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.218017978 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.220239456 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217955872 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.22029964 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.220593209 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.217660972 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.221382974 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220664727 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.220737242 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21887712 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219940393 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.219301516 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.221538197 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218291556 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221199611 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217665277 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.218481162 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.220754051 seconds)
  done (took 27.962484319 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22198528 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.220930895 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.219300651 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.219544637 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.218648957 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.221007201 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.221637445 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.218205967 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.222629662 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.222186046 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.220589595 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.222207662 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.221216702 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.221299573 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.219538989 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219682576 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.222554758 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.220949546 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222461713 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.219663878 seconds)
  done (took 25.554831308 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.22291448 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.223047246 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.223548787 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.224254055 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.223633103 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.223916986 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223803677 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.224078923 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.223060737 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.225340476 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.224877945 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.224484967 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.224088254 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.225189575 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.223920062 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.224832986 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.224271736 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.224697122 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.223821346 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.223923819 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.224423614 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.224168295 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.224749023 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.224892876 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.225014104 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.22499101 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.224681356 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.225043579 seconds)
  done (took 35.420045178 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225593029 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.225169536 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.221848951 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.221384898 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.222239146 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.221495569 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.222981669 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.221678477 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.224632107 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.221814502 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.224963653 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.224166021 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.22461727 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.224681566 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.224781986 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.225700047 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224874782 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.223236182 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222298829 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222982597 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.22591047 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225869306 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.225759416 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.223522432 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223328034 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.225987119 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.224136341 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.223725498 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22645501 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.222971925 seconds)
  done (took 37.860233481 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.243754286 seconds)
    (2/2) benchmarking "in"...
    done (took 1.244986662 seconds)
  done (took 3.630899426 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.22409757 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226638098 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.226803614 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.223909553 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.225017844 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.227166092 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.227273495 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224819533 seconds)
  done (took 10.948741115 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.228301305 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.227913215 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.228215695 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.227823674 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.227856748 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.227999 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.233772699 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.246585925 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.229225731 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.228879994 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.235331841 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.236756214 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.230923136 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.228639829 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.229169591 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.231960171 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.229166804 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.228907524 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.229568728 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.231633622 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.229730742 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.230913761 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.231612694 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.226977672 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.230873953 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.240737576 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.252764859 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.22975374 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.230302431 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.233452298 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.229514156 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.227184526 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.230393394 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.230031985 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.230257152 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.229494641 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.238337681 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.248744058 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.235940852 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.249831846 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.231828123 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.22815412 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.231309804 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.2313493 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.232458342 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.23109108 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.231483743 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.228932102 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.230439475 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.234969637 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.238060067 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.230839462 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.22918814 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.234693586 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.231920154 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237317487 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.250493107 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.235067347 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.243075298 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.242404087 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.26379884 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.256187609 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.233686103 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.231541936 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.243282543 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.258503373 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.239338602 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.250017921 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.23132615 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.232648296 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.23793068 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.264274819 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.256822537 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.231219648 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.234788931 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.233104309 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.231876055 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.23324867 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239175699 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.25290447 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.233404477 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.234807098 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.243855242 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256898791 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.236461076 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.233463083 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.234925349 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.234557106 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.234973367 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.244405509 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.25275891 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.234087448 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.233763799 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.233702957 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.235081569 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.235201642 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.233286268 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.235523072 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.231629905 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.235076929 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234562193 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.238134511 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.24389672 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.23507811 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.234708344 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.241977693 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.254163127 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.235555131 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.240579012 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.235753081 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.235545115 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.236842629 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.24110519 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.233189489 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.239305594 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.244211283 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.234689702 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.236358026 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.236480929 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.236621629 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.246581199 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.263777803 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.23578473 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.235816203 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.241085794 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.249105052 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237303219 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.238176889 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.236332745 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.234071713 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.233927645 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.238508141 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.236484542 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.236660094 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.236757979 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238071133 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.233824602 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.237002461 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.236731899 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.238198676 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.237208502 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.237154568 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.238583016 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.238621258 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.238137042 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.23828069 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.243254043 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.256026411 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.239045879 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.236957727 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.236312347 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.238949772 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.239391574 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.238528213 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.237723827 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.238996682 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.238645513 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.239152413 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.238619577 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.238442679 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.238233655 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.238906022 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.243817301 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.239241057 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.241710869 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.238776442 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.236710652 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.238275479 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.239631131 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.23904213 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.240264092 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.23890952 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.243224808 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.248718167 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.240856856 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.240084812 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.242431053 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.239886432 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.240874515 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.240380743 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.243554646 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.249615439 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.23978369 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.247356548 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.260194409 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.240159727 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.240845666 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.239914512 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.240505235 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.241423709 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.24404495 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.248929105 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.252960736 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.264730336 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.241212279 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.24507127 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.241952307 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.245557627 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.245084312 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.241707836 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.241633873 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.241997663 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.241394562 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.240798348 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.24145998 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.241808749 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.240577257 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.242236496 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.241260201 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.241254436 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241797898 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.24176751 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.24219274 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.238747788 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.242072477 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.242466069 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.241224584 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.239815547 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.240491527 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.241566157 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.243421304 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.243074515 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.24862539 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.239638559 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.244312132 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.243453476 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.24245436 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.241455157 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.243501386 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.243895122 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.242587104 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.249950227 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.260789706 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.244542624 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249521494 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.261421798 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.243347599 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.245632194 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.243818196 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.240959378 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.24770349 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.252534605 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.243406626 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.243619141 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.244143895 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.244323785 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.24453954 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.250321451 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.260963378 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.24503715 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.24458586 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.245562345 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.242756778 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.245945956 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.245497766 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.244792273 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.246692851 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.245519015 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.245588467 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.247079689 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.245326959 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.244749227 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.245778624 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.249218357 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.255342674 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.249267228 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.245136103 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.246944756 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.246406888 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.25035572 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.246764895 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.246651382 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.247201495 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.258209565 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.271081817 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.252769407 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.266867046 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.247121765 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.252204368 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.266933201 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.250040142 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246740546 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.247078619 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.245913073 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.247410736 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.244149447 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.247550564 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.247281653 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.247432281 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.248027106 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.252604795 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.248450862 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.247786295 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.247895464 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.247759811 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.248751434 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.246335392 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.248938585 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.249450909 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.248929492 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.247799461 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.248641268 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.254086873 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.270388496 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.248821586 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.248514915 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.24878201 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.248705751 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.250110253 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.24909774 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.252066129 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.258512897 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.251112027 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.259012348 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.250727906 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257567308 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.249550176 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.253347695 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.259012409 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.246249433 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.247976566 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.249469441 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.24919416 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.255752979 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.268036725 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.250838027 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.253558687 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.249387877 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.250299732 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.250225862 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.250326548 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250340966 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.250501456 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.25857966 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.269541698 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.255264208 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.251480805 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.248176616 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.251320429 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.25169928 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.25065565 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253208317 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.251562891 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.251584723 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.250647539 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.250565691 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.250939436 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.250901284 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.251661589 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.248323178 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.251592995 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.256478096 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.272131369 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.256182627 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.25303829 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.258506926 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.271749635 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.25932904 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.27050238 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.251197552 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.252133948 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.251998978 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.253995218 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.251607029 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.253628918 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.252587478 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.25332619 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.256412857 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.252042505 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.254891705 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.252451213 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.253010716 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.252470051 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.263485652 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.277745612 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.254762689 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.257758633 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.250645904 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.255624468 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.258561407 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.253371319 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.252022598 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.257725436 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.265076038 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.263247849 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.253646996 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.253993517 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.254869829 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.254045717 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.253685227 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.254737685 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.25380103 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.254961631 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.254724271 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.255120695 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.257151269 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.254517501 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.25437092 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256493224 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.256706057 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.264874826 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.274097277 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.256059343 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.254958609 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.255557871 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.255796611 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.255786004 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.256111182 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.255897308 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.255704251 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.25763048 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.263289369 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.263202788 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.258248285 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.255597455 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.258060565 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.255397893 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.255500528 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.257071469 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.256861646 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.257670075 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.25615816 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.256077689 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.25578958 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.255319089 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.25771843 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.255741102 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.25764771 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.261731661 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.265260145 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.256819312 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.255081918 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.257806929 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257547949 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.255238487 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.256709058 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.263273477 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.280087444 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.268844726 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.265985877 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.260823066 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.25869933 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.260891367 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.266158709 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.255972768 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.257974894 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.257565442 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.258377554 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.259222241 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.261815155 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258261368 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.263484683 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.276951787 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.257444294 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.266576366 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.276581767 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.258270631 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.259884274 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.263545284 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.259761097 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.256788763 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.258408908 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.260059251 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.265405803 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.278206648 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.259743693 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.259666011 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.258095663 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.26099044 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.264625156 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.260836893 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.25978451 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.257294182 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.260049854 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.259513093 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.25946665 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.257221046 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.258407204 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.258956428 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.263945186 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.266612882 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.258156911 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26103222 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.259576542 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.260904624 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.260069347 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.260815389 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.258671073 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.258034844 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.25926615 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.261756508 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.259913821 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.262287612 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.259048926 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.262842932 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.262732031 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.261298794 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.264555809 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.272203295 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.269087973 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.259458969 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.260979868 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.262835214 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.26412969 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.260889221 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.262098858 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.26197311 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.26228864 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.262524772 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.262398444 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.262561453 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.266014379 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279118788 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.281008934 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.263073296 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.26295558 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.265297615 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.262259586 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.260313447 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.263584913 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.264208948 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.267008908 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.27137305 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.263945545 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.268261637 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.281868304 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.264952306 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.267343701 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.266423133 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.270752571 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.266043286 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.262867197 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.263978819 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.268784279 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.281738703 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.263813432 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.274731577 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.295143597 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.283330109 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.26522392 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.265461371 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262593588 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.264671145 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.266164265 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.265650002 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.264444557 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.264507965 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.264311133 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.265695743 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.270516679 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.266085066 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.266069381 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.264365625 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.263014676 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.265258839 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.263012795 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.265054887 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.266518234 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.26533367 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.265061941 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.265305881 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.26573507 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.279228201 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.292057435 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.26661207 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.265149453 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.263621375 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.269086293 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.269299972 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.278698558 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.274766531 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.267299268 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.267071192 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.266701298 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.266003849 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.264886788 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.266842972 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.266482518 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.266771657 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.265457772 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.279324074 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.292503743 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.270915483 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.266160976 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.268831226 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.267073917 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.267254295 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.267856294 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.267683528 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.267478638 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.269990083 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.272244588 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.2677901 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.267981477 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.269695632 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.276769971 seconds)
  done (took 746.725065263 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.265062494 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264015459 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.265239702 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.265358906 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266021107 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265630249 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264927072 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.265515231 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.265295115 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.265745028 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.26518747 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.265940398 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.266211852 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.266218761 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26603087 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.266067556 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.265930589 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.266190023 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.267035776 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.26694385 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.266390032 seconds)
  done (took 27.761900197 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.269490321 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.267337568 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.266167608 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.270220777 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.267241659 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.269027841 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.268266118 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26902025 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.270981658 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268249857 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.26994868 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269845236 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.2675087 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.267492019 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267959546 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.271065122 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.270444206 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.268506093 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.271133184 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.268310479 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.271113384 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.268071956 seconds)
  done (took 29.099439885 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.270876815 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.270990605 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.268820551 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.267755695 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.271856407 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.269290032 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.271256375 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.270808729 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.271102411 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.271336713 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.270298255 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.273175692 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.277749835 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.276428511 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.272263621 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.270851289 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.415989203 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.271704482 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.272032076 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.271551677 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.268651101 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.276827068 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.290564378 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.27080455 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.270390396 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.273237939 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.272371273 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.272986484 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.273689384 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.273689194 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.27762292 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.273195786 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.272506185 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.274567811 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.271206857 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.273863306 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.278390604 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.273306066 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.271136369 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.273176381 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.283506838 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.295609461 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.274100587 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.278839103 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.294067986 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.273802006 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.276935466 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.282168719 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.270299376 seconds)
  done (took 63.773365921 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.274616514 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.273695625 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.272478964 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.273553352 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.275344904 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.27453326 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.274538295 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.274315448 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.271889569 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.272231846 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.27547092 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.272977903 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.271512835 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.274257455 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.275833852 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.271936459 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.272663289 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.271946608 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.271981482 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.273079299 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.272505626 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.27590439 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.273825321 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.272035634 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.274680047 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.272709812 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.272380281 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.275764925 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.273688761 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.273200868 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.27583134 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.275826478 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.277006506 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.272867351 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.27375009 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.276528759 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.276478189 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.273882396 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.276522436 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.275046797 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.276793831 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.277220994 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.277108244 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.276727852 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.27533569 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.274334095 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.275097339 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.276097912 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.275439146 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.276930698 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.276578191 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.274707669 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.277030932 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.274376234 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.276925151 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.27877485 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.275496241 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.274931456 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.277844876 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.274523508 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.274739887 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.278140975 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.275140498 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.277256207 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.278996581 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.274965562 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.27616751 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.277970659 seconds)
  done (took 87.883018681 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.277280172 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.277715451 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.278427094 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.278253222 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.278118699 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.278304941 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.278528785 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.277914265 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.278456637 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.278672818 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.278025406 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.277938715 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.278331175 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.279392949 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.277924213 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.278615834 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.279161157 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.278775822 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.278555186 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27890162 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.279706475 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.279388618 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.279017152 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.279563595 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.279844911 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.279555093 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.279349643 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.279409025 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.279816305 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.278509977 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.279923602 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.279629635 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.27956645 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.279982069 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.279797432 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.281200581 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.27975895 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279858115 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.280214031 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.28074747 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.280446279 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.279893042 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.280834801 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.281397535 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.281198859 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.280746157 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.280887405 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.282552334 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.280135412 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.280976729 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.281820457 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.282030854 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.282230156 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.281721473 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.28133755 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.281603785 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282460558 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.281634359 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282568927 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.282514355 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.282437945 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.283015424 seconds)
  done (took 80.548614002 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.282528643 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.282055999 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.279983039 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.27953484 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.282295167 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.280330627 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.28272873 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.282963372 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.283326339 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.282636273 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282925399 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.280320983 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280847905 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282755505 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.280171197 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288843749 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.2803053 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.280916191 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.282679558 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.280887019 seconds)
  done (took 26.834048347 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.2812003 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.284283065 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.281150684 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.280613595 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.283735008 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.281632952 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.283489894 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283544764 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281515142 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283870283 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.284364308 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.28430448 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282173868 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.281692464 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.284330553 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.282373832 seconds)
  done (took 21.719285383 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.282732403 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.28505259 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.283644684 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.284248198 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.281860326 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.283094122 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.284826238 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.282671679 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.281710795 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.285641382 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.285798959 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.285175384 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.285430857 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.285664383 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.282799978 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.286033441 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.282405692 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.282005117 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.286055612 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.284140971 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.284278869 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.28233393 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.284984402 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.285546504 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.281831785 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.283507441 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.283421146 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.282800172 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.283764156 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.286231752 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.284743767 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.284377813 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.284951499 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.284299711 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.286564937 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.284939765 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.287382543 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.288168869 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.286377687 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.287125775 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.286801371 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.284394463 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.286771307 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.287806229 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.283942906 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.288649873 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.285166166 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.284531263 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.285088575 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.2851635 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.286679466 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.288013185 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.288193203 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.288649227 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.289056586 seconds)
  done (took 71.875425751 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.288380618 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.288255589 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.285624316 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.288297268 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.288960542 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.285530625 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.288594954 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.287445292 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.286552033 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.289732056 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.287481848 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.289780516 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286506006 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.289050849 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.28702326 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288900892 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.287807619 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.287071421 seconds)
  done (took 24.380393709 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.28770723 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.286722502 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.289830835 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.287150524 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.287852378 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.290339164 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.287997925 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.289852053 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289597047 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.287620593 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288000928 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.290138424 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290902574 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.29137356 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.287858106 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287769987 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.289711506 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.289434994 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.288596499 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.287284919 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.2909657 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.290171673 seconds)
  done (took 29.557061966 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.289907302 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.288911396 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.289890762 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.3062266 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.310522306 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.313095477 seconds)
  done (took 8.999754752 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301054295 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291074336 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.2884122 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29184511 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290224381 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288930529 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288146159 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291146521 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291404127 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288920997 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289720314 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291722126 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291510162 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290810319 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29122437 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291753991 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289184541 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28915755 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290395411 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292551018 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290106394 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292256837 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290315328 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290019868 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289687303 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289091784 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292008311 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290725616 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289708475 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293500099 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293144681 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290062233 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293168215 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291090027 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295203489 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293669391 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290129619 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293851223 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293310877 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291334812 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.294076348 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292852096 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292629783 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2914864 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293547426 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291201109 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291487054 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290856891 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29228086 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294690591 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294032596 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291603412 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294112728 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294099916 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294782841 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294549129 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293195031 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291616724 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294971559 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29225107 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291649984 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295118952 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292859879 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292765611 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295790013 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292986291 seconds)
  done (took 86.501712966 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292257896 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.292874252 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293467831 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294209135 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293621414 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293623123 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293634609 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293648817 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294803914 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294458962 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295735841 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29322049 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294680178 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294371789 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294012055 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293118265 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294707946 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293962308 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294277537 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297306335 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295250119 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293952009 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295755492 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294668005 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294429306 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297841512 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295277692 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295155542 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294637093 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294906261 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295104636 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294241571 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295302323 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.295823747 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295073129 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295310403 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29503436 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295248429 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295952513 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29778932 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295936152 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297684447 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295090746 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295617608 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296200417 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296670675 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295366281 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295404164 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296049802 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296647734 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296891759 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29646776 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296958248 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295842304 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296525391 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296421419 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297483164 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296156653 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296124885 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299137911 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296876042 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29603949 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300750602 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295877893 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29581568 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297421302 seconds)
  done (took 86.710081506 seconds)
done (took 1742.063996169 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.462006485 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.413412248 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.296520438 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.341286156 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.298270669 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.312900894 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.30415629 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.298428954 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.29747486 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.298043061 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.297251716 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.484339477 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.354362806 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.298319129 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.298532399 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.392628015 seconds)
  done (took 42.659211056 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.327419625 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.305806908 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.418229445 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.322227242 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.326685347 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.49216829 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.360164885 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.303219414 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.478740119 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.345658574 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.899067372 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.327687129 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.303616124 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.437946979 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.321515684 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.492242642 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.558552127 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.906239015 seconds)
  done (took 30.137804848 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.763806859 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.324858394 seconds)
  done (took 9.300368595 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.321936421 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.302104002 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.304012219 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.302380121 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.294627176 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.295612741 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.301625901 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.295176936 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.107542476 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.430524524 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.303792502 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.313603208 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.324520114 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.3046538 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.301374287 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.342072744 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.503588743 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.303144803 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.300792252 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.309302919 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.303605328 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.404024727 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.345692084 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.301853689 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.432321346 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.099438039 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.306525298 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.310908726 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.490440754 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.303429429 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.30425197 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.303814245 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.305314432 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.219299232 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.743183765 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.31425558 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.330181674 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.313371316 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.302858964 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.451869222 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.306389087 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.311669478 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.298043677 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.738072197 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.440753482 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.422841455 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.576831999 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.323924554 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.307868678 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.36779325 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.306734632 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.306148889 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.350768408 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.101594024 seconds)
  done (took 110.529200244 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.302576348 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.688718727 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.467895303 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.319825759 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.933166095 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.947247258 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.316913503 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.59502707 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.347255255 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.300062725 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.59724548 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.81176364 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.316209313 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.319457345 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.933451107 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.359200539 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.30024191 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.044500617 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.317812585 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.300329371 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.804238723 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.308546569 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.307387709 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.548316777 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.339561831 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.763756155 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.760278429 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.740311246 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.318558146 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.301735044 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.772435533 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.320323617 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.307562452 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.304602059 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.568212268 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.666871009 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.664897347 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.318526145 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.326369711 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.303265036 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.332604499 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.758873122 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.668278528 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.320984376 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.302284382 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.763705435 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.319979988 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.311838697 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.309607354 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.502659301 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.944223568 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.302207165 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.746922714 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.30342037 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.589331594 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.381092683 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.361214813 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.794992633 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.320088017 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.374513484 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.330898909 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.303331741 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.303332496 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.305589237 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.303485887 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.660683121 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.64543876 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.307679522 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.658048724 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.786021881 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.320698995 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.832366068 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.211942603 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.323682942 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.378557757 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.303191432 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.857510767 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.803192865 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.35153868 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.30414383 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.645963496 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.324607334 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.591945733 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.325628463 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.304599215 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.833971038 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.311348446 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.35663669 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.304912726 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.322261065 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.923679434 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.306335576 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.592354876 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.321938248 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.305911227 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.304910692 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.312012909 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.305145297 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.305346382 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.304897624 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.835575928 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.323505861 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.427650362 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.322413539 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.306152576 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.324273139 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.309052698 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.305603095 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.523490043 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.814667503 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.334228105 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.307015297 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.307397997 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.328115217 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.584239104 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.312143839 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.621644181 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.322953178 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.306975219 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.313182692 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.944599168 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.364374465 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.306997627 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.323364306 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.197981983 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.512897218 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.32646113 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.325913843 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.308024657 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.324397799 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.579497029 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.327664093 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.367486902 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.313323709 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.023566638 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.355432495 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.326310988 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.602749773 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.31008165 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.213021482 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.333323826 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.309105902 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.61488636 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.585792059 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.504739902 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.310829697 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.326300153 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.013280669 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.361586623 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.448053267 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.329625027 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.390771736 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.506676499 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.489412963 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.309937013 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.92227513 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.307496118 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.52217752 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.309087576 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.62869357 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.808783116 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.327106442 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.311133217 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.017947052 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.041131764 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.123270184 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.313094321 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.589835207 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.284172919 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.789311673 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.310794846 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.310696536 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.745168958 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.313522554 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.311388486 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.309147343 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.309673888 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.449542023 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.483437005 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.960043626 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.311730156 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.769742667 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.334611949 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.310439411 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.314686467 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.312774105 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.658820636 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.388129354 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.313407475 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.312793145 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.312122908 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.319317657 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.792255347 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.246935809 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.312447682 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.46376102 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.951674301 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.328533722 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.312968116 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.918414141 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.574028697 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.832315714 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.341999072 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.631593573 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.333652138 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.350684621 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.888825305 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.344197402 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.795254858 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.333901353 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.314163458 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.908590297 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.330715692 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.39701851 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.313798683 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.31414862 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.849064622 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.330747639 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.314090096 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.590784945 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.333339547 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.562211305 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.315671485 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.317359251 seconds)
  done (took 1105.615986209 seconds)
done (took 1299.45258971 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.31283448 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.313011678 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.300961575 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.319092076 seconds)
  done (took 26.475948676 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.331247872 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.319656437 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.322774311 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.320189119 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.323625987 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.320623769 seconds)
  done (took 9.169290241 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.382194396 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.314848298 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.319869628 seconds)
  done (took 19.247796268 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.531305578 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.635596855 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.66570789 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.583482142 seconds)
  done (took 10.648296613 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.323528964 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.322686655 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.324045766 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.325185933 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.333732701 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.334282461 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.325205531 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.325829145 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.334573825 seconds)
  done (took 13.179988746 seconds)
done (took 79.952756073 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.425007229 seconds)
    (2/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.297720507 seconds)
    (3/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.318303941 seconds)
    (4/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.676734029 seconds)
    (5/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.403464579 seconds)
    (6/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.520881812 seconds)
    (7/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.350127735 seconds)
    (8/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.0361535 seconds)
    (9/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.31632494 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.590135499 seconds)
    (11/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.716639631 seconds)
    (12/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.421853684 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.357415289 seconds)
    (14/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.32690286 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.205097752 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.34523783 seconds)
    (17/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.436005513 seconds)
    (18/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.326679301 seconds)
    (19/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.414699607 seconds)
    (20/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.879120992 seconds)
    (21/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.502285926 seconds)
    (22/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.308788362 seconds)
    (23/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.351416941 seconds)
    (24/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.299249271 seconds)
    (25/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.309088285 seconds)
    (26/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.300284161 seconds)
    (27/286) benchmarking ("sort", Int8, true)...
    done (took 6.318921658 seconds)
    (28/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.192765776 seconds)
    (29/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.318513716 seconds)
    (30/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.363348995 seconds)
    (31/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.785198882 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 6.318473629 seconds)
    (33/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.73780386 seconds)
    (34/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.322985429 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.422117152 seconds)
    (36/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.325174549 seconds)
    (37/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.681595106 seconds)
    (38/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.362580827 seconds)
    (39/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.299786262 seconds)
    (40/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.299741936 seconds)
    (41/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.38377286 seconds)
    (42/286) benchmarking ("sort", Float32, false)...
    done (took 5.327201166 seconds)
    (43/286) benchmarking ("sort", BigInt, true)...
    done (took 6.337935094 seconds)
    (44/286) benchmarking ("sort", Float64, true)...
    done (took 6.31999523 seconds)
    (45/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.346693312 seconds)
    (46/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.319962144 seconds)
    (47/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.440183085 seconds)
    (48/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.642544361 seconds)
    (49/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.578135326 seconds)
    (50/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.385380931 seconds)
    (51/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.344637731 seconds)
    (52/286) benchmarking ("sort", Float64, false)...
    done (took 5.625710874 seconds)
    (53/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.504691649 seconds)
    (54/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.506148264 seconds)
    (55/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.418844314 seconds)
    (56/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.379082132 seconds)
    (57/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.216818659 seconds)
    (58/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.321492631 seconds)
    (59/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.841487947 seconds)
    (60/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.301128244 seconds)
    (61/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.161523668 seconds)
    (62/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.761487561 seconds)
    (63/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.889100875 seconds)
    (64/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.683038769 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.73672487 seconds)
    (66/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.781718706 seconds)
    (67/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.41300618 seconds)
    (68/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.095822038 seconds)
    (69/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.301308986 seconds)
    (70/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.352221539 seconds)
    (71/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.407655794 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.735969109 seconds)
    (73/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.36454078 seconds)
    (74/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.322507068 seconds)
    (75/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.105593881 seconds)
    (76/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.803871277 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.298130373 seconds)
    (78/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.446067973 seconds)
    (79/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.781559518 seconds)
    (80/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.365727021 seconds)
    (81/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.141283379 seconds)
    (82/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.317403523 seconds)
    (83/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.143813135 seconds)
    (84/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.405417071 seconds)
    (85/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.404933931 seconds)
    (86/286) benchmarking ("sort", Int64, false)...
    done (took 5.519274473 seconds)
    (87/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.308082597 seconds)
    (88/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.700625057 seconds)
    (89/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.825866765 seconds)
    (90/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.348595273 seconds)
    (91/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.911486307 seconds)
    (92/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.735380035 seconds)
    (93/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.046504886 seconds)
    (94/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.323441505 seconds)
    (95/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.552545247 seconds)
    (96/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.342693049 seconds)
    (97/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.398976096 seconds)
    (98/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.306904524 seconds)
    (99/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.435292124 seconds)
    (100/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.304622069 seconds)
    (101/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.3246968 seconds)
    (102/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.485650061 seconds)
    (103/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.548844455 seconds)
    (104/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.538184617 seconds)
    (105/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.37454124 seconds)
    (106/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.838328805 seconds)
    (107/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.844461826 seconds)
    (108/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.853233856 seconds)
    (109/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.305597604 seconds)
    (110/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.563982582 seconds)
    (111/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.942791204 seconds)
    (112/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.044355528 seconds)
    (113/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.396121374 seconds)
    (114/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.111760806 seconds)
    (115/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.97771449 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 1.8473954 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.365952086 seconds)
    (118/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.709408956 seconds)
    (119/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.60017131 seconds)
    (120/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.427666538 seconds)
    (121/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.187279751 seconds)
    (122/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.128991279 seconds)
    (123/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.589629959 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.541047268 seconds)
    (125/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.949215714 seconds)
    (126/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.306108077 seconds)
    (127/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.342545446 seconds)
    (128/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.445580992 seconds)
    (129/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.351837431 seconds)
    (130/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.306206054 seconds)
    (131/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.597357176 seconds)
    (132/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.352722046 seconds)
    (133/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.174862103 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.134701122 seconds)
    (135/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.351575898 seconds)
    (136/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.411175755 seconds)
    (137/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.524406915 seconds)
    (138/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.109241661 seconds)
    (139/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.38585581 seconds)
    (140/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.423082122 seconds)
    (141/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.307279256 seconds)
    (142/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.349774955 seconds)
    (143/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.325725518 seconds)
    (144/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.371434666 seconds)
    (145/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.335434895 seconds)
    (146/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.666825675 seconds)
    (147/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.930294235 seconds)
    (148/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.308182541 seconds)
    (149/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.35354378 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.274632979 seconds)
    (151/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.343854183 seconds)
    (152/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.137238273 seconds)
    (153/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.307414739 seconds)
    (154/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.195077356 seconds)
    (155/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.183076893 seconds)
    (156/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.343847654 seconds)
    (157/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.413653369 seconds)
    (158/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.340109307 seconds)
    (159/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.935995256 seconds)
    (160/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.42945905 seconds)
    (161/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.328671212 seconds)
    (162/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.345300857 seconds)
    (163/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.331402404 seconds)
    (164/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.311916697 seconds)
    (165/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.12519963 seconds)
    (166/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.373149084 seconds)
    (167/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.308738612 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.070974236 seconds)
    (169/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.307993053 seconds)
    (170/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.411777968 seconds)
    (171/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.797147137 seconds)
    (172/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.141165232 seconds)
    (173/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.696242635 seconds)
    (174/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.328194055 seconds)
    (175/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.540526181 seconds)
    (176/286) benchmarking ("sort", Bool, true)...
    done (took 5.505801539 seconds)
    (177/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.405851414 seconds)
    (178/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.863039901 seconds)
    (179/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.281225588 seconds)
    (180/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.321271571 seconds)
    (181/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.325761107 seconds)
    (182/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.47663029 seconds)
    (183/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.4363271 seconds)
    (184/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.328501954 seconds)
    (185/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.375365101 seconds)
    (186/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.395876523 seconds)
    (187/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.150327216 seconds)
    (188/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.399221327 seconds)
    (189/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.845104815 seconds)
    (190/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.971460667 seconds)
    (191/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.547866952 seconds)
    (192/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.41506363 seconds)
    (193/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.845945732 seconds)
    (194/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.674589922 seconds)
    (195/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.499671464 seconds)
    (196/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.312710113 seconds)
    (197/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.834495253 seconds)
    (198/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.352425845 seconds)
    (199/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.325810222 seconds)
    (200/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.371299977 seconds)
    (201/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.414636218 seconds)
    (202/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.330992983 seconds)
    (203/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.35256074 seconds)
    (204/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.397408164 seconds)
    (205/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.14479354 seconds)
    (206/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.451212341 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.291811658 seconds)
    (208/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.460348541 seconds)
    (209/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.759946738 seconds)
    (210/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.340845796 seconds)
    (211/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.344785671 seconds)
    (212/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.315036782 seconds)
    (213/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.579076675 seconds)
    (214/286) benchmarking ("sort", BigInt, false)...
    done (took 6.349086416 seconds)
    (215/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.014757554 seconds)
    (216/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.3951623 seconds)
    (217/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.917847551 seconds)
    (218/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.845242735 seconds)
    (219/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.303033205 seconds)
    (220/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.312898846 seconds)
    (221/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.185027777 seconds)
    (222/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.352244884 seconds)
    (223/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.702331323 seconds)
    (224/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.338849822 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.28579833 seconds)
    (226/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.359182569 seconds)
    (227/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.548783412 seconds)
    (228/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.290171146 seconds)
    (229/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.375172773 seconds)
    (230/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.797373677 seconds)
    (231/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.351313707 seconds)
    (232/286) benchmarking ("sort", Float32, true)...
    done (took 6.332319375 seconds)
    (233/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.313470743 seconds)
    (234/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.353296982 seconds)
    (235/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.737403654 seconds)
    (236/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.99247862 seconds)
    (237/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.126192882 seconds)
    (238/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.563586956 seconds)
    (239/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.414257616 seconds)
    (240/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.214484126 seconds)
    (241/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.600915114 seconds)
    (242/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.332995762 seconds)
    (243/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.380537957 seconds)
    (244/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.348454675 seconds)
    (245/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.945941873 seconds)
    (246/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.314378616 seconds)
    (247/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.332303363 seconds)
    (248/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.990285766 seconds)
    (249/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.58927646 seconds)
    (250/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.426619377 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.749939449 seconds)
    (252/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.433066169 seconds)
    (253/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.388298828 seconds)
    (254/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.322946868 seconds)
    (255/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.734494105 seconds)
    (256/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.421707442 seconds)
    (257/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.324600743 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.999603397 seconds)
    (259/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.323711627 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.45105905 seconds)
    (261/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.206097285 seconds)
    (262/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.170222496 seconds)
    (263/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.754502721 seconds)
    (264/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.376741869 seconds)
    (265/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.990839967 seconds)
    (266/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.461838103 seconds)
    (267/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.238691637 seconds)
    (268/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.691453251 seconds)
    (269/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.35468726 seconds)
    (270/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.359920809 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.398605034 seconds)
    (272/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.002102056 seconds)
    (273/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.694845168 seconds)
    (274/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.476926621 seconds)
    (275/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.91667988 seconds)
    (276/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.448572319 seconds)
    (277/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.349656652 seconds)
    (278/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.674888168 seconds)
    (279/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.358700624 seconds)
    (280/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.316177419 seconds)
    (281/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.356066049 seconds)
    (282/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.327664582 seconds)
    (283/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.597340104 seconds)
    (284/286) benchmarking ("sort", Int8, false)...
    done (took 4.371031411 seconds)
    (285/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.316933867 seconds)
    (286/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.355200355 seconds)
  done (took 941.442521055 seconds)
done (took 942.67660823 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.369509791 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.370848375 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.345675962 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.367730569 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.464198959 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.373024201 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.357598279 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.348924401 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.395055818 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.395075161 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.351365151 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.374435176 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.354914536 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.354151402 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.346611369 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.369672239 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.434617024 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.354628031 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.371281364 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.357282885 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.370998866 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.353152898 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.396806606 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.37466447 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.351371159 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.351484762 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.358591962 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.375068535 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.466899258 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.358104417 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.35203101 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.366815742 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.434078575 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.347963409 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.344913975 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.375801021 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.367820216 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.358127417 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.352268806 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.388152516 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.85975677 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.373228701 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.356459056 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.3492177 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.351099406 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.354184536 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.357645506 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.356970438 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.370901672 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.372208017 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.845045833 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.388187192 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.360524563 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.350613657 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.361454545 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.35760873 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.354493653 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.375739985 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.376507321 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.374769259 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.420655628 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.355267158 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.353253628 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.373930277 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.364399567 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.883023139 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.363607417 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.355255631 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.859143996 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.373678117 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.88473849 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.383885962 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.352848751 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.373028406 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.39072669 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.437900443 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.347201215 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.350708756 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.366175666 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.357779082 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.361896852 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.372501272 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.35690151 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.353391475 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.373575319 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.379126421 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.363108836 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.361996386 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.361754262 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.37840307 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.368140156 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.370969971 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.35539807 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.347620894 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.363931785 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.355795117 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.362579515 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.362571884 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.357393201 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.364011841 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.863056481 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.397111535 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.349297861 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.351119353 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.352393968 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.373246791 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.863285985 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.379673211 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.376002823 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.40180112 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.355767953 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.429212336 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.364766401 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.378288928 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.363726149 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.357989238 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.349595155 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.433283531 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.855139777 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.394326674 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.356707819 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.360254898 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.3798349 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.356354829 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.35237583 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.446754647 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.355476989 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.376993288 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.483565201 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.366096773 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.393774685 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.360316797 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.35801942 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.381831047 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.379029233 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.393704701 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.358925145 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381170556 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.377433957 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.352674902 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.374265034 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.366712387 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.35766323 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.362448671 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.349950752 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.382817414 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.375951392 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.377026195 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.376407952 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.483732614 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.355045053 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.433536806 seconds)
done (took 229.788826938 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.416456491 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.351168266 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.446311689 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.353382794 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.455920499 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.456242236 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.350497639 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.351901458 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.351600671 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.730859566 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.351280976 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.3521189 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.352775726 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.352625014 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.436458426 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.354017967 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.351443816 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.694417535 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.35531061 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.42850409 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.35382033 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.35196823 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.354589357 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.737643272 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.363053611 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.350225955 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.429591957 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.355551954 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.701226287 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.352417487 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.352757543 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.701433277 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.445294566 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.372331546 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.365901125 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.362644828 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.457114936 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.375017608 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.436492828 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.43706688 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.448756047 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.39476468 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.350974281 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.349835942 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.3574502 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.357938289 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.354168788 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.383692292 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.353797788 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.354445625 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.695915786 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.365927331 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.36378285 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.354778417 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.354243004 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.376595659 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.356093869 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.357505589 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.448247032 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.357067474 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.421872231 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.740800209 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.734104188 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.356804663 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.350583096 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.356518847 seconds)
  done (took 149.908136698 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.422961888 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.430942018 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.471830014 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.375961512 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.407571337 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.476076784 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.376122059 seconds)
  done (took 11.224626933 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.363530633 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.358198594 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.404792745 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.407221473 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.358090259 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.537095437 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.359412219 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.368986457 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.356751232 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.409979186 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.3605025 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.35952473 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.365568055 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.359181419 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.406908415 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.369062159 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.473317453 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.360607596 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.359481497 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.519894181 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.357686908 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.365730977 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.41051402 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.370118681 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.36169229 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.364325943 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.177124792 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.360324803 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.357576072 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.360182516 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.357277924 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.43860685 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.360104398 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.358301341 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.360351148 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.476903919 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.360723085 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.356860168 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.360769014 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.352390829 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.360343229 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.360450375 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.360251808 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.357709548 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.360584399 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.382521856 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.360925214 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.360673119 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.361630875 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.361423119 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.409884233 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.360405501 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.359265934 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.358539298 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.416656307 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.368791955 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.363183207 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.358684902 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.362901584 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.360196629 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.522322362 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.408488843 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.362146389 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.408116951 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.36304305 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.362739559 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.363117879 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.361606527 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.416498747 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.362358841 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.408560286 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.359292417 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.54783841 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.384703119 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.364687781 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.36487465 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.364481885 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.362056465 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.354965061 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.367421904 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.36007192 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.362436453 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.368799264 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.360963534 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.361409734 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.538388141 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.472933346 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.361570505 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.375214714 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.370142487 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.361554311 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.416435986 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.36401001 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.361721683 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.415363919 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.47778393 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.416743154 seconds)
  done (took 156.292750795 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.367958166 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.372065757 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.365270903 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.380474607 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.365461633 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.364544433 seconds)
  done (took 9.485483886 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.367757941 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.367017041 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.364989294 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.366082185 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.365223742 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.365197508 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.365141653 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.367403284 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.370003013 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.365496856 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.368300427 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.369555441 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.366147364 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.365585894 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.366046185 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.366684025 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.366497919 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.362566436 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.366104956 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.365891118 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.471560723 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.366090443 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.366182091 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.366964616 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.371270827 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.365883995 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.37556276 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.366327555 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.367709665 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.372187786 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.386719978 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.369112449 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.36831789 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.373339399 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.372058329 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.367832917 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.371549658 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.370342147 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.364905523 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.369232637 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.370797824 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.36836479 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.368096371 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.371107242 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.36932293 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.373635646 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.375589974 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.37633304 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.369608046 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.370757005 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.371946562 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.367696937 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.369279193 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.37279485 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.370300181 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.391551421 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.376759707 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.368665103 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.369375621 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.369639981 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.371126554 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.370477072 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.370600134 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.37347075 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.367339089 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.373189681 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.370736982 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.375483509 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.369098058 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.369899103 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.373312676 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.367700619 seconds)
  done (took 100.998123425 seconds)
done (took 429.169559444 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.840014774 seconds)
  done (took 8.115072251 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.59745745 seconds)
  done (took 7.874109835 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.803834149 seconds)
  done (took 23.084120603 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.475355935 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.452012151 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.368413057 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.373401526 seconds)
  done (took 26.944673697 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.875848508 seconds)
  done (took 8.151636925 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.363005494 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.372532567 seconds)
  done (took 14.013238131 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.57387201 seconds)
  done (took 7.84997513 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.369202469 seconds)
  done (took 7.65022879 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.374204702 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.38458612 seconds)
  done (took 14.048940564 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.345170752 seconds)
  done (took 7.621959718 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.698470026 seconds)
  done (took 11.974969956 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.369836245 seconds)
  done (took 7.648552661 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.41605868 seconds)
  done (took 7.691969717 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.772771107 seconds)
  done (took 10.049571077 seconds)
done (took 163.99610475 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.363930242 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.365550882 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.365302449 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.363504673 seconds)
  done (took 26.734995585 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.405316523 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.405050798 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.408120343 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.415862049 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.40845481 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.406588878 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.398198735 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.398050316 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.416151017 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.408500107 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.406339508 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.408434808 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.405782885 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.399039271 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.408972838 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.408019821 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.416902318 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.408241534 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.397737844 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.410108595 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.373927815 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.417069534 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.409506084 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.373292083 seconds)
  done (took 34.991968447 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.894258003 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.444271411 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.526281517 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.424539694 seconds)
  done (took 7.567803566 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.42470623 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.427536926 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.439442678 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.476608567 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.504240414 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.437574585 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.398505663 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.395877815 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.381445303 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.427281688 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.503426012 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.444105775 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.512052956 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.374375264 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.585796528 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.374623363 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.375467964 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.426946679 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.478118431 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.492800568 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.374920823 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.426993808 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.430732876 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.444901928 seconds)
  done (took 35.837433923 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.375125506 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.39388695 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.373964219 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.372909523 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.384304371 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.374357783 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.375820124 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.375743185 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.374975635 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.38110834 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.37412976 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.387894849 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.375481732 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.375372211 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.381950974 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.377210527 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.381814158 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.374106402 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.37480613 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.38142368 seconds)
  done (took 28.84649907 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.36874005 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.222028723 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.721335662 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.624715581 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.368109396 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.368436546 seconds)
  done (took 27.953761307 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.451777735 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.608097837 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.375871446 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.766925587 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.859022337 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.394859908 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.37559538 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.629129746 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.990746524 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.986171324 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.443415585 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.448833351 seconds)
  done (took 20.614109182 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.382217203 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.377174204 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.378696652 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.392941027 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.433513555 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.39784714 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.383107482 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.370000811 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.442530421 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.457276841 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.398675066 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.43657721 seconds)
  done (took 38.13345337 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458928367 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.417205653 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.389270277 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393778155 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.097660452 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.584034578 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.458544799 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.103337747 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.396192532 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645571674 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377740143 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460912943 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.628504772 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371597504 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.378509047 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.406190977 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.616777326 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879397431 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373342523 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.576105779 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398241126 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.384037273 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.647888244 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.619591772 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.605382765 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.350953496 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.634156242 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.148336925 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.68159908 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.387104303 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383571388 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37417372 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647329885 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048966838 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490348595 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.599780065 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402910059 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.919697513 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.35930203 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.555788518 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392416658 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.376009215 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384672035 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375176737 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.308388349 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385091863 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116598067 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.400383942 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.085993267 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.374572024 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.659347196 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473394007 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.380101007 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.945202796 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.423774368 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.406797842 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.379429703 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471462506 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963721614 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.959956451 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397586962 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.316529392 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.378089948 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.562839467 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023153076 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.400454156 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.380426653 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.380762543 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310815551 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.56491274 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.393018498 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524063048 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.402418962 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.026804737 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090816395 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.403749287 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.307229375 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94708795 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377611572 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.338346419 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604166278 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.153291411 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312753334 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.322942638 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.312440843 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.104661756 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384679918 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.829583308 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397263947 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.126714373 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.625962338 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415716557 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402542947 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.599467812 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.25874903 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378028432 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.384389353 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508076759 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401153994 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.106143142 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333481572 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.382249452 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63470685 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.590286973 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383749169 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.424486474 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894627396 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39878353 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.400624434 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.377760888 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.614273132 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.009297556 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.414673645 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.922648297 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400587166 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.163783111 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149500842 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398146828 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.390308838 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.394939716 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65953634 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.172055394 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.282788393 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447473139 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382149474 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.380575537 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.72784632 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.229787593 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.262162678 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.592829614 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406192797 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.396282162 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.381206193 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329045364 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.387064591 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38114836 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.162754696 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.606645601 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381817395 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662587514 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315518227 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528053047 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.390868658 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.604326612 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.642961859 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.404742118 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.6405278 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397463685 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.401582066 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.399642326 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40053575 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481656791 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402596777 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.382225228 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.644787875 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.386437907 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.385818936 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.609223645 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.159683345 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389726266 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.387950365 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381129447 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023997518 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379077874 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.383096239 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.272394924 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.397438183 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450584109 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.388519539 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612984391 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.758660625 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409494253 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.389241831 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.381288541 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606149831 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.394920166 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.590041314 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.461833243 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.880545382 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.018324485 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416290399 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.318455253 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.096066512 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.078660656 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384831808 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.57776446 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.385351109 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.613090704 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.418549977 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.385017592 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.000297445 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405355155 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.58939384 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.391322482 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.396946252 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.390116449 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38586653 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.759036786 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.944241306 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3983648 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.403533518 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528104997 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.399359824 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.320400513 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.901688527 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.390968211 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.387880207 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.160694094 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419824918 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.598587965 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209182452 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.664486984 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385877689 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.672118298 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.694482127 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.420224172 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.38332005 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393173766 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3936984 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.396002935 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394823358 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.397703723 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.603534988 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.823853899 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953970234 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.159467142 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96670599 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.749172688 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.407732179 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.290442597 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.122033201 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34161884 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.043707008 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639678553 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.140348756 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.352836233 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890071881 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.678540152 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.226084851 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.672850724 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.616799522 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.727534722 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.414893558 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.671781923 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.600932476 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422082993 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.403730169 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.323016337 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.669095854 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.970015832 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.412497475 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.469690431 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131522786 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.423890273 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.168944522 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.421130938 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.162908964 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819090753 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.037860771 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.777247099 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.399525972 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.402795752 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.216386182 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.410130832 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.915247013 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042087217 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.424767302 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.897867205 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346233936 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.620962683 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.420862514 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.38788681 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.077410862 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.401190422 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.645479174 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.677813748 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32923877 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.390399049 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962530503 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.262204172 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.396652098 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390459539 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159200649 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405817293 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.707278204 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.394839768 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.773517956 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411437632 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.325729791 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327015637 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.083278587 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.390788023 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367823388 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905002583 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.396433189 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39959338 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408202775 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244545466 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.647788715 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.406834679 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.009441706 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.637081377 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392518663 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434947223 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.396511607 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398788591 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.375302583 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.29486099 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.629600594 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398042152 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.640454683 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.435109555 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.294076374 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.403878657 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612153761 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.762414712 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.39384566 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.651809532 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.122017622 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.398153242 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.115359429 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436952207 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.393431805 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.40423596 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.390526366 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431661597 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484219173 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624181846 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.425027116 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.404866081 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824211755 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414843292 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396531609 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.407937744 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488493376 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.879995007 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.771303587 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.168352902 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017262427 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.169377264 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.043777266 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.697802262 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.397448516 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399668478 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329604024 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543386463 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.921133262 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668281294 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524681213 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.396567118 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420127919 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39565078 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40498846 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611857763 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671640626 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.266506459 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401761746 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.058714562 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.277925875 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.406225203 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.607352634 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916248836 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973116506 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507485063 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.396996436 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.138224981 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690832573 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.488201668 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395987309 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.988021737 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.414238794 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.167314763 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.402911637 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401456295 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544077759 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.678173569 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085189636 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.427093406 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.552934334 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.172559558 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.633107012 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.653086855 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.90421423 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.629755367 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.038950307 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.161103113 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662639476 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46694817 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62979366 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.520404206 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54429398 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.406480221 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.279657157 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399389128 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.242529928 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.107148359 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.407886876 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.022857622 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.681751072 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.40319184 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.41024262 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421648062 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.40862666 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.621633731 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142606685 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.623030895 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.409518994 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.408710035 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.389281205 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.027670054 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.701647473 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334712794 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.403623943 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.65717085 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.654679736 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.42419535 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.852400169 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.111357524 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978327632 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.372152954 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421921575 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400492576 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.177487435 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.030838772 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.804662917 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938480196 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.058174773 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404229182 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682428546 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.405589037 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.411564343 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684250221 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.404220463 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.418055064 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641660251 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.041885378 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.246068439 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.420195426 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.66474472 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.338600273 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.628001516 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.447678553 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338659289 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.411031058 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.845732775 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.423900759 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.533636879 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413943882 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.399843366 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419755021 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.167398886 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.686655398 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.407849495 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.391559588 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.39642935 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.41512066 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.502056281 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992338358 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429236533 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.077320973 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.751894546 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.65893688 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.403755535 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.390630462 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.40736744 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404870723 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.120646924 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.372685993 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.414277464 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984446384 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.419962924 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.420845296 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.407429271 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.619532652 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616744242 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.405593736 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639246576 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431159782 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425844338 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.30467282 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.17150363 seconds)
  done (took 1691.512630132 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.418798694 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.456615664 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.443455214 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.493296753 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.430828112 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.56039046 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.480585511 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.4321558 seconds)
  done (took 53.030551058 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.417918841 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.564522955 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.437254758 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.413473595 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.415137316 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.417389356 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.892580668 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.438217027 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.413781968 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.413878745 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.407020738 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.404974859 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.100232958 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.415265089 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.42053132 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.40287801 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.413700016 seconds)
  done (took 66.709343084 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.837596273 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.755578383 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.667831222 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.451518168 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.434745674 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.424613873 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.749564458 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.429500328 seconds)
  done (took 55.067695363 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.423126448 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.423550188 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.423493825 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.422639259 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.42488019 seconds)
  done (took 8.432855233 seconds)
done (took 2096.711484776 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.409968133 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.412563871 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.410452188 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.413443076 seconds)
  done (took 6.962119032 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.38723018 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.124906141 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.39319486 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.40935083 seconds)
  done (took 18.630496421 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.434928756 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.428605916 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.17076259 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.060426215 seconds)
  done (took 5.548535691 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.15854134 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.170404278 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.154835988 seconds)
  done (took 7.800881207 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.408062387 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.413706814 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.410021813 seconds)
  done (took 20.548708998 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.709033289 seconds)
  done (took 3.026396588 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.555691864 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.603836174 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.725761289 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.743745196 seconds)
  done (took 7.946398326 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.796394891 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.789533723 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.590952006 seconds)
  done (took 6.493819817 seconds)
done (took 91.138317097 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.492392634 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.65474304 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.613549871 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.466476126 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.693900784 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.614883069 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.618591391 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.433089006 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.971030224 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.959423363 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.467435316 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.654743859 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.775275665 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.657969784 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.778070922 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.654473429 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.736488896 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.532461493 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.148757498 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.385266381 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.624448209 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.099262855 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.298674935 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.122148715 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.686758191 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.565056526 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.698857819 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.653283901 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.32143933 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.710462388 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.566217205 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.410333935 seconds)
  done (took 201.384805724 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.410704302 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.421113826 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.41022932 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.409733691 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.411414744 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.410991689 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.414050896 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.42905279 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.425880438 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.418746509 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.411922146 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.410151852 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.41252227 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.412040659 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.411255955 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.419013256 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.417959433 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.410571266 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.428357577 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.410956912 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.41329169 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.418899855 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.416398634 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.412711254 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.411482946 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.411986455 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.411619874 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.411853682 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.413405838 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.421098704 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.412232138 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.411096693 seconds)
  done (took 206.592965385 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.42630741 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.411455159 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.430012121 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.412443006 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.425541101 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.412651598 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.448751472 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.421388503 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.412067265 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.411970546 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.43083053 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.415897181 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.413836104 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.422766845 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.416904851 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.413503568 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.431341665 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.412890897 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.411639186 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.41725073 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.421955149 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.427559082 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.413507306 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.41354996 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.433811967 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.432749823 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.432227078 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.423004222 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.413099711 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.443805504 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.415539831 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.432021544 seconds)
  done (took 206.824936905 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.608232082 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.42168075 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.421060331 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.353611401 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.421069137 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.421191645 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.414557076 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.618598802 seconds)
  done (took 15.00343466 seconds)
done (took 631.125052757 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.8302397 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.538333049 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.630018142 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.442191904 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.258898342 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.461401753 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.440194055 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.623287291 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.364030876 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.631280339 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.770101063 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.458970067 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.915837314 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.441320329 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.710143253 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.546763341 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.325273486 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.449650817 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.768750697 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.996678439 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.711001898 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.94778461 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.643657184 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.358930674 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.932140579 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.955734654 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.220011736 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.315798127 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.460797971 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.780316497 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.125693627 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.476165354 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.509433021 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.509276598 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.567498509 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.545788026 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.455765288 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.507135571 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.651408728 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.710016515 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.017427346 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.180335373 seconds)
  done (took 96.510255694 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.408694611 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.407892379 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.406152795 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.407801478 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.408762343 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.40749861 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.407487687 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.407317642 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.408752998 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.406862228 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.407927364 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.409583553 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.407042178 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.409715715 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.408073275 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.406683465 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.407834526 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.410356736 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.409357074 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.407728719 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.408597493 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.407741003 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.408285731 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.408007667 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.409115088 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.408467165 seconds)
  done (took 37.93894311 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.426971051 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.681577989 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.855798985 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.432489024 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.426544285 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.431292281 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.511924304 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.427834402 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.429641882 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.430334293 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.586152721 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.430307185 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.464246725 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.884443268 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.429565909 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.428321188 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.427826167 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.427644141 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.690740693 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.437020144 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.535395784 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.429821843 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.513294479 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.438215512 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.453081788 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.428341249 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.433475994 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.021002996 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.449080011 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.58733782 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.303125455 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.517389986 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.956566696 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.889030371 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.301786655 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.437546067 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.429482204 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.590892533 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.431011858 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.429292859 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.513948287 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.43044912 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.869610948 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.110959555 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.449294351 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.431135487 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.043309639 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.61157527 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.696612888 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.438246415 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.893211344 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.434357636 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.431834259 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.431622038 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.695620273 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.438052142 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.429153642 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.048289733 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.456639623 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.513839256 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.432788479 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.431307981 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.698994832 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.431857034 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.689478314 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.43247809 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.438890424 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.451442294 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.872354967 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.433875664 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.138492918 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.450201364 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.432778703 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.590362325 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.687729272 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.078699794 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.455563646 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.704704226 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.973533765 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.534296513 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.435712522 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.013568396 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.537328883 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.436397188 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.434569309 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.434479811 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.43299906 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.47912125 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.513674847 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.071938717 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.148199669 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.085676912 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.538604282 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.446129834 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.43338628 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.054722686 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.45531703 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.43403414 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.865635518 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.138167399 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.452540136 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.440634722 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.138171318 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.454260025 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.519355288 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.438747444 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.878448551 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.435473201 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.479553513 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.435055644 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.440290234 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.457199448 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.519167458 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.438957732 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.434676127 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.108017259 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.619792913 seconds)
  done (took 188.975118382 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.42786284 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.427887581 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.427883986 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.428091249 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.426737256 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.435686778 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.428319249 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.429157908 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.434526565 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.427950701 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.427735599 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.430993196 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.430446249 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.436705124 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.460446235 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.436798383 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.08794464 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.429981097 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.431816927 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.429228302 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.245737775 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.431128651 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.428414684 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.430374891 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.42890992 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.428716029 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.45743832 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.430112601 seconds)
  done (took 154.913119959 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.437560471 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.044864136 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.456592482 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.578124097 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.460218881 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.434326052 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.575547111 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.498376253 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.456614261 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.434856528 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.434070744 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.762644301 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.446639324 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.992139126 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.64601252 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.59831536 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.991957371 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.456494899 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.436326202 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.435988327 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.580437555 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.443373144 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.762079199 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.046012159 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.45800349 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.046109588 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.42377658 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.439142548 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.436676907 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.048289405 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.455466002 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.764562029 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.521128145 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.50320996 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.068876818 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.01405653 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.014393157 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.599290576 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.438291331 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.435837103 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.437193884 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.421405209 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.049344498 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.459236053 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.439384967 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.039385037 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.459068308 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.440208662 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.445315571 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.436794899 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.502008492 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.521932691 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.789152623 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.0560491 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.543021397 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.452171686 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.58025489 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.821515772 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.442403273 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.995261925 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.423332161 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.056995939 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.46077822 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.423368861 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.439379669 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.445806413 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.602356051 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.582583505 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.998608101 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.459431752 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.996059297 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.62301169 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.438798075 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.438847704 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.441844834 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.055778657 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.018899026 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.622321787 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.585976857 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.653166852 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.426121615 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.440462596 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.42612247 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.525070326 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.439912156 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.096463927 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.025765631 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.46134363 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.442872155 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.443444904 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.443625471 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.633958852 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.115314124 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.552953084 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.988138029 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.811503111 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.797092455 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.446972595 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.505952697 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.460914604 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.795626989 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.448302695 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.504991477 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.887841539 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.796013013 seconds)
  done (took 172.434344701 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.695153295 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.707241367 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.536223498 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.595898875 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.082466371 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.022439746 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.775302972 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.586888317 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.559645402 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.714610548 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.661829242 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.533328287 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.667511309 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.52283984 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.190249356 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.53573827 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.561049879 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.594968784 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.604625696 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.529853147 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.138014973 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.743610295 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.646281573 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.406471515 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.539947904 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.289180635 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.027008828 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.003197905 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.620244608 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.844409182 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.97951803 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.608706278 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.449155723 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.188352322 seconds)
  done (took 69.507516005 seconds)
done (took 721.604249152 seconds)
SAVING RESULT...
DONE!
